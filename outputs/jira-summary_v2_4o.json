{
  "BENINTEG-4438": {
    "key": "BENINTEG-4438",
    "issue": "Sky Solutions was mistakenly approved for production with Cigna Facets.",
    "issue_summary": "The ticket was created in error for moving Sky Solutions to production with Cigna Facets.",
    "rca": "The ticket was made in error, as confirmed by the RCA category 'No Issue' and the comment stating the ticket was made in error.",
    "steps_taken": "The ticket was cancelled as it was made in error.",
    "data_models": "[]"
  },
  "BENINTEG-4397": {
    "key": "BENINTEG-4397",
    "issue": "COBRA TPA forms for the group Skipify were being sent to the broker instead of Rippling, despite the group completing the TPA Authorization through Rippling.",
    "issue_summary": "COBRA TPA forms for Skipify were incorrectly sent to the broker due to custom email settings, instead of being sent to Rippling as expected after TPA Authorization.",
    "rca": "The system was working as expected, but the issue arose because custom emails were set up for Principal, causing COBRA emails to be sent to the broker instead of Rippling. The issue was resolved by adding the correct email from the UI.",
    "steps_taken": "The immediate resolution involved adding the email cobra-ops@rippling.com to the Principal email section from the UI. This was done by proxying the user, navigating to the benadmin app, accessing the Carrier transmissions tab, and editing the email list for Principal to include the required email.",
    "data_models": "[]"
  },
  "BENINTEG-4386": {
    "key": "BENINTEG-4386",
    "issue": "The group SUDORANDOM LABS INC needs to be offboarded from the Prime USP Prod File to stop the files as they are still in Open Enrollment (OE) for 03/01 renewal and migrating to USP. The offboarding is required to complete an onboarding process.",
    "issue_summary": "The group SUDORANDOM LABS INC is in the process of migrating to USP and needs to be offboarded from the Prime USP Prod File to stop the files, as they are still in Open Enrollment for 03/01 renewal.",
    "rca": "The issue was resolved using a script to manage the offboarding process. The root cause was not an issue but rather a procedural step in the migration process.",
    "steps_taken": "A script was used to filter and delete specific configurations and data related to the company from various models associated with the vendor 'STEDI'. The code snippet provided in the comments shows the filtering and intended deletion of data from models such as VendorPartnerCompany, BaseVendorPartnerGroupingConfig, StediPartnerCompanyGroupingPayloadData, StediPartnerTransmissionConfig, CustomStediCommunicationDetail, and BaseCompanyCarrierTransmission.",
    "data_models": "[VendorPartnerCompany, BaseVendorPartnerGroupingConfig, StediPartnerCompanyGroupingPayloadData, StediPartnerTransmissionConfig, CustomStediCommunicationDetail, BaseCompanyCarrierTransmission]"
  },
  "BENINTEG-4383": {
    "key": "BENINTEG-4383",
    "issue": "The admin is not receiving email notifications for renewing the file feed, while the broker is receiving them. There is no trace of the email in retool.",
    "issue_summary": "Admins are not receiving file feed renewal email notifications during the plan renewal process, although brokers are receiving them.",
    "rca": "Emails were going as expected, indicating no issue with the email sending process.",
    "steps_taken": "The issue was investigated by checking the email logs and confirming that the emails were indeed sent to the admin. The email template was reviewed, and it was confirmed that the process was working correctly. The issue was marked as resolved.",
    "data_models": "[]"
  },
  "BENINTEG-4380": {
    "key": "BENINTEG-4380",
    "issue": "Missed enrollment for employee Brooke Parker at Kiterocket LLC due to a failed transaction with Noyo caused by an incorrect class code.",
    "issue_summary": "The transaction for employee Brooke Parker's enrollment failed with Noyo due to an incorrect class code, preventing the enrollment process.",
    "rca": "The root cause of the issue was identified as a data issue related to an incorrect class code in the company setup for the employee.",
    "steps_taken": "The issue was identified as a data problem, and it was suggested to change the class code in the company setup. No engineering action was needed as it was not a code issue.",
    "data_models": "[]"
  },
  "BENINTEG-4377": {
    "key": "BENINTEG-4377",
    "issue": "OneKonnect reported file failures due to invalid addresses for employees and dependents, with no apparent change history, raising concerns about potential impacts.",
    "issue_summary": "File failures in OneKonnect due to invalid addresses being reported for employees and dependents, with no apparent change history.",
    "rca": "The address changes were part of the normal flow and were made by the corresponding company admin as part of insurance tasks. The issue was not on Rippling's end but rather with EBN reporting errors.",
    "steps_taken": "Reviewed the latest files for the employees and dependents, confirmed that the address changes were normal and done by company admins, and communicated with EBN to address the reporting errors.",
    "data_models": "[]"
  },
  "BENINTEG-4373": {
    "key": "BENINTEG-4373",
    "issue": "Noyo/Guardian flagged a list of employees with incorrect salary data, which is blocking their enrollments. The salary data appears to be hourly instead of annual, causing discrepancies in the system.",
    "issue_summary": "Employees' salary data was incorrectly set as hourly instead of annual, leading to enrollment issues flagged by Noyo/Guardian.",
    "rca": "The root cause of the issue was that the salary data for employees was incorrectly set as hourly instead of annual in the system, which was then reflected in the snapshots sent to Noyo.",
    "steps_taken": "The engineering team manually triggered a salary update on the company's SubscriberLineInfo (SLI) objects using a script. The script used was:\n\n```python\n# Bad Salary Data https://rippling.atlassian.net/browse/BENEEX-3934\ncompany = Company.get_or_none(id='6756e3acf91f56a2b08795a2')\nreturn subscriberSalaryUpdateForCompany.delay(company, pst_today(), True)\n```\n\nAfter updating the salary data, a census request was sent to confirm the corrections, and the enrollments were resent to Noyo.",
    "data_models": "[SubscriberLineInfo, Company]"
  },
  "BENINTEG-4367": {
    "key": "BENINTEG-4367",
    "issue": "The employee, Kristin Cherico Dean, completed their initial COBRA enrollment and later their COBRA Open Enrollment, but the forms were not sent to the carriers due to 'Unsubmitted prior forms'. This issue is blocking the employee from receiving proof of coverage.",
    "issue_summary": "Forms for COBRA enrollment and COBRA Open Enrollment were not sent to the carriers due to 'Unsubmitted prior forms', blocking the employee from receiving proof of coverage.",
    "rca": "The root cause of the issue is related to a blocked enrollment event for the carrier and the employee, which was finalized before the target enrollment event. This is a known issue that requires engineering intervention.",
    "steps_taken": "The issue was escalated to the engineering team for resolution. The integration on-call was added to the ticket, and multiple follow-ups were made to ensure timely resolution. The final comment indicates that the issue was resolved, as noted by 'This is done'.",
    "data_models": "[EnrollmentEvent, PendingActionGroup]"
  },
  "BENINTEG-4357": {
    "key": "BENINTEG-4357",
    "issue": "There is an error for a COBRA Orphan's Noyo Amendment, preventing the termination of an employee from COBRA as of 02/01/2025 due to a 'Unable to find a matching Noyo plan' error.",
    "issue_summary": "The issue involves a COBRA Orphan's Noyo Amendment error, where the system is unable to find a matching Noyo plan, blocking the termination process for the employee from COBRA effective 02/01/2025.",
    "rca": "No specific root cause was identified as the issue was marked as 'No Issue' in the RCA section, and it was later confirmed that the system was working as expected.",
    "steps_taken": "The issue was investigated, and it was confirmed that the system was functioning correctly. The ticket was marked as done due to no further response, indicating that the problem was resolved or non-existent.",
    "data_models": "[]"
  },
  "BENINTEG-4356": {
    "key": "BENINTEG-4356",
    "issue": "The client received unencrypted emails containing PII from Rippling, raising concerns about the security of email notifications and form transmissions.",
    "issue_summary": "The client reported receiving unencrypted emails with PII, questioning the security of email notifications and form transmissions. The issue was due to a UI object mismatch causing emails not to be sent securely.",
    "rca": "The root cause of the issue was a UI object mismatch, which led to emails not being sent securely despite the settings indicating otherwise. This was manually handled for the client, and a PR is under review to address the issue.",
    "steps_taken": "The issue was manually resolved for the client by setting the 'sendFormsEmailsSecurely' attribute to True in the CompanyInsuranceInfo model. The code snippet used was:\n\n```python\ncii= CompanyInsuranceInfo.objects.get(company='66f1e052631ee051dd81f876')\nbi = cii.brokerInfo\nbi.sendFormsEmailsSecurely = True\nbi.save()\n```\nThe wider incident is being tracked in a Slack channel for further updates.",
    "data_models": "[CompanyInsuranceInfo]"
  },
  "BENINTEG-4350": {
    "key": "BENINTEG-4350",
    "issue": "The employee Julian Zegelman has a blocked transaction when attempting to send data via API and Noyo to Guardian. The error encountered is that a dependent ID does not belong to the employee ID.",
    "issue_summary": "The issue is a blocked transaction for employee Julian Zegelman due to a mismatch between dependent ID and employee ID when sending data via API and Noyo to Guardian.",
    "rca": "The root cause analysis indicates that there is already an open ticket (BENINTEG-3781) for this issue, suggesting it is a known problem that has been deferred.",
    "steps_taken": "Attempted to sync the employee's Member info with Noyo, but the DEP error persists.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-4347": {
    "key": "BENINTEG-4347",
    "issue": "The issue was that automated schedules for production files needed to be stopped for three UHC Prime clients who canceled their renewal for the 03/01/2025 plan year.",
    "issue_summary": "Automated production file schedules needed to be stopped for UHC Prime clients due to cancellation of their renewal for the 03/01/2025 plan year.",
    "rca": "The root cause was that the connection entities for the companies using UHC needed to be deleted as they had canceled their renewal.",
    "steps_taken": "A script was run to delete all connection entities for the three companies. The script iterated over each company and deleted entries from several models: VendorPartnerCompany, BaseVendorPartnerGroupingConfig, StediPartnerCompanyGroupingPayloadData, StediPartnerTransmissionConfig, CustomStediCommunicationDetail, and BaseCompanyCarrierTransmission.",
    "data_models": "[VendorPartnerCompany, BaseVendorPartnerGroupingConfig, StediPartnerCompanyGroupingPayloadData, StediPartnerTransmissionConfig, CustomStediCommunicationDetail, BaseCompanyCarrierTransmission]"
  },
  "BENINTEG-4346": {
    "key": "BENINTEG-4346",
    "issue": "The default email contacts for the carrier 'Principal' for COBRA transactions were updated, and the email 'cobra-ops@rippling.com' was removed from the default email list, causing COBRA enrollments not to be sent to this email.",
    "issue_summary": "The default email contacts for COBRA transactions under the carrier 'Principal' were changed, removing 'cobra-ops@rippling.com' from the list, which led to COBRA enrollments not being sent to the intended email.",
    "rca": "No issue was found as this was expected product behavior once custom emails were changed.",
    "steps_taken": "Checked audit logs or change history to identify the user who made the update and confirmed the change was expected behavior. No further action was required as it was intentional.",
    "data_models": "[]"
  },
  "BENINTEG-4330": {
    "key": "BENINTEG-4330",
    "issue": "Duda Inc faced a transmission error due to incorrect Partner Profile configuration for CIGNA Ace, blocking the testing of the file.",
    "issue_summary": "The group was onboarded with an incorrect Partner Profile, causing a transmission error. The profile used was Duda-Cigna-00634452 instead of the correct Duda-CignaAce-634452.",
    "rca": "The root cause of the issue was a documentation error where the incorrect Partner Profile was used during onboarding, necessitating an offboarding tool to correct the setup.",
    "steps_taken": "The existing onboarding for the group was deleted, and the dental/vision configuration was offboarded and then re-onboarded with the correct Partner Profile as per the requirement.",
    "data_models": "[]"
  },
  "BENINTEG-4318": {
    "key": "BENINTEG-4318",
    "issue": "Groups new plans are unavailable for mapping, causing missed enrollments for employees and Cobra Enrollment issues for prior employees.",
    "issue_summary": "The new plans for Axio Global Inc are not available in the plan mapper, leading to missed enrollments and Cobra Enrollment issues. The root cause was an incorrect carrier ID in the NCC.",
    "rca": "The NCC was created with an incorrect carrier ID, which led to the unavailability of new plans for mapping.",
    "steps_taken": "A script was used to identify the mismatch between the carrier IDs in the NCC and the InsuranceCompanyCarrierLineInfo. The incorrect carrier ID was updated to the correct one, making the plans visible for mapping. The script used was:\n\n```python\ncompany = \"6360231af54638de6c231406\"\nncc_carriers = NoyoCompanyCarrier.objects.filter(company=company).distinct(\"carrier\")\nerrored_ncc = NoyoCompanyCarrier.objects.get(company=company,carrier=\"5a656521d2a5f85842cb4840\")\nassert InsuranceCompanyCarrierLineInfo.objects.filter(company=company,carrier=errored_ncc.carrier).exists()==False\nactual_carriers = InsuranceCompanyCarrierLineInfo.objects.filter(company=company,groupId=errored_ncc.carrier_group_id,state__ne=\"INIT\",expirationDate__gte=pst_today()).distinct(\"carrier\")\nassert len(actual_carriers)==1\nerrored_ncc.carrier = actual_carriers[0]\nprint(\"incorrect carrier\",errored_ncc.carrier.id,\"actual carrier \",actual_carriers[0].id)\nerrored_ncc.save()\nreturn \"Done\"\n```",
    "data_models": "[NoyoCompanyCarrier, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-4296": {
    "key": "BENINTEG-4296",
    "issue": "Admin is unable to enter the broker's Email ID in the carrier transmission tab, receiving an error 'Invalid Vendor'.",
    "issue_summary": "Admin faced an issue where they could not enter the broker's Email ID in the carrier transmission tab due to an 'Invalid Vendor' error.",
    "rca": "There was a bug in the email edit flow related to vendor mapping, which caused the 'Invalid Vendor' error.",
    "steps_taken": "The bug in the email edit flow related to vendor mapping was fixed. The issue was tested and resolved, allowing the admin to update the email ID successfully.",
    "data_models": "[]"
  },
  "BENINTEG-4294": {
    "key": "BENINTEG-4294",
    "issue": "The employee's new hire event has been split into two events, one for medical and the other for other lines of coverage. The effective date for the medical coverage was incorrectly set to 03/01/2025 instead of the expected 02/01/2025.",
    "issue_summary": "The employee's new hire event was split into two separate events, causing the medical coverage effective date to be set incorrectly to 03/01/2025 instead of 02/01/2025 due to a possible system reference date issue.",
    "rca": "An edge case race condition occurred in the old event creation system, which lacks full observability, making it difficult to determine the exact cause. The system might have taken an incorrect reference date for calculating the effective date.",
    "steps_taken": "The medical effective date was manually modified from 03/01/2025 to 02/01/2025. The integration team was requested to carry the changes to the carrier side. Snapshots were sent for Guardian and Aetna to ensure the changes were reflected.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-4293": {
    "key": "BENINTEG-4293",
    "issue": "Guardian required a new snapshot for Tristan Cohen's New Hire Enrollment Event due to an incorrect event date, causing an urgent access to care issue.",
    "issue_summary": "The event date for Tristan Cohen's New Hire Enrollment Event was incorrectly listed as 11/24/2024, which is invalid. A new snapshot with the correct event date of 01/01/2025 was needed.",
    "rca": "Ops needed a manual payload with the correct details as mentioned in the ticket. The snapshot was sent to address the issue.",
    "steps_taken": "A new snapshot was created and sent with the correct event date of 01/01/2025. The snapshot was verified and processed by Noyo.",
    "data_models": "[]"
  },
  "BENINTEG-4285": {
    "key": "BENINTEG-4285",
    "issue": "Sagittarius Bio is missing Coverage Blocks within payloads for Noyo, affecting several employees who are missing their termination dates.",
    "issue_summary": "Sagittarius Bio's employees are missing Coverage Blocks in their Noyo payloads, leading to issues with processing terminations correctly.",
    "rca": "The root cause was identified as a bug in Noyo where the termination dates were not being included in the coverage blocks, causing employees to be transmitted as active participants.",
    "steps_taken": "The issue was investigated, and it was confirmed that the terminations were sent correctly from Rippling's end. Communication with Noyo was initiated to understand why the terminations were not processed correctly. It was concluded that the terminations must be processed directly with Aetna, as per Noyo's instructions.",
    "data_models": "[]"
  },
  "BENINTEG-4283": {
    "key": "BENINTEG-4283",
    "issue": "The need to add a dental plan and re-onboard the connection for Cigna, requiring the de-boarding of the current connection.",
    "issue_summary": "The issue involves the need to add a dental plan for Cigna and re-onboard the connection, which requires de-boarding the existing connection.",
    "rca": "The issue was resolved by addressing the data builder aspect in-house.",
    "steps_taken": "The steps taken involved executing a script to delete various configurations and data related to the Cigna connection for the company. The script included deleting entries from VendorPartnerCompany, VendorPartnerPendingActionGroupingStrategy, StediPartnerBenefitsGroupingConfig, BaseVendorPartnerCompanyPayloadData, StediPartnerTransmissionConfig, and CustomStediCommunicationDetail for the specified company and carrier.",
    "data_models": "[Company, VendorPartnerCompany, VendorPartnerPendingActionGroupingStrategy, StediPartnerBenefitsGroupingConfig, BaseVendorPartnerCompanyPayloadData, StediPartnerTransmissionConfig, CustomStediCommunicationDetail]"
  },
  "BENINTEG-4276": {
    "key": "BENINTEG-4276",
    "issue": "Client unable to set custom email in the carrier transmission tab for Anthem, receiving 'Invalid vendor' error.",
    "issue_summary": "Groombuggy, Inc faced an issue where they were unable to update custom email addresses in the 'Carrier transmission' tab for Anthem due to an 'Invalid vendor' error.",
    "rca": "There was a bug in the front-end code responsible for mapping the vendor, which caused the 'Invalid vendor' error when attempting to update the email addresses.",
    "steps_taken": "The issue was identified as a bug in the front-end code for vendor mapping. The bug was fixed, allowing the client to edit the email addresses directly. The fix was tested and confirmed to resolve the issue.",
    "data_models": "[]"
  },
  "BENINTEG-4275": {
    "key": "BENINTEG-4275",
    "issue": "The employee's dependent aged out of coverage and was enrolled in COBRA coverage, but there was an issue where the employee and his dependents were terminated instead of just the aged-out dependent being added to COBRA coverage. The admin wants the file feed updated to reflect the active plan from COBRA to Delta Dental for the dependent.",
    "issue_summary": "The issue was that the employee and dependents were incorrectly terminated instead of only the aged-out dependent being added to COBRA coverage. The file feed needed to be updated to reflect the correct active plan for Delta Dental.",
    "rca": "The root cause was identified as a bug in the auto-enrollment flow for age-out dependent only COBRA. The COBRA details were sent for Cigna for medical and Delta Dental for dental, but the file feed needed to be updated correctly.",
    "steps_taken": "The issue was fixed by updating the Medical and Vision enrollment directly. The ticket was moved to the BenAdmin integration team to ensure the forms were sent to the carrier for updating. The COBRA details were verified to be sent correctly for Cigna and Delta Dental.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-4274": {
    "key": "BENINTEG-4274",
    "issue": "The admin is unable to update the carrier transmission email for Anthem and is receiving an invalid vendor error when attempting to change the email from Small.group@anthem.com to CALGEnrollIntake@anthem.com.",
    "issue_summary": "Admin faced an issue where they could not update the carrier transmission email for Anthem due to an invalid vendor error.",
    "rca": "There was a bug in the front-end code while calling the API, which caused the invalid vendor error. The fix for this bug is now live.",
    "steps_taken": "The engineering team identified the bug in the front-end code and deployed a fix. The email was manually updated as per the ticket description, and the admin was informed that they could edit it as needed.",
    "data_models": "[]"
  },
  "BENINTEG-4270": {
    "key": "BENINTEG-4270",
    "issue": "The broker for Infinitus Systems, Inc. was not receiving emails or tasks for Principal enrollment updates, despite receiving them for other carriers. This issue persisted even after the Noyo API connection was supposedly disabled.",
    "issue_summary": "The broker for Infinitus Systems, Inc. was not receiving emails or tasks for Principal enrollment updates due to a misunderstanding about the status of the Noyo API connection, which was not actually disabled.",
    "rca": "The root cause of the issue was a misunderstanding by the previous assignee regarding the status of the Noyo API connection. The NoyoCompanyCarrier object was not present in the company debugger, leading to the assumption that the connection was disabled. However, the backend model (CustomNoyoCommunicationDetails) still indicated an active Noyo connection. This discrepancy caused the broker not to receive the necessary updates.",
    "steps_taken": "The steps taken to resolve the issue included confirming the status of the Noyo API connection in the backend and ensuring it was properly disabled. The CustomNoyoCommunicationDetails model was checked and the backend API connection was removed for both affected groups.",
    "data_models": "[NoyoCompanyCarrier, CustomNoyoCommunicationDetails]"
  },
  "BENINTEG-4265": {
    "key": "BENINTEG-4265",
    "issue": "Several termination forms are not being sent to Covered California, resulting in the client still being charged for terminated employees.",
    "issue_summary": "Termination forms for employees are not being sent to Covered California due to a bug related to UNSUBMITTED_PRIOR_FORMS, causing the client to continue being charged for these employees.",
    "rca": "The root cause of the issue was identified as a bug in the system related to UNSUBMITTED_PRIOR_FORMS. This bug prevented the submission of termination forms to Covered California.",
    "steps_taken": "The status for the affected employees was fixed using the employee event debugger. Links to the debugger for each affected employee were provided, and the issue was closed after addressing the immediate problem. A fix for the underlying bug is being worked on but is delayed due to some considerations.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-4264": {
    "key": "BENINTEG-4264",
    "issue": "Amanda Ockert and Family's COBRA termination date within the Noyo Payload was incorrect, causing issues with accessing active employee medical coverage with a new employer.",
    "issue_summary": "The Noyo payload did not reflect the correct COBRA termination date for Amanda Ockert and Family, which was supposed to be 12/01/2024, leading to issues with accessing new medical coverage.",
    "rca": "The dates sent in the Noyo payload were correct, and the system was working as expected. The issue was due to a misunderstanding or incorrect expectation regarding the termination date.",
    "steps_taken": "The team confirmed that the correct end dates were sent in the snapshot to Noyo, and worked with Noyo to resolve the processing state issue. The ticket was closed after confirming the correct information was sent.",
    "data_models": "[]"
  },
  "BENINTEG-4262": {
    "key": "BENINTEG-4262",
    "issue": "The employee is unable to access COBRA coverage due to dual communications being turned off for the group, which is a critical issue for a high-value customer.",
    "issue_summary": "Dual communications were turned off for the group, preventing the employee from accessing COBRA coverage. This was due to the system automatically setting dual communications to off because the group had previously set communication details as No-OP.",
    "rca": "The system automatically created the connection with dual communication turned off because the group had previously set their communication details as No-OP, meaning they did not want Rippling to send any forms. This is the expected system behavior when No-OP is set.",
    "steps_taken": "To resolve the issue, the email communication was enabled, and the forms sending process was set up. The EBN retool was used to change the dual communication status. The log rocket link was used to verify the actions taken.",
    "data_models": "[CustomCommunicationDetail]"
  },
  "BENINTEG-4261": {
    "key": "BENINTEG-4261",
    "issue": "Marie Hansen was not correctly terminated from COBRA coverage as of 10/01/2024, despite being omitted from the EDI file feed with OneKonnect after 09/24/2024.",
    "issue_summary": "The issue is that omitting employees from the EDI file feed does not terminate their COBRA coverage, as confirmed by Cigna. A definitive COBRA termination date needs to be communicated via the EDI.",
    "rca": "The root cause of the issue is that simply omitting employees from the EDI file feed does not terminate their COBRA coverage. A termination should be communicated via the EDI for both active and COBRA members, as confirmed by Cigna.",
    "steps_taken": "The issue was flagged for review for the OneKonnect <> Cigna EDI File Feeds for COBRA terminations. Confirmation was sought from OneKonnect to ensure that employees are not being dropped from the file without proper termination communication.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-4259": {
    "key": "BENINTEG-4259",
    "issue": "The client, Folio Services, Inc, has terminated their account with Rippling, and there is a need to stop sending the EDI file to the USP carrier.",
    "issue_summary": "Folio Services, Inc has churned away from Rippling, requiring the cessation of EDI file transmission to the UHC_USP carrier.",
    "rca": "The group was churned off from the in-house system, necessitating the deboarding of the client and halting of file transmissions.",
    "steps_taken": "The company's setup was removed using a script. The script involved deleting entries related to the company and carrier from various models such as VendorPartnerCompany, VendorPartnerPendingActionGroupingStrategy, StediPartnerBenefitsGroupingConfig, BaseVendorPartnerCompanyPayloadData, StediPartnerTransmissionConfig, and CustomStediCommunicationDetail.",
    "data_models": "[Company, VendorPartnerCompany, VendorPartnerPendingActionGroupingStrategy, StediPartnerBenefitsGroupingConfig, BaseVendorPartnerCompanyPayloadData, StediPartnerTransmissionConfig, CustomStediCommunicationDetail]"
  },
  "BENINTEG-4237": {
    "key": "BENINTEG-4237",
    "issue": "Error in secure email forms sending status in carrier transmission tab. The 'send email securely' option shows as NO even after being set to YES.",
    "issue_summary": "The 'send email securely' option in the carrier transmission tab does not reflect the correct status after being updated, causing confusion for users.",
    "rca": "There was a UI issue where the 'send email securely' status was not displaying correctly, even though the system had the correct flag set to true.",
    "steps_taken": "The issue was identified as a UI bug. A fix was implemented and merged, with the deployment scheduled for the following day due to a deployment freeze. Users were informed that the emails were secure despite the UI issue.",
    "data_models": "[]"
  },
  "BENINTEG-4236": {
    "key": "BENINTEG-4236",
    "issue": "Forms for COBRA coverage were not sent via email to the carrier for a BOB group, despite being expected to be sent as there are no active feeds.",
    "issue_summary": "Forms for COBRA coverage were not sent via email to the carrier for a BOB group due to dual communications being manually turned off, which prevented the forms from being sent.",
    "rca": "The root cause of the issue was that dual communications were manually turned off for the group, which led to the forms not being sent via email as expected.",
    "steps_taken": "The issue was identified as not being for Engineering to troubleshoot since dual communications were turned off manually. The Operations team was asked to check who turned off the dual communications.",
    "data_models": "[]"
  },
  "BENINTEG-4235": {
    "key": "BENINTEG-4235",
    "issue": "The employee Geoff Miles should have had a cancellation event for his COBRA coverage, as he is no longer eligible for COBRA (18 months). The cancellation event never finalized, resulting in wrongful charges for COBRA coverage.",
    "issue_summary": "COBRA cancellation event for Geoff Miles was not finalized, leading to wrongful charges due to missed cancellation.",
    "rca": "The COBRA cancellation event for this group was not finalized until very late, and it passed the 2 months retroactive window for the Noyo amendments, necessitating a backdated retroactive snapshot.",
    "steps_taken": "A retro-active snapshot was sent for the employee with the correct end dates, resolving the issue.",
    "data_models": "[]"
  },
  "BENINTEG-4234": {
    "key": "BENINTEG-4234",
    "issue": "Employee and dependents are not showing as enrolled in the TX Dental PPO 1500 plan with Guardian, and there is a suspected delay in data transmission via Noyo.",
    "issue_summary": "Employee and dependents are not enrolled in Guardian's system for the TX Dental PPO 1500 plan, potentially due to a data transmission issue with Noyo.",
    "rca": "No issue, operations automatically resolved the ticket. The enrollment issue was likely due to either incorrect coverage enrollment or a historical mapping issue for the TX PEO plans, which was corrected by sending a new snapshot.",
    "steps_taken": "A new snapshot was sent for the employee, and the enrollments were completed successfully. The issue was resolved, and it was confirmed that the enrollment data was now correct across carriers.",
    "data_models": "[]"
  },
  "BENINTEG-4230": {
    "key": "BENINTEG-4230",
    "issue": "The end date of an employee's role was updated, requiring a 'Termination (end date correction)' event to be created and insurance timelines to be updated. Forms were not generated due to an expired signature, causing delays in updating the end date with carriers and potential COBRA coverage issues.",
    "issue_summary": "The issue involved an update to the end date of an employee's role, which required a 'Termination (end date correction)' event. The forms were not generated because the signature was expired, leading to delays in updating the end date with carriers.",
    "rca": "This is an autogenerated termination end date correction ticket. The issue was that the forms were not generated because the signature was expired. This issue has been fixed and the forms went through.",
    "steps_taken": "The termination event was updated to have the refreshed signature, allowing the forms to be generated and sent through successfully.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-4227": {
    "key": "BENINTEG-4227",
    "issue": "Cigna ACE file for 02/18 was stuck on the retool with status 'FRAGMENTED', and no additional files were sent to the Carrier on that date.",
    "issue_summary": "The Cigna ACE file for 02/18 was stuck due to a 'FRAGMENTED' status, preventing further file transmission to the Carrier.",
    "rca": "The issue was caused by a redlock exception that was not unique, which has been fixed in the pull request https://github.com/Rippling/rippling-main/pull/309353 and deployed on 18th February.",
    "steps_taken": "A manual file was sent to address the immediate issue. The root cause was identified as a redlock exception, which was fixed in a pull request and deployed on 18th February.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-4224": {
    "key": "BENINTEG-4224",
    "issue": "The client, Love Health Inc., moved from UHC PRIME to UHC USP but the production file for UHC PRIME is still being sent. Attempts to re-onboard the group with USP POLICY failed due to an error indicating that the Vendor Partner Company already exists for the company with PROD state.",
    "issue_summary": "Love Health Inc. transitioned from UHC PRIME to USP but continued to send production files to UHC PRIME. Re-onboarding to USP failed due to existing Vendor Partner Company in PROD state.",
    "rca": "The root cause of the issue was that the Vendor Partner Company for the client was still set to the PROD state for UHC PRIME, preventing the transition to USP.",
    "steps_taken": "The group was off-boarded from Stedi using a script that deleted various configurations and data related to the UHC PRIME setup. The script involved deleting entries from models such as VendorPartnerCompany, VendorPartnerPendingActionGroupingStrategy, StediPartnerBenefitsGroupingConfig, BaseVendorPartnerCompanyPayloadData, StediPartnerTransmissionConfig, and CustomStediCommunicationDetail.",
    "data_models": "[VendorPartnerCompany, VendorPartnerPendingActionGroupingStrategy, StediPartnerBenefitsGroupingConfig, BaseVendorPartnerCompanyPayloadData, StediPartnerTransmissionConfig, CustomStediCommunicationDetail]"
  },
  "BENINTEG-4219": {
    "key": "BENINTEG-4219",
    "issue": "The client, Writer Inc, needs to be off-boarded from their medical benefits as they have changed their carrier.",
    "issue_summary": "Writer Inc needs to be de-boarded from medical benefits due to a change in their insurance carrier.",
    "rca": "The ticket was deemed no longer necessary, indicating that the issue was resolved or became irrelevant.",
    "steps_taken": "No specific steps were taken as the ticket was marked as no longer needed.",
    "data_models": "[]"
  },
  "BENINTEG-4218": {
    "key": "BENINTEG-4218",
    "issue": "A number of UHC USP files are encountering a validation error when attempting to generate a file with the retool, preventing the file from being created.",
    "issue_summary": "UHC USP files are facing a validation error due to a change in the Stedi guide, where the INS02 element was incorrectly set as repeated, causing the validation to fail.",
    "rca": "Wrong guide changes were pushed on Stedi, specifically the INS02 element was made repeated, which caused the validation to fail.",
    "steps_taken": "The guide for INS02 was updated to correct the error. After updating, a new error for DTP was encountered, which was resolved by aligning the USP guide with the UHC PEO's guide, making the DTP (2000 loop) optional instead of required. This allowed the files to be generated successfully.",
    "data_models": "[]"
  },
  "BENINTEG-4217": {
    "key": "BENINTEG-4217",
    "issue": "The employee's COBRA coverage needs to be terminated effective 12/31/2024, but the system has it set to terminate on 2/1/2025, which invalidates the new hire event on 1/1/2025.",
    "issue_summary": "The COBRA coverage for an employee was not terminated on the desired date of 12/31/2024, leading to conflicts with a new hire event on 1/1/2025.",
    "rca": "Some COBRA events were incorrectly created, which is a product behavior not aligning with customer expectations. The customer applied for a COBRA cancellation later, and the system does not support backdating COBRA cancellations via user control, necessitating manual intervention.",
    "steps_taken": "The COBRA cancellation effective date was manually updated to 1/1/2025, and forms were regenerated but not re-sent. The cancellation effective date was then corrected to 12/31/2024, and forms were re-submitted to the carrier. The process was verified with Noyo for the two carriers involved.",
    "data_models": "[CobraCancellationEvent]"
  },
  "BENINTEG-4214": {
    "key": "BENINTEG-4214",
    "issue": "The admin for SamaCare Inc encountered an error message when attempting to use the 'Details' button under EDI Historical Data in the Ben Admin app. The error message stated '1 validation error for BenefitPlanDetails name none is not an allowed value (type=type_error.none.not_allowed)'.",
    "issue_summary": "The 'Details' button under EDI Historical Data in the Ben Admin app for SamaCare Inc is throwing a validation error due to a missing or invalid plan name.",
    "rca": "The root cause of the issue was identified as a special case handling bug where the backfill of plan names was not properly managed, leading to a validation error when the 'Details' button was used.",
    "steps_taken": "The issue was identified and a fix was implemented to handle the backfill of plan names correctly. The fix was deployed to production, and the admin was notified once the issue was resolved.",
    "data_models": "[BenefitPlanDetails]"
  },
  "BENINTEG-4210": {
    "key": "BENINTEG-4210",
    "issue": "Modern Treasury Corp's full Open Enrollment (OE) file was not sent to Noyo via API on 11/29/2024, despite the group's API connection being active. This issue raised concerns about potential impacts on multiple clients expecting OE to be sent over open API connections.",
    "issue_summary": "The full OE file for Modern Treasury Corp was not sent to Noyo due to a bug in the system where PendingActions for Guardian were not processed, leading to fallback on email communications which do not support OE submissions.",
    "rca": "The root cause was a bug in the system where open NoyoSetupTasks caused a fallback to email communications, which do not support OE submissions. As a result, SubmitEmployeeEnrollmentTask was not created, and even after Noyo setup completion, submissions were skipped because the task was never retried.",
    "steps_taken": "A code change was made to ensure that task creation is retried when reprocessing PendingActions. This fix was pushed to auto-heal any impacted companies/employees, and monitoring was set up to ensure the issue is resolved for all affected cases.",
    "data_models": "[PendingActionGroup, PendingAction, NoyoSetupTask, SubmitEmployeeEnrollmentTask]"
  },
  "BENINTEG-4207": {
    "key": "BENINTEG-4207",
    "issue": "Upon sending snapshots to Noyo for Caribou Thunder, LLC's Principal API connection, an error message was returned indicating that a member group is required when there is more than one available member group for the dental plan. This issue blocked all of the group's Open Enrollment elections from being sent to Principal.",
    "issue_summary": "The issue was caused by a misalignment between the system's capabilities and the user's expectations regarding member group configurations for vision plans. The system did not support falling back to a member group based on criteria other than the plan itself, leading to errors in processing the snapshots.",
    "rca": "The root cause was identified as a misalignment between user expectations and system capabilities. The system was working as expected, but the user expected it to support member group configurations based on criteria other than the plan, which it did not. This led to errors in processing the snapshots for multiple lines of coverage.",
    "steps_taken": "The issue was investigated, and it was confirmed that the system does not currently support the expected configuration. A feature fix is being prioritized to address this limitation. The discussion is ongoing in another ticket (BENINTEG-4111).",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-4205": {
    "key": "BENINTEG-4205",
    "issue": "Client is moving from UHC PRIME to UHC USP but encountered an error during onboarding due to an existing vendor partner company in PROD state. The PRIME file is still in production, causing a blocker for onboarding USP.",
    "issue_summary": "The client, Stan (dba: Find Community Inc.), is transitioning from UHC PRIME to UHC USP. However, an error occurred during the onboarding process for USP because the vendor partner company already exists in the PROD state. The PRIME file is still active in production, even though the client migrated to USP as of 2/1/2025.",
    "rca": "The root cause of the issue was that the group was not offboarded from the UHC PRIME production file, which led to a conflict when trying to onboard the USP file.",
    "steps_taken": "The necessary action was taken to delete the UHC setup for the given group, effectively offboarding them from the PRIME production file as per the request.",
    "data_models": "[]"
  },
  "BENINTEG-4204": {
    "key": "BENINTEG-4204",
    "issue": "Client Misfits Gaming requested to offboard their connection as they are moving from Prime to USP.",
    "issue_summary": "The client requested an offboarding of their connection from Prime to USP, which required engineering intervention as it cannot be done by operations.",
    "rca": "The request for offboarding was a standard procedure that currently requires engineering to execute, as operations do not have the capability to perform this task.",
    "steps_taken": "The engineering team offboarded the company as requested, allowing the client to proceed with onboarding new information.",
    "data_models": "[]"
  },
  "BENINTEG-4203": {
    "key": "BENINTEG-4203",
    "issue": "COBRA Employee and Family are Sending Incorrectly on EDI File",
    "issue_summary": "The EDI file incorrectly sent Micheal Gooch, the spouse of employee Marisa Gooch, as an employee (INS01=Y) instead of a dependent. This issue arose because Marisa Gooch, who is a COBRA member, was terminated, and the logic incorrectly assumed a dependent-only COBRA scenario.",
    "rca": "The root cause was identified as a logic error in handling past dated terminations. The system incorrectly assumed a dependent-only COBRA scenario because the dependent was under COBRA and the corresponding subscriber had no active coverage. This should not have occurred as past terminated coverages are not sent in production files.",
    "steps_taken": "A check was added to handle the scenario where the dependent's coverages have already been terminated in the past, ensuring that such cases are not elevated. The change was reviewed and rolled out to match the expected behavior.",
    "data_models": "[]"
  },
  "BENINTEG-4202": {
    "key": "BENINTEG-4202",
    "issue": "Danielle Taddei's EDI file is reflecting two different CSAs for their Aetna Medical Coverage, causing enrollment issues.",
    "issue_summary": "The EDI file for Danielle Taddei showed two different CSAs for Aetna Medical Coverage due to incorrect plan mapping, leading to enrollment discrepancies.",
    "rca": "Cleanup during a PEO plan mismatch was not handled correctly, resulting in some transmission for EE to have occurred for the older plans. A new amendment was sent out for the EE which corrected their state with the carrier. At some point, the CCLIs were modified after the pending actions were created, and the retransmissions were not triggered. The older plans were sent via the CCLIs, causing conflicting information. The plan mappings between Noyo and Rippling BenAdmin were incorrect, leading to the wrong plan being transmitted.",
    "steps_taken": "A new amendment was submitted to Noyo to correct the coverage to the correct plan. The issue was identified as incorrect plan mapping, and a reingest was done for PEO groups to fix the mappings. The amendment corrected the enrollment state with the carrier.",
    "data_models": "[InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-4196": {
    "key": "BENINTEG-4196",
    "issue": "Guardian did not process the employee's Open Enrollment (OE) COBRA enrollment due to an incomplete form. The form was missing selections such as the appropriate box for COBRA continuation and incorrectly showed the employee's work status as Active instead of COBRA.",
    "issue_summary": "The issue was caused by incorrect form mapping, leading to missing and incorrect data on the enrollment form, which prevented Guardian from processing the employee's COBRA enrollment.",
    "rca": "The root cause of the issue was incorrect mapping of form fields, which resulted in missing and incorrect data on the enrollment form. This mapping process is owned by the Operations (OPs) team.",
    "steps_taken": "The steps taken to resolve the issue included reviewing the form mapping process, downloading the template from the employee event debugger, and checking the mapping of data fields using the pending-action-field-viewer. It was determined that the form mapping request needed to be submitted to Ahad's team as engineering does not handle mapping-related requests.",
    "data_models": "[PendingAction, EnrollmentEvent]"
  },
  "BENINTEG-4183": {
    "key": "BENINTEG-4183",
    "issue": "The employee John Haro was incorrectly enrolled in the group's low dental plan despite selecting the high plan in Rippling. This issue affected all employees enrolled in this particular plan, leading to incorrect transmission of plan details.",
    "issue_summary": "Employees were enrolled in the incorrect dental plan due to a mapping issue in the Noyo system, where the wrong member group was sent in the snapshot payloads.",
    "rca": "There was a bug in the Noyo system that defaulted to a member group even if the plan was not enrolled. This bug caused the incorrect member group to be sent in the snapshot payloads, leading to the wrong plan enrollment.",
    "steps_taken": "The issue was identified as a bug in the Noyo system. The bug was fixed, and a census was sent to update the carrier class code for John Haro and other affected employees. The updated carrier class code was verified in the snapshots.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-4170": {
    "key": "BENINTEG-4170",
    "issue": "The employee was still appearing on the BT list despite being moved to the appropriate TX dental plan.",
    "issue_summary": "The employee was enrolled in an incorrect plan, and even after changing to the correct plan, the older plan with invalidated coverage was causing the employee to remain on the BT list.",
    "rca": "The employee was initially enrolled in an incorrect plan. Although the plan was changed to the correct one, the older SubscriberLineInfo (SLI) record with invalidated coverage was not properly handled, causing the employee to remain on the BT list.",
    "steps_taken": "The invalidated SLI record for the TX plan was skipped using the following code snippet:\n\n```python\nsli = SubscriberLineInfo.objects.get(id=\"6753557e389fd4c773db3bf9\")\nassert sli.valid==False\nskipped_sli = SkippedSLIRecord.objects.get_or_create(role=sli.role, company=sli.company, sli=sli, vendor=\"COMMON\")\nreturn skipped_sli\n```\n\nAfter skipping the invalidated SLI, the older plan's coverage was cleaned up, and the blocked transaction was resolved.",
    "data_models": "[SubscriberLineInfo, SkippedSLIRecord]"
  },
  "BENINTEG-4169": {
    "key": "BENINTEG-4169",
    "issue": "The Stedi File Generation Tool is creating a mapping error for the client Redford Center, but the tool is not displaying any error messages.",
    "issue_summary": "The client Redford Center, after being onboarded, faced a mapping error with the Stedi File Generation Tool, which did not display any error messages, causing production files not to be sent.",
    "rca": "The issue was caused by an incorrect mapping ID being used, which was not updated after the client was migrated off of PRIME and onboarded to USP.",
    "steps_taken": "The mapping ID was updated to the correct value for USP, which resolved the initial mapping error. However, a subsequent issue arose due to a missing partnership setup, which required further configuration to resolve.",
    "data_models": "[]"
  },
  "BENINTEG-4165": {
    "key": "BENINTEG-4165",
    "issue": "Groups that are already in production are having their scheduled files sent to Stedi instead of the Cigna server, blocking Open Enrollment (OE) and regular production files.",
    "issue_summary": "The issue is that groups in production have their scheduled files incorrectly sent to Stedi due to a wrong transaction setting ID, which is blocking OE and regular production files.",
    "rca": "The root cause of the issue was a manual data entry error where the transaction setting ID was incorrectly set to a test value instead of the production value '005010X220A1-834-prod'. This was initially done to onboard groups during a pilot migration but was not corrected before going into production.",
    "steps_taken": "The resolution involved updating the transaction setting ID to '005010X220A1-834-prod' for the affected groups so that the weekly files would be sent to the Cigna server instead of Stedi.",
    "data_models": "[]"
  },
  "BENINTEG-4163": {
    "key": "BENINTEG-4163",
    "issue": "Error in forms transmission to companion life via email. Employee forms not sent via email during new hire enrollment submission.",
    "issue_summary": "The forms for employee Sally Martinez were not sent via email to Companion Life during the new hire enrollment process, despite being expected to be sent to specified email addresses.",
    "rca": "The root cause analysis category is 'Salesforce case closed', but no detailed description is provided in the ticket.",
    "steps_taken": "No further action was required as the client asked to disregard the request.",
    "data_models": "[]"
  },
  "BENINTEG-4162": {
    "key": "BENINTEG-4162",
    "issue": "HqO, Inc. is facing an issue with the EDI setup process because the information in Rippling does not match what the carrier has. Rippling currently reflects two plans, while the account structure includes three active plans.",
    "issue_summary": "The issue is that Rippling's system only reflects two plans for HqO, Inc., while the carrier has three active plans. This discrepancy is causing the EDI file feed to fail.",
    "rca": "The root cause analysis category is marked as 'No Issue', indicating that there was no technical issue identified within the scope of the engineering team. The problem seems to be related to the process of adding plans in Rippling, which is not handled by the engineering team.",
    "steps_taken": "The engineering team clarified that they do not add Rippling plans and suggested syncing up internally on the process for adding plans. They advised raising the issue with the BenAdmin team if there are any problems or need for clarification around adding the plans. The issue was then closed with a recommendation to raise a different issue with the BenAdmin team if needed.",
    "data_models": "[]"
  },
  "BENINTEG-4155": {
    "key": "BENINTEG-4155",
    "issue": "The transactions for an employee at Gem Software, Inc. were blocked due to a 'Temporary server error', preventing the employee from being enrolled in coverage.",
    "issue_summary": "The issue was caused by a 'Temporary server error' blocking transactions for an employee, which was due to a missing COBRA cancellation event, leading to conflicting coverage statuses.",
    "rca": "The root cause of the issue was the absence of a COBRA cancellation event for the employee, which resulted in the COBRA coverage not being terminated in the system. This led to a conflict with the new hire coverage, causing the system to block the transaction with a 'Temporary server error'.",
    "steps_taken": "To resolve the issue, a manual amendment was sent to Noyo to correct the coverage. The pending action was then marked as archived to remove the blocked transaction from visibility.",
    "data_models": "[PendingAction, SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-4154": {
    "key": "BENINTEG-4154",
    "issue": "Nift group's employee enrollments were not being processed by Noyo due to incorrect class codes being sent.",
    "issue_summary": "Employee enrollments for the Nift group were not processed by Noyo because of incorrect class codes. The root cause was a configuration issue in the plan mapping for the group.",
    "rca": "There was a configuration issue while creating the plan mapping for the Nift group, which led to incorrect class codes being sent. However, when fetching the data, the correct Noyo plan ID for Texas was being populated.",
    "steps_taken": "The issue was resolved by reingesting the Noyo plans for the group using the following code:\n\n```python\nnoyo_group_id=\"3475d0a9-ada9-4a5b-98fc-439ecb520272\"\nnoyoPlanMap = getNoyoPlanMapForPeoGroupId(noyo_group_id)\nicp= InsuranceCompanyPlanInfo.objects.get(id=\"66cfa389c12728aaf4d53e42\")\nreturn _get_noyo_plan_from_rippling_plan(icp.plan, noyoPlanMap, icp)\n```\n\nThis returned the correct Noyo plan ID for Texas. The plans were reingested using:\n\n```python\ncee = CompanyEnrollmentEvent.objects.get(id=\"66c7b55710dfe5aea9e95d7b\")\nassert str(cee.company.id) == \"5fbd635098a57300296af6f0\"\nreturn ingestPeoGroupToNoyo(cee,forceIngest=True)\n```\n\nThe setup was fixed, and the snapshot was resent for the employee.",
    "data_models": "[InsuranceCompanyPlanInfo, CompanyEnrollmentEvent]"
  },
  "BENINTEG-4153": {
    "key": "BENINTEG-4153",
    "issue": "The 'Manual Load Enrollments' banner remains visible on the account despite the Principal feed being live, causing confusion for the client.",
    "issue_summary": "The 'Manual Load Enrollments' banner is still displayed on the account even though the API feed is confirmed to be live, due to a bad setup issue.",
    "rca": "The issue was caused by a special case handling using a webscript for an old bad setup issue where there were no BaseCompanyCarrierTransmission objects for the active Principal feed.",
    "steps_taken": "Confirmed the API connection was active. Identified the absence of BaseCompanyCarrierTransmission objects for the Principal feed. Created the necessary object using a webscript, which resolved the issue and removed the banner. Code used: ```python\nncc = NoyoCompanyCarrier.objects.get(company=\"61539c49d7089c70239fd691\", carrier=\"583fdf270971c5546929c845\")\nBaseCompanyCarrierTransmission.objects.get_or_create(\ncompany=ncc.company,\nvendor=\"NOYO\",\ncarrier=ncc.carrier,\nstatus=\"LIVE\",\nfinalizedOn=pst_today(),\nreferenceDate=pst_today(),\nliveOn=pst_today(),\n)\nreturn```",
    "data_models": "[BaseCompanyCarrierTransmission, NoyoCompanyCarrier]"
  },
  "BENINTEG-4146": {
    "key": "BENINTEG-4146",
    "issue": "The PEO Premium Customer, Rove Card, did not have their 12/1/24 renewal mapped correctly, resulting in them being on CORE without Medical or Dental coverage, only Vision.",
    "issue_summary": "The PEO Premium Customer, Rove Card, experienced an issue where their renewal for 12/1/24 was not mapped correctly, leading to a downgrade to CORE and lack of Medical and Dental coverage.",
    "rca": "There was an issue in the PEO setup for this group, which resulted in them being part of a different PEO guardian group. The group was re-ingested on Noyo and the census was resent.",
    "steps_taken": "Re-ingested both the company enrollment events for the group and sent the census for both Guardian and Aetna. Example snapshots were provided for verification.",
    "data_models": "[CompanyEnrollmentEvent]"
  },
  "BENINTEG-4145": {
    "key": "BENINTEG-4145",
    "issue": "The effective date for Daniel Cormican's medical coverage with Cigna needs to be updated to 01/01/2025 in the transmission details. The new plan file feed code was added by the carrier, but the offline change made did not generate an amendment.",
    "issue_summary": "The issue is that the effective date for Daniel Cormican's medical coverage with Cigna was not updated to 01/01/2025 in the transmission details due to incorrect expectations from an offline change, which did not generate an amendment.",
    "rca": "The root cause of the issue was a misunderstanding that an offline change would create an amendment. The effective date was not updated because the previous coverage was not marked as invalidated, and the offline change did not trigger an amendment.",
    "steps_taken": "The steps taken to resolve the issue included invalidating the old coverage to fix the SubscriberLineInfo (SLI) timelines. This allowed the amendment to be created with the correct effective date. It was also suggested to use the EE debugger to update existing SLI instead of creating a new offline change.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-4144": {
    "key": "BENINTEG-4144",
    "issue": "The client noticed that employee changes like terminations and QLE had not been processed with the carrier. Forms were not generated for these changes, and the carrier feed with Cigna is not active.",
    "issue_summary": "Forms for employee changes such as terminations and QLE were not generated, preventing processing with the carrier. The carrier feed with Cigna is inactive.",
    "rca": "There was no issue.",
    "steps_taken": "Carrier Connections reviewed the setup and determined the root cause of the issue, allowing the case to be closed.",
    "data_models": "[]"
  },
  "BENINTEG-4143": {
    "key": "BENINTEG-4143",
    "issue": "The primary address of the company 'Peregrine' was updated in Rippling, but the old address continued to appear on carrier forms downloaded from an employee's profile.",
    "issue_summary": "The company's primary address was updated in Rippling, but the old address still appeared on carrier forms due to the address not being updated in the Benefits Admin app.",
    "rca": "The wrong address was initially set up for the company, and although it was corrected using a web script, the address was not updated in the associated InsuranceCompanyCarrierLineInfo (CCLI) and CompanyInsuranceInfo objects, leading to the old address being used in forms.",
    "steps_taken": "The engineering team updated the address in the CompanyInsuranceInfo, CompanyEnrollmentEvent, and CCLIs with the company's primary working location address '71 Stevenson Street'. The forms were then regenerated to reflect the updated address. The following code snippet was used to update the address:\n\n```python\ncompany_id = '628fca9e43ebf6252821d477'\ncii = CompanyInsuranceInfo.get_or_none(company=company_id)\ncee_id = '66fed1ccd32e594c09fd88e0'\ncee = CompanyEnrollmentEvent.get_or_none(id=cee_id)\nprimaryWorkLocation = Company.get_or_none(id=company_id).primaryWorkLocation\nassert primaryWorkLocation.address[\"streetLine1\"] == \"71 Stevenson Street\"\naddress = primaryWorkLocation.address\n# 1. Change CompanyInsuranceInfo\ncii.addresses.insert(0, address)\ncii.save()\nprint('cii saved')\n# 2. Change CompanyEnrollmentEventStateInfo\nstate_info = CompanyEnrollmentEventStateInfo.objects.get_or_none(company=cee.company, companyEnrollmentEvent=cee)\nstate_info.stateCode = address.state\nstate_info.address = address\nstate_info.save()\nprint('state_info saved')\n# 3. Update companyEnrollmentEvent CCLIs\ncclis = InsuranceCompanyCarrierLineInfo.objects.filter(company=cee.company, address__country=\"US\", effectiveDate=cee.tentativeEffectiveDate)\nfor ccli in cclis:\n  ccli.serviceAreas = None\n  ccli.ratingArea = None\n  ccli.address = address\n  ccli.save()\n  print('ccli saved')\nprint('cclis saved')\nreturn cclis\n```",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo, CompanyEnrollmentEvent, CompanyEnrollmentEventStateInfo]"
  },
  "BENINTEG-4118": {
    "key": "BENINTEG-4118",
    "issue": "Josh Bornstein's voluntary life coverage amounts were incorrectly auto-approved for the full elected amounts of $500K for himself and $250K for his spouse, instead of reflecting the approved $300K for employee and $25K for spouse, with the remainder pending Evidence of Insurability (EOI).",
    "issue_summary": "The system incorrectly auto-approved the full elected voluntary life coverage amounts for Josh Bornstein and his spouse, instead of reflecting the approved and pending EOI amounts, causing discrepancies in the file sent to Guardian.",
    "rca": "The issue was caused by an incorrect handling of the buy-up information associated with the SubscriberLineInfo (SLI) of the event. The system logic was set to compute the requested coverage amount by checking the _buyUpInfo and if _overrideBuyUpInfo is present, it takes its value, which led to the incorrect auto-approval of the full elected amounts.",
    "steps_taken": "The issue was investigated by checking the last sent details to Vericred and identifying the discrepancy in the buy-up information. It was noted that the OfflineChange events are treated as a special case where the input volume becomes approved, overriding any backend logic. The most recent OfflineChange was corrected to reflect the approved volumes of $300K for the employee and $25K for the spouse. The issue was explained to the group, and the ticket was closed.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-4115": {
    "key": "BENINTEG-4115",
    "issue": "Blocked transactions for three employees due to a discontinued 2024 Kaiser HMO plan that could not be un-mapped.",
    "issue_summary": "Blocked transactions for three employees due to a discontinued 2024 Kaiser HMO plan that could not be un-mapped, causing issues in processing their insurance enrollments.",
    "rca": "The system was working as expected, but there was a closed transaction related to the discontinued plan that caused the blockage.",
    "steps_taken": "The blocked transactions were resolved, allowing the ticket to be closed.",
    "data_models": "[]"
  },
  "BENINTEG-4112": {
    "key": "BENINTEG-4112",
    "issue": "The COBRA enrollment forms for an employee at Brilliant.Org were sent late to the carrier Guardian, causing a delay in processing.",
    "issue_summary": "The COBRA enrollment forms for an employee were sent late to the carrier Guardian due to a missing group ID, even though the employee enrolled on 12/28/2024.",
    "rca": "The delay in sending the COBRA enrollment forms to Guardian was due to the missing group ID for GUARDIAN DENTAL and GUARDIAN VISION. The system was working as expected, but the forms could not be sent until the group ID was added on 02/05/2025.",
    "steps_taken": "Once the group ID was added by the admin on 02/05/2025, the forms were sent the next day as expected. The system had been attempting to send the forms daily since 12/28/2024, but was unable to do so due to the missing group ID.",
    "data_models": "[PendingAction]"
  },
  "BENINTEG-4110": {
    "key": "BENINTEG-4110",
    "issue": "There is a delay in sending enrollments to the carrier for the group SCS Financial, causing escalations.",
    "issue_summary": "The issue involves a delay in sending enrollments to the carrier for SCS Financial due to incorrect classification values for dental coverage, leading to rejections.",
    "rca": "The delay in sending enrollments was caused by incorrect classification values for dental coverage, which resulted in the rejection of snapshots sent to Noyo. The system was sending snapshots daily, but they were rejected due to wrong classification setup, as indicated by the error message: 'Multiple bill group options for this group. Please specify a different bill_group_identifier in the carrier_config for coverage with Carrier ID: c699414d-fd1c-4de4-86f0-66dfff2276c4, line of coverage: dental'.",
    "steps_taken": "The issue was resolved by fixing the mapping and classification issue, allowing the snapshot to be sent successfully. The error was identified using the carrier connection dashboard, which showed the daily snapshot attempts and the rejection messages.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-4109": {
    "key": "BENINTEG-4109",
    "issue": "The admin for the Jellyfish group received emails for terminations of three recently terminated employees, which were sent over both the API connection and forms.",
    "issue_summary": "The Jellyfish group experienced dual communication of terminations via API and forms during a blackout period, which was expected behavior due to renewal requirements.",
    "rca": "The dual communication of terminations via API and forms was due to the blackout period during the renewal process. During this period, all communications are supposed to be dual communicated as per product behavior. This is because Noyo, the vendor, does not guarantee that current plan year changes will be accepted by the carrier during renewal, hence the fallback to forms.",
    "steps_taken": "The issue was identified as expected behavior during the blackout period, and no further action was needed from engineering. The behavior was confirmed to be working as expected, and the ticket was closed.",
    "data_models": "[]"
  },
  "BENINTEG-4108": {
    "key": "BENINTEG-4108",
    "issue": "The Noyo transaction for Delfino AI, Inc was blocked despite the plan being mapped correctly, causing a disruption in processing the employee's insurance enrollment.",
    "issue_summary": "The Noyo transaction for Delfino AI, Inc was blocked due to an error indicating a missing plan mapping, even though the plan was confirmed to be mapped correctly in the Noyo Plan Mapper.",
    "rca": "The root cause of the issue was identified as a missing 'Employee Only' plan tier in Noyo, which led to the transaction being blocked. The system was working as expected, but the plan configuration in Noyo was incomplete.",
    "steps_taken": "The troubleshooting steps included unmapping and remapping the affected plan in the Noyo Plan Mapper and verifying the configuration assignments. It was discovered that Noyo only had the 'Employee with Dependent' plan, and the 'Employee Only' plan needed to be added to resolve the issue.",
    "data_models": "[PendingAction, CompanyInsuranceInfo]"
  },
  "BENINTEG-4107": {
    "key": "BENINTEG-4107",
    "issue": "The production files for the NexHealth group were being sent to Stedi instead of the Cigna server.",
    "issue_summary": "The NexHealth group, which is already in production, had its scheduled files incorrectly sent to Stedi instead of the intended Cigna server due to a wrong transaction setting ID.",
    "rca": "The root cause of the issue was a manual data entry error where the wrong transaction setting ID was used, leading to files being sent to the incorrect server.",
    "steps_taken": "The transaction setting ID was updated to '005010X220A1-834-prod' to ensure that the weekly files are sent to the Cigna server. The issue was then closed as no further action was needed.",
    "data_models": "[]"
  },
  "BENINTEG-4106": {
    "key": "BENINTEG-4106",
    "issue": "The effective date for employee Hollins was transmitted incorrectly in the Noyo EE Snapshot for the group Praxis Solutions LLC.",
    "issue_summary": "The effective date for employee Hollins was transmitted as 12-01-2024 instead of the expected 11-01-2024 in the Noyo EE Snapshot.",
    "rca": "The system is working as expected. The transmitted effective date of 12-01-2024 is correct as per the New Hire Enrollment (NHE) event, and there is no issue with the system.",
    "steps_taken": "Reviewed the employee start date and coverage effective date. Verified the effective date as per the NHE event using the EE debugger and confirmed that the system is functioning correctly. No changes were necessary.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-4103": {
    "key": "BENINTEG-4103",
    "issue": "The employee Christianne Nagy's COBRA Open Enrollment (OE) enrollment for 12/01/2024 did not transmit to Aetna, resulting in enrollment in the incorrect plan. The issue is related to plan mapping errors with Noyo for Rippling PEO 1, Inc.",
    "issue_summary": "Christianne Nagy's COBRA OE enrollment did not transmit to Aetna due to a plan mapping error with Noyo, causing enrollment in the wrong plan.",
    "rca": "The root cause of the issue was identified as a problem with plan ingestion, specifically related to changes in plan names and the mapping of these plans in the Noyo system.",
    "steps_taken": "The issue was resolved by implementing a method to handle changes in plan names for future plans. The method `_get_noyo_plan_from_rippling_plan` was added to manage the fallback to previous plans for which mappings were created. The code iterates through `InsuranceCompanyPlanInfo` objects, retrieves the appropriate Noyo plans, and updates or creates `NoyoCompanyPlanInfo` entries with the correct mappings.",
    "data_models": "[InsuranceCompanyPlanInfo, CompanyCarrierLineInfo, NoyoCompanyPlanInfo]"
  },
  "BENINTEG-4102": {
    "key": "BENINTEG-4102",
    "issue": "The employee, Gustavo Saravia, was terminated on 07/23/2024, but their termination forms were not submitted to the carrier, Blue Shield, due to an issue with UNSUBMITTED_PRIOR_FORMS.",
    "issue_summary": "The termination forms for employee Gustavo Saravia were not sent to Blue Shield due to an incorrect pending action state, specifically UNSUBMITTED_PRIOR_FORMS.",
    "rca": "The root cause of the issue was identified as an incorrect pending action state, which was categorized under 'Forms' and subcategorized as 'Incorrect Data'. This incorrect state was due to an inconsistent connection state at the time of open enrollment, which prevented the forms from being sent.",
    "steps_taken": "The termination forms were manually processed and successfully sent to the carrier and broker as configured. The issue was then closed as no further action was needed from engineering.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [PendingAction, PendingActionGroup]"
  },
  "BENINTEG-4098": {
    "key": "BENINTEG-4098",
    "issue": "Lance Richard Lozano enrolled in COBRA effective 11/1/2024, but the enrollment is not showing on the payload sent to Ideon until 1/1/2025, causing a perceived coverage gap from 11/1/2024 to 12/31/2024.",
    "issue_summary": "COBRA enrollment for Lance Richard Lozano is missing in the payload sent to Ideon, leading to a perceived coverage gap due to Vericred communication not existing during the pending action.",
    "rca": "Vericred communication was not established during the pending action, resulting in the COBRA Init event being sent via email to the carrier instead of through Vericred. The Vericred routing was stopped on the old coverage on 10/21/2024, and a new Vericred communication detail was only created on 11/06/2024, after the COBRA Init event was sent on 11/01/2024.",
    "steps_taken": "The issue was identified that the COBRA Init event was sent via email due to the absence of Vericred communication. It was noted that the corresponding Vericred coverage had expired, and the only option was to request the Vericred team to update their system manually. The ticket was closed as no further action could be taken from the engineering side.",
    "data_models": "[]"
  },
  "BENINTEG-4097": {
    "key": "BENINTEG-4097",
    "issue": "Blocked transactions for employees due to benefit class IDs not matching for Long Term Disability Plans.",
    "issue_summary": "Blocked transactions for employees Sonjia Barker, Tim Kalberg, Tiffany Mellow, and Jeremiah Hutzkal due to benefit class ID mismatches in Long Term Disability Plans. The issue was related to old plan configurations not being updated in the backend.",
    "rca": "The root cause was identified as old plan issues where the carrier configurations were not mapped to the new 2025 plans in the backend, although they appeared to be mapped in the UI. This discrepancy caused the eligible_classification_values to not populate correctly for some NoyoCompanyPlanInfo entries.",
    "steps_taken": "The issue was resolved by redoing the carrier config assignment for LTD plans. This involved unassigning and saving the old carrier config corresponding to LTD plans and then reassigning the new configuration, which corrected the backend mappings. The amendment payload for Sonjia Barker was checked to confirm the correct configurations were now being applied.",
    "data_models": "[NoyoCompanyPlanInfo, CompanyCarrierLineInfo]"
  },
  "BENINTEG-4094": {
    "key": "BENINTEG-4094",
    "issue": "Transactions for employee Bill Hiller at Gem Software, Inc. are blocked due to a temporary server error.",
    "issue_summary": "Transactions for employee Bill Hiller at Gem Software, Inc. are blocked due to a temporary server error, which is actually caused by a coverage overlap error.",
    "rca": "The issue was identified as a duplicate ticket related to a coverage overlap error in the Noyo system, which was incorrectly displayed as a server error.",
    "steps_taken": "The issue was linked to a similar existing ticket (BENCOMP-3170) for tracking. It was identified that the error was due to coverage overlap, and the ticket was assigned to an engineer for further investigation. The importance of providing correct employee details and avoiding duplicate tickets was emphasized.",
    "data_models": "[]"
  },
  "BENINTEG-4093": {
    "key": "BENINTEG-4093",
    "issue": "The client, Darwin Homes Inc, reported that terminations were not processed and provided an impact list. Despite the production file being paused, forms were not sent for certain members to Cigna.",
    "issue_summary": "Forms for terminations were not sent to Cigna for specific members during the open enrollment period, despite the production file being paused.",
    "rca": "The root cause was identified as missing data, specifically the need to create CustomStediCommunicationDetail for three groups.",
    "steps_taken": "Created CustomStediCommunicationDetail for the affected groups to resolve the issue.",
    "data_models": "[CustomStediCommunicationDetail]"
  },
  "BENINTEG-4092": {
    "key": "BENINTEG-4092",
    "issue": "RevenueCat, Inc. faced a dental plan mapping error that blocked Noyo amendments, preventing the transmission of Anthem coverage termination information for several employees.",
    "issue_summary": "The issue was a dental plan mapping error in the Noyo system, which blocked amendments and prevented the transmission of coverage termination information, potentially causing additional premium payments.",
    "rca": "Ops was able to self-serve and resolve the issue after filing the ticket. The root cause was incorrect configuration assignments that were subsequently fixed.",
    "steps_taken": "Verified that Noyo dental plans were mapped to a Rippling dental plan. Attempted to submit amendments via the census retool and Noyo Amendment page in EE debugger, but received error messages. Ops resolved the issue by correcting configuration assignments.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-4091": {
    "key": "BENINTEG-4091",
    "issue": "The LTD plan for Biedermann Motech did not renew as expected, blocking the enrollment process for eligible employees. The plan mapping needs to be updated to allow for snapshots to be sent to the carrier, Guardian.",
    "issue_summary": "The LTD plan mapping for Biedermann Motech was incorrect, preventing the enrollment process and communication with the carrier, Guardian. This was due to a bug in the vendor ingestion flow that missed retroactive events.",
    "rca": "There was a bug in the vendor ingestion flow, specifically in the Noyo component, which caused retroactive events to be missed. This led to the failure in updating the plan mapping for the LTD plan.",
    "steps_taken": "The issue was identified as a retroactive event that was missed by the ingestPeoGroupToVendors method. The company enrollment event was re-ingested, and the mapping issue was fixed. The amendment for the employee was generated and successfully sent to Noyo. A fix for handling such retroactive events was reviewed and set to be merged.",
    "data_models": "[CompanyEnrollmentEvent]"
  },
  "BENINTEG-4090": {
    "key": "BENINTEG-4090",
    "issue": "Collective Health rejected today's EDI file due to missing medical coverages. Normally, there are over 8,000 medical coverages, but the file only contained 893.",
    "issue_summary": "The EDI file sent to Collective Health was incomplete, missing a significant number of medical coverages, likely due to a recurring issue.",
    "rca": "The root cause of the issue was identified as a database failure handling problem, which falls under the category of special case handling.",
    "steps_taken": "Investigate the database failure handling to ensure that tomorrow's file includes all coverages. Specific steps or code snippets were not provided in the ticket.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: []"
  },
  "BENINTEG-4089": {
    "key": "BENINTEG-4089",
    "issue": "The wrong enrollment form is being mapped for an employee, Smita Arora, in the system. The form is being updated as a small group form instead of a large group form for the carrier Regance.",
    "issue_summary": "The admin reported that the enrollment form for employee Smita Arora is incorrectly updated as a small group form instead of a large group form. This issue persists despite attempts to regenerate the forms.",
    "rca": "The root cause analysis indicates that the mapping is owned by Ops, and the system is working as expected. The issue was due to a wrong expectation rather than a system error.",
    "steps_taken": "The forms mapping request was raised, and attempts were made to regenerate the forms. Eventually, it was confirmed that the form was getting mapped correctly, and the Jira ticket was closed.",
    "data_models": "[]"
  },
  "BENINTEG-4088": {
    "key": "BENINTEG-4088",
    "issue": "The broker reported that the UI in the 'Carrier transmission' tab does not show the 'Live' status for their Principal connection, making it unclear if the connection is active. Additionally, there is a request to remove the yellow banner warning about forms if the connection is live.",
    "issue_summary": "The 'Carrier transmission' tab does not display the 'Live' status for the Principal connection, causing confusion for the broker. This issue is related to the special case handling of NFP status conversion.",
    "rca": "The issue was caused by a special case handling for NFP status conversion. The group was converted from Waveling + NFP to NFP + Waveling, which led to the absence of certain objects that are usually created during the 'Setup carrier connections' flow. This absence resulted in the 'Live' status not being displayed and the yellow banner remaining.",
    "steps_taken": "The required models were created using a webscript to resolve the issue. The following code snippet was used to create the necessary objects:\n\n```python\nncc = NoyoCompanyCarrier.objects.get(id=\"604a6f2fe845e8486493a5e7\")\ncompany_insurance_info = CompanyInsuranceInfo.objects(company=ncc.company).first()\nBaseCompanyCarrierTransmission.objects.get_or_create(\n    company=ncc.company,\n    vendor=\"NOYO\",\n    carrier=ncc.carrier,\n    status=\"LIVE\",\n    finalizedOn=pst_today(),\n    referenceDate=pst_today(),\n    liveOn=pst_today(),\n)\nreturn\n```\n\nAfter executing the script, the yellow banner disappeared.",
    "data_models": "[NoyoCompanyCarrier, CompanyInsuranceInfo, BaseCompanyCarrierTransmission]"
  },
  "BENINTEG-4085": {
    "key": "BENINTEG-4085",
    "issue": "Employee Steven George and his dependents were incorrectly sent as separate COBRA subscribers on the EDI file instead of Steven being the subscriber and his dependents being listed under him.",
    "issue_summary": "The EDI file incorrectly listed dependents as separate COBRA subscribers due to a mapping error, causing incorrect data transmission to the carrier.",
    "rca": "Incorrect mapping changes were published on February 29th, which caused dependents to be sent as COBRA subscribers instead of being listed under the primary subscriber. This was due to changes made for a previous ticket (BENINTEG-3786).",
    "steps_taken": "The incorrect mapping was identified and reverted. A separate fix was planned, and measures were taken to prevent future occurrences by locking the mapping and requiring review before publishing changes. The issue was confirmed resolved after reviewing the subsequent week's file.",
    "data_models": "[]"
  },
  "BENINTEG-4084": {
    "key": "BENINTEG-4084",
    "issue": "Terminated employees were appearing on Kaiser's error report due to duplicate records in the EDI file, as they were still being included in the weekly file a month after termination.",
    "issue_summary": "Terminated employees were still appearing in the EDI file a month later due to a configuration change that allowed retroactive terminations up to 60 days as part of incident mitigation.",
    "rca": "The system was working as expected due to a temporary configuration change that allowed retroactive terminations up to 60 days. This was a one-time activity for incident mitigation and should not affect future files.",
    "steps_taken": "The issue was identified as a result of a one-time configuration change for incident mitigation. It was confirmed that the terminations were not on the subsequent week's file, and the ticket was closed.",
    "data_models": "[]"
  },
  "BENINTEG-4083": {
    "key": "BENINTEG-4083",
    "issue": "Client is moving from Prime to USP and needs the Prime production file to be offboarded.",
    "issue_summary": "The client, The Redford Center, is transitioning from Prime to USP. The Prime file is currently in production and needs to be offboarded before onboarding new information.",
    "rca": "The issue was categorized under 'In-House' with the specific task of offboarding the group.",
    "steps_taken": "The group was offboarded as per the client's request, and the ticket was closed.",
    "data_models": "[]"
  },
  "BENINTEG-4080": {
    "key": "BENINTEG-4080",
    "issue": "Shannon Alexander's insurance coverage was not terminated as expected after her employment ended, and no termination email was sent to the carrier, unlike other employees.",
    "issue_summary": "Shannon Alexander's insurance coverage was not terminated on 7/1/24 as expected, and no termination email was sent to the carrier due to a missing member in Noyo.",
    "rca": "The termination event pending action was not sent due to an error in the Noyo member request. This prevented the communication of the termination to the carrier, as prior finalized event communications were not completed.",
    "steps_taken": "The issue was investigated using the employee debugger. It was found that the termination event was not sent due to an error in the Noyo member request. The member issue was fixed, allowing the snapshot to be accepted. The ticket was then closed as no further action was needed from engineering.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-4077": {
    "key": "BENINTEG-4077",
    "issue": "COBRA dependent not pulling the Sub group id and Class (REF*DX and REF*ZZ) for Atlantic Coast Mortgage, LLC, preventing production approval.",
    "issue_summary": "COBRA dependent data for Subgroup and Class (REF*DX and REF*ZZ) was not being ingested correctly for the carrier Cigna FACET, affecting the dependent Rosa Lynn Meza.",
    "rca": "Dependent only COBRA class code and subgroup ingestion was not happening due to a bug in the account structure/carrier classification ingestion process for Cigna.",
    "steps_taken": "The bug in the account structure/carrier classification ingestion for dependent only COBRA was identified and fixed. The fix was deployed and validated on a test file. A new ingestion file was generated and sent to the carrier.",
    "data_models": "[]"
  },
  "BENINTEG-4076": {
    "key": "BENINTEG-4076",
    "issue": "The file sent over an incorrect plan code for three weekly file runs, reverting to a previous 2024 enrollment plan code for an employee, before correcting itself on the 02/11/2025 file.",
    "issue_summary": "The issue involved the file transmission sending an incorrect plan code for an employee's enrollment, reverting to a previous year's plan code due to unmarked pending actions during renewal handling.",
    "rca": "During the renewal handling of pending actions, the old pending actions were not marked as done, leading to the incorrect plan code being sent. The renewal implementation was picked up later, and by that time, these pending actions were generated, causing the issue.",
    "steps_taken": "To resolve the issue, all pending actions attached to open enrollment events were deleted. Additional changes were pushed to ensure no pending actions unrelated to the current year coverage were merged into the file. The snapshot was refreshed, and old pending actions were already merged in previous files, which corrected the issue.",
    "data_models": "[PendingAction, PendingActionGroup, EnrollmentEvent]"
  },
  "BENINTEG-4075": {
    "key": "BENINTEG-4075",
    "issue": "The production file for Maxwell Financial Labs, Inc. was not delivered to Cigna on 02/11 as expected, causing concerns about the file transmission process.",
    "issue_summary": "The production file for Maxwell Financial Labs, Inc. was not received by Cigna on 02/11, despite logs indicating successful delivery via Stedi.",
    "rca": "The root cause analysis revealed that the file was indeed delivered to the SFTP server as per the logs, indicating that the system was working as expected. The issue seemed to be on Cigna's end, as they initially reported not receiving the file.",
    "steps_taken": "The team verified the logs and confirmed that the file was delivered successfully. They communicated with the Stedi team, who also confirmed the successful delivery. Cigna later confirmed that they received and loaded the file automatically on 02/18, resolving the issue.",
    "data_models": "[]"
  },
  "BENINTEG-4073": {
    "key": "BENINTEG-4073",
    "issue": "The admin needs signed forms for the employee for Aetna, but Rippling is not generating these forms as expected. Additionally, the COBRA Open Enrollment is invalidated, and no forms are generated for Aetna.",
    "issue_summary": "The admin is unable to obtain signed forms for Aetna as Rippling is not managing forms for the group, and the COBRA Open Enrollment is invalidated, leading to no forms being generated.",
    "rca": "The root cause of the issue is that Rippling is not managing forms for the group, which is why the signed forms are not being sent to the carrier. Additionally, the COBRA Open Enrollment Subscriber Line Infos (SLIs) are invalidated by COBRA Cancellation, meaning no forms are needed for coverage effective 01/01/2025.",
    "steps_taken": "It was clarified that Rippling is not managing forms for this group, which is why forms are not being generated. The COBRA Cancellation forms are generated as expected, and it was advised to download them and not send any invalidated coverage forms to the carrier. It was also suggested to request a form from the customer and get it mapped, as this is not an engineering task.",
    "data_models": "[]"
  },
  "BENINTEG-4069": {
    "key": "BENINTEG-4069",
    "issue": "The issue faced was related to mapping errors when trying to send test snapshots for employees through Noyo for the Anthem group. The errors indicated that there was no matching Noyo plan mapping information for the Rippling plans, causing a blockage in sending the snapshots.",
    "issue_summary": "Mapping issues with Noyo for Anthem group in Colorado Autism Consultants, causing errors in sending test snapshots due to missing Noyo plan mapping information.",
    "rca": "The root cause of the issue was related to missing or incorrect classification values in the Noyo plan mappings, which led to the inability to find matching Noyo plan mapping information for the Rippling plans.",
    "steps_taken": "The steps taken to resolve the issue included identifying that there were open pending Noyo tasks related to carrier classifications not being mapped, which caused the problem. The tasks were cleared, and the correct classification values were assigned to the Noyo plans, allowing the snapshots to go through successfully.",
    "data_models": "[InsuranceCompanyPlanInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-4068": {
    "key": "BENINTEG-4068",
    "issue": "Admin is unable to set carrier connections as the system does not move to the next page when 'next' is clicked, causing a blockage in the carrier transmission setup process.",
    "issue_summary": "Admin is unable to proceed with setting carrier connections due to the system being stuck on the current page. The issue is caused by old transmission entries not being deleted, which blocks the process.",
    "rca": "The root cause of the issue was identified as old transmission entries from previous setups with other vendors like NOYO, VERICRED, and EBN still existing in the system, even though those integrations were offboarded. These old entries were blocking the new setup process.",
    "steps_taken": "The issue was resolved by identifying and deleting the old transmission events from the backend. Once these were removed, the admin was able to proceed with setting the carrier connections successfully.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-4067": {
    "key": "BENINTEG-4067",
    "issue": "Superdigital's PEO connections were not routed to Noyo automatically, causing a delay in processing PEO connections.",
    "issue_summary": "Superdigital's PEO connections were not automatically routed to Noyo due to the group not going through PEO ingestion, which was expected to happen automatically.",
    "rca": "The issue was categorized as a bug fix related to special case handling. The PEO group was supposed to be auto-ingested by a certain date, but it did not happen. The tentativeEffectiveDate was set to 2025-01-01, and according to the code logic, it should have been auto-ingested by 01/30/2025. However, there were no logs available to determine why the auto-ingestion did not occur. The lack of logs made it difficult to pinpoint the exact cause of the issue.",
    "steps_taken": "The PEO group was manually ingested to resolve the immediate issue. A pull request was raised to add additional logging for future RCA. The code snippet provided shows the logic for daily cron events fetch and the conditions checked for ingesting PEO company events. The code checks various conditions such as whether the event is a PEO event, if the company is active, and if the event status is not 'INIT' or 'STARTED'.",
    "data_models": "[CompanyEnrollmentEvent]"
  },
  "BENINTEG-4066": {
    "key": "BENINTEG-4066",
    "issue": "Employee Taylor Oesterle is not able to send medical enrollment due to an error related to Noyo plan mapping.",
    "issue_summary": "Employee Taylor Oesterle is facing an issue with medical enrollment because the system is unable to find a matching Noyo plan mapping for the Anthem Platinum PPO 500/10%/2500 Rx Copay plan. This issue is unique to this employee.",
    "rca": "The root cause of the issue was an incorrect plan mapping in the Noyo system where a discontinued plan was mapped, causing the error.",
    "steps_taken": "The issue was resolved by deleting the incorrect mapping of the discontinued plan in the Noyo system. This action unblocked the transaction and allowed the employee's amendment tab to open.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-4065": {
    "key": "BENINTEG-4065",
    "issue": "The issue faced was that the effective dates for employees in the EDI file for UHC were not reflecting the updated dates from an offline change. Instead, the file showed the previous effective dates, causing discrepancies in the data being sent to the carrier.",
    "issue_summary": "The effective dates for employees in the EDI file for UHC were not updated as expected after an offline change, showing previous data instead.",
    "rca": "The root cause was identified as a misunderstanding of how offline changes were processed. The offline change updated the expiration date of the previous coverage but did not mark it as inactive, resulting in two continuous coverages with the same plan. This led to the EDI file reflecting the earlier effective date.",
    "steps_taken": "To resolve the issue, it was suggested to either mark the previous SubscriberLineInfo (SLI) as invalid or delete the offline change SLI and update the effective date of the transfer event SLI. Additionally, effective date overrides were added for the affected employees to reflect the offline change effective date.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-4064": {
    "key": "BENINTEG-4064",
    "issue": "Termed EE Gustavo Saravia's Blue Shield (CA) Termination Form was not sent due to the reason: UNSUBMITTED_PRIOR_FORMS.",
    "issue_summary": "The termination form for Gustavo Saravia was not sent because prior open enrollment forms were not submitted, as the communication method is EBN and OPEN_ENROLLMENT events are not supported with EBN.",
    "rca": "The root cause of the issue was that prior forms were unsubmitted because the communication method used was EBN, which does not support OPEN_ENROLLMENT events.",
    "steps_taken": "The process performAction was manually triggered from the backend by ignoring the UNSUBMITTED_PRIOR_FORMS checks, and the termination form was sent as expected.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-4062": {
    "key": "BENINTEG-4062",
    "issue": "Blocked transaction for Chronicle Labs, Inc EE Mihir Wadekar due to an error related to classifications for Anthem enrollments.",
    "issue_summary": "The transaction for Chronicle Labs, Inc was blocked due to an error in plan mapping for Anthem enrollments, where a discontinued plan was incorrectly mapped.",
    "rca": "The root cause of the issue was a manual data entry error where a discontinued plan was mapped to Noyo plans, causing the transaction to be blocked.",
    "steps_taken": "The issue was resolved by deleting the discontinued plan mapping, which unblocked the transaction and allowed the employee amendment tab to open.",
    "data_models": "[]"
  },
  "BENINTEG-4060": {
    "key": "BENINTEG-4060",
    "issue": "Open Enrollment (OE) transaction for employee Katie Reyes was blocked due to an error referencing an expired plan.",
    "issue_summary": "The OE transaction for employee Katie Reyes was blocked because of an error related to a plan that expired in 2024. The error was due to incorrect mapping of old plans.",
    "rca": "The root cause of the issue was a manual data entry error where old plans were incorrectly mapped, leading to a blocked transaction during open enrollment.",
    "steps_taken": "The issue auto-resolved after the incorrect mapping of old plans was identified and corrected. The transaction was verified in Noyo, and it was confirmed that there were no more blocked transactions.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-4058": {
    "key": "BENINTEG-4058",
    "issue": "Carrier data is not populating in snapshot payloads being sent to Noyo for LogicManager, Inc. Only demographic information is appearing, affecting multiple employees and blocking the implementation of their BCBS MA EDI feed.",
    "issue_summary": "Carrier data is missing in Noyo snapshot payloads due to the exclusion of BOR SLIs (Transfer SLIs) in the payload generation logic, affecting multiple employees and blocking EDI feed implementation.",
    "rca": "The root cause of the issue was identified as the exclusion of BOR SLIs (Transfer SLIs) in the NoyoMemberSnapshotPayloadGenerator class. The filter applied in the code was not considering SLIs with the enrollment event reason as BOR, which led to the absence of carrier data in the snapshot payloads.",
    "steps_taken": "A code review identified that the filter in the NoyoMemberSnapshotPayloadGenerator class was excluding BOR SLIs. A PR was raised to modify the logic to include these SLIs. The migration ticket BENINTEG-4176 was created, and the PR was deployed, which resolved the issue by ensuring that amendments now have coverage even if created through a transfer event.",
    "data_models": "[SubscriberLineInfo, InsuranceCompanyPlanInfo, SkippedSLIRecord]"
  },
  "BENINTEG-4057": {
    "key": "BENINTEG-4057",
    "issue": "Guardian_US_Open Enrollment Add .pdf is not being pulled when regenerating, the incorrect form is stuck.",
    "issue_summary": "The Guardian_US_Open Enrollment Add .pdf form is not being correctly regenerated, resulting in the wrong form being stuck and not replaced with the correct one.",
    "rca": "The root cause of the issue was identified as a problem with the form name, which prevented the correct form from being pulled and used.",
    "steps_taken": "The issue was resolved by fixing the form name, ensuring that the correct form is now being pulled and used.",
    "data_models": "[]"
  },
  "BENINTEG-4050": {
    "key": "BENINTEG-4050",
    "issue": "The election amount for the Voluntary Life coverage is incorrectly appearing as zero despite any amount chosen by the employees during the enrollment period.",
    "issue_summary": "The Voluntary Life coverage election amount is incorrectly appearing as zero on forms due to incorrect field mapping in the Equitable form.",
    "rca": "The Equitable form's field mapping was incorrectly referenced, which resulted in the election amount for Voluntary Life coverage appearing as zero. The field was mapped to the wrong data element, specifically pointing to the voluntary LongTermDisability amount instead of the correct Voluntary Life AD&D amount.",
    "steps_taken": "The engineering team identified that the form field was incorrectly mapped to the 'EmployeeVolLTDPlan_Amount' field. The correct field 'EmployeeBundledOptionalLifeADDPlan_Amount' was identified and updated in the form mappings. The forms were regenerated, and the Voluntary Life AD&D amount was corrected to show the expected value of 70,000.",
    "data_models": "[PendingAction, FormGenerationContextBuilder, SubscriberLineInfo]"
  },
  "BENINTEG-4048": {
    "key": "BENINTEG-4048",
    "issue": "Termination was sent to OneKonnect for an employee, Dario Pordominsky, who wasn't actually terminating.",
    "issue_summary": "A termination date of 12/31/2024 was sent to OneKonnect for Dario Pordominsky's MetLife coverages, even though he wasn't terminating. The system was behaving as expected, but there was a misunderstanding with OneKonnect's dataset.",
    "rca": "The termination date issue in EBN was already fixed. The problem was due to OneKonnect considering the current snapshot as the source of truth, which led to the misunderstanding.",
    "steps_taken": "Confirmed with OneKonnect that the termination date was sent in the 12/09 dataset. Verified that the last file sent to EBN on 02/12 did not include termination for 2025 coverages. The issue was resolved as there were no more discrepancies found.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-4046": {
    "key": "BENINTEG-4046",
    "issue": "In Rippling, multiple states selected for the carrier UHC are preventing all plans from being offered to flow on the dataset to OneKonnect, blocking plan mapping.",
    "issue_summary": "The issue arises because different carrier objects exist in the system for different states, but OneKonnect (EBN) creates connections based on the carrier name, leading to a blockage in plan mapping.",
    "rca": "Different carrier objects in the system for different states, but EBN creates connections with respect to the carrier name, causing a mismatch and preventing the correct mapping of plans.",
    "steps_taken": "A fix was being pushed as part of a related ticket (BENINTEG-2903). Once the pull request (https://github.com/Rippling/rippling-main/pull/307850) was deployed, it was enabled for the company, allowing testing to proceed.",
    "data_models": "[BaseCarrier, InsurancePlan]"
  },
  "BENINTEG-4045": {
    "key": "BENINTEG-4045",
    "issue": "Carrier APEX is seeing termination dates being presented on the file that are before the member's effective date, causing the carrier to be unable to process the data.",
    "issue_summary": "Carrier APEX received files with termination dates before the effective dates for members, which is not acceptable for processing.",
    "rca": "The issue is no longer observed in the data, indicating that it might have been resolved or was transient.",
    "steps_taken": "The issue was monitored and checked against the latest data files. It was confirmed that the issue is no longer present.",
    "data_models": "[]"
  },
  "BENINTEG-4044": {
    "key": "BENINTEG-4044",
    "issue": "Several clients' 11/30 PEO cancellation events were not processed correctly, leading to Aetna cancellations not being transmitted to the carrier during the Ideon to Noyo transition. This resulted in employees being denied care under their new policies as the PEO coverage was still active.",
    "issue_summary": "The issue was caused by a bug in Noyo's system during the transition from Ideon, which prevented the transmission of Aetna cancellations for groups with 11/30 PEO cancellation events.",
    "rca": "The root cause was identified as a bug on Noyo's end while executing terminations for Aetna. Specifically, waived SLIs were not created for employees, causing their coverage to remain active. This was compounded by the transition from Ideon to Noyo, where the Ideon coverage period expired before the group cancellation date, and the transition to Noyo was not completed.",
    "steps_taken": "The steps taken to resolve the issue included generating an impact report for all clients who cancelled PEO coverage effective 11/30/2024, adjusting PEO Noyo payloads to reflect the correct end date, and pushing through a bulk snapshot. Additionally, a script was used to identify employees with Group Coverage Cancellation effective 12/1, and a final report was pulled to match with Noyo's report to audit the presented data. The SQL query used was:\n\n```sql\nselect \n    c.customer_id,\n    ee.ssn,\n    c.legal_name,\n    sli.role, \n    sli.line_type,\n    (case when sli.has_waived = true then 'Waived' else cpi.company_plan_name end) as plan,\n    ca.display_name as carrier,\n    sli.effective_date,\n    sli.expiration_date\nfrom dwh.peo_customers c\n    join mongo_core.base_subscriber_line_info sli on c.customer_id = sli.company -- active plan selections\n        and sli.is_deleted = false \n        and sli.status != 'INIT'\n        and sli.expiration_date = '2024-11-30'\n    left join mongo_core.employee_information ee on sli.role = ee._id\n    left join mongo_core.base_company_plan_info cpi on sli.company_plan = cpi._id\n    left join mongo_core.base_company_carrier_line_info ccli on cpi.company_carrier_line_info = ccli._id \n    left join mongo_core.carrier ca on ccli.carrier = ca._id\nwhere c.state = 'ACTIVE'\n\norder by 1, 3\n```",
    "data_models": "[GroupCoverageCancellationEvent, BaseSubscriberLineInfo, BaseCompanyPlanInfo, BaseCompanyCarrierLineInfo, Carrier]"
  },
  "BENINTEG-4036": {
    "key": "BENINTEG-4036",
    "issue": "The plan mapping for OpenLight Photonics was incorrect, leading to a missed enrollment. The 2025 plan was incorrectly mapped to the 2024 plan in the payload, and the termination needed to be mapped to a specific Noyo ID. The 2024 plan was not being pulled into the plan mapping tool, causing delays in sending an amendment snapshot and correcting enrollments.",
    "issue_summary": "Incorrect plan mapping for OpenLight Photonics with Noyo, where the 2025 plan was mapped to the 2024 plan, causing missed enrollments. The plan mapping tool was not pulling in the 2024 plan, leading to delays in sending amendment snapshots.",
    "rca": "The plan mapper did not show discontinued plans, which was identified as a feature gap. This caused the incorrect mapping of plans and the inability to pull in the correct 2024 plan.",
    "steps_taken": "The feature gap was addressed by updating the plan mapper to include discontinued plans. This update allowed the correct plans to be pulled in, enabling the mapping and sending of amendments for the employee enrollment.",
    "data_models": "[NoyoCompanyPlanInfo]"
  },
  "BENINTEG-4023": {
    "key": "BENINTEG-4023",
    "issue": "Employee sees different effective dates for insurance coverage in Rippling (2/1/2025) versus the carrier's system (3/1/2025).",
    "issue_summary": "There is a discrepancy in the effective date of insurance coverage between Rippling and the carrier's system, with Rippling showing 2/1/2025 and the carrier showing 3/1/2025.",
    "rca": "The root cause analysis category is marked as 'No Issue', indicating that there might not be an issue on Rippling's side. The effective date discrepancy might be due to a miscommunication or error on the carrier's side.",
    "steps_taken": "The team verified that Rippling's system shows the correct effective date of 2/1/2025 for the employee's coverage. Code snippet used for verification: `from insurance.support_functions import print_coverage_for_role; role = RoleWithCompany.get_or_none(id=\"65936be109644908d89784f5\"); print_coverage_for_role(role)`. It was confirmed that the forms generated and data sent to EBN were correct. The issue was escalated to check with the carrier and vendor for further investigation.",
    "data_models": "[RoleWithCompany]"
  },
  "BENINTEG-4022": {
    "key": "BENINTEG-4022",
    "issue": "The Noyo setup task for Modern Treasury Corp. was incorrectly flagging that the 'Plan Guardian Vision (Davis Network)' was not mapped to any Noyo plans, causing the task to repeatedly reopen.",
    "issue_summary": "The task for Modern Treasury Corp. was incorrectly reopening due to a false flag that 'Plan Guardian Vision (Davis Network)' was not mapped to any Noyo plans, despite being mapped correctly.",
    "rca": "The issue was due to a bug that was already fixed, but the task was not automatically closed, leading to it reopening.",
    "steps_taken": "The engineering team checked the function `check_plan_infos_for_noyo_transaction(ccli.company)` which returned an empty list for unmapped plans, confirming the task should not reopen. The task was manually closed and monitored for 24 hours to ensure it did not reopen.",
    "data_models": "[CompanyCarrierLineInfo]"
  },
  "BENINTEG-4021": {
    "key": "BENINTEG-4021",
    "issue": "Lia Economos' enrollment task did not generate until 02/05/2025 despite her signing for benefits on 01/08/2025 for open enrollment.",
    "issue_summary": "The enrollment task for Lia Economos was delayed and did not generate until 02/05/2025, even though she signed for benefits on 01/08/2025 during open enrollment. The issue was escalated by the admin.",
    "rca": "The system was working as expected. The amendment tab was blank because Vericred already had the data, and it was in the same state as Rippling. There was no amendment created for the employee because there was no change in the data.",
    "steps_taken": "The issue was investigated by checking the carrier connection dashboard and verifying that the coverage was submitted to Vericred as expected on 01/14/2025. It was confirmed that the amendment tab was blank because Vericred already had the data. The ticket was closed as no further action was needed.",
    "data_models": "[]"
  },
  "BENINTEG-4020": {
    "key": "BENINTEG-4020",
    "issue": "The group Hively left the PEO on 12/1, but several members are still enrolled in their Guardian coverage. The termination dates for many employees were not listed in the files sent to Noyo.",
    "issue_summary": "Hively's Guardian coverage was not terminated after leaving PEO due to missing termination dates in the files sent to Noyo.",
    "rca": "The issue was caused because the GCC event, which is a special type of event, does not create waived SLIs or any SLIs. Instead, it tracks the target SLIs in the subscriberLineInfosToCancel field. The PEO setup was deleted before the coverages could be transmitted.",
    "steps_taken": "The issue was transferred to the PEO team to create the waived SLIs. It was identified that the GCC event tracks SLIs in the subscriberLineInfosToCancel field. The INTEG team was informed to leverage this for further processing. Updates were sent to NOYO to update end dates and terminate coverages. The issue was resolved for the entire group.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-4018": {
    "key": "BENINTEG-4018",
    "issue": "James Slutz's Principal COBRA enrollment task was incorrectly generated and submitted automatically via email instead of being assigned to Mohammed Faraz for a portal submission.",
    "issue_summary": "The COBRA enrollment task for James Slutz was incorrectly generated and submitted via email despite Rippling being the COBRA TPA, and it was not assigned to the correct person for portal submission.",
    "rca": "The issue was identified as a duplicate, indicating that there was no actual problem with the system but rather a misunderstanding or repeated task generation.",
    "steps_taken": "The issue was marked as a duplicate, suggesting that no further action was necessary as the task was already addressed or recognized as a non-issue.",
    "data_models": "[]"
  },
  "BENINTEG-4017": {
    "key": "BENINTEG-4017",
    "issue": "Incorrect Enrollment Task Generated for James Slutz's Principal COBRA enrollment, which was submitted automatically via email instead of being assigned to Mohammed Faraz for portal submission.",
    "issue_summary": "The COBRA enrollment task for James Slutz was incorrectly generated and submitted via email, despite Rippling being the COBRA TPA, due to a misconfiguration in the communication method set by the company admin.",
    "rca": "The task was not supposed to be generated for this case as the company admin had set up the communication method to email on 2024-05-07. This setup led to the task being auto-closed after emailing the form, which is the expected behavior according to the current system configuration.",
    "steps_taken": "The issue was investigated and it was confirmed that the system was working as expected based on the current configuration. The communication method was set to email by the company admin, and the task was auto-closed after the email was sent. It was noted that the system does not currently account for TPA scenarios, and the task should have been picked up from the email only.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-4016": {
    "key": "BENINTEG-4016",
    "issue": "The Voluntary Long Term Disability plan for Project Belle LLC is not appearing in the Noyo Plan Mapper, preventing records from being sent when running a Noyo Census.",
    "issue_summary": "The Voluntary Long Term Disability plan is missing from the Noyo Plan Mapper due to a missing GroupId for LTD coverage, causing errors in sending records.",
    "rca": "The root cause of the issue was identified as a missing GroupId for the LTD coverage in the system, which prevented the plan from appearing in the Noyo Plan Mapper.",
    "steps_taken": "The issue was resolved by adding the missing GroupId for the LTD coverage, which allowed the plan to appear in the Noyo Plan Mapper and resolved the error.",
    "data_models": "[NoyoCompanyPlanInfo]"
  },
  "BENINTEG-4005": {
    "key": "BENINTEG-4005",
    "issue": "None of the group's Guardian enrollments transmitted to Noyo as expected upon completion in Rippling. All of the enrollments show as not sent because of the error 'NOT_MANAGING_FORMS'.",
    "issue_summary": "Guardian enrollments did not transmit to Noyo due to 'NOT_MANAGING_FORMS' error, indicating a setup issue during PEO ingestion.",
    "rca": "The root cause was a setup issue during the PEO ingestion. There were two main issues: the groupId was incorrect, and employees were enrolled in different plans across groups despite having different plans for each PEO group.",
    "steps_taken": "The issue was resolved by modifying the existing InsuranceCompanyPlanInfo to correct the plan and pricing details. The incorrect plan was deleted to avoid unique key violations, and the correct plan details were saved. A script was run to re-ingest the PEO group on Noyo after the plans were fixed, ensuring all enrollments were transmitted correctly.",
    "data_models": "[InsuranceCompanyPlanInfo, CompanyEnrollmentEvent, NoyoCompanyCarrier]"
  },
  "BENINTEG-4004": {
    "key": "BENINTEG-4004",
    "issue": "EE termination forms were sent to MVP after Rippling form management was turned on, which should not have happened.",
    "issue_summary": "EE termination forms were incorrectly sent to MVP after Rippling form management was activated on October 24, 2024. The forms should not have been sent post-activation.",
    "rca": "The reason for the issue was that no communication details were found for the carrier until they were added in December, which led to the forms being sent late.",
    "steps_taken": "The issue was identified using the EE Debugger, which showed that the termination forms were sent on December 19, 2024. It was determined that communication details for the carrier were missing until December, which caused the delay in sending the forms.",
    "data_models": "[CompanyInsuranceInfo, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-4003": {
    "key": "BENINTEG-4003",
    "issue": "COBRA enrollment for two employees was not automatically sent via the Principal API to Noyo, and manual attempts to send the enrollment resulted in an error message with both employees showing as 'cancelled' in Noyo.",
    "issue_summary": "COBRA enrollment for two employees was not automatically transmitted via the Principal API to Noyo, and manual attempts resulted in errors.",
    "rca": "The issue was initially related to a 'Bill group 10001 is not valid for the group' error, but this was resolved, and COBRA is now active for the employees.",
    "steps_taken": "The issue was resolved by addressing the 'Bill group 10001 is not valid for the group' error, and COBRA enrollment was successfully activated for the employees.",
    "data_models": "[]"
  },
  "BENINTEG-4001": {
    "key": "BENINTEG-4001",
    "issue": "The Movement Strategy group is facing a CCLI error when attempting to send a snapshot to Noyo after migrating from Ideon. The group was recently authorized by the broker, but the retool to disconnect from Ideon is incomplete.",
    "issue_summary": "Movement Strategy group encounters a CCLI error when sending a snapshot to Noyo due to incomplete disconnection from Ideon, requiring plan mapping for previous year plans.",
    "rca": "The root cause of the issue is missing plan mapping for previous year plans. In Noyo, snapshots include the last 60 days of active coverages, and the older plans need to be mapped for the snapshot to be sent successfully.",
    "steps_taken": "To resolve the issue, the plan mapper in Noyo was used to include older plans by selecting the checkbox for older plans. After a few minutes, these plans appeared and were mapped according to the guidelines provided in the Noyo Plan Mapping documentation.",
    "data_models": "[InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-4000": {
    "key": "BENINTEG-4000",
    "issue": "Ops added Employee STD amount section on SunLife_US_New Hire Enrollment.pdf, but it needs to be mapped to populate the volume.",
    "issue_summary": "The Employee STD amount section was added to the SunLife_US_New Hire Enrollment.pdf form, but it was not mapped to display the elected amount of benefit for the carrier.",
    "rca": "The root cause of the issue was the addition of a new field in the form which was not initially mapped to populate the elected amount of benefit for the carrier.",
    "steps_taken": "The operations team added the Employee STD amount section to the form. Once the mapping was done, the data was auto-populated in the form fields.",
    "data_models": "[]"
  },
  "BENINTEG-3999": {
    "key": "BENINTEG-3999",
    "issue": "Files are failing at the carrier due to missing employee SSNs, causing enrollment issues.",
    "issue_summary": "Enrollment files are failing at the carrier because of missing employee SSNs, despite OneKonnect relaxing their validations.",
    "rca": "The root cause of the issue is that the carrier's system is rejecting files with missing SSNs, even though OneKonnect has relaxed their validations to allow such enrollments to pass.",
    "steps_taken": "The employee with missing SSN was skipped in the retool to prevent future failures, but a sustainable solution is needed to handle these cases.",
    "data_models": "[]"
  },
  "BENINTEG-3998": {
    "key": "BENINTEG-3998",
    "issue": "The enrollment form for an external employee, Isaiah Valdez, is incorrectly showing eligibility for the Employer Sponsored LTD plan instead of the Voluntary LTD plan, which the employee waived.",
    "issue_summary": "The enrollment form for an external employee is incorrectly populating the Employer Sponsored LTD plan instead of the Voluntary LTD plan, which the employee waived.",
    "rca": "The issue was identified as a misunderstanding or oversight, as the broker addressed the question and the form was sent off without fully reviewing it.",
    "steps_taken": "The broker addressed the question, and it was confirmed that the form showed LTD as waived. The issue was resolved without further engineering intervention.",
    "data_models": "[]"
  },
  "BENINTEG-3997": {
    "key": "BENINTEG-3997",
    "issue": "Hearts and Hands Therapy Services had incorrect plan mapping for dental plans, causing member snapshots not to be submitted properly.",
    "issue_summary": "The issue was due to incorrect Noyo plan mapping for Hearts and Hands Therapy Services, where the same classification of bill group was added across mapping, leading to improper submission of member snapshots.",
    "rca": "The root cause was that the same classification of bill group was added across the mapping, which was not valid for the group and was present in both carrier classification values for employees and in Noyo plan mapping.",
    "steps_taken": "1. Fixed company rules by adding billing group 10001 to employees' carrier_config. 2. Removed billing_group from NoyoPlan mapping. 3. Resent Noyo snapshots for the company. 4. Removed bill group from employee classification values to avoid common values across all plans. 5. Verified the correct bill group and updated the configurations accordingly.",
    "data_models": "[NoyoPlan]"
  },
  "BENINTEG-3995": {
    "key": "BENINTEG-3995",
    "issue": "Employee Candice Bautista-Biddle and her family were missing from the EDI file dated 1/29/25, leading to their cancellation in Kaiser's portal due to their policy of termination by omission.",
    "issue_summary": "Candice Bautista-Biddle was excluded from the EDI file on 1/29/25, resulting in her cancellation at Kaiser due to their termination by omission policy. The issue was caused by a failure in the premapping data generation due to a lock acquisition failure.",
    "rca": "The root cause of the issue was a failure in the premapping data generation process on 1/29/25 due to the inability to acquire a lock, which resulted in the exclusion of Candice Bautista-Biddle and other employees from the EDI file.",
    "steps_taken": "The engineering team identified the issue as a failure to acquire a lock during the premapping data generation. A fix was developed and deployed to prevent this from happening again. The team monitored subsequent files to ensure the issue was resolved.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-3993": {
    "key": "BENINTEG-3993",
    "issue": "Medical benefits for employees at Buela were not showing up in Rippling or the debugger, impacting all employees.",
    "issue_summary": "Medical benefits for Buela employees were removed from Rippling due to a failed eligibility check, as United Healthcare requires more than 51% of employees to work in California.",
    "rca": "The medical plan was removed during a daily audit because Buela did not meet United Healthcare's requirement of having more than 51% of employees in California. The system allowed the selection of United Healthcare but later removed it due to ineligibility.",
    "steps_taken": "The engineering team reinstated the medical plan by restoring deleted CompanyCarrierLineInfo and related models using the following code snippets:\n\n```python\nccli = BaseCompanyCarrierLineInfo.objects.get(id__in=[\"6758a7af8a13fe5248db7261\"])\nccli.isDeleted = False\nccli.save()\n```\n\n```python\ncee = CompanyEnrollmentEvent.get_or_none(id=\"6758a6d754cfe095a8f32177\")\nccli = BaseCompanyCarrierLineInfo.objects.get(id__in=[\"6758a7af8a13fe5248db7261\"])\ncee.companyCarrierLineInfoDetails.append(CompanyCarrierLineInfoDetail(companyCarrierLineInfo=ccli, isSelected=True))\ncee.save()\n```\n\n```python\ncpis = InsuranceCompanyPlanInfo.objects_including_deleted.filter(company=cee.company, companyCarrierLineInfo=ccli, state__ne=\"INIT\")\nfor cpi in cpis:\n  cpi.isDeleted = False\n  cpi.save()\n```\n\n```python\nees = EnrollmentEvent.objects_including_deleted.filter(companyEnrollmentEvent=cee, status__ne=\"INIT\")\nslis = SubscriberLineInfo.objects_including_deleted.filter(company=company, enrollmentEvent__in=ees)\nfor ee in ees:\n  if ee.isDeleted:\n    ee.isDeleted = False\n    ee.save()\nfor sli in slis:\n  if sli.isDeleted:\n    try: \n      sli.isDeleted = False\n      sli.save()\n    except NotUniqueError as e:\n      print(f\"Duplicate entry: {e}\")\n```\n\n```python\nfor css in ContributionSchemeSet.objects_including_deleted.filter(companyCarrierLineInfo=ccli):\n  css.isDeleted = False\n  css.save()\n  for cs in ContributionScheme.objects_including_deleted.filter(company=css.company, contributionSchemeSet=css):\n    cs.isDeleted = False\n    cs.save()\n```\n\nThe medical coverage was confirmed to be reinstated, and the issue was escalated to the BenInteg team to consider modifying the rule for United Healthcare.",
    "data_models": "[BaseCompanyCarrierLineInfo, CompanyEnrollmentEvent, InsuranceCompanyPlanInfo, SubscriberLineInfo, ContributionSchemeSet, ContributionScheme]"
  },
  "BENINTEG-3991": {
    "key": "BENINTEG-3991",
    "issue": "There is no 'Set up EDI API' button for the group 'Supplying Demand, Inc.' to initiate their feed for Unum.",
    "issue_summary": "The group 'Supplying Demand, Inc.' is unable to initiate their EDI API file feed for Unum as the 'Set up EDI API' button is missing, despite the feature being supported for the group.",
    "rca": "The root cause analysis category is 'Salesforce case closed', but no specific subcategory or detailed description is provided. It seems the issue might have been related to a closed Salesforce case, which could have affected the visibility or availability of the EDI setup option.",
    "steps_taken": "The issue was investigated by checking the CO debugger to confirm if the EDI API setup is supported for the group, which it is. A Log Rocket session was used to reproduce the issue, and screenshots were taken during a spoof session. A comment later indicated that EDI is already enabled, suggesting the issue might have been resolved or was a misunderstanding.",
    "data_models": "No specific data models were mentioned in the ticket or comments."
  },
  "BENINTEG-3990": {
    "key": "BENINTEG-3990",
    "issue": "The issue involves two blocked transactions for the group Postscript related to the Hospital Indemnity line of coverage. The error message indicates a problem with the mapping for a domestic partner, which is not supported by Noyo.",
    "issue_summary": "The blocked transactions for the group Postscript are due to the Hospital Indemnity line of coverage not having a plan mapping for domestic partners in Noyo, causing an error.",
    "rca": "The root cause of the issue is a feature gap in Noyo, where the system does not support the mapping for domestic partners. The error message indicates that there is no matching Noyo plan mapping information for the domestic partner member type.",
    "steps_taken": "The steps taken to resolve the issue included querying the Noyo plan maps to verify the absence of a domestic partner mapping. It was suggested to add the domestic partner to the Noyo member type for the relevant Noyo plan. Additionally, it was recommended to ask Noyo to sync and update the eligibility for domestic partners, or for the broker/admin to work with the carrier to update it.",
    "data_models": "[PendingAction, NoyoCompanyPlanInfo]"
  },
  "BENINTEG-3989": {
    "key": "BENINTEG-3989",
    "issue": "The Guardian Noyo group for ClassDojo is facing escalated issues due to blocked transactions on Guardian related to their Dental Buy up plan, causing disruptions in processing employee benefits.",
    "issue_summary": "The issue is due to blocked transactions on Guardian for the Dental Buy up plan, caused by missing benefit_class_identifier in the carrier configuration for employees, leading to incorrect plan mapping.",
    "rca": "The root cause of the issue was identified as a wrong carrier connection rule setup, specifically the absence of benefit_class_identifier in the carrier configuration classification for employees. This resulted in the inability to differentiate plan mappings based on benefit_class_identifier, as employees only had bill_group_identifier.",
    "steps_taken": "To resolve the issue, benefit class identifier rules were added to the carrier configuration. It was suggested to manually push terminations for the affected employees as they were no longer eligible for benefits. Eventually, all contractors were added to the rule mapping, which resolved the issue without needing manual intervention.",
    "data_models": "[NoyoCompanyPlanInfo]"
  },
  "BENINTEG-3988": {
    "key": "BENINTEG-3988",
    "issue": "Narinder Dhami enrolled himself and his dependents in Cigna, but the COBRA initiation form was not submitted, showing an unsubmitted form status.",
    "issue_summary": "The COBRA initiation form for Narinder Dhami was not submitted due to an 'UNSUBMITTED_PRIOR_FORMS' error, causing a delay in processing the enrollment with Cigna.",
    "rca": "The pending action for the COBRA initiation was processed late due to a missed transmission in the Stedi system, which processes weekly. The previous termination event was not processed from January 18 to February 6, leading to the unsubmitted form status.",
    "steps_taken": "The issue was identified as a missed transmission in the Stedi system. The team checked the previous termination event and found it was not processed in time. The priority of the ticket was reduced as it was not customer-blocking, and it was recommended to create another Jira ticket internally with the engineering team to address the issue.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-3987": {
    "key": "BENINTEG-3987",
    "issue": "The issue involves updating the Guardian carrier contact for COBRA emailed forms for Aisera Inc. The BenAdmin team lacks the context to locate the right contact for modifications, and the COBRA team is reassigned to handle it. There is confusion about the correct email address and whether COBRA forms are sent via email or API.",
    "issue_summary": "Aisera Inc. requested an update to the Guardian carrier contact for COBRA forms. The issue arose because the BenAdmin team did not have enough context to make the necessary modifications, and there was confusion about the correct email address and the method of sending COBRA forms (email vs. API).",
    "rca": "The root cause of the issue was a lack of clarity and communication regarding the process for updating COBRA forms and the correct contact information. Additionally, there was confusion about whether COBRA forms were being sent via email or API, as well as the correct email address to use.",
    "steps_taken": "The issue was reassigned to the COBRA team for further handling. It was confirmed that for Noyo, dual communication for COBRA events is not supported, and the correct email address was confirmed as cru@glic.com. It was also clarified that COBRA forms are not sent via email for Guardian through Noyo, and any changes should be made using the carrier transmissions tab. A separate product request ticket was suggested if the admin wants emails for COBRA.",
    "data_models": "[]"
  },
  "BENINTEG-3986": {
    "key": "BENINTEG-3986",
    "issue": "Enrollment and termination forms for COBRA were rejected by carriers due to missing information in the plan name, requiring regeneration and resubmission of forms.",
    "issue_summary": "COBRA enrollment forms were rejected by carriers because the plan names lacked necessary information. The plan names have since been updated, but the forms need to be regenerated and resent.",
    "rca": "The root cause of the issue was that the event was modified after the forms were sent, leading to missing information in the plan names on the forms.",
    "steps_taken": "The plan names were updated to include the necessary information requested by the carrier. The forms were reviewed, and the COBRA enrollment forms were regenerated and resubmitted. Dual communication was enabled, and emails were re-triggered for the given events. The event IDs for two employees were corrected and used for form regeneration.",
    "data_models": "[EnrollmentEvent]"
  },
  "BENINTEG-3983": {
    "key": "BENINTEG-3983",
    "issue": "The Guardian PEO coverage for Matthew Hoare was not sent due to a server error occurring on Noyo's side, blocking the transaction for over a month.",
    "issue_summary": "Transmission of insurance benefits for Matthew Hoare was blocked due to a server error on Noyo's side, caused by a bug in handling member snapshots with terminations.",
    "rca": "Noyo had a bug where in a very edge case scenario, a member snapshot that was replaced and had terminations would add the terminations to the new snapshot. For those added back terminations and specific coverages, they were hitting an attribute error because they expected a certain field to be present.",
    "steps_taken": "The issue was raised to Noyo, who identified and worked on fixing the bug. The transmission was successfully sent on February 12th after Noyo resolved the issue. Future cases were advised to be checked for resolution before reopening tickets.",
    "data_models": "[]"
  },
  "BENINTEG-3982": {
    "key": "BENINTEG-3982",
    "issue": "The forms for UMR (TX) were not sent, showing the reason as UNSUBMITTED_PRIOR_FORMS, preventing the employee's dependent from accessing medical care.",
    "issue_summary": "Forms for UMR (TX) were not sent due to UNSUBMITTED_PRIOR_FORMS, caused by Rippling not managing forms for the company at the time of the first QLE event.",
    "rca": "The root cause was that Rippling was not managing forms for the company at the time of the first QLE event, leading to the second QLE event showing UNSUBMITTED_PRIOR_FORMS. The forms management was retroactively changed to 12/01/2024, but the first QLE was not processed due to missing communication details until 5th February.",
    "steps_taken": "The PendingAction for the QLE was manually processed to send the form. It was confirmed that on 1/31, form sending was turned on and backdated to 12/1/2024. The issue was resolved by manually processing the PendingAction for the second QLE event.",
    "data_models": "[PendingAction, PendingActionLog]"
  },
  "BENINTEG-3981": {
    "key": "BENINTEG-3981",
    "issue": "Captiv8 group had blocked transactions due to an ended STD plan for California employees, causing errors when sending termination payloads to Noyo.",
    "issue_summary": "The issue was that the Captiv8 group had blocked transactions because an STD plan was no longer available for benefit class 0001, yet information was still being sent to Noyo for terminated employees.",
    "rca": "Past invalid SubscriberLineInfos (SLIs) were mapping to invalid Noyo plans, causing errors when processing terminated employee records.",
    "steps_taken": "The invalid SLIs for 43 employees were deleted, and the generated snapshots were checked to ensure the invalid plan was no longer present. Pending actions were set to be processed by the next day. Additional checks were made for specific employees to ensure their coverages were marked as terminated in the Noyo portal, and invalid SLIs were added to a skip list to clear the errors.",
    "data_models": "[SubscriberLineInfo, PendingActionGroup]"
  },
  "BENINTEG-3980": {
    "key": "BENINTEG-3980",
    "issue": "The API 'get_available_nge_carriers' is returning ineligible carriers during the NGE flow, leading to the selection of ineligible plans that are later marked for deletion.",
    "issue_summary": "The 'get_available_nge_carriers' API does not consider the company's setup, resulting in ineligible carriers being presented for selection during the NGE flow.",
    "rca": "The API 'get_available_nge_carriers' is not filtering carriers based on the company's setup, which causes ineligible carriers to be shown and potentially selected.",
    "steps_taken": "The request is to modify the API to ensure it only returns eligible carriers based on the company's setup, preventing the selection of ineligible plans.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3979": {
    "key": "BENINTEG-3979",
    "issue": "2023 demographic change forms were mistakenly sent to BCBS for an employee, even though BCBS is not the current carrier.",
    "issue_summary": "Demographic change forms for 2023 were incorrectly sent to a previous carrier, BCBS, for an employee, despite BCBS not being the current carrier.",
    "rca": "The forms were sent because the employee completed the task on 02/05/2025, which triggered the sending of the forms.",
    "steps_taken": "The issue was identified and linked to the task completion date by the employee, which led to the forms being sent.",
    "data_models": "[]"
  },
  "BENINTEG-3977": {
    "key": "BENINTEG-3977",
    "issue": "The group received an alert indicating that unencrypted emails containing PII were sent from Rippling to Anthem, specifically regarding insurance submission forms. The emails were expected to be secured by Paubox, but the signature indicating this was missing.",
    "issue_summary": "Unencrypted emails containing PII were sent from Rippling to Anthem without the expected Paubox security signature, raising concerns about data security.",
    "rca": "The issue was caused by the function `shouldSendFormsEmailsSecurelyToBroker` returning None, which led to emails being sent insecurely. This occurred because the company did not have a broker configured in the system, and the function checks for a broker's existence before determining email security settings. The company had a broker until 07/09/2024, but it was removed, and no valid broker was saved in the system since then.",
    "steps_taken": "The `CompanyInsuranceInfo#sendFormsEmailsSecurely` function was overridden to return True for the company, ensuring that emails are sent securely. This was verified with the following script:\n\n```python\ncii = CompanyInsuranceInfo.objects.get(company=\"62a286d0ba3f054dcba19466\")\nreturn cii.brokerInfo.shouldSendFormsEmailsSecurelyToBroker(cii)\n\n# Output\nTrue\n```\nThis change ensures that emails are now sent securely, even without a broker configured.",
    "data_models": "[CompanyInsuranceInfo, CompanyBrokerInfo]"
  },
  "BENINTEG-3976": {
    "key": "BENINTEG-3976",
    "issue": "Client set up the hospital line of coverage plan in Rippling to not allow dependents, causing employee dependents to miss coverage.",
    "issue_summary": "The hospital line of coverage plan was incorrectly set up to not allow dependents, leading to missing coverage for employee dependents.",
    "rca": "The issue was due to an incorrect setup of the plan in Rippling, where it was configured to not allow dependents, although it should have.",
    "steps_taken": "The plan was reviewed and confirmed to be eligible for domestic partners. The client was asked to confirm that everything is working on their side.",
    "data_models": "[]"
  },
  "BENINTEG-3975": {
    "key": "BENINTEG-3975",
    "issue": "Admin is unable to receive email notifications for employee enrollment even though they are added in the Employee Enrollment Notifications setting.",
    "issue_summary": "Admin is not receiving email notifications for employee enrollment due to the 'send forms after' date being set to a future date (06/02/2025) in the system settings.",
    "rca": "The system is working as expected. The setting mentions that the emails will be sent after 2025-June-2. This is why the emails are not getting sent now.",
    "steps_taken": "The issue was identified as being related to the 'send forms after' date set in the future. It was suggested to turn off the 'rippling managing forms' setting until the group is ready to start sending this to carriers, effectively ensuring emails start going out again.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [CompanyBrokerInfo]"
  },
  "BENINTEG-3974": {
    "key": "BENINTEG-3974",
    "issue": "OneSignal's API feed with Noyo Live (Guardian and Kaiser) is facing setup task errors, specifically with the mapping of the Guardian VSP Choice Vision Plan to more than one Noyo plan, which is expected due to location and member group differences.",
    "issue_summary": "Setup task errors in OneSignal's API feed with Noyo Live due to mapping issues where the Guardian VSP Choice Vision Plan is mapped to more than one Noyo plan, expected due to location and member group differences.",
    "rca": "The issue was caused by multiple mappings having the same billing_group identifier, which should only be added when they differentiate between plans. The documentation needs improvement to prevent such tickets from being created.",
    "steps_taken": "The solution involved removing the billing_group identifier when it had the same value across the mapping for the Rippling plan, as advised in the comments.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3973": {
    "key": "BENINTEG-3973",
    "issue": "2023 demographic change forms were sent to BCBS for an employee, even though BCBS is not a current carrier for the company.",
    "issue_summary": "Demographic change forms from 2023 were incorrectly sent to BCBS for an employee in 2025, despite BCBS not being the current carrier.",
    "rca": "The issue was caused by old forms being re-triggered when the regenerateFormForCompany function was executed. This led to forms being sent to a carrier that was no longer associated with the company.",
    "steps_taken": "A check was added to prevent old forms from being resent in such cases. This ensures that the regenerate company forms option will not send forms to old, disconnected carriers.",
    "data_models": "[]"
  },
  "BENINTEG-3972": {
    "key": "BENINTEG-3972",
    "issue": "The issue was a request to stop the production file transmission for a client with UHC USP based on a carrier's request.",
    "issue_summary": "The production file transmission for UHC USP needed to be halted due to a request from the carrier.",
    "rca": "The root cause was a request from the carrier to temporarily stop the production file transmission.",
    "steps_taken": "The steps taken included stopping the UHC file in production and ensuring the next send date was empty. The following code snippet was used to identify and delete relevant configurations:\n\n```python\ncompany = Company.objects.get(id=\"6581b84d7f38d5960250be9e\")\ncarrier = \"5a656599d2a5f85842cb48e0\"\n\nvendor_partner_company_qs = VendorPartnerCompany.objects.filter(company=company, partner=carrier)\nprint(\"VendorPartnerCompany: \",vendor_partner_company_qs)\n\nvendor_partner_pending_action_grouping_strategy_qs = VendorPartnerPendingActionGroupingStrategy.objects.filter(company=company, partner=carrier)\nprint(\"VendorPartnerPendingActionGroupingStrategy: \",vendor_partner_pending_action_grouping_strategy_qs)\n\nstedi_partner_benefits_grouping_config_qs = StediPartnerBenefitsGroupingConfig.objects.filter(company=company, partner=carrier)\nprint(\"StediPartnerBenefitsGroupingConfig: \",stedi_partner_benefits_grouping_config_qs)\n\nbase_vendor_partner_company_payload_data_qs = BaseVendorPartnerCompanyPayloadData.objects.filter(company=company, partner=carrier)\nprint(\"BaseVendorPartnerCompanyPayloadData: \",base_vendor_partner_company_payload_data_qs)\n\nstedi_partner_transmission_config_qs = StediPartnerTransmissionConfig.objects.filter(company=company, partner=carrier)\nprint(\"StediPartnerTransmissionConfig: \",stedi_partner_transmission_config_qs)\n\nvendor_partner_company_qs.delete()\nvendor_partner_pending_action_grouping_strategy_qs.delete()\nstedi_partner_benefits_grouping_config_qs.delete()\nbase_vendor_partner_company_payload_data_qs.delete()\nstedi_partner_transmission_config_qs.delete()\n\nreturn 1\n```",
    "data_models": "[VendorPartnerCompany, VendorPartnerPendingActionGroupingStrategy, StediPartnerBenefitsGroupingConfig, BaseVendorPartnerCompanyPayloadData, StediPartnerTransmissionConfig]"
  },
  "BENINTEG-3971": {
    "key": "BENINTEG-3971",
    "issue": "The issue was related to the impact of a previously addressed problem with EbnCustomCommunicationDetail, where connections were sent back to Ideon but were in production with OneKonnect.",
    "issue_summary": "The issue involved wrongful migration of EBN connection for Vericred, causing discrepancies in carrier communication methods for certain companies.",
    "rca": "The root cause was identified as a wrongful migration of EBN connection for Vericred, which led to incorrect communication methods being used for certain companies.",
    "steps_taken": "The steps taken included reviewing the impact list for connections, checking the EBN connection state for various companies, and creating EbnCommunicationDetail to route transmission through EBN instead of email for the affected companies.",
    "data_models": "[EbnCustomCommunicationDetail, CustomCommunicationDetail]"
  },
  "BENINTEG-3969": {
    "key": "BENINTEG-3969",
    "issue": "The Cigna connection for Last Brand, which was supposed to be handled in-house, was incorrectly sent to OneKonnect.",
    "issue_summary": "The Cigna connection for Last Brand was incorrectly routed to OneKonnect instead of being handled in-house due to a lack of specific routing rules in the system.",
    "rca": "The system was unable to determine the valid vendor for the company and carrier due to missing rules for the specific combination of Cigna, MEDICAL line-type, and no partner-platform. The system defaulted to a waterfall model for vendor selection, which led to the connection being resolved via EBN (OneKonnect).",
    "steps_taken": "The issue is being resolved by updating the routing system to ensure that the partner-platform is populated every time, preventing the default waterfall model from being used. The resolution is tracked in a separate Jira ticket: BENMKINFRA-1339.",
    "data_models": "[CompanyCarrierLineInfo]"
  },
  "BENINTEG-3968": {
    "key": "BENINTEG-3968",
    "issue": "The file generation for Platinum Technologies was failing to generate and getting stuck in fragmentation without any error message, blocking the testing of the feed.",
    "issue_summary": "The file generation for Platinum Technologies was failing due to the company being incorrectly set to use a fragmented flow, which was not suitable for them.",
    "rca": "The root cause was identified as the company being incorrectly flagged to use a fragmented flow due to its previous status as a PEO company. This was caused by an old flag that was not updated, leading to the missing guideId in the transmissionConfig.",
    "steps_taken": "The issue was resolved by removing the company from the fragmented flow flag, which was not applicable to them. Once this was corrected, the file generation proceeded successfully.",
    "data_models": "[transmissionConfig]"
  },
  "BENINTEG-3965": {
    "key": "BENINTEG-3965",
    "issue": "An employee elected coverage, but Noyo reported a plan configuration mismatch error for Zsuite Technologies.",
    "issue_summary": "An employee at Zsuite Technologies faced a plan configuration mismatch error when electing coverage, as reported by Noyo.",
    "rca": "The root cause analysis category is 'Salesforce case closed', but no specific subcategory or detailed description is provided.",
    "steps_taken": "Initial analysis showed that dependents were sent in the Noyo snapshot, but coverage was only active for the employee. Follow-up with Noyo was initiated to address the mismatch. It was later confirmed that the member and dependents are enrolled with Guardian.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3961": {
    "key": "BENINTEG-3961",
    "issue": "Dataset is blocked and not passing for Lithic's UHC connection, resulting in production file failures.",
    "issue_summary": "Dataset for Lithic's UHC connection was not passing to OneKonnect since January 21, causing production file failures. The issue was due to Rippling not managing forms during a brief period when the company transitioned from BOR to BOB.",
    "rca": "The dataset was not passing because Rippling was not managing forms during the period when the company transitioned from Broker of Record (BOR) to Bring Your Own Broker (BOB) on January 21. The broker information was updated on February 4, after which the files started being sent again.",
    "steps_taken": "Reviewed the CompanyInsuranceInfo history which showed the transition from BOR to BOB and the update of broker information. Verified that files started being sent again on February 5. Identified that the brief period of Rippling not managing forms was not reflected in the company debugger table, and a separate ticket was created to address this discrepancy.",
    "data_models": "[CompanyInsuranceInfo]"
  },
  "BENINTEG-3960": {
    "key": "BENINTEG-3960",
    "issue": "The payload for Mallory McLoughlin needs to be updated to reflect her electing vision coverage for 10/01/2024. The original open enrollment was invalidated by support, preventing the submission of an amendment to Noyo.",
    "issue_summary": "Mallory McLoughlin's vision coverage election for 10/01/2024 was not reflected in the system due to the original open enrollment being invalidated by support, requiring a payload update to submit an amendment to Noyo.",
    "rca": "The payload was updated automatically with an offline change, which led to the issue where the system did not reflect the desired coverage election.",
    "steps_taken": "The steps to resolve the issue would involve manually updating the payload to reflect the correct vision coverage election and ensuring the amendment is submitted to Noyo.",
    "data_models": "[]"
  },
  "BENINTEG-3958": {
    "key": "BENINTEG-3958",
    "issue": "COBRA dependent enrollment for Praise Orimoloye was not being sent on the EDI file to Cigna, causing issues with the dependent's COBRA coverage.",
    "issue_summary": "The COBRA enrollment for Praise Orimoloye, a dependent, was not being transmitted to Cigna due to an implementation issue, despite a previous fix being deployed.",
    "rca": "The root cause was an incorrect implementation of the dependent-only COBRA feature, which did not align with Cigna's requirements. The previous fix was not applied across all Cigna files, leading to the issue.",
    "steps_taken": "The issue was assigned to the responsible team members for resolution. The dependent-only COBRA feature rollout was set to 100%, and a snapshot reset activity was planned to fix the issue for all affected files. Communication with Cigna was maintained to ensure the correct format and values were used in the EDI files. A document was created to explain how Cigna wants dependent-only COBRA enrollments to be sent. The fix was deployed, and the ticket was closed after confirming the resolution.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-3957": {
    "key": "BENINTEG-3957",
    "issue": "All feeds to OneKonnect were cancelled, and data transmission stopped. There was uncertainty if this was due to the cancellation of the SKU for carrier connections. Additionally, there was a suspicion that an Ideon connection was also turned off.",
    "issue_summary": "Data feeds to OneKonnect were cancelled due to the cancellation of the SKU for carrier connections, affecting data transmission. An Ideon connection for UnitedHealthcare Insurance was also impacted.",
    "rca": "Connections were cancelled as a result of SKU cancellation, which led to the stopping of data transmission to OneKonnect and the closure of an Ideon connection for UnitedHealthcare Insurance.",
    "steps_taken": "The issue was confirmed by checking the transmission history, which showed that the transmission was stopped due to SKU cancellation. The Ideon connection closure was also verified through the object history links provided in the comments.",
    "data_models": "[EbnCompanyCarrier, VericredCompanyCarrier]"
  },
  "BENINTEG-3956": {
    "key": "BENINTEG-3956",
    "issue": "The employee's benefits coverage date is showing up incorrectly. According to the waiting period policy, the effective date should be the same as the start date, which is 1/1/2025. However, the system is showing the effective date as 2/1/2025.",
    "issue_summary": "The issue is that during new hire enrollment, the benefits effective date is incorrectly set to 2/1/2025 instead of the expected 1/1/2025 due to an error in the system.",
    "rca": "The root cause of the issue was identified as an incorrect coverage start date. The New Hire Enrollment (NHE) event's start date was set to 1/10/2025, which caused the effective date to be incorrectly set to 2/1/2025.",
    "steps_taken": "The coverage effective date was corrected to 1/1/2025. The change was then sent to the integration team to verify that it was propagated to the carrier. Forms were resent with the updated information.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-3952": {
    "key": "BENINTEG-3952",
    "issue": "Rippling employee Craig Williams faced issues with passive Open Enrollment (OE) process for dental line, where the dental enrollment was incorrectly auto-waived despite having a plan mapping in place.",
    "issue_summary": "The issue was that during the Open Enrollment process, the dental line for employee Craig Williams was auto-waived even though there was a plan mapping in place, which should have prevented this from happening.",
    "rca": "The root cause of the issue was identified as an auto-waived dental enrollment despite having a mapped plan in place. This was categorized under 'Forms'.",
    "steps_taken": "To resolve the issue, the following steps were taken: 1. Retrieved the SubscriberLineInfo for both New Hire and Open Enrollment events. 2. Retrieved the mapped plan using InsuranceCompanyPlanInfo. 3. Updated the Open Enrollment SubscriberLineInfo with the mapped plan and chosen dependents from the New Hire event. 4. Saved the updated SubscriberLineInfo. 5. Created and processed pending actions for the enrollment event. 6. Triggered sending of the snapshot with the dental plan to Noyo for processing. Code snippets used: ```nhe_sli = SubscriberLineInfo.get_or_none(id=\"675f3094e0e1ce8cd207119a\") oe_sli = SubscriberLineInfo.get_or_none(id=\"675d5199047d6f1f3c4a49fc\") mapped_plan = InsuranceCompanyPlanInfo.get_or_none(id=\"674b983dd44e774471b7a865\") chosenDependents = nhe_sli.chosenDependents oe_sli.companyPlan = mapped_plan oe_sli.chosenDependents = chosenDependents oe_sli.save() return oe_sli event = oe_sli.enrollmentEvent event.create_and_process_pending_actions(update_state_with_delay=False) pa = PendingActionGroup.get_or_none(event=event) return pa```",
    "data_models": "[SubscriberLineInfo, InsuranceCompanyPlanInfo, PendingActionGroup]"
  },
  "BENINTEG-3951": {
    "key": "BENINTEG-3951",
    "issue": "Outstanding Noyo Setup Tasks will not clear for Salient Motion's insurance debugger, preventing termination dates from being sent for Beam and Anthem due to a switch to PEO.",
    "issue_summary": "Noyo Setup Tasks are not clearing for Salient Motion, blocking termination dates for Beam and Anthem as the client switched to PEO.",
    "rca": "The issue is no longer relevant as the client has switched to PEO, and the feed has been ended.",
    "steps_taken": "The issue was resolved by acknowledging that the client switched to PEO, which ended the feed, making the task clearance unnecessary.",
    "data_models": "[]"
  },
  "BENINTEG-3950": {
    "key": "BENINTEG-3950",
    "issue": "Employee Elena Miranda's dependents, Diana and Joshua Tirado, are covered under the same COBRA benefits. However, in the EDI file starting 2/3/2025, Joshua is incorrectly sent as an individual subscriber instead of being listed under Elena's record.",
    "issue_summary": "In the EDI file, Joshua Tirado is incorrectly sent as an individual subscriber instead of being listed as a dependent under Elena Miranda's record, despite having the same COBRA coverages.",
    "rca": "The issue was caused by an incorrect implementation related to 'Dependent only cobra', which led to Joshua being sent separately in the EDI file.",
    "steps_taken": "The feature related to 'Dependent only cobra' was temporarily disabled for Collective Health (CH) to address the issue.",
    "data_models": "[]"
  },
  "BENINTEG-3949": {
    "key": "BENINTEG-3949",
    "issue": "Noyo group configurations not showing in plan mapper for Kajabi, specifically bill group 10 and subgroups 001 and 002 are missing.",
    "issue_summary": "Noyo group configurations for Hawaii coverage added by Noyo are not appearing in the plan mapper, preventing the selection of plans for certain configurations.",
    "rca": "The issue was due to the Kaiser HI connection not being set up yet in Noyo, which is required for the configurations to appear in the plan mapper.",
    "steps_taken": "The ticket was closed with the instruction to follow the guide for setting up the connection for Kaiser HI in Noyo.",
    "data_models": "[]"
  },
  "BENINTEG-3939": {
    "key": "BENINTEG-3939",
    "issue": "The admin is trying to set up carrier connections, but when they click on the 'Enable Carrier Connections' toggle and select 'Continue', nothing happens, preventing them from moving to the next page.",
    "issue_summary": "The 'Continue' button in the carrier connections setup is not functioning, preventing the admin from proceeding with the setup. This is due to existing transmission events from previous vendor integrations that were not properly removed.",
    "rca": "The issue was caused by existing transmission events from previous vendor integrations (NOYO, VERICRED, and EBN) that were not properly removed from the system, even though those integrations were offboarded.",
    "steps_taken": "The old transmission events were identified and deleted, which resolved the issue, allowing the admin to proceed with the carrier connections setup.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-3938": {
    "key": "BENINTEG-3938",
    "issue": "Axis Portable Air LLC's two New Hire Enrollment (NHE) debuggers do not show details of email submission for BCBS AZ, but the details are present in 'view task details'.",
    "issue_summary": "The NHE debuggers for Axis Portable Air LLC do not display email submission details for BCBS AZ, although these details are available in the 'view task details'. This discrepancy needs investigation.",
    "rca": "The forms were not showing the emails they were sent to because the broker configured the emails for BCBS on January 17, 2025, after the event was processed on January 9, 2025. The broker manually changed the state of the pending action.",
    "steps_taken": "The issue was identified as working as intended. The broker had configured the emails after the event was processed, and the state of the pending action was manually changed. The following code snippet was used to verify the communication details:\n\n```python\npa = PendingAction.objects.get(id = \"677c41226aed86a946d0c624\")\nreturn CustomCommunicationDetail.objects.filter(company=pa.company, carrier=pa.carrier)\n```\n\nThe case was marked as solved and closed.",
    "data_models": "[PendingAction, CustomCommunicationDetail]"
  },
  "BENINTEG-3937": {
    "key": "BENINTEG-3937",
    "issue": "Three companies with active employee enrollments were missing from the EDI file dated 1/29, affecting employees' insurance coverage transmission.",
    "issue_summary": "Employees from three companies with active enrollments were not included in the EDI file due to issues with snapshot generation and lock contention.",
    "rca": "The root cause was an incorrect implementation where the unique key used to take a lock before uploading the pre-mapped file was the same across different carriers of the same state. This caused lock contention issues, preventing the inclusion of some employees in the EDI file.",
    "steps_taken": "The issue was resolved by changing the unique key from using <company_id>_<carrier_name>_<reference_date> to <company_id>_<carrier_id>_<reference_date>, ensuring uniqueness across different states. The fix was deployed as part of a pull request.",
    "data_models": "[VendorPartnerCompany]"
  },
  "BENINTEG-3936": {
    "key": "BENINTEG-3936",
    "issue": "The signature URL is not being triggered for dependent cancellation events, specifically for QLE events, resulting in forms being rejected by the carrier Blue Shield (CA) due to missing employee signatures.",
    "issue_summary": "The issue is that the signature URL is not triggered for dependent cancellation events in QLE, causing forms to be rejected by the carrier due to missing signatures. This is a new requirement as signatures were never included in these events before.",
    "rca": "Signatures were never present in form fields for age out cancellation events, and this is a new requirement. The system does not currently support signatures in the generation of dependent age out forms, and this requires a product enhancement.",
    "steps_taken": "The issue was identified as a new feature request rather than a bug or regression. The engineering team checked the form generation process and confirmed that the signature URL was not associated with the SLIs. A feature request was submitted to address this requirement.",
    "data_models": "[SubscriberLineInfo, PendingAction, EnrollmentEvent]"
  },
  "BENINTEG-3935": {
    "key": "BENINTEG-3935",
    "issue": "Blocked transaction for a single employee, Mercedes Caballero, at Public Law Center due to unresolved plan mapping issues.",
    "issue_summary": "The transaction for employee Mercedes Caballero was blocked because of issues related to discontinued plan mapping with Noyo.",
    "rca": "The root cause of the issue was identified as discontinued plan mapping in the Noyo system, which led to the blockage of the transaction.",
    "steps_taken": "The solution involved removing the mapping corresponding to the discontinued plans. The following code snippet was used to identify and delete the old mappings:\n\n```python\nncpis_to_delete = [\"66ea0745876716c307ba9334\", \"6765d95539ce36747782e8a9\", \"676d8a506a24cf5f3189b189\"]\nncpis = NoyoCompanyPlanInfo.objects.filter(company_plan_info = \"666319e07d9753b93866acba\",id__in=ncpis_to_delete)\nfor ncpi in ncpis:\n  ncpi.delete()\nreturn None\n```\n\nAfter these mappings were deleted, the Pending Action processing was expected to pick up the changes and process the transaction successfully.",
    "data_models": "[NoyoCompanyPlanInfo]"
  },
  "BENINTEG-3934": {
    "key": "BENINTEG-3934",
    "issue": "The two employees who were to be enrolled with New Hire Enrollments for 12/22/2024 with YummyHair Extensions, LLC were never enrolled due to an error: 'No valid matching bill group for bill group id submitted. Line of coverage: medical'.",
    "issue_summary": "Employees Andrea Torres and Courtney Levingston were not enrolled due to an error related to an invalid bill group ID for medical coverage.",
    "rca": "The root cause was identified as a non-differentiating classification value added to plan mapping, which resulted in an invalid bill group being assigned to all employees. This bill group was not supported by Noyo.",
    "steps_taken": "The invalid bill group was removed, and the blocked transactions were successfully transmitted.",
    "data_models": "[]"
  },
  "BENINTEG-3931": {
    "key": "BENINTEG-3931",
    "issue": "An error occurred while trying to push an amendment to Noyo due to incorrect dental plan mappings for the company Foodsmart, preventing the amendment from being sent.",
    "issue_summary": "Dental plan mapping error for Foodsmart prevented Noyo amendment from being sent due to missing benefit_class_identifier for non-Texas employees.",
    "rca": "The root cause of the issue was that the employee did not have a benefit_class_identifier assigned to them. The rule to assign this identifier for non-Texas employees was not correctly set, resulting in eligible employees being empty.",
    "steps_taken": "The rule for assigning the benefit_class_identifier for non-Texas employees was corrected to resolve the issue.",
    "data_models": "[CompanyInsuranceInfo, SubscriberLineInfo]"
  },
  "BENINTEG-3929": {
    "key": "BENINTEG-3929",
    "issue": "The 'Confirm company renewal task' for the group 'Law Office of Kelly Riggs & Mansour, PLC (Disability Law Group) (289087)' with carrier BCBS MI was not generated, leading to a group-wide missed enrollment.",
    "issue_summary": "The 'Confirm company renewal task' was not created for the group 'Law Office of Kelly Riggs & Mansour, PLC (Disability Law Group) (289087)' with carrier BCBS MI, due to a manual task that was not completed.",
    "rca": "The system behaved as expected. A manual task was created but not completed, which prevented the automatic creation of the 'Confirm company renewal task'. The function 'canCreateConfirmEnrollmentTask' checks if all submission tasks are complete before creating the confirm task.",
    "steps_taken": "The issue was identified as a manual task that was not completed. It was noted that all manually created submit tasks need to be marked as done manually. The ticket was closed as the system was working as expected, and no further action was needed from engineering. It was advised to mark the submit task as done to trigger the confirm enrollment task.",
    "data_models": "[InsuranceTask]"
  },
  "BENINTEG-3927": {
    "key": "BENINTEG-3927",
    "issue": "Noyo UHC group unable to send snapshots due to an error after updating mappings for new plans from UHC.",
    "issue_summary": "The Noyo UHC group faced an issue where they were unable to send snapshots after updating mappings for new plans from UHC. The problem was due to both old and new Noyo plans being mapped to new Rippling plans.",
    "rca": "The root cause of the issue was that both old and new Noyo plans were mapped to new Rippling plans, which caused a conflict in the classification values for the same company_plan_info.",
    "steps_taken": "The issue was resolved by ensuring that classification values are only added when they differentiate between plans. The comment provided a reference to the Noyo Plan Mapping configuration assignment for guidance.",
    "data_models": "[CompanyInsuranceInfo]"
  },
  "BENINTEG-3924": {
    "key": "BENINTEG-3924",
    "issue": "The 2025 Guardian Ideon file feed for the group has expired, and the system should have triggered emailed forms. However, the in-app settings still show an active Guardian file feed, and attempts to update the submission email details result in an 'invalid vendor' message.",
    "issue_summary": "The Guardian Ideon file feed expired but the system still shows it as active, causing issues with enrollment submissions and resulting in an 'invalid vendor' error when trying to update email details.",
    "rca": "The system is expected to behave like this due to business logic/system behavior as documented. The documentation indicates that the system's behavior in this scenario is as expected.",
    "steps_taken": "The issue appears to have been resolved as indicated by the comment stating that the problem is now working and the Jira can be closed.",
    "data_models": "[]"
  },
  "BENINTEG-3923": {
    "key": "BENINTEG-3923",
    "issue": "The onboarding tool encountered an error when attempting to add Medical only plans for KMW Recruitment Consulting, Inc. due to existing Medical+Dental configuration.",
    "issue_summary": "The onboarding tool failed to add Medical only plans for KMW Recruitment Consulting, Inc. because there was already a Medical+Dental configuration present, which cannot be edited through the onboarding tool.",
    "rca": "The issue was caused by a manual data entry error where the lines were changed, leading to a conflict in the onboarding tool due to existing Medical+Dental configuration.",
    "steps_taken": "The group was off-boarded manually as the onboarding tool could not handle the existing configuration. It was advised to refer to the onboarding tool confluence for more details.",
    "data_models": "[]"
  },
  "BENINTEG-3889": {
    "key": "BENINTEG-3889",
    "issue": "The enrollment forms sent to Prudential contained incorrect address information, with some forms listing the employee's personal address and others displaying the TubeScience office address, causing potential issues with processing enrollments accurately.",
    "issue_summary": "The issue was due to discrepancies in the address information on the enrollment forms sent to Prudential, where some forms showed the employee's personal address and others showed the TubeScience office address, leading to inconsistencies.",
    "rca": "The root cause was identified as a documentation issue related to business logic/system behavior, which should have been directed to operations rather than engineering. The documentation covers this scenario.",
    "steps_taken": "The form field details were checked and confirmed to be correct, indicating a mapping issue. A form mapping request was filled, and the data elements mapped in the form were verified, specifically the EmployeeNew_AddressHome field. The data was updated to reflect the correct address, and the issue was closed from the engineering side with instructions to regenerate the form.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3888": {
    "key": "BENINTEG-3888",
    "issue": "The termination forms for an employee at East Bay Restaurant Supply, Inc. were generated and sent, but Kaiser did not receive them. The company is a BOB group, and the transmission method is email, but the email address setting is not visible in the broker's view. When proxying as the owner, the account changes, preventing access to the correct settings.",
    "issue_summary": "Termination forms for an employee were not received by Kaiser due to visibility issues with the email transmission settings in the broker's view. The settings are not visible when proxying as the owner, causing access issues.",
    "rca": "Only the enrollment manager can view the setting, which is why it was not visible when proxying as the owner.",
    "steps_taken": "The engineering team verified that the forms were sent via fax and checked the history of communication details and pending actions. It was determined that the setting is only visible to the enrollment manager, and the correct user was identified to proxy and verify the settings.",
    "data_models": "[CustomCommunicationDetail, EbnCompanyCarrier, PendingActionLog, CompanyInsuranceInfo]"
  },
  "BENINTEG-3887": {
    "key": "BENINTEG-3887",
    "issue": "Employees snapshot sent incorrect start and end dates for dental plan, causing the carrier to terminate the plan and employee was denied services.",
    "issue_summary": "Incorrect plan dates were sent on the employee snapshot for the Guardian Dental PPO Standard plan, leading to plan termination and denial of services.",
    "rca": "Old plans were getting sent due to visibility issues in the Noyo system, causing incorrect dates to be transmitted.",
    "steps_taken": "Checked the snapshot sent in December after OE and found incorrect dates. Verified another employee's snapshot which had correct dates. Checked employees Noyo Amendment displaying correct effective dates. Resent Noyo amendment, which was successfully transmitted to Noyo. Confirmed that old records are no longer appearing in the employee's Noyo Amendment.",
    "data_models": "[CompanyInsuranceInfo, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-3881": {
    "key": "BENINTEG-3881",
    "issue": "The production file feed for Vestwell with Cigna needs to be disabled, while ensuring that forms remain enabled.",
    "issue_summary": "The production file feed for Vestwell (Company ID: 61797b9d835f67f66e4229b1) with Cigna needs to be stopped due to the group being offboarded, but forms should remain enabled.",
    "rca": "The issue occurred because the group was offboarded, necessitating the stopping of the production file feed.",
    "steps_taken": "The production files were stopped by executing a script that deleted relevant entries from various data models associated with the company ID 61797b9d835f67f66e4229b1. The script iterated over models such as VendorPartnerCompany, BaseVendorPartnerGroupingConfig, StediPartnerCompanyGroupingPayloadData, StediPartnerTransmissionConfig, CustomStediCommunicationDetail, and BaseCompanyCarrierTransmission, deleting entries related to the specified company ID.",
    "data_models": "[VendorPartnerCompany, BaseVendorPartnerGroupingConfig, StediPartnerCompanyGroupingPayloadData, StediPartnerTransmissionConfig, CustomStediCommunicationDetail, BaseCompanyCarrierTransmission]"
  },
  "BENINTEG-3880": {
    "key": "BENINTEG-3880",
    "issue": "The group's Guardian benefits were not automatically ingested into the PEO after joining on 12/24.",
    "issue_summary": "The Guardian benefits for the group were not ingested into the PEO due to the deletion of the connection object caused by a churn event.",
    "rca": "The connection object for the group's Guardian benefits was deleted due to a churn event, which led to the failure in automatic ingestion into the PEO.",
    "steps_taken": "The connection was recreated for PeoGuardian, and the creation was verified by checking the NoyoCompanyCarrier object. The object history was reviewed to confirm the deletion due to a churn event.",
    "data_models": "[NoyoCompanyCarrier]"
  },
  "BENINTEG-3879": {
    "key": "BENINTEG-3879",
    "issue": "Two employees on COBRA coverage with Aetna as part of the PEO have blocked transactions returning errors.",
    "issue_summary": "Blocked transactions for two terminated employees on COBRA coverage with Aetna due to missing plan tiers.",
    "rca": "The issue was caused by a seeding problem with last year's plans, resulting in missing tiers for the company's plan 'PPO 2000/80%'. This was identified as a PEO issue.",
    "steps_taken": "The issue was resolved by seeding the correct tiers for the orphan company. Once the tiers were available, the blocked transactions were cleared.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-3872": {
    "key": "BENINTEG-3872",
    "issue": "The group left the PEO on 12/01, but none of the employees have terminated coverage with the carrier, Aetna. The termination date of 11/30/2024 was not transmitted to Aetna.",
    "issue_summary": "Employees' insurance coverage was not terminated with Aetna after the group left the PEO on 12/01, despite the termination date being set to 11/30/2024.",
    "rca": "The system was working as expected, but there was an issue with transactions having 11/30 effective dates, which was out of the engineering scope since the snapshot had the correct 11/30 end date.",
    "steps_taken": "The request to terminate coverage was sent to NOYO. It was confirmed that the snapshot had the correct 11/30 end date, and the issue was considered out of engineering scope and marked as good to close.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3871": {
    "key": "BENINTEG-3871",
    "issue": "The admin reported that the employer signature is not auto-populating on the QLE form for an employee.",
    "issue_summary": "The QLE form for an employee is not auto-populating the employer signature as expected, which was reported by the admin.",
    "rca": "The issue was identified as working as expected because the form in question was a dependent cancellation form, and employer signatures are not required to be auto-populated on such forms.",
    "steps_taken": "The team checked the form template and confirmed that the employer signature field was not marked for auto-population in the dependent cancellation form. It was verified that this behavior is as per the current system design, and no changes were needed.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3870": {
    "key": "BENINTEG-3870",
    "issue": "Blocked transmission error for 100+ employees due to inability to find a matching Noyo plan mapping information for the medical plan 'Core DO3J - Standard PPO'.",
    "issue_summary": "Transmission error occurred during Open Enrollment elections for Klover Holdings, Inc. due to missing Noyo plan mapping for the medical plan 'Core DO3J - Standard PPO'.",
    "rca": "The Noyo plan was discontinued, leading to the inability to find a matching plan mapping information for the medical plan 'Core DO3J - Standard PPO'.",
    "steps_taken": "Executed a script to delete the outdated NoyoCompanyPlanInfo entry with ID '672f2a796af4ccb8cdc4dd26'. This resolved the issue, allowing blocked transmissions to process successfully.",
    "data_models": "[NoyoCompanyPlanInfo]"
  },
  "BENINTEG-3869": {
    "key": "BENINTEG-3869",
    "issue": "VVV Ventures II LLC dba AutoRaptor submitted separate NGE applications for Dental and Vision to Guardian, causing a need to combine them into one employer application.",
    "issue_summary": "The company submitted separate NGE applications for Dental and Vision to Guardian due to a late decision to add Vision coverage, resulting in two unique employer applications.",
    "rca": "Guardian was able to process the two applications together on their end, so the issue was resolved without further action needed.",
    "steps_taken": "The issue was resolved as Guardian processed the applications together. No further steps were needed from Rippling.",
    "data_models": "[]"
  },
  "BENINTEG-3866": {
    "key": "BENINTEG-3866",
    "issue": "The end date of an employee's role was updated, causing discrepancies in their insurance coverage and COBRA enrollment.",
    "issue_summary": "The employee's role end date was updated from 2024-11-15 to 2024-12-01, which affected their insurance coverage timelines and COBRA enrollment, leading to incorrect coverage periods.",
    "rca": "The root cause was related to forms, specifically the verification of forms, which led to the incorrect insurance coverage timeline and COBRA enrollment period.",
    "steps_taken": "The steps taken included creating a 'Termination (end date correction)' event, reviewing and updating insurance timelines, invalidating incorrect COBRA coverage, extending Open Enrollment coverage, and communicating with carriers to update the insurance end date. The issue was then passed to the Marketplace - Integrations team for handling forms and carrier communication, and finally to the COBRA team for cleanup.",
    "data_models": "[EnrollmentEvent, SubscriberLineInfo]"
  },
  "BENINTEG-3865": {
    "key": "BENINTEG-3865",
    "issue": "The issue was that four clients had canceled their renewal for the upcoming 02/01/2025 plan year, and the automated scheduled production files for these clients needed to be stopped before the next scheduled file run.",
    "issue_summary": "Four clients canceled their renewal for the 02/01/2025 plan year, requiring the cessation of automated scheduled production files for these clients before the next scheduled file run.",
    "rca": "The root cause was identified as the need to stop the automated scheduled production files for clients who had canceled their renewal. A webscript was run to address this issue.",
    "steps_taken": "A script was executed to delete specific objects related to the companies and carriers involved. The script iterated over the companies, filtered out specific configurations, payload data, transmission configurations, communication details, and carrier transmissions, and deleted them. The script ensured that only the objects for the mentioned company and carrier pair were deleted. The script was executed for all the companies one by one, checking if there were other carriers as well.",
    "data_models": "[USBenefitsCarrier, VendorPartnerCompany, BaseVendorPartnerGroupingConfig, StediPartnerCompanyGroupingPayloadData, StediPartnerTransmissionConfig, CustomStediCommunicationDetail, BaseCompanyCarrierTransmission]"
  },
  "BENINTEG-3864": {
    "key": "BENINTEG-3864",
    "issue": "The end date of the role 672bfda4aa699fa5f89c7a9e was updated from 2024-12-31 to 2025-01-15, requiring verification and updates to insurance timelines and carrier forms.",
    "issue_summary": "The end date of an employee's role was updated, necessitating the creation of a 'Termination (end date correction)' event and verification of insurance timelines and carrier form submissions.",
    "rca": "Forms were sent to the carrier, but there was a need to ensure that the 'Termination (end date correction)' event was created and communicated correctly to update the insurance timelines.",
    "steps_taken": "1. Verified that the 'Termination (end date correction)' event was created with a 2/1 effective date. 2. Refreshed QLE OE Medical and Dental SLI effective/expiration dates to correct the timeline. 3. Moved the ticket to the marketplace team's board to verify if forms were sent correctly and update end dates with carriers. 4. Confirmed that the termination correction event was communicated to the carrier.",
    "data_models": "[EnrollmentEvent, SubscriberLineInfo]"
  },
  "BENINTEG-3863": {
    "key": "BENINTEG-3863",
    "issue": "Regence (OR) forms are not generating for employee Suvarna Anderson despite the forms existing in Box and being copied over via the forms copier.",
    "issue_summary": "The issue is that Regence (OR) QLE forms are not generating for the employee Suvarna Anderson. The top-level reason is that there was no change in the employee's plan, dependents, or coverage status from the previous enrollment period, which is why the forms were not generated.",
    "rca": "The root cause of the issue is that the system is working as expected. The logic in the code checks if the current plan is the same as the previous year's plan, and if there are no changes in dependents or coverage, forms are not generated. In this case, the employee's plan did not change, and there were no changes in dependents or coverage, so the forms were not generated.",
    "steps_taken": "The engineering team reviewed the logic in the code and confirmed that the behavior is expected. They checked the PendingAction and SubscriberLineInfo to verify that there were no changes in the employee's plan or dependents. The team communicated that the forms are not generated if there are no changes in the plan, dependents, or coverage.",
    "data_models": "[PendingAction, SubscriberLineInfo]"
  },
  "BENINTEG-3862": {
    "key": "BENINTEG-3862",
    "issue": "Forms were being sent for an employee's insurance enrollment even though the EDI feed was live and successfully transmitting data to the carrier Anthem.",
    "issue_summary": "Forms were sent for an employee's insurance enrollment despite having an active EDI feed with Anthem. This occurred because the enrollment event was finalized after the expiration of the corresponding CCLI, triggering dual communication.",
    "rca": "The root cause of the issue was that the enrollment event for the employee was finalized after the expiration date of the corresponding CompanyCarrierLineInfo (CCLI). The system has a logic where if the coverage period is expired, dual communication is triggered, which includes sending forms.",
    "steps_taken": "The issue was identified as a one-off case where the enrollment event was finalized after the CCLI expiration, leading to forms being sent. It was confirmed that this behavior is expected as per the system's logic for expired coverage periods. No further action was needed as it was not a recurring issue.",
    "data_models": "[PendingAction, CustomCommunicationDetail, VericredCompanyCarrier, CompanyCarrierLineInfo]"
  },
  "BENINTEG-3860": {
    "key": "BENINTEG-3860",
    "issue": "Noyo requested a modified payload for an employee's new hire event as the member was not enrolled correctly.",
    "issue_summary": "Noyo requested a modified payload for an employee's new hire event from 7/1/2024 because the member was not enrolled correctly. The transaction was sent in a format that was being deprecated.",
    "rca": "The transaction was sent in a format that was in the process of being deprecated at the time (member request > snapshot). The snapshot did not contain the new hire enrollment information.",
    "steps_taken": "A new script was used to generate and send the correct member snapshot payload. The script involved creating a new class `NoyoMemberSnapshotController2` to generate the member snapshot payload string and `NoyoMemberSnapshotPayloadGenerator2` to fetch the CCLIs. The snapshot was then sent with the new hire event, and confirmation was requested to close the ticket.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, Subscriber, PendingAction, NoyoGroupId]"
  },
  "BENINTEG-3852": {
    "key": "BENINTEG-3852",
    "issue": "Tractian changed their termination date from 1/30 to 2/28, and amendments need to be sent out on time.",
    "issue_summary": "Tractian's termination date was updated from 1/30 to 2/28, requiring timely amendments to be sent out.",
    "rca": "The issue was related to documentation and tooling usage, as Retool already exists for handling such amendments.",
    "steps_taken": "The issue was resolved by utilizing Retool, which was already provided to operations by Divyank. The ticket was then closed.",
    "data_models": "[]"
  },
  "BENINTEG-3851": {
    "key": "BENINTEG-3851",
    "issue": "Issue being faced in ticket",
    "issue_summary": "The ticket is a test ticket with no specific issue described.",
    "rca": "The root cause analysis category is marked as 'Deferred', but no specific reason or description is provided.",
    "steps_taken": "No steps were taken as this is a test ticket with no issue described.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: []"
  },
  "BENINTEG-3850": {
    "key": "BENINTEG-3850",
    "issue": "Enrollment and termination forms for 24M Technologies were rejected by carriers due to missing information in the plan name, causing delays in processing terminations.",
    "issue_summary": "The issue involved rejected enrollment and termination forms due to missing plan name information, requiring resubmission to carriers.",
    "rca": "The root cause was identified as missing information in the plan names, which was required by the carriers for processing the forms. The plan names needed to be updated to include specific codes that identified which plan was which, as requested by the carrier.",
    "steps_taken": "The plan names were updated to include the necessary information requested by the carrier. The termination forms were then regenerated and resubmitted to the carriers. A script was used to identify the impacted termination events, and the forms were resent for the specified employees.",
    "data_models": "[TerminationEvent]"
  },
  "BENINTEG-3849": {
    "key": "BENINTEG-3849",
    "issue": "Unable to update the email for Aetna carrier on the backend using the EBN tool.",
    "issue_summary": "The email for the Aetna carrier needed to be updated from EnrollmentSGSE@AETNA.com to Snelgrovea@aetna.com, but the EBN tool failed to perform the update.",
    "rca": "The issue was categorized as a bug fix under special case handling, specifically related to updating communications.",
    "steps_taken": "The engineering team made the flow self-serve, allowing the admin to proxy and change it from the carrier transmissions tab. However, an error occurred when attempting to update the email from the carrier transmission tab. Eventually, a custom email communication detail was created with the new email, and the change was made from the backend.",
    "data_models": "[CustomCommunicationDetail, CustomVericredCommunicationDetail, CustomVericredCommunicationWithCustomEmailDetail]"
  },
  "BENINTEG-3847": {
    "key": "BENINTEG-3847",
    "issue": "The form for an employee's dependent (child) was not sent to the carrier for the Cigna Medical plan coverage effective 01/01/25 - 12/31/25, even after the 'Regenerate Group Forms' button was clicked.",
    "issue_summary": "The QLE (OE) form for the employee's dependent was not generated or sent to the carrier due to the system not recognizing the need to send forms for this specific QLE (OE) event.",
    "rca": "The system did not generate or send the forms because the QLE (OE) event was treated the same as a regular QLE event, and no changes were detected that would trigger form generation. Additionally, the system logic dictates that forms are only sent if the QLE (OE) is finalized after the company's event deadline, which was not the case here.",
    "steps_taken": "The engineering team executed a script to manually perform the pending action and regenerate the forms. The script included checking the pending action state and forcing the regeneration of forms. The forms were then sent to the carrier.",
    "data_models": "[PendingAction, EnrollmentEvent, PendingActionGroup]"
  },
  "BENINTEG-3846": {
    "key": "BENINTEG-3846",
    "issue": "The team is facing an error when trying to finalize the Noyo Carrier Connection for Kaiser using the retool for Caylent, Inc.",
    "issue_summary": "The error occurs during the finalization of the Noyo Carrier Connection for Kaiser, possibly due to incorrect usage of the retool or unnecessary finalization step.",
    "rca": "The root cause was identified as using the incorrect retool during the process, which led to the error.",
    "steps_taken": "The team was advised to pass the 'noyo company carrier object ID' instead of 'CompanyID' in the retool. They were also directed to use a specific retool to fetch the correct 'noyoCompanyCarrierID'.",
    "data_models": "[NoyoCompanyCarrier]"
  },
  "BENINTEG-3844": {
    "key": "BENINTEG-3844",
    "issue": "Personify Inc faced an error while attempting to run a test file for Dental and Vision benefits in the testing environment. The error was related to a missing required property in the transaction settings.",
    "issue_summary": "Personify Inc encountered a validation error due to missing 'reference_identification_02' property while testing Dental and Vision benefits transmission using Stedi.",
    "rca": "The root cause of the issue was identified as invalidated coverages for employees, leading to inconsistencies in their dental and vision coverage. This resulted in incorrect or missing SubscriberLineInfo (SLIs) which caused the plan mapping to fail.",
    "steps_taken": "The issue was investigated by checking the inconsistencies in the dental and vision coverage for employees. A fix was pushed for a similar issue, and after deployment, a test file was successfully generated, resolving the problem.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-3843": {
    "key": "BENINTEG-3843",
    "issue": "There are 28 Ideon enrollment audits blocked by error messages indicating that the plan_id is required for accident coverage, but it is not being pulled into the amendment payload.",
    "issue_summary": "The Ideon enrollment audits are failing due to missing plan_id for accident coverage in the amendment payload, despite the plan ID being present in other areas of Rippling.",
    "rca": "The issue was related to visibility in Vericred, and it appears to be working fine now.",
    "steps_taken": "The troubleshooting steps included attempting to submit the Vericred amendment and ensuring the accident vendor plan ID is present within Rippling and Ideon. A comment indicates that the plan ID for accident is now visible in Vericred Amendment, and retrying the audit items was successful.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: []"
  },
  "BENINTEG-3842": {
    "key": "BENINTEG-3842",
    "issue": "The employee's TX Dental PPO 1000 plan was incorrectly mapped to a different plan ID in the Noyo API Connector, causing discrepancies in the plan ID shown in the most recent snapshot.",
    "issue_summary": "The TX Dental PPO 1000 plan for an employee was incorrectly mapped to a different plan ID in the Noyo API Connector, leading to a mismatch in the plan ID.",
    "rca": "The root cause of the issue was incorrect plan mapping where the Rippling plan was incorrectly mapped to a Noyo Plan.",
    "steps_taken": "The mapping was corrected by updating the Noyo plan ID from '1f634c00-0458-48f3-b8ad-c2ca62ec8713' to '5cc91037-bbdd-4a05-8ced-6014230ddaaf'.\n\n```json\n[\n\t{\n\t\t\"id\": \"67150d67425316f1a34ca2eb\",\n\t\t\"companyEntityRelationshipId\": \"None\",\n\t\t\"isDeleted\": \"False\",\n\t\t\"createdAt\": \"2024-10-20 14:02:15.965000+00:00\",\n\t\t\"updatedAt\": \"2025-02-13 10:18:39.789000+00:00\",\n\t\t\"lock\": \"None\",\n\t\t\"external_on_changes\": \"\",\n\t\t\"company\": \"caleb@cubbybeds.com\",\n\t\t\"company_plan_info\": \"TX  Dental PPO 1000\",\n\t\t\"noyo_group_id\": \"3475d0a9-ada9-4a5b-98fc-439ecb520272\",\n\t\t\"noyo_plan_id\": \"5cc91037-bbdd-4a05-8ced-6014230ddaaf\",\n\t\t\"noyo_eligible_member_types\": \"all\",\n\t\t\"noyo_line_type\": \"dental\",\n\t\t\"eligible_classification_values\": \"\",\n\t\t\"eligible_carrier_classifications\": \"\"\n\t}\n]\n```",
    "data_models": "[InsuranceCompanyPlanInfo]"
  },
  "BENINTEG-3841": {
    "key": "BENINTEG-3841",
    "issue": "The group ReUp Education, Inc. is experiencing a problem where the 2024 effective date is being incorrectly used in the Cigna system for the 01/01 year plan, despite the last offschedule file having the correct date.",
    "issue_summary": "The Cigna system is using an outdated 2024 effective date for ReUp Education, Inc.'s 01/01 year plan, causing subsequent files to be selected with the old effective date.",
    "rca": "The issue is related to an open Salesforce case (02721829) which is causing the current case to be closed as a duplicate.",
    "steps_taken": "The case was identified as a duplicate of an existing open Salesforce case (02721829), and therefore, no further action was taken on this ticket.",
    "data_models": "[]"
  },
  "BENINTEG-3836": {
    "key": "BENINTEG-3836",
    "issue": "The team needed to generate a report for BCBS IL COBRA enrollees similar to a previous report for another carrier, with a deadline for submission by the next day.",
    "issue_summary": "A report for BCBS IL COBRA enrollees was requested, similar to a previous report, due to a process gap impacting COBRA billing. The report needed to be generated and submitted by the next day.",
    "rca": "The issue was related to report generation for BCBS IL COBRA enrollees due to a process gap in the COBRA billing section. The report needed to filter out BOB groups and focus on BCBS IL as the carrier.",
    "steps_taken": "The team reused and modified an existing query to generate the report for BCBS IL. The script was executed to filter COBRA events and generate a CSV report, which included checking for BOB groups and ensuring the correct carrier was selected. The report was then shared via a Google Sheets link.",
    "data_models": "[USBenefitsCarrier, EnrollmentEvent, PendingActionGroup, PendingAction, CompanyInsuranceInfo, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-3835": {
    "key": "BENINTEG-3835",
    "issue": "The weekly production files for ReUpEducation are capturing older effective dates (11/01/2024) instead of the correct dates (01/01/2025), leading to missed enrollment for Daniel Espinoza.",
    "issue_summary": "The issue is that the production files are capturing incorrect older effective dates, causing missed enrollment for Daniel Espinoza due to a Retool glitch.",
    "rca": "The root cause of the issue was identified as a Retool glitch where the enrollment was not captured correctly on the file, leading to the incorrect effective dates being used.",
    "steps_taken": "To resolve the issue, a fresh production file was generated without relying on the last snapshot and pending actions. This fresh file was intended to become the new base snapshot. It was confirmed that generating a subsequent production file would accurately capture the correct dates.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [PendingActionGroup, PendingAction]"
  },
  "BENINTEG-3834": {
    "key": "BENINTEG-3834",
    "issue": "The admin reported canceling the QLE for Latori, but the system still generated the forms despite the rejection.",
    "issue_summary": "The system generated QLE forms for Latori Ebony Collins even though the QLE was canceled by the admin, due to a bug in the autoWaiveQLEs method.",
    "rca": "The issue was caused by a bug in the autoWaiveQLEs method, which is responsible for creating waived SLIs for QLEs opened via role transition that are still in INIT by the time they reach their deadline. The method did not check if a QLE was rejected before waiving, leading to the generation of forms despite the rejection.",
    "steps_taken": "The QLE was deleted to correct the employee's coverage in Rippling. The shouldAutoWaive method was updated to ignore QLEs with ApprovalStatus == rejected. The dental QLEs were deleted via the EE debugger, and the effective/expiration dates for the employee's previous OE event were refreshed to reinstate her previous dental coverage. A Vericred amendment was sent to reinstate the dental coverage.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-3833": {
    "key": "BENINTEG-3833",
    "issue": "Dependents and spouse of Jeremy Raines were being passed under the spouse's SSN instead of the employee's SSN in the EDI file for Stylitics, Inc. with Cigna.",
    "issue_summary": "Dependents and spouse of Jeremy Raines were incorrectly being passed under the spouse's SSN instead of the employee's SSN in the EDI file for Stylitics, Inc. with Cigna. This was initially thought to be a dependent-only COBRA case, but it was later clarified that the spouse should not be elevated as a subscriber.",
    "rca": "The issue was initially thought to be a dependent-only COBRA case, which was expected behavior. However, it was later clarified that the spouse should not be elevated as a subscriber because there was no QLE of divorce, and the dependents should be listed under the employee's SSN.",
    "steps_taken": "The issue was reviewed, and it was confirmed that the spouse should not be elevated as a subscriber. The related Jira ticket BENINTEG-4203 was identified, and a fix was scheduled to be deployed to resolve the issue.",
    "data_models": "[]"
  },
  "BENINTEG-3832": {
    "key": "BENINTEG-3832",
    "issue": "Cigna reported that special characters in the 834 file fields cause the file to fail. Specifically, a hyphen in names and other fields led to a failure for the group Stylitics, Inc.",
    "issue_summary": "Special characters, such as hyphens, in certain fields of the 834 file caused failures when processed by Cigna, affecting groups like Stylitics, Inc.",
    "rca": "The issue was caused by the presence of special characters, specifically hyphens, in fields such as Last Name, First Name, Middle Name, Telephone Number, Address lines, City, and Zip in the 834 file, which Cigna could not process.",
    "steps_taken": "The logic was updated to remove special characters from the specified fields in the 834 file to ensure successful processing by Cigna.",
    "data_models": "[]"
  },
  "BENINTEG-3831": {
    "key": "BENINTEG-3831",
    "issue": "Several Confirm Enrollment tasks were observed to open on the task dashboard after a gap of approximately 30 days from their form generation date, with around 550 tasks opening on 12/30 and 12/31.",
    "issue_summary": "Confirm Enrollment tasks were delayed by about 30 days from their form generation date due to errors in processing pending actions, such as missing group IDs or members not having Vericred IDs.",
    "rca": "The pending actions were not processed due to errors like missing group IDs or members not having Vericred IDs. Once these errors were fixed, the pending actions were processed, and the Confirm Enrollment tasks were created. The tasks were delayed because the pending actions went from PROCESSED to PENDING after a month due to these issues.",
    "steps_taken": "Analyzed the pending actions and identified errors such as missing group IDs and members not having Vericred IDs. Once these errors were fixed, the pending actions were processed, and the Confirm Enrollment tasks were created. Checked the PA log history to confirm the pattern and ensure there was no bug.",
    "data_models": "[PendingAction, PendingActionLog]"
  },
  "BENINTEG-3830": {
    "key": "BENINTEG-3830",
    "issue": "Blocked transaction for an employee, Pierre Tettart, who moved to France. Need to send terminations for this employee but the salary is in Euros, causing the transaction to not pass.",
    "issue_summary": "The issue involves a blocked transaction for an employee who moved to France, with the salary in Euros causing termination transactions to fail. This is due to a feature gap in handling international employee moves.",
    "rca": "When an employee moves to a different country, the current code does not handle the change in currency, leading to blocked transactions. This is identified as a product gap in the Noyo integration.",
    "steps_taken": "A manual snapshot was sent to Noyo to end the coverage for the employee, resolving the immediate issue.",
    "data_models": "[]"
  },
  "BENINTEG-3829": {
    "key": "BENINTEG-3829",
    "issue": "Atlas Technica is experiencing persistent mapping errors with their Kaiser connection, specifically related to the Noyo plan mapping for the 'Dental Buyup 2024-25' plan. Despite completing the setup and mappings, they encounter an error indicating the inability to find a matching Noyo plan mapping information.",
    "issue_summary": "Atlas Technica is facing issues with Noyo plan mapping for the 'Dental Buyup 2024-25' plan, resulting in errors due to missing or incorrect mapping configurations.",
    "rca": "The root cause of the issue was identified as a Noyo plan mapping configuration problem. Specifically, the error was due to the absence of a valid Noyo company plan info because the carrier classifications were edited, and the '0000' group was removed, which was necessary for the mapping.",
    "steps_taken": "The engineering team reviewed the Noyo Mapper and proxy mappings. They identified that the carrier classifications were edited, removing the '0000' group, which was necessary for the mapping. After addressing this issue, the mapping was corrected, and the error was resolved.",
    "data_models": "[NoyoCompanyPlanInfo]"
  },
  "BENINTEG-3828": {
    "key": "BENINTEG-3828",
    "issue": "OneKonnect is receiving benefit termination date as the day before the benefit effective date for a member with invalidated coverage, preventing them from submitting the BCBS production file.",
    "issue_summary": "OneKonnect was unable to submit the BCBS production file due to receiving incorrect benefit termination dates for members with invalidated coverage.",
    "rca": "There was a new expectation from the carrier that when sending invalidated coverage, the effectiveDate should be equal to the expirationDate. This expectation was not initially met, causing the issue.",
    "steps_taken": "The issue was fixed by ensuring that when sending invalidated coverage, the effectiveDate is set to be equal to the expirationDate. This was verified in a subsequent run, and the ticket was closed after confirming the fix.",
    "data_models": "[]"
  },
  "BENINTEG-3827": {
    "key": "BENINTEG-3827",
    "issue": "OneKonnect is receiving benefit termination date as the day before the benefit effective date for a member with invalidated coverage, preventing them from submitting a test file to the carrier.",
    "issue_summary": "OneKonnect was receiving incorrect benefit termination dates for members with invalidated coverage, due to a new expectation from the carrier that required effectiveDate to be equal to expirationDate for invalidated coverage.",
    "rca": "There was a new expectation from the carrier that when sending invalidated coverage, the effectiveDate should be equal to the expirationDate. This expectation was not initially met, causing the issue.",
    "steps_taken": "The feature to set effectiveDate equal to expirationDate for invalidated coverage was enabled for all groups. The fix was verified on the data and confirmed to be working, as evidenced by a screenshot attached to the ticket.",
    "data_models": "[]"
  },
  "BENINTEG-3826": {
    "key": "BENINTEG-3826",
    "issue": "Noyo group unable to send snapshots for Klover Holdings, causing disruptions in transmitting insurance benefits.",
    "issue_summary": "The Noyo group for Klover Holdings was unable to send snapshots due to a discontinued plan at Noyo, which led to the removal of the associated ncpi object.",
    "rca": "One of the plans at Noyo was discontinued, which resulted in the removal of the associated NoyoCompanyPlanInfo (ncpi) object, causing the inability to send snapshots.",
    "steps_taken": "The issue was resolved by ensuring that the discontinued plan's ncpi object was properly handled. The feature flag for multiple classification was checked using the following code snippet: `LaunchDarklyConfig.is_feature_enabled(InsuranceFeatureFlags.BENEFITS_INTEGRATION_USE_NOYO_MULTIPLE_CLASSIFICATION.value, company)`. The histories of the relevant NoyoCompanyPlanInfo objects were reviewed to ensure proper configuration.",
    "data_models": "[NoyoCompanyPlanInfo]"
  },
  "BENINTEG-3823": {
    "key": "BENINTEG-3823",
    "issue": "The termination date for COBRA coverage for an employee, Christina Crespo, was incorrectly set to 12/30/24 instead of the expected 12/31/24. This discrepancy was causing issues with the file feed and forms being generated with the wrong termination date.",
    "issue_summary": "The COBRA termination date for Christina Crespo was incorrectly set to 12/30/24 instead of 12/31/24 due to a Rippling error, causing misalignment in file feeds and forms.",
    "rca": "The root cause of the issue was identified as a change in the end date within the SubscriberLineInfo (SLI) due to a tooling error in the Noyo integration.",
    "steps_taken": "The coverage end dates were communicated to Noyo, and new forms were regenerated. The issue was escalated due to extraordinary circumstances, and the termination date was corrected to 12/31/24. A new snapshot was pushed through, resolving the issue.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-3822": {
    "key": "BENINTEG-3822",
    "issue": "The Employee Enrollment notification email did not contain the demographic change forms for the employee, as expected by the broker.",
    "issue_summary": "The Employee Enrollment notification email was missing the demographic change forms due to the 'shouldSendForms' property being set to False for the Open Enrollment event, which is why the forms were not sent to the broker.",
    "rca": "The root cause of the issue was identified as the 'shouldSendForms' property being set to False for the Open Enrollment event in the code. This setting prevented the forms from being attached to the email sent to the broker. Additionally, the SubscriberLineInfo (SLI) associated with the pending actions was marked as invalid due to an update in the employee's start date, which led to the creation of a StartDateCorrectionEvent. This invalidated the SLIs from the first New Hire Event with the old start date.",
    "steps_taken": "The team investigated the code logic and identified that the 'shouldSendForms' property was set to False for the Open Enrollment event, which prevented the forms from being sent. They also discovered that the SLI was marked invalid due to a change in the employee's start date, which is expected behavior. The issue was transferred to the BenAdmin Employee team to investigate further, and it was confirmed that the email to the broker is sent even when forms are not managed by Rippling.",
    "data_models": "[SubscriberLineInfo, PendingAction]"
  },
  "BENINTEG-3821": {
    "key": "BENINTEG-3821",
    "issue": "EE update to date salaries are not being transmitted on the file feed. The salary redetermination was set to at renewal and salary details that were completed in March 2024 were not submitted for the 04/01/2024 coverage.",
    "issue_summary": "Employee salary updates were not being transmitted correctly due to incorrect salary redetermination settings, affecting the salary details submitted for coverage.",
    "rca": "The root cause was identified as a dependency issue due to incorrect implementation, where the salary redetermination was set to 'at renewal' instead of 'monthly', causing outdated salary information to be transmitted.",
    "steps_taken": "The redetermination schedule was updated to monthly as of 01/23/2025. A script was run to update the subscriber salary for the company: `company = Company.get_or_none(id='5ff61ec6ec470b00b9efc58c') return subscriberSalaryUpdateForCompany.delay(company, pst_today(), True)`. Another script was used to push all subscriber data to Vericred: `company = Company.get_or_none(id='5ff61ec6ec470b00b9efc58c') vcc = VericredCompanyCarrier.objects.filter(company=company).first() return push_all_subscriber_data_to_vericred(vcc)`. The salary updates were verified and confirmed to be submitted correctly.",
    "data_models": "[SubscriberLineInfo, Company, VericredCompanyCarrier]"
  },
  "BENINTEG-3820": {
    "key": "BENINTEG-3820",
    "issue": "Argus Labs left the PEO in December, but their group benefits were canceled and not terminated, causing employees' benefits to remain active with carriers.",
    "issue_summary": "Argus Labs' group benefits were not properly terminated after leaving the PEO, resulting in active coverage for employees that should have been canceled.",
    "rca": "The issue was caused by the asynchronous nature of the cancellation process. The expiration date of the CCLI was updated before the GCC was created, invalidating the SLIs before the GCC could cancel them. This led to the GCC creation flow skipping the current line type as it assumed there were no valid SLIs present.",
    "steps_taken": "To resolve the issue, the following steps were taken: 1) Temporarily revive the SLI models to recreate GCC models for impacted employees. 2) Use a script to create GCC models and verify them. 3) Re-finalize all GCCs to properly create pending actions. 4) Ensure forms were sent to carriers to confirm terminations. 5) Monitor the processing state at NOYO and confirm terminations.",
    "data_models": "[CompanyEnrollmentEvent, CompanyInsuranceInfo, GroupCoverageCancellationEvent, SubscriberLineInfo]"
  },
  "BENINTEG-3818": {
    "key": "BENINTEG-3818",
    "issue": "The issue faced was that the Open Enrollment (OE) elections for an employee, Ethan Huang, were being blocked due to a BT error message indicating conflicting data. The error was caused because the COBRA end dates were not sent in the payload while trying to enroll in OE benefits, leading to multiple coverages existing for the same time period for the same line of coverage, plan, and individual.",
    "issue_summary": "The OE elections for Ethan Huang were blocked due to a BT error caused by missing COBRA end dates in the payload, resulting in conflicting data for multiple coverages for the same period.",
    "rca": "The root cause of the issue was identified as a bug in the Noyo integration where the COBRA termination date was not updated, leading to conflicting data for multiple coverages for the same time period.",
    "steps_taken": "The steps taken to resolve the issue included reviewing the employee's event timeline and Noyo payload. The COBRA enrollment end date was updated to 1/31/2024 to allow active enrollments in the current plan year. A snapshot was sent with the correct coverages, and the issue was verified and closed after confirming the snapshot in Noyo CC.",
    "data_models": "[SubscriberLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3817": {
    "key": "BENINTEG-3817",
    "issue": "There are 17 blocked Noyo transactions with the carrier Principal due to an error indicating that the Noyo plan mapping information could not be found for the Principal Short-Term Disability Plan.",
    "issue_summary": "Blocked Noyo transactions with Principal due to missing plan mapping information for the Principal Short-Term Disability Plan, despite the plan being mapped correctly in the Noyo Plan Mapper.",
    "rca": "The root cause was identified as a missing selection of a checkbox for older plan mappings, which was necessary to retrieve the older plan mapping information.",
    "steps_taken": "The issue was resolved by selecting the checkbox for older mappings, which allowed the older plan mappings to be retrieved. After this, the transactions were retried successfully.",
    "data_models": "[NoyoCompanyPlanInfo]"
  },
  "BENINTEG-3816": {
    "key": "BENINTEG-3816",
    "issue": "The issue involves an ineligible employee, Junki Sato, whose salary currency is not USD, and who has moved into a contracting role, making them ineligible for benefits. Despite this, their benefits transaction was being sent to Noyo, which should not happen.",
    "issue_summary": "An ineligible employee's benefits transaction was mistakenly being sent to Noyo due to their salary currency not being USD and their transition to a contracting role, which makes them ineligible for benefits.",
    "rca": "The root cause of the issue is an operational oversight where the system attempted to send a benefits transaction for an employee who is no longer eligible for benefits due to their change in employment status and salary currency not being USD.",
    "steps_taken": "The transaction was confirmed to be unnecessary and was archived directly from the BT dashboard without engineering involvement. This was done by using the Archive button next to the Retry button on the BT dashboard.",
    "data_models": "[]"
  },
  "BENINTEG-3815": {
    "key": "BENINTEG-3815",
    "issue": "Admin is unable to see the confirm submission banner in the Open Enrollment (OE) tab, despite receiving an email to confirm the submission for changes made.",
    "issue_summary": "The confirm submission button is not present in the OE tab for the admin, which is expected to be visible for confirming changes.",
    "rca": "The issue was categorized under 'Bug Fix' with a subcategory of 'Working as expected', indicating that the system was functioning as designed, and there was no actual bug causing the issue.",
    "steps_taken": "The issue was monitored through comments, and it was eventually resolved without any specific steps mentioned. The final comment indicated that the issue could be closed, suggesting it was either resolved or deemed not an issue.",
    "data_models": "[]"
  },
  "BENINTEG-3814": {
    "key": "BENINTEG-3814",
    "issue": "The group made changes in the classifications for several employees to transition from the Whinestone entity to the Riot entity. However, the file feed did not transmit these changes, and any manual changes were reverted. The connection with OK was being established, causing Ideon data to be invisible in EE debuggers or Ideon retool, preventing amendments from being pushed.",
    "issue_summary": "Changes in employee classifications from Whinestone to Riot entity were not transmitted via the file feed, and manual changes were reverted. The connection with OK caused Ideon data to be invisible, preventing amendments.",
    "rca": "The issue was working as expected under the EBN category. The carrier classification of type subgroup was configured correctly, and the correct subgroup 'Riot' was being sent to EBN for all mentioned employees.",
    "steps_taken": "The group's OneKonnect feed went live, resolving the issue, and the ticket was closed.",
    "data_models": "[CompanyInsuranceInfo, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-3813": {
    "key": "BENINTEG-3813",
    "issue": "There are 66 blocked Noyo transactions with the carrier Beam due to an error message indicating that the Noyo plan mapping information is missing for the Rippling plan: Beam Dental PPO (Base), line type: dental.",
    "issue_summary": "Blocked Noyo transactions with Beam due to missing Noyo plan mapping information for the Beam Dental PPO (Base) plan.",
    "rca": "The root cause of the issue was that the check mark for 'Include Older Plans' was not selected in the Noyo plan mapping, which is necessary for older plans.",
    "steps_taken": "The troubleshooting steps included ensuring the customer carrier object was enabled for the Noyo API and confirming the plan was mapped correctly in the Noyo plan mapper. The resolution involved selecting the 'Include Older Plans' checkbox in the Noyo plan mapping, which allowed the plan info to appear and the transactions to proceed.",
    "data_models": "[NoyoCompanyPlanInfo]"
  },
  "BENINTEG-3812": {
    "key": "BENINTEG-3812",
    "issue": "The member's insurance enrollment payload is not being processed correctly with Noyo because the 'latest change date' does not reflect the accurate start date of coverage, causing issues with processing medical, dental, and vision enrollments.",
    "issue_summary": "The 'latest change date' in the member's payload is incorrect, preventing proper processing of insurance enrollments with Noyo.",
    "rca": "A bug on Noyo's side required a manual snapshot with the corrected date to be sent. The 'latest change effective date' was not aligning with the benefit start date due to a feature gap in Noyo's processing logic.",
    "steps_taken": "A manual snapshot was submitted with the 'latest_change_effective_date' set to 01/01/2025 for all coverages and enrolled members. The code logic was reviewed, and it was confirmed that the 'latest_change_effective_date' should match the benefit start date. Communication with Noyo confirmed the need for this adjustment.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-3807": {
    "key": "BENINTEG-3807",
    "issue": "StickerYou requires an urgent Aetna PEO connection via Noyo due to an executive-level escalation.",
    "issue_summary": "StickerYou urgently needed an Aetna PEO connection through Noyo due to an executive escalation, and the Benefits Integrations team was tasked with establishing this connection.",
    "rca": "The issue was categorized as 'No Issue' with a note on urgent group ingestion. The RCA was reopened to confirm that the setup was working properly.",
    "steps_taken": "The Benefits Integrations team established the Aetna PEO connection for StickerYou. Verification was done by checking the creation of NoyoCompanyCarrier. Further confirmation was provided that future enrollments would be properly sent to the carrier, and snapshots for new events were received by Noyo after the initial setup.",
    "data_models": "[NoyoCompanyCarrier]"
  },
  "BENINTEG-3804": {
    "key": "BENINTEG-3804",
    "issue": "Customer is trying to change the email addresses for Cigna while the file feed is being set up, but there is no Edit option available.",
    "issue_summary": "The customer is unable to edit the 'Email forms to' email addresses for Cigna carrier transmissions during the file feed setup process.",
    "rca": "The issue is related to the Noyo tooling, where the system does not provide an option to edit the email addresses for carrier transmissions during the file feed setup.",
    "steps_taken": "The engineering team suggested that the admin (Amanda) can be added to these emails by including themselves in the Employee Enrollment notification. It was also advised to check the view carriers to confirm the supported email. The default email to be used was provided, and the EE/admin was instructed to get added in the Benefits Admin > Settings > Employee Enrollment Notification.",
    "data_models": "No specific data models were mentioned in the ticket."
  },
  "BENINTEG-3802": {
    "key": "BENINTEG-3802",
    "issue": "Employee Mark Fayngersh enrolled as a new hire, but the enrollment was marked as 'invalidated' in the Vericred payload, causing issues with the transmission to Ideon.",
    "issue_summary": "The enrollment for employee Mark Fayngersh was marked as 'invalidated' in the Vericred payload due to a setup issue involving duplicate profiles, leading to transmission issues with Ideon.",
    "rca": "The root cause was identified as a setup issue where the employee had two profiles in the system, leading to two enrollments with different effective dates. One profile was terminated as 'never hired', causing a termination marked as 'never effective', while the other was enrolled. This discrepancy caused the invalidation in the Vericred payload.",
    "steps_taken": "An amendment was pushed to override the 'invalidated' status, changing it to 'pending'. It was discovered that both profiles pointed to the same member on Vericred, causing the issue. The BENINTEG team should have been informed to take action after terminating one of the roles.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-3801": {
    "key": "BENINTEG-3801",
    "issue": "New Aetna PEO groups, specifically StickerYou Inc., are not being routed to Noyo automatically, causing a missing connection.",
    "issue_summary": "New Aetna PEO groups are not being automatically routed to Noyo due to incorrect retro setup by the PEO team, affecting StickerYou Inc.",
    "rca": "The root cause was an incorrect retro setup by the PEO team, done 3 months in the past, where only 30 days retro is supported. The group was manually set up and the company enrollment event was moved to SETUP_DONE immediately, preventing the ETA from picking it up.",
    "steps_taken": "The issue was identified by reviewing the logic in the code responsible for ingesting groups on vendors. The recurring job that ingests active soon PEO CEEs in STARTED/INIT state did not pick up the group due to its manual and retroactive setup.",
    "data_models": "[CompanyEnrollmentEvent]"
  },
  "BENINTEG-3800": {
    "key": "BENINTEG-3800",
    "issue": "Group has blocked transactions due to an eligible class (0001) for the STD plan. The group initially enrolled the CA employee at OE, but then later dropped the STD enrollment. However, the system is still trying to send information on the STD on the employees' termination payload to Noyo, causing errors.",
    "issue_summary": "Blocked transactions for terminated employees due to an ended STD plan. The system is attempting to send information for a plan that is no longer available for the benefit class 0001, resulting in errors.",
    "rca": "The issue was caused by a special case handling bug where the system was not correctly identifying and removing the prior/waived STD plan from the payload being sent to Noyo for terminated employees. This was due to incorrect handling of carrier classifications as detailed in the linked documentation.",
    "steps_taken": "Reviewed employee payload and events timeline. The issue was unblocked for specific employees by removing the prior/waived STD plan from the payload. Further investigation and documentation were referenced to understand the root cause related to carrier classifications.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-3798": {
    "key": "BENINTEG-3798",
    "issue": "COBRA enrollment for dependent Christine Wexler was not being sent on the EDI file for Cigna.",
    "issue_summary": "The COBRA enrollment for Christine Wexler, a dependent of terminated employee Joshua Wexler, was not being transmitted to Cigna due to a feature flag issue and special case handling not being enabled.",
    "rca": "The root cause was identified as a feature flag not being enabled for dependent-only COBRA enrollments, which led to the enrollment data not being included in the EDI file.",
    "steps_taken": "The team investigated the issue and found that the employee census generated empty employeebenefit data. The defaultdict key as tuple was not supported, leading to parsing failures. The feature flag for dependent-only COBRA was enabled for the company, and a script was run to reset the snapshot for the company. A code fix was implemented to include dependents-only COBRA, and a pull request was created and deployed. After deployment, the file was rerun, and Christine Wexler was successfully included.",
    "data_models": "[Company, StediRequestMetaData]"
  },
  "BENINTEG-3797": {
    "key": "BENINTEG-3797",
    "issue": "Five Noyo PeoGuardian transactions are blocked for Trayt Health due to an invalid benefit class identifier for the vision coverage line.",
    "issue_summary": "Transactions for Trayt Health are blocked because the benefit class 0067 is not valid for the group, requiring ENG intervention to unblock.",
    "rca": "The issue was caused by a discrepancy in the PeoRenewalTracker, which had a CORE tier assigned while the client was actually on a Premium tier. This mismatch led to the use of default benefit class identifiers instead of the premium ones.",
    "steps_taken": "The PeoRenewalTracker was modified to reflect the Premium tier, resolving the discrepancy. The transactions were then retried and successfully processed.",
    "data_models": "[BaseCompanyCarrierLineInfo, PeoQuotingTier, PeoRenewalTracker]"
  },
  "BENINTEG-3795": {
    "key": "BENINTEG-3795",
    "issue": "An employee is enrolled in the BlueFit - High Deductible HSA plan in Rippling, but Noyo is showing the plan as Preferred Blue PPO $1000 [HomeTap].",
    "issue_summary": "The employee's insurance plan is incorrectly displayed in Noyo as Preferred Blue PPO $1000 [HomeTap] instead of BlueFit - High Deductible HSA.",
    "rca": "No issue was found in the Noyo system regarding the visibility of the plan.",
    "steps_taken": "The coverage for 'Preferred Blue PPO $1000 [HomeTap]' was invalidated, and a new Noyo snapshot was sent with the correct plan 'BlueFit - High Deductible HSA'. This snapshot is currently under processing by Noyo.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3793": {
    "key": "BENINTEG-3793",
    "issue": "The COBRA enrollment snapshots for Andreana Lee are blocked due to a mapping error with Noyo plans for Guardian and Aetna, preventing the transmission of necessary insurance information.",
    "issue_summary": "COBRA enrollment snapshots for Andreana Lee are blocked due to a mapping error with Noyo plans for Guardian and Aetna, caused by missing classification data in the PEO orphan COBRA NoyoCompanyPlanInfo creation.",
    "rca": "The root cause of the issue is that the PEO orphan COBRA NoyoCompanyPlanInfo creation does not include classification data. This is because the classification support was added to the Noyo model after the implementation of PEO COBRA orphan, leading to the mapping error.",
    "steps_taken": "To resolve the issue, a script was used to manually update the NoyoCompanyPlanInfo objects by copying over the classification data from the original company to the orphan company. The script iterates over the NoyoCompanyPlanInfo objects for the orphan company, retrieves the original classification data, and updates the orphan objects accordingly. The script used is as follows:\n\n```python\nocompany = Company.get_or_none(id='67750720b1dcc370eb18abe0')\nmp = PeoCobraOrphanCompanyMapping.objects.filter(orphanCompany=ocompany).first()\ncompany = mp.company\nncpis_to_update = NoyoCompanyPlanInfo.objects.filter(company='67750720b1dcc370eb18abe0')\nres = []\nfor ncpi in ncpis_to_update:\n    ncpi_original = NoyoCompanyPlanInfo.objects.filter(company=company, noyo_plan_id=ncpi.noyo_plan_id).order_by('-createdAt').first()\n    ncpi.eligible_classification_values = ncpi_original.eligible_classification_values\n    ncpi.eligible_carrier_classifications = ncpi_original.eligible_carrier_classifications\n    ncpi.save()\n    res.append(ncpi_original)\nreturn res\n```",
    "data_models": "[NoyoCompanyPlanInfo, PeoCobraOrphanCompanyMapping, Company]"
  },
  "BENINTEG-3792": {
    "key": "BENINTEG-3792",
    "issue": "The system is sending enrollment forms to NYLife, but the carrier does not maintain a record of individual enrollment data. The client requested the removal of the email address to prevent additional enrollment forms from being sent.",
    "issue_summary": "Enrollment forms are being sent to NYLife, which does not maintain individual enrollment data, causing unnecessary communication. The client requested to stop sending these forms.",
    "rca": "The root cause was identified as the system's dual communication setup, which was sending forms to NYLife despite the carrier not maintaining individual enrollment data. The tooling was used to turn off dual communication for the given carrier.",
    "steps_taken": "The engineering team used the EBN Operational Tools in Retool to turn off dual communications (emails) for the specific group associated with NYLife. This action stopped the sending of enrollment forms to NYLife for this group.",
    "data_models": "[]"
  },
  "BENINTEG-3790": {
    "key": "BENINTEG-3790",
    "issue": "Frank Fastner, a dependent enrolled in COBRA, is missing from the EDI file despite active enrollment in Rippling.",
    "issue_summary": "Frank Fastner, a dependent enrolled in COBRA, is not appearing on the EDI file due to a business logic issue related to COBRA feature flag enablement.",
    "rca": "The issue was caused by a business logic change related to the COBRA feature flag enablement, which affected the inclusion of dependents in the EDI file.",
    "steps_taken": "The COBRA feature flag was enabled for all dependents, and a parallel activity was initiated to reset everyone's snapshot for Cigna. This resolved the issue, and the ticket was closed after confirming the changes.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3786": {
    "key": "BENINTEG-3786",
    "issue": "Dependents who are COBRA subscribers were incorrectly being sent with 'N' in INS01, causing them not to load in Kaiser's system.",
    "issue_summary": "Dependents raised to subscriber coverage for COBRA were incorrectly sent with 'N' in INS01 instead of 'Y', causing issues in Kaiser's system.",
    "rca": "The original requirement was incorrect for dependents who are raised as subscribers under COBRA. They should be sent with 'Y' in INS01, but were being sent with 'N', leading to loading issues in Kaiser's system.",
    "steps_taken": "The mapping was updated to ensure that when benefit_status_code_05 is 'C', member_indicator_01 is set to 'Y'. The initial fix was incorrect as it converted all COBRA dependents to subscribers, which was later corrected. Validation was done using a customer example, and the transaction was confirmed to be working as expected.",
    "data_models": "[PendingAction, SubscriberLineInfo]"
  },
  "BENINTEG-3783": {
    "key": "BENINTEG-3783",
    "issue": "The employee filed a QLE to change location, but the forms for UHC and Kaiser were not generated, and the employee is not showing as enrolled in UHC for medical.",
    "issue_summary": "Forms were not generated for a QLE event for UHC and Kaiser, preventing the employee from being enrolled in UHC for medical coverage.",
    "rca": "The root cause analysis category is 'Salesforce case closed', but no specific subcategory or detailed description is provided.",
    "steps_taken": "The admin resolved the issue from their end, and the case was closed. No specific technical steps or code snippets were provided in the ticket.",
    "data_models": "[]"
  },
  "BENINTEG-3779": {
    "key": "BENINTEG-3779",
    "issue": "Admin is added in the Employee Enrollment Notifications settings but they are not receiving email notifications.",
    "issue_summary": "Admin is not receiving email notifications for employee enrollment despite being added to the Employee Enrollment Notifications settings. The root cause is related to the system's business logic.",
    "rca": "The root cause of the issue is that the 'isRipplingManagingForms' is set to True for the Broker Info, which according to the system's business logic, means that emails are not sent. This behavior is expected as per the logic implemented in the system.",
    "steps_taken": "The issue was investigated by checking the broker info using a script to verify if the admins were listed as recipients. It was confirmed that the admins were indeed listed. Further investigation revealed that the 'isRipplingManagingForms' flag was set to True, which is why emails were not being sent. This was confirmed to be the expected behavior according to the system's logic.",
    "data_models": "[CompanyBrokerInfo]"
  },
  "BENINTEG-3778": {
    "key": "BENINTEG-3778",
    "issue": "A large number of Open Enrollment (OE) transactions for Rippling PEO were blocked due to an invalid benefit class code 0047 being assigned to employees, which does not exist for the group.",
    "issue_summary": "The issue was caused by an incorrect groupId and employees being enrolled in different plans across groups, leading to invalid benefit class code assignments.",
    "rca": "The root cause was a setup issue during the PEO ingestion process. The groupId was incorrect, and employees were enrolled in different plans across groups. This led to the assignment of a non-existent benefit class code 0047 to employees.",
    "steps_taken": "The group ids on the InsuranceCompanyCarrierLineInfo (CCLI) were corrected using a script to update them with the correct group id. The function getDefaultGroupIdForGuardian was used to get the correct group id. The script iterated over CCLI objects, checked if the groupId was incorrect, and updated it to the expected groupId. The issue was resolved by correcting the group ids and ensuring the correct mapping.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, Company]"
  },
  "BENINTEG-3777": {
    "key": "BENINTEG-3777",
    "issue": "When attempting to push an amendment to Noyo for the member Karamvir Singh, a 422 error was encountered, indicating a failure in processing the employee's profile. This issue had the potential to affect the entire group.",
    "issue_summary": "The issue was a 422 error encountered when pushing an amendment to Noyo for a specific employee, Karamvir Singh, due to incorrect data seeded for the PEO group with Guardian.",
    "rca": "The root cause of the issue was incorrect data seeded for the PEO group for Guardian. The benefit class identifier for the employee was returned as '0047', which was not present in the Noyo carrier configuration. This incorrect setup allowed the group to select premium plans they were not eligible for.",
    "steps_taken": "The PEO team corrected the group IDs on the InsuranceCompanyCarrierLineInfo objects. A script was used to update the CCLI's group ID to the expected value. The setup for the group was fixed, moving the premium plans to the correct plans. The snapshot was successfully sent to Noyo after these corrections.\n\n```python\ncompany = Company.get_or_none(id=\"66d9a17b77c43d315d9e3511\")\ncclis = InsuranceCompanyCarrierLineInfo.objects(company=company, backupCarrierIds__contains=\"peo_guardian\")\n\nfor ccli in cclis:\n  gid = ccli.groupId\n  expected_gid = getDefaultGroupIdForGuardian(company, ccli.effectiveDate)\n  if gid != expected_gid:\n    ccli.groupId = expected_gid\n    ccli.save()\n```",
    "data_models": "[InsuranceCompanyCarrierLineInfo, PendingAction]"
  },
  "BENINTEG-3776": {
    "key": "BENINTEG-3776",
    "issue": "Upon submitting snapshots to Noyo for Clicklease LLC's employees enrolled in Regence coverage, several were rejected due to error messages indicating that the company carrier plan info (ccli) is not eligible for Noyo.",
    "issue_summary": "Snapshots for Clicklease LLC's employees enrolled in Regence coverage were rejected by Noyo due to ineligibility of the company carrier plan info (ccli) for Noyo, despite similar setups working for other groups.",
    "rca": "The root cause was identified as the expiration of the company carrier plan info (ccli) on 12/2024, which led to the ineligibility error. Additionally, the carrier was not previously associated with Noyo, resulting in missing plan mappings for expired coverage.",
    "steps_taken": "To resolve the issue, a skipped SLI exception was added for the expired SLIs. The script was updated to handle these exceptions and rerun with updated roles. The process involved filtering subscribers and creating SkippedSLIRecord objects for expired SLIs. The script was validated against one of the roles, and older SLIs were skipped. After running the updated script, most errors were resolved except for an incorrect phone number, which required correction.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, InsuranceCompanyPlanInfo, Subscriber, SkippedSLIRecord]"
  },
  "BENINTEG-3773": {
    "key": "BENINTEG-3773",
    "issue": "The client reported that Unum is not receiving the dependent enrollment for employee Michael Holcomb's dental plan, even though the enrollment appears correct in Rippling.",
    "issue_summary": "The dental plan enrollment for a dependent of employee Michael Holcomb is not being transmitted to Unum via Noyo, despite being active in Rippling.",
    "rca": "The system was working as expected. In member requests, changes are not sent to Noyo unless there is a change in the coverage. The dependent already had active coverage, so no changes were transmitted.",
    "steps_taken": "The team reviewed the mappings and coding, confirmed that the dental coverage was active for the dependent, and determined that no changes were needed to be sent to Noyo. The issue was closed after confirming accurate coverage with the client.",
    "data_models": "[]"
  },
  "BENINTEG-3772": {
    "key": "BENINTEG-3772",
    "issue": "During the New Hire Event for Matthew Ekstrom, incorrect dependent data was sent to Noyo, enrolling a random person, Melanie Tsonas, instead of the correct dependents.",
    "issue_summary": "Incorrect dependent data was sent to Noyo during Matthew Ekstrom's New Hire Event, enrolling Melanie Tsonas instead of the correct dependents due to an issue with the handling of member data updates.",
    "rca": "The root cause was identified as the use of the Noyo amendment tool, which did not handle the update of member data correctly. When the employee updated the spouse's name and SSN, the system did not create a new member object but instead updated the existing one, leading to confusion and incorrect data being sent to Noyo.",
    "steps_taken": "To resolve the issue, it was suggested to create a new member object and attach it to the relevant SLIs while deleting the incorrect one. A thread was started to discuss a long-term solution for handling member data changes. Noyo updated the new member details on their portal, completing the enrollment.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-3771": {
    "key": "BENINTEG-3771",
    "issue": "Order to OneKonnect is failing due to 'Group Number can not exceed 50 characters' error, blocking customer-requested connections.",
    "issue_summary": "The issue is that the order to OneKonnect is failing because the Group Number exceeds 50 characters, which is causing a blockage in customer-requested connections.",
    "rca": "EBN removed the arbitrary 50 character limit, which was causing the order to fail due to the Group Number exceeding this limit.",
    "steps_taken": "Communication was initiated with the Ebn team to understand the significance of the GroupNumber field and to update the logic for generating it. OneKonnect confirmed that the 50 character failure issue is fixed. An impact list was pulled for OneKonnect connections that have an Error state, and any errored connections were pushed over as they would not retry automatically.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3770": {
    "key": "BENINTEG-3770",
    "issue": "Kaiser does not have the family of COBRA member Bradley Lindsay active, and there is no record of sending them on an EDI file. Confirmation is needed on whether enrollments for the company ID Rippling PEO 1, Inc. are being sent.",
    "issue_summary": "Kaiser inquired about a COBRA member, Bradley Lindsay, who is not active in their system. The issue is due to orphan COBRA stedi configurations not being created, preventing the transmission of enrollment data to Kaiser.",
    "rca": "Orphan COBRA stedi configurations were not created because the logic to onboard Rippling PEO 1 orphan COBRA companies to Stedi was not executed. This was due to a check that prevented the creation of stedi payloads if the corresponding terminated company was not deactivated from Stedi.",
    "steps_taken": "The logic was reviewed and updated to handle the creation of stedi payloads for orphan companies. A pull request was raised to update the logic. Meanwhile, the remaining objects were migrated manually. The mitigation involved setting up new PEO groups for the orphan company using the following code:\n\n```\ncompany = Company.get_or_none(id='676bcbe1c695670f96aa66ed')\nc = PeoCobraOrphanCompanyMapping.objects.filter(orphanCompany=company).first().company\npds = StediPartnerCompanyGroupingPayloadData.objects.filter(company=c)\nfor pd in pds:\n  carrier = pd.partner\n  stedi_edi_details = carrier.getCarrierObject().getStediEdiDetails()\n  stedi_edi_details.setup_new_peo_group(company, carrier)\nreturn StediPartnerCompanyGroupingPayloadData.objects.filter(company=company)\n```\n\nMigration was completed for other companies using similar logic.",
    "data_models": "[VendorPartnerCompany, PeoCobraOrphanCompanyMapping, StediPartnerCompanyGroupingPayloadData, Company]"
  },
  "BENINTEG-3766": {
    "key": "BENINTEG-3766",
    "issue": "Three employees at Cylinder Health, Inc. had their insurance forms suddenly sent on 1/22, and the reason for this unexpected behavior needed to be identified.",
    "issue_summary": "Forms for three employees at Cylinder Health, Inc. were unexpectedly sent on 1/22, possibly due to a change in system behavior or business logic.",
    "rca": "The root cause was identified as the Sequoia CCLIs not having a groupId attached to them. This missing groupId was added on 1/22, which caused the forms to be sent out.",
    "steps_taken": "The issue was investigated by reviewing the script history and identifying that the groupId was missing from the Sequoia CCLIs. Once the groupId was added, the forms were sent.",
    "data_models": "[PendingAction, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-3765": {
    "key": "BENINTEG-3765",
    "issue": "Employee attempted to send a non-existent dependent to Noyo, resulting in an error message indicating the dependent was not found.",
    "issue_summary": "An employee mistakenly entered a dependent and thought it was deleted, but the system attempted to transmit this non-existent dependent to Noyo, causing an error.",
    "rca": "The issue was identified as a bug on Noyo's side, where the system attempted to process a dependent that did not exist in the employee's profile.",
    "steps_taken": "The team confirmed there were no dependents enrolled by proxying into the group and viewing the snapshot sent to Noyo. Noyo acknowledged the bug and worked on a fix, which was eventually resolved.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-3761": {
    "key": "BENINTEG-3761",
    "issue": "The client, IQ Fiber, has enabled carrier connections and needs to update the email address for Blue Cross Blue Shield of Florida for form sending, but the admin cannot update it themselves as the Edit button is no longer available.",
    "issue_summary": "IQ Fiber needs to update the email address for Blue Cross Blue Shield of Florida for form sending, but the admin cannot do it due to the absence of the Edit button.",
    "rca": "The issue arose because the admin interface no longer provides an Edit button to update the email address for form sending, which is necessary for maintaining accurate carrier connections.",
    "steps_taken": "The engineering team updated the email address for Blue Cross Blue Shield of Florida to GrpEMB@bcbsfl.com for form sending as requested by the client.",
    "data_models": "[]"
  },
  "BENINTEG-3760": {
    "key": "BENINTEG-3760",
    "issue": "The group flagged an employee whose open enrollment elections were not processed timely with Anthem. There were several 422 error messages indicating that the transaction was retried multiple times before finally going through. The error suggested that the group was changed back to member requests, even though they previously had the snapshot API setting enabled.",
    "issue_summary": "Employee's open enrollment elections were not processed timely due to a switch from snapshot API to member requests, causing transaction failures and 422 error messages.",
    "rca": "Snapshots are going out, but there was a lack of sufficient tracking on the toggling for the snapshot enablement. It was confirmed that snapshots are being sent for this group.",
    "steps_taken": "Confirmed that a snapshot was sent on 12/13/2024 and that the transmission type reverted to 'Member Requests' at some point. Verified that a snapshot was resent successfully on 01/16/2025. It was noted that there is insufficient tracking on the toggling for snapshot enablement, but snapshots are confirmed to be going for this group.",
    "data_models": "[NoyoVendorGroupSettings]"
  },
  "BENINTEG-3759": {
    "key": "BENINTEG-3759",
    "issue": "Member terminations for Invisible Technologies Inc. were not submitted via form while working to establish Ideon feed, resulting in missed terminations.",
    "issue_summary": "Member terminations were not submitted via form due to an issue with the Vericred member creation process, leading to missed terminations.",
    "rca": "The Vericred member was erroring while creating, which appeared to be an intermittent issue. It was not reproducible anymore on production, and the correct termination is now populating on the vendor.",
    "steps_taken": "The issue was identified as an intermittent problem with Vericred member creation. It was confirmed that the issue is no longer reproducible in production, and the correct termination is now populating on the vendor.",
    "data_models": "[]"
  },
  "BENINTEG-3758": {
    "key": "BENINTEG-3758",
    "issue": "Kojo Technologies, Inc.'s Kaiser 2025 benefit enrollment did not send through to Noyo. Employees JT Bowler and Katerina Hanson had Kaiser 2025 elections in Rippling but no updated data in Noyo.",
    "issue_summary": "The Kaiser 2025 benefit enrollment for Kojo Technologies, Inc. was not transmitted to Noyo due to the connection not being moved to production.",
    "rca": "The issue was that the Noyo connection for the Kaiser 2025 benefit enrollment was enabled for testing but was never moved to production, which is why the Open Enrollments (OEs) were not sent to Noyo.",
    "steps_taken": "The connection was eventually moved to production, which resolved the issue.",
    "data_models": "[]"
  },
  "BENINTEG-3754": {
    "key": "BENINTEG-3754",
    "issue": "Employee elected COBRA coverage effective 01/01/2025 due to termination of employment, but an exception occurred when the snapshot was being pushed, indicating a need to verify or update Noyo plan mappings for the Guardian-VSP Vision Plan B (Choice), line type: vision. The employee was not enrolled in COBRA coverage with Aetna or Guardian.",
    "issue_summary": "Mapping issue with Noyo for COBRA coverage election, causing an exception during snapshot push for Guardian-VSP Vision Plan B (Choice).",
    "rca": "An incident related to this issue was previously addressed, during which the root cause was fixed. The root cause was related to incorrect or outdated Noyo plan mappings.",
    "steps_taken": "Snapshots for Guardian and Aetna were successfully sent, resolving the enrollment issue. The root cause was confirmed to be fixed during a related incident.",
    "data_models": "[]"
  },
  "BENINTEG-3745": {
    "key": "BENINTEG-3745",
    "issue": "The issue involves a Benefit Transmission (BT) error where the third-party system returned an error message indicating that a specific dental plan is not available for the benefit class 0001, even though the employee is in the correct class and corresponding plan. This is affecting employees like Derek Chang who live in California and are enrolled in the correct Dental PPO plan.",
    "issue_summary": "The BT error occurs because the system incorrectly associates employees with the wrong benefit class due to past plan enrollments, causing the third-party system to reject the plan for the current benefit class.",
    "rca": "The root cause of the issue is that the function 'gen_noyo_carrier_configs_groupby_noyo_carrier_id' returns carrier-level classification details for a role. Since the role was previously enrolled in a Texas plan and is now in a non-Texas plan, the role belongs to classification 0001. However, the code picks SubscriberLineInfos (SLIs) from the past if the company carrier coverage ended within 30 days, leading to incorrect classification.",
    "steps_taken": "To resolve the issue, a skip override was added to the older SLIs to unblock the affected employees. This was a temporary fix, and a long-term solution needs to be evaluated. The skip override was implemented for employees like Derek Chang and others impacted.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-3743": {
    "key": "BENINTEG-3743",
    "issue": "The issue faced was a blocked transaction for an employee, Marilaura Guerrero, due to a 'Keyerror' for the state code 'PR' (Puerto Rico) when processing benefits with the carrier Guardian.",
    "issue_summary": "The transaction for an employee was blocked due to a 'Keyerror' related to the state code 'PR' for Puerto Rico, indicating a special case handling issue with the Noyo component.",
    "rca": "The root cause of the issue was identified as the absence of a benefit class available for Puerto Rico, which led to the 'Keyerror' when processing the transaction.",
    "steps_taken": "To resolve the issue, a custom payload was sent to handle the special case for Puerto Rico, as there was no benefit class available for this state.",
    "data_models": "[]"
  },
  "BENINTEG-3741": {
    "key": "BENINTEG-3741",
    "issue": "The live EDI feed for Guardian 2025 is not reflected in the app and is still showing email submissions are being used, despite the file feed being live via Ideon.",
    "issue_summary": "The Guardian feed's live status is not reflected in the app, and the system needs to be updated to show the live feed details.",
    "rca": "There is a bug in the UI where, when the vendor is Vericred, the connection type is always shown as EDI. However, in this case, the connection type is actually Carrier API, and the transmissions are not supposed to be shown at all. This is expected behavior.",
    "steps_taken": "The issue was identified as a UI bug, and a product fix will be created to address the bug on the UI.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3740": {
    "key": "BENINTEG-3740",
    "issue": "There is a blocked dependent enrollment and incorrect coverage effective start date for an employee at Butler Labs, Inc. due to a 422 Error Code within Noyo: 'Coverage must specify plan_number_identifier'. This issue requires engineering team assistance for correction.",
    "issue_summary": "A blocked dependent enrollment and incorrect coverage effective start date occurred due to a missing 'plan_number_identifier' in the coverage details for a PEO group using Noyo.",
    "rca": "The root cause of the issue is not explicitly detailed in the ticket, but it is related to a missing 'plan_number_identifier' in the coverage details, which is required by Noyo for processing the enrollment.",
    "steps_taken": "The ticket was flagged as the associated support case was closed, indicating that the issue might have been resolved or deprioritized. There is no detailed information on specific steps taken to resolve the issue in the ticket.",
    "data_models": "[]"
  },
  "BENINTEG-3739": {
    "key": "BENINTEG-3739",
    "issue": "Employees who elected the Aetna PPO 3000/100% [HSA] Plan during the 12/01/2023 renewal or as a New Hire Enrollment (NHE) were not enrolled in the correct plan.",
    "issue_summary": "Employees were not enrolled in the correct Aetna PPO 3000/100% [HSA] Plan during the 12/01/2023 renewal or as NHE due to an incorrect state of the system.",
    "rca": "The system was in an incorrect state, leading to employees not being enrolled in the correct plan. The system was working as expected, but the expectations were wrong.",
    "steps_taken": "The team was unsure if member snapshot updates in the past were supported. It was confirmed that updating the snapshot in the past is not supported. The team was advised to work with Noyo to have these changes done offline.",
    "data_models": "[]"
  },
  "BENINTEG-3737": {
    "key": "BENINTEG-3737",
    "issue": "Employee Grant Lee was supposed to be eligible for benefits from 1/01/2025 due to the company's waiting period policy, but the system only created a task for benefits enrollment effective 2/01/2025.",
    "issue_summary": "The system incorrectly set the benefits effective date for employee Grant Lee to 2/01/2025 instead of 1/01/2025, despite the company's policy waiving the waiting period for first of the month hires.",
    "rca": "A dependency issue caused by a race condition between two InsuranceRoleTransitions (IRT) created due to a role transition and a job location change. The second IRT, marked effective from 1/8/2025, triggered the EnrollmentEvent creation, leading to the incorrect effective date.",
    "steps_taken": "The effective date for the enrollment was manually adjusted to 1/1/2025. The 'Regenerate group forms' action was triggered on the EE Debugger, updating the forms and triggering Pending Actions to resolve the issue.",
    "data_models": "[EnrollmentEvent, InsuranceRoleTransitions, PendingAction]"
  },
  "BENINTEG-3729": {
    "key": "BENINTEG-3729",
    "issue": "The insurance coverage changes for employee Andres Santos Cantu due to QLEs on 11/01/2024 and 12/01/2024 are not reflected in the API snapshot for Aetna, causing urgent access to care issues.",
    "issue_summary": "The API snapshot for Aetna is not reflecting the QLEs for employee Andres Santos Cantu due to conflicting data error, as multiple coverages exist for the same time period.",
    "rca": "The issue was caused by a COBRA rehiring case where the same role was not handled correctly, leading to multiple coverages for the same period.",
    "steps_taken": "A COBRA cancellation event was created to resolve the issue. The integration team confirmed that a retroactive cancellation event would not affect existing active coverage. A pull request was raised to ensure correct SLIs are sent to NOYO.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-3722": {
    "key": "BENINTEG-3722",
    "issue": "Density Inc. faced an issue where a third-party system returned an error stating 'Member group is required when there is more than one available member group for life plan'. This error was blocking transactions related to life, dental, and vision plans.",
    "issue_summary": "The issue was caused by a configuration problem where the member group for the principal was set at the plan level for only two plans, but it needed to be set for all possible plans in the company configuration.",
    "rca": "There was a class code setup issue in the configuration for the group. Specifically, the member group values were set at the plan level for only two plans, but the configuration required these values for all possible plans. This discrepancy led to the error being thrown by the third-party system, Noyo.",
    "steps_taken": "The operations team fixed the class code setup issue in the configuration for the group. Changes were made to ensure that the member group values were set for all possible plans, not just two. After making these changes, pending transactions were checked to ensure they were sent, and the issue was resolved.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3721": {
    "key": "BENINTEG-3721",
    "issue": "Issue being faced in ticket",
    "issue_summary": "This is a test ticket created for deletion purposes, with no actual issue described.",
    "rca": "The ticket is marked as a test ticket with no real issue, related to a Salesforce case closure.",
    "steps_taken": "No steps taken as this is a test ticket intended for deletion.",
    "data_models": "[]"
  },
  "BENINTEG-3720": {
    "key": "BENINTEG-3720",
    "issue": "Two members are appearing within the blocked transactions for Assembled due to enrollment into plans that are not available for their respective classes. The client is within PEO and operations cannot correct mapping issues for the PEO.",
    "issue_summary": "Blocked transactions occurred because two employees were enrolled in plans not available for their respective benefit classes due to recent demographic changes.",
    "rca": "Both employees had a demographic change recently, and the system was picking up the latest carrier classification. However, their older plans were based on the older classification, which are not present, causing the issue.",
    "steps_taken": "The engineering team identified that the employees had moved to a new state with the same effective date, leading to incorrect plans being sent. They decided to skip the invalidated SubscriberLineInfo (SLI) and fixed the issue for both employees, clearing the blocked transactions.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-3719": {
    "key": "BENINTEG-3719",
    "issue": "Two employees, Tucker Chapin and Alex Martin, experienced blocked transactions due to errors in pulling prior year plan end dates for their dental plans with Principal. The error message indicated an inability to find a matching Noyo plan mapping information.",
    "issue_summary": "Blocked transactions for two employees due to errors in pulling prior year plan end dates for dental plans with Principal, caused by issues in Noyo plan mapping.",
    "rca": "The root cause was identified as a manual data entry error on the operations end, specifically related to the misconfiguration of Noyo plan mappings for domestic partners and incorrect mapping of plans to member groups.",
    "steps_taken": "The steps taken to resolve the issue included confirming the plans were mapped as expected, checking with the group to ensure domestic partner relationships were approved, reaching out to Noyo, deleting and remapping the plans in the Noyo plan mapper, and finally correcting the mapping of plans to the appropriate member groups. The final step involved mapping the plans correctly, which resolved the blocked transactions.",
    "data_models": "[NoyoCompanyPlanInfo]"
  },
  "BENINTEG-3717": {
    "key": "BENINTEG-3717",
    "issue": "Two employees' Guardian Voluntary Life/AD&D coverage volumes were not updated correctly over the group's Noyo API connection due to incorrect coverage start dates.",
    "issue_summary": "The issue was that the coverage start dates for Voluntary Life/AD&D were incorrectly set to 01/01/2024 instead of 01/01/2025, causing Guardian to misinterpret the benefit amount change as a retroactive update request.",
    "rca": "The root cause was a special case handling bug where the system did not correctly update the coverage start dates for the employees' Voluntary Life/AD&D benefits, leading to incorrect data being sent to Guardian.",
    "steps_taken": "The engineering team was required to intervene and update the coverage effective dates being sent to Noyo for the affected employees from 01/01/2024 to 01/01/2025. After the update, the payloads were verified to contain the correct information.",
    "data_models": "[]"
  },
  "BENINTEG-3716": {
    "key": "BENINTEG-3716",
    "issue": "The end date of an employee's role was updated, requiring verification and updates to insurance timelines and carrier notifications.",
    "issue_summary": "The termination date for an employee was updated from 2024-12-19 to 2025-01-09, necessitating the creation of a 'Termination (end date correction)' event and ensuring that the updated termination date is correctly transmitted to the insurance carrier.",
    "rca": "External request for fixing the termination date of an employee. The Integrations team was involved to ensure that the termination was correctly transmitted to the carrier (Guardian), which was verified.",
    "steps_taken": "1. Verified that a 'Termination (end date correction)' event was created for the prior termination event. 2. Reviewed and confirmed that the insurance timelines were updated by the 'Termination (end date correction)' event. 3. Ensured that the employee's form was submitted with the new end date (2025-01-09) to Guardian as part of processing the pending action of the termination event. 4. Marked the issue as resolved after verification.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-3715": {
    "key": "BENINTEG-3715",
    "issue": "The issue was with the incorrect QLE effective date for Medical coverage. The effective date was showing as 02/01/2025 instead of the QLE event date, which was 09/01/2025. This discrepancy was causing confusion and needed to be corrected.",
    "issue_summary": "The QLE effective date for Medical coverage was incorrectly set to 02/01/2025 instead of the QLE event date 09/01/2025, causing a mismatch in expected coverage start date.",
    "rca": "The root cause was identified as a mistake in the logic for calculating the QLE effective date for PEO carriers, which was incorrectly set to the 1st of the month after the event date instead of the event date itself. This was a recent change that was not intended and was reverted.",
    "steps_taken": "The effective date for the QLE medical SLI was manually adjusted from 02/01/2025 to 09/01/2025. The integration team was then tasked with transmitting the corrected effective date to the carrier via Noyo. The change was confirmed to be reflected correctly in the system and communicated to the carrier.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-3714": {
    "key": "BENINTEG-3714",
    "issue": "Blocked transactions for Aetna PEO due to missing account_identifier and plan_number_identifier in snapshot payloads.",
    "issue_summary": "Aetna PEO transactions are blocked because the snapshot payloads sent to Noyo are missing account_identifier and plan_number_identifier, causing errors.",
    "rca": "The root cause of the issue is a bug in how the carrier configurations are evaluated for employees, specifically related to the Noyo integration.",
    "steps_taken": "The engineering team was asked to review the mapping and carrier configurations to ensure they are correctly populating in every payload. Specific issues with plan_number_identifier were reduced to 10, and further investigation was conducted to provide reasoning. Additionally, there was a validation issue where the Aetna HMO 0 (SCal) plan should only be picked by California employees, which required confirmation with the benefits administration team.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3712": {
    "key": "BENINTEG-3712",
    "issue": "Files sent to Collective Health are missing some lines of coverage for employees, such as Dental and Vision, resulting in incomplete coverage information being transmitted.",
    "issue_summary": "Files generated for Collective Health are missing certain lines of coverage for employees, such as Dental and Vision, due to a delayed ETA execution causing out-of-order pipeline steps.",
    "rca": "Delayed ETA execution caused out of order pipeline steps, leading to incomplete coverage information being included in the files sent to Collective Health.",
    "steps_taken": "Reviewed the file generation process to identify the cause of missing coverage lines and corrected the order of pipeline steps to ensure all coverage lines are included in the files.",
    "data_models": "[]"
  },
  "BENINTEG-3711": {
    "key": "BENINTEG-3711",
    "issue": "Employee waived all benefits and moved out of the country, causing a blocked transaction.",
    "issue_summary": "The issue was related to a blocked transaction for an employee who waived all benefits and moved out of the country. The blocked transaction was due to data changes, specifically the reported salary not being in USD.",
    "rca": "There was a query regarding the system's behavior in handling blocked transactions for an employee no longer on the benefits product. The blocked transaction was specifically due to data changes of the employee, and it was determined that this had no material impact on billing for the company or the employee.",
    "steps_taken": "The termination for all coverages was already transmitted. It was confirmed that the blocked transaction had no impact, and the pending action could be archived. The transaction was archived, and the ticket was marked as resolved.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3710": {
    "key": "BENINTEG-3710",
    "issue": "The issue involved a blocked transaction due to an employee's dependent having the same name, causing a problem with the Benefits Transmission (BT) process.",
    "issue_summary": "The blocked transaction was caused by an employee's dependent having the same name, which led to issues in the Noyo system.",
    "rca": "The root cause was identified as a wrong expectation where the system was working as expected. The blocked transaction was processed once the underlying issue was resolved, and the employee is now unblocked.",
    "steps_taken": "The issue was resolved by processing the blocked transaction once the underlying issue was addressed. The ticket was then marked as resolved.",
    "data_models": "[]"
  },
  "BENINTEG-3709": {
    "key": "BENINTEG-3709",
    "issue": "Order to OneKonnect is failing with the error 'Customer Code Already Exists' for the MetLife connection, blocking the submission.",
    "issue_summary": "The issue is that the order to OneKonnect for MetLife is failing due to a 'Customer Code Already Exists' error, which is caused by the reuse of the same customer code for a new carrier connection.",
    "rca": "When a company onboards a new carrier to EBN, the same name and federal tax ID that was provided during the first connection request must be reused. The error occurred because the logic for resolving 'Company Tax Info' was inconsistent, leading to different selections at different times.",
    "steps_taken": "A workaround was implemented by manually patching the EDI order to push it through. The script used involved modifying the payload to ensure the correct company name and federal tax ID were used. The script included models such as EbnEDIOrderRequest and EbnEDIOrderController to create and send the order request.",
    "data_models": "[EbnEDIOrderRequest, EbnEDIOrderController, CompanyTaxInfo]"
  },
  "BENINTEG-3708": {
    "key": "BENINTEG-3708",
    "issue": "Integrative Women's Care, PC faced an issue with two dependents having the same name, causing blocked transactions (BT).",
    "issue_summary": "The issue was caused by two dependents with the same name, which led to blocked transactions in the system.",
    "rca": "The blocked transactions were resolved, but the root cause was related to the Noyo integration where having two dependents with the same name caused issues.",
    "steps_taken": "The transactions were reprocessed successfully, resolving the blocked transactions. The next steps from an engineering perspective were requested to prevent future occurrences.",
    "data_models": "[]"
  },
  "BENINTEG-3707": {
    "key": "BENINTEG-3707",
    "issue": "The new hire forms for the employee were not sent to the carrier, and the admin did not receive the forms on the designated email.",
    "issue_summary": "The new hire forms for the employee were not transmitted to the carrier due to Rippling managing forms being disabled at the time of the event creation.",
    "rca": "Rippling managing forms was off when the event was created, which caused the forms not to be sent out. The forms transmission was later triggered manually, and emails were verified to have been sent.",
    "steps_taken": "Forms were retriggered for all three carriers, and the forms were sent out successfully. It was noted that Rippling managing forms was enabled only on January 23rd, and the pending actions were created just before that. An audit was suggested to check for any further discrepancies.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [PendingActionGroup, PendingAction]"
  },
  "BENINTEG-3705": {
    "key": "BENINTEG-3705",
    "issue": "Admins are not receiving the employee termination event email notifications.",
    "issue_summary": "Admins, including Andrea Flynn and Chris Morin, are not receiving email notifications for insurance termination events despite being set up to receive them.",
    "rca": "The root cause analysis category is 'Forms', but the detailed reason for the issue is not provided in the ticket. The comments suggest that there might be an issue with the PendingActions not being returned, which could be related to the company's setup.",
    "steps_taken": "The team checked if any changes were made for the client and attempted to use the insurance debugger to fetch PendingActions, but encountered a blank UI. They also requested screenshots and further information to diagnose the issue.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-3704": {
    "key": "BENINTEG-3704",
    "issue": "OneKonnect requires the benefit amount for Voluntary Critical Illness to be updated from '0.00' to an empty string for employee Alejandrina Perez, as they cannot process '0.00' in the benefit amount field.",
    "issue_summary": "OneKonnect cannot process '0.00' in the benefit amount field and requires it to be an empty string. A code change is needed to update the dataset being passed to OneKonnect.",
    "rca": "EBN expects zero amounts to be passed in as an empty string. A code change was made to transmit all 0 benefit amounts as an empty string.",
    "steps_taken": "A code change was implemented to ensure that zero benefit amounts are transmitted as empty strings. The dataset post 24 hours from the change should reflect this update. Verification was done to ensure the latest snapshots have zero benefit amounts processed as an empty string, and the issue was marked as resolved.",
    "data_models": "[]"
  },
  "BENINTEG-3702": {
    "key": "BENINTEG-3702",
    "issue": "The production files for a group were mistakenly moved back to production, but they should have remained in the ingestion/suspend state as the group is still finalizing their renewal for 2025 with Cigna.",
    "issue_summary": "The production files for the group 'REsurety, Inc.' were incorrectly moved back to production while they were still finalizing their renewal with Cigna for 2025. The files needed to be moved back to the ingestion/suspend state.",
    "rca": "A webscript was run that moved the connection to the wrong state, causing the production files to be incorrectly moved back to production.",
    "steps_taken": "The connection was moved back to the 'INGESTING' state using the following code snippet:\n\n```python\nvpc = VendorPartnerCompany.objects.get(company=\"5ef39f1cb99dbf2261b281f2\")\nvpc.state = \"INGESTING\"\nvpc.save()\nreturn vpc\n```\nAdditionally, it was confirmed that the forms have been turned on.",
    "data_models": "[VendorPartnerCompany]"
  },
  "BENINTEG-3694": {
    "key": "BENINTEG-3694",
    "issue": "The group had 3 employee terminations that were blocked from the Guardian API, preventing the terminations from being processed in the carrier system.",
    "issue_summary": "Employee terminations were not processed in the Guardian API due to an error related to 'Std lines of coverage require volume for Guardian'.",
    "rca": "The issue was related to a requirement for volume in the 'Std lines of coverage' for Guardian, which was addressed in another ticket where a feature flag was enabled.",
    "steps_taken": "The issue was resolved as part of another ticket where a feature flag was enabled to address the requirement for volume in the 'Std lines of coverage' for Guardian.",
    "data_models": "[]"
  },
  "BENINTEG-3693": {
    "key": "BENINTEG-3693",
    "issue": "Encountered an exception while performing the action related to enrollments for the ex-partner/spouse of an employee, causing a blocked transaction.",
    "issue_summary": "The issue was related to enrollments for the ex-partner/spouse of an employee, Walton 'James' Comer, which caused a blocked transaction due to an exception 'EX_PARTNER'.",
    "rca": "The root cause analysis indicates that this is a product enhancement issue that needs prioritization, as referenced in the linked Jira ticket BENINTEG-4104.",
    "steps_taken": "The issue was tracked as a small feature request and was resolved by sending the snapshot for the employee, which correctly included the ex-spouse coverage. The resolution was confirmed, and the ticket was closed.",
    "data_models": "[noyo_member_snapshot_payload_generator]"
  },
  "BENINTEG-3692": {
    "key": "BENINTEG-3692",
    "issue": "Wild Earth Inc. has two blocked transactions, and the root cause is undetermined. The issue persists despite verifying mapping in proxy, plan mapper, and carrier configurations. Plans appear correctly mapped and as expected in Noyo.",
    "issue_summary": "Wild Earth Inc. is facing blocked transactions due to an undetermined root cause, despite correct plan mappings and configurations.",
    "rca": "The root cause analysis category is 'Ops Issue' with a subcategory of 'Wrong Expectation - System working as expected', indicating that the system is functioning as intended, but there might be a misunderstanding or misalignment in expectations.",
    "steps_taken": "The issue was reviewed in office hours with Paige, but no resolution was reached. A comment indicates that the issue eventually 'went through', suggesting it might have resolved itself or was manually intervened.",
    "data_models": "[]"
  },
  "BENINTEG-3691": {
    "key": "BENINTEG-3691",
    "issue": "The admin is not receiving enrollment emails for Blue Shield, even after updating the email ID in the carrier transmission tab. The broker is only receiving emails for Principal.",
    "issue_summary": "The admin updated the email ID in the carrier transmission tab for both Blue Shield and Principal, but emails are only being received for Principal. The expected outcome was for the admin to receive emails for both carriers.",
    "rca": "The insurance task was closed before the setup was complete, preventing the system from sending the emails.",
    "steps_taken": "The engineering team reopened the transaction and ensured it would be sent in the next automated run. A script was used to change the state of the PendingAction to 'PROCESSED'.\n\n```python\npa = PendingAction.objects.get(id=\"678845a07dbfd3a3e08fa6fd\")\npa.state = \"PROCESSED\"\npa.save()\nreturn pa.reload()\n```",
    "data_models": "[PendingAction]"
  },
  "BENINTEG-3690": {
    "key": "BENINTEG-3690",
    "issue": "Axis Portable Air LLC was unable to retry blocked transactions on the dashboard because the transactions were in 'PENDING' state, which does not allow retries.",
    "issue_summary": "Axis Portable Air LLC faced an issue where they could not retry blocked transactions because the transactions were in 'PENDING' state, and retries are only allowed for 'PROCESSED' or 'FAILED' states.",
    "rca": "The root cause was that the system was working as expected. Once the plan mappings were fixed, the blocked transactions got auto-resolved, which is the expected behavior.",
    "steps_taken": "The issue was resolved automatically after the plan mappings were corrected. No manual intervention was needed as the system auto-resolved the blocked transactions.",
    "data_models": "[]"
  },
  "BENINTEG-3686": {
    "key": "BENINTEG-3686",
    "issue": "Instances of customer-requested carrier connections not automatically routing to the preferred/default vendor, specifically for OneKonnect and Noyo.",
    "issue_summary": "Automated Carrier Connection routing was not functioning as expected, causing customer-requested connections to not automatically route to the current default vendor, OneKonnect or Noyo, due to a missing condition check.",
    "rca": "The issue was caused by a missing condition check in the implementation, which led to the failure of automatically routing carrier connections to the preferred/default vendor.",
    "steps_taken": "A fix was pushed to address the missing condition check, as referenced in the GitHub pull request [https://github.com/Rippling/rippling-main/pull/300157/files]. The connections for the affected companies were manually forced over via a retool to ensure they were in the correct state. The changes were deployed to prevent false cases of 'MISSING FEIN' from appearing in future reports.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3685": {
    "key": "BENINTEG-3685",
    "issue": "The group NexHealth is in production, but scheduled files are being sent to Stedi instead of the Cigna server due to an incorrect Transaction Setting ID. Attempts to reonboard the group show errors because the group already exists in production, preventing overrides in the onboarding tool.",
    "issue_summary": "NexHealth group files are being sent to Stedi instead of Cigna due to incorrect Transaction Setting ID, and reonboarding attempts fail due to existing production status.",
    "rca": "The issue was caused by the group being onboarded with the incorrect Transaction Setting ID '005010X220A1-834-prod', which directed files to Stedi instead of the Cigna server. The onboarding tool does not allow updates once a connection is in production to prevent human errors.",
    "steps_taken": "The transaction setting ID was changed to '005010X220A1-834-prod' using a Python script to update the StediPartnerTransmissionConfig object. This resolved the issue by ensuring files are sent to the Cigna server. The code used was:\n\n```python\ntc = StediPartnerTransmissionConfig.objects.get(id=\"66e85f0020647a025135d80e\")\ntc.transactionSettingId = \"005010X220A1-834-prod\"\ntc.save()\n\nreturn tc\n```",
    "data_models": "[StediPartnerTransmissionConfig]"
  },
  "BENINTEG-3681": {
    "key": "BENINTEG-3681",
    "issue": "Patrick Statler's enrollment is not processing through Noyo due to a benefit class code 422 error, preventing the enrollment from being completed.",
    "issue_summary": "Patrick Statler's enrollment faced a 422 error due to multiple benefit classes for the same period, which is not allowed by Guardian.",
    "rca": "The issue was caused by Noyo's system not allowing a family to be in more than one benefit class at any one time, resulting in a 422 error.",
    "steps_taken": "The issue was manually processed with Noyo, and the necessary information was provided to the Engineering team for COBRA payloads. The enrollment was eventually completed, and the ticket was closed.",
    "data_models": "[EnrollmentEvent, SubscriberLineInfo]"
  },
  "BENINTEG-3679": {
    "key": "BENINTEG-3679",
    "issue": "The issue was that there were missed COBRA enrollments for BCBS TX, leading to situations where employees were unable to get care. This was due to an update in BCBS TX's COBRA setup process.",
    "issue_summary": "Missed COBRA enrollments for BCBS TX due to an update in their setup process, causing employees to be unable to receive care.",
    "rca": "The root cause was identified as an update in BCBS TX's COBRA setup process, which was not properly accounted for, leading to missed enrollments.",
    "steps_taken": "A report was generated to identify all BCBS TX COBRA enrollees processed within the system for specific effective dates. The report was created using a Python script that queried the database for relevant enrollment events and converted the data to CSV format. The script used models like EnrollmentEvent, PendingActionGroup, and PendingAction to gather the necessary data.",
    "data_models": "[EnrollmentEvent, PendingActionGroup, PendingAction, USBenefitsCarrier]"
  },
  "BENINTEG-3678": {
    "key": "BENINTEG-3678",
    "issue": "The COBRA form for Katherine Hawk was not processed because UHC COBRA enrollments should be sent to a specific email address (TPA_eligibility@uhc.com), which was not being used.",
    "issue_summary": "The COBRA form for Katherine Hawk was not processed due to incorrect email address being used for UHC COBRA enrollments.",
    "rca": "The root cause of the issue was that the system was not configured to send COBRA enrollment emails to the correct UHC email address (TPA_eligibility@uhc.com). Instead, it was using an outdated email address (aaron_nelson@uhc.com).",
    "steps_taken": "A code change was made to update the COBRA email for UHC from aaron_nelson@uhc.com to TPA_eligibility@uhc.com. The change was ready to be deployed pending confirmation of the correct email address from UHC. Once confirmed, the code change would be merged and deployed, and the email for the employee could be re-triggered if necessary.",
    "data_models": "[]"
  },
  "BENINTEG-3677": {
    "key": "BENINTEG-3677",
    "issue": "TuneIn is concerned that former employee Anthony Baker, who elected COBRA, was not CC'ed on any correspondence sent from Rippling to their carriers for his reinstatement.",
    "issue_summary": "The client, TuneIn, wants to confirm that forms are being sent for COBRA enrollments/terminations as they are for active employees, as they did not see any CC'ed correspondence for Anthony Baker's COBRA reinstatement.",
    "rca": "The email was automatically sent a day after the bug was created, indicating that the system did eventually send the necessary correspondence.",
    "steps_taken": "The integration on-call team was added to confirm the status of the form sending. It was later confirmed that the emails were sent on January 11th, and the client was asked to recheck and confirm.",
    "data_models": "[]"
  },
  "BENINTEG-3676": {
    "key": "BENINTEG-3676",
    "issue": "UHC forms are not populating for the group with the error 'NO_GENERATED_FILES', even though the forms are present in Box.",
    "issue_summary": "The system failed to generate UHC forms for employees during an enrollment event due to missing large group forms in Box for UHC ME.",
    "rca": "The root cause of the issue was an operational error where the large group forms for UHC ME were not present in Box, which caused the failure during form generation.",
    "steps_taken": "The issue was identified as missing large group forms for UHC ME in Box. It was suggested to add these forms to resolve the issue and to consider updating the SOP to include checking for large group forms.",
    "data_models": "[]"
  },
  "BENINTEG-3675": {
    "key": "BENINTEG-3675",
    "issue": "The broker for CoreWeave is receiving unnecessary insurance tasks in their Client Command Center for Guardian, despite having an active API connection, which should prevent such tasks from being generated.",
    "issue_summary": "CoreWeave's broker is receiving unexpected insurance tasks for Guardian in their Client Command Center, even though the Guardian API connection is active, which should prevent task generation.",
    "rca": "The issue is categorized as a product enhancement that needs prioritization. The root cause is linked to the behavior of the system where 'confirm enrollment' tasks remain until processed by NOYO and Guardian, which can take time. This behavior is confusing and not aligned with the expected product behavior as per the help center article.",
    "steps_taken": "The engineering team is requested to review why Guardian insurance tasks are generating despite the active API connection and to push a fix to prevent unnecessary tasks. Comments suggest working with the product team to change the behavior and prioritize the task as a WBTB project.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3674": {
    "key": "BENINTEG-3674",
    "issue": "STD volumes not flowing over for a small group of employees, causing blocked transactions.",
    "issue_summary": "STD volumes were not being transmitted for a small group of employees due to incorrect plan mappings, which were later fixed.",
    "rca": "As plan mappings were fixed, the blocked transactions got auto-resolved (as is the expectation).",
    "steps_taken": "Ensured mapping is done correctly in proxy, plan mapper, and assigned carrier configs as outlined in Noyo. Once mappings were corrected, the blocked transactions were auto-resolved.",
    "data_models": "[]"
  },
  "BENINTEG-3673": {
    "key": "BENINTEG-3673",
    "issue": "Blocked Open Enrollment (OE) transactions for Succinct Inc. due to a mapping error with Noyo - Anthem plans.",
    "issue_summary": "The OE transactions for Succinct Inc. were blocked due to a mapping error with Noyo - Anthem plans. The issue was suspected to be related to previous plan year data being pulled incorrectly, and there was uncertainty about whether bad data was being routed.",
    "rca": "The error occurred because there were plan mappings for plans that have been discontinued on Noyo. Due to a bug in the current implementation of the Noyo plan mapper, these deprecated plans were not visible in the mapper, causing the transactions to be blocked.",
    "steps_taken": "The plan mappings with the deprecated plans were removed. After removing these mappings, a few Benefit Transactions (BTs) were retried and went through successfully. The remaining transactions were expected to process in the night's run.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3672": {
    "key": "BENINTEG-3672",
    "issue": "Roame Holdings, Inc is facing blocked transmissions due to expired plans being pulled in, affecting enrollments for 3 employees with 6 blocked transactions.",
    "issue_summary": "The issue involves blocked transactions for Roame Holdings, Inc due to expired plans being pulled in, specifically affecting a dental plan and impacting enrollments for 3 employees.",
    "rca": "The root cause of the issue is related to discontinued plans being present, as referenced in another Jira ticket (BENINTEG-3537).",
    "steps_taken": "Confirmed that Noyo plan mapper was mapping as expected. Added the Bill Group and Benefit Class Identifier mapping for Guardian and retried sending the transaction, but the same error persisted. It was noted that the group had two open enrollments in 2024, which might have contributed to the issue.",
    "data_models": "[NoyoCompanyPlanInfo]"
  },
  "BENINTEG-3671": {
    "key": "BENINTEG-3671",
    "issue": "Expired plans are being pulled in, causing blocked transactions and impacting open enrollments for two employees.",
    "issue_summary": "The issue involves expired lines of coverage being pulled in, leading to blocked transactions during open enrollments for two employees. The error message indicates a problem with Noyo plan mapping for the Rippling plan 'Anthem Silver PPO 2600/35% w/HSA PrevRx'.",
    "rca": "The root cause of the issue is identified as an 'Ops Issue' under the subcategory 'Incorrect Steps/State error', specifically requiring last year's NPM mapping.",
    "steps_taken": "The steps taken to resolve the issue involved checking that all plans were mapped in the Noyo Plan mapper. A code snippet was provided to create or update NoyoCompanyPlanInfo objects for the previous year's company plan info. The snippet iterates over NoyoCompanyPlanInfo objects, checking for previousCompanyPlanInfo and creating or updating mappings accordingly. The team also discussed mapping last year's plans using the Noyo plan mapper.",
    "data_models": "[NoyoCompanyPlanInfo]"
  },
  "BENINTEG-3670": {
    "key": "BENINTEG-3670",
    "issue": "The client received an email to submit insurance forms for a carrier (UHC) that had been terminated several months prior, and the client does not have active members with the carrier.",
    "issue_summary": "The client received an email for form submission for a cancelled carrier (UHC) due to a pending action triggered by a finalized event.",
    "rca": "The issue occurred because an employee finalized an event on January 2, 2025, which was originally created on January 22, 2024. This action created a pending action that, when processed, triggered the email. The system currently allows for transmissions to carriers even if the carrier relationship is terminated, which is expected behavior.",
    "steps_taken": "The investigation revealed that the email was sent via the performAction function in app/insurance/interface/carrier_interface.py. It was determined that the event finalization led to the creation of a pending action, which triggered the email. The situation was identified as a one-off scenario, and no immediate changes were made to the system.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-3669": {
    "key": "BENINTEG-3669",
    "issue": "Blocked transactions for 5 employees due to expired plans being pulled in.",
    "issue_summary": "Expired lines of coverage were being pulled in, causing blocked transactions for 5 employees. The error was related to the inability to find a matching Noyo plan mapping information.",
    "rca": "The root cause was identified as the absence of last year's Carrier Classification (CC) for the company, which led to the incorrect state error.",
    "steps_taken": "The issue was resolved by creating the missing Carrier Classification for the previous company plan info. The code snippet used was:\n\n```python\nfor cc in CarrierClassification.objects.filter(company=\"5cf0501392dabb73e8606287\"):\n    if cc.companyPlan and cc.companyPlan.previousCompanyPlanInfo:\n      CarrierClassification.objects.create(\n          company=cc.company,\n          companyPlan=cc.companyPlan.previousCompanyPlanInfo,\n          carrier=cc.carrier,\n          type=cc.type,\n          value=cc.value,\n          isPlanDependent=cc.isPlanDependent,\n          isCobraDependent=cc.isCobraDependent,\n          isGroupDependent=cc.isGroupDependent,\n          group=cc.group,\n          cobraEnrolled=cc.cobraEnrolled,\n          includeWaived=cc.includeWaived,\n          excludeEnrolled=cc.excludeEnrolled,\n          isBenefitDependent=cc.isBenefitDependent,\n          isBasePlan=cc.isBasePlan,\n          isFamilyDependent=cc.isFamilyDependent,\n          familyStatus=cc.familyStatus\n        )\n  return\n```",
    "data_models": "[CarrierClassification, NoyoCompanyPlanInfo]"
  },
  "BENINTEG-3668": {
    "key": "BENINTEG-3668",
    "issue": "Kiterocket company faced blocked transactions due to a warning: 'Member group is required when there is more than one available member group for vision plan'.",
    "issue_summary": "Blocked transactions occurred for Kiterocket due to a missing member group when multiple member groups were available for a vision plan. The system was working as expected, but plan mapping issues caused the problem.",
    "rca": "Blocked transactions were created due to plan mapping issues. These issues auto-resolved once the mapping was corrected, indicating that the system was functioning as expected but had incorrect initial mappings.",
    "steps_taken": "The issue was identified as a plan mapping problem. Once the mapping issues were resolved, the blocked transactions were retried and successfully processed. The system automatically handled the retries, resolving the issue.",
    "data_models": "[]"
  },
  "BENINTEG-3666": {
    "key": "BENINTEG-3666",
    "issue": "Open Enrollment (OE) transaction was blocked for a single employee, Douglas Kunzman, in benefit class 0004. The employee should have vision benefits under a specific plan ID, but the mapping was not pulling over correctly.",
    "issue_summary": "The OE transaction for employee Douglas Kunzman was blocked due to incorrect mapping of the vision benefits plan ID in benefit class 0004. The system was not pulling the correct mapping for the Noyo configuration.",
    "rca": "As plan mappings were fixed, the blocked transactions got auto-resolved, which was the expected behavior. The system was working as expected once the mappings were corrected.",
    "steps_taken": "The issue was identified as a plan mapping problem. Once the mappings were corrected, the blocked transactions were automatically resolved. The comments indicate that the transaction went through successfully after the fix.",
    "data_models": "[CompanyCarrierLineInfo]"
  },
  "BENINTEG-3664": {
    "key": "BENINTEG-3664",
    "issue": "We are receiving blocked transactions for open enrollments and new hire due to issues with Noyo plan mappings.",
    "issue_summary": "Blocked transactions for open enrollments and new hire due to missing or incorrect Noyo plan mappings for specific plans.",
    "rca": "The root cause of the issue was incorrect steps taken in managing Noyo plan mappings, specifically the deletion of subgroups and bill groups for prior plan years, which were necessary for plan mapping. This led to errors in plan mapping and blocked transactions.",
    "steps_taken": "The initial step taken was to delete duplicate subgroups, bill groups, and plan IDs for the prior plan year, which did not resolve the issue. It was later identified that deleting older carrier classifications was incorrect, and the classifications from the previous year were restored, which resolved the issue.",
    "data_models": "[NoyoCompanyPlanInfo]"
  },
  "BENINTEG-3663": {
    "key": "BENINTEG-3663",
    "issue": "Coreweave Inc requires an additional REF*17 segment in the 2300 loop for all subscribers and dependents eligible for medical plans, as requested by the carrier. This is a client-specific requirement that needs to be implemented in the EDI feed.",
    "issue_summary": "Coreweave Inc needs an additional REF*17 segment in the 2300 loop for medical plan subscribers and dependents, but the current EDI configuration does not support client-specific mappings.",
    "rca": "The EDI feed is not currently configured to support client-specific mappings like the REF*17 segment for Coreweave Inc. The feature was not implemented initially because there was no client with this requirement until now. The feed was active with eBN, and the implementation request was initially canceled with USP.",
    "steps_taken": "The task was prioritized for the current sprint with a due date of Feb 14. A related ticket was created to build the feature, and the current ticket was closed after prioritizing the task.",
    "data_models": "[]"
  },
  "BENINTEG-3659": {
    "key": "BENINTEG-3659",
    "issue": "The admin reported that the group's Principal feed was not working correctly, and forms were being sent unexpectedly. Despite checking mappings, configurations, and debugging with Noyo, the issue persisted.",
    "issue_summary": "The group's Principal feed was malfunctioning, causing unexpected form submissions. The root cause was identified as a manual data entry error where the group was incorrectly ingested on Vericred instead of Noyo.",
    "rca": "The root cause of the issue was a manual data entry error by operations, where the group was incorrectly ingested on Vericred using the Vericred retool, instead of being routed to Noyo.",
    "steps_taken": "The issue was resolved by rerouting the group to Noyo. The following code snippet was used to debug and fix the issue: ```ncc = NoyoCompanyCarrier.objects.filter(company=\"662281ae550d0959f80dd0b5\")[0] return ncc.get_or_create_communication_detail()```",
    "data_models": "[NoyoCompanyCarrier]"
  },
  "BENINTEG-3648": {
    "key": "BENINTEG-3648",
    "issue": "The employee's dentist is showing COBRA inactive despite the employee having completed COBRA coverage and having a premium payment debited. The enrollment forms were not submitted due to a 'GROUP_ID_MISSING' error.",
    "issue_summary": "The issue was that the enrollment forms for COBRA coverage were not sent due to a 'GROUP_ID_MISSING' error, even though a group ID was present and listed on the enrollment form.",
    "rca": "Pending actions do not get queued if they previously failed due to a GROUP_ID_MISSING error. This caused the enrollment forms not to be sent to the carriers.",
    "steps_taken": "The form submission for the employee was retriggered to account for the updated group_id, and the forms were successfully sent out. Additionally, a product ticket was created to handle this issue automatically in the future. Form sending was retriggered for all impacted employees to prevent further issues.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-3629": {
    "key": "BENINTEG-3629",
    "issue": "Employee Daniel Whitehead's dental enrollment is incorrectly mapped to Noyo PLAN 9 - $1500 MAX, ORTHO instead of the correct plan TX Dental PPO 1500-1500 (100/80/50) with Rippling.",
    "issue_summary": "Incorrect mapping of dental enrollment for employee Daniel Whitehead, where the plan was mapped to Noyo PLAN 9 instead of the correct TX Dental PPO plan.",
    "rca": "There was a bug in the system that caused the incorrect plan ID to be passed, leading to the wrong mapping of the dental plan.",
    "steps_taken": "The bug in the system was fixed, and the correct plan ID is now being passed. A snapshot was resent to ensure the correct mapping.",
    "data_models": "[]"
  },
  "BENINTEG-3628": {
    "key": "BENINTEG-3628",
    "issue": "The employee elected to enroll their dependent as 'non-binary', but Aetna does not recognize this as an allowable sex, which could lead to the dependent being terminated from coverage.",
    "issue_summary": "The dependent's sex was selected as 'non-binary', which is not recognized by Aetna, potentially leading to termination of coverage. The request is to update the dependent's sex to 'female' for transmission to the carrier.",
    "rca": "This is a Noyo feature request, indicating that the issue is related to the capabilities of the Noyo system and not an engineering problem.",
    "steps_taken": "The issue was identified as similar to another ticket (BENINTEG-3622), and both tasks were assigned to the same person to potentially club the fixes together. The fix should be implemented on the Noyo end.",
    "data_models": "[]"
  },
  "BENINTEG-3626": {
    "key": "BENINTEG-3626",
    "issue": "Candid Health's PEO group is experiencing widespread missed Dental enrollments with Guardian, while other lines of coverage like Voluntary Life and Vision are unaffected.",
    "issue_summary": "The PEO group for Candid Health is facing an issue where employees are not being enrolled in Dental coverage with Guardian, despite being enrolled in other lines of coverage. The issue seems to be related to the feed/connection to Guardian for this specific line of coverage.",
    "rca": "The root cause of the issue was identified as sending deprecated plans to Noyo, which resulted in missed enrollments for the Dental line of coverage with Guardian.",
    "steps_taken": "The issue was resolved by fixing the problem of sending deprecated plans to Noyo. Snapshots were resent for all employees in the group for Guardian. An error for one employee was identified and is being looked into: {\"message\": \"Plan 631c7c6b-4a69-4fb2-bfc9-b37bced340e8 is not available for benefit class 0067\", \"status\": 422}.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3625": {
    "key": "BENINTEG-3625",
    "issue": "The employee Aditya Malik's plan change was not reflected in Anthem's system, causing discrepancies in the insurance data transmission.",
    "issue_summary": "The issue was that Aditya Malik's plan change was not updated in Anthem's system due to incorrect plan mapping, leading to errors in data transmission via the Noyo API.",
    "rca": "The root cause was the presence of old and discontinued plan mappings in the system, which were being used instead of the current plan mappings. This caused the system to send outdated plan information to Anthem.",
    "steps_taken": "The steps taken to resolve the issue included identifying and deleting the old and discontinued plan mappings from the system. The following script was executed to delete the incorrect mappings:\n\n```python\ncompany = Company.objects.get(id=\"64f793e8cd1b144ce3e06880\")\ncpi = InsuranceCompanyPlanInfo.objects.get(id=\"66fee31ae43f34ee8a64df7c\")\nncpi = NoyoCompanyPlanInfo.objects.filter(\n  noyo_plan_id=\"77ea7a39-b4ac-43f0-a7c9-bfc3ceed14ab\",\n  company=company,\n  company_plan_info=cpi\n  )\nncpi.delete()\nreturn None\n```\n\nAfter deleting the stale mappings, a Noyo amendment was sent for the employee, and it was verified that the correct plan was being populated for 2025.",
    "data_models": "[Company, InsuranceCompanyPlanInfo, NoyoCompanyPlanInfo]"
  },
  "BENINTEG-3623": {
    "key": "BENINTEG-3623",
    "issue": "Ops team is receiving reports for blocked connection requests to OneKonnect due to 'Missing FEIN', even though FEIN is present in Rippling, causing manual intervention.",
    "issue_summary": "Connection requests to OneKonnect are being incorrectly blocked due to a false 'Missing FEIN' error, despite FEIN being present in Rippling.",
    "rca": "An incorrect check for missing FEINs in the connection eligibility checks was causing the connections to be blocked.",
    "steps_taken": "The issue was fixed as part of another ticket (BENINTEG-3686), which corrected the check for missing FEINs, unblocking approximately 60 connection requests. Monitoring for similar blockers has been requested in a separate ticket.",
    "data_models": "[]"
  },
  "BENINTEG-3622": {
    "key": "BENINTEG-3622",
    "issue": "The issue is that the non-binary gender coding for a dependent is being transmitted as 'X' to Aetna, whereas it should be 'U'. This is causing incorrect data transmission to the carrier.",
    "issue_summary": "The non-binary gender coding for a dependent is being transmitted as 'X' instead of 'U' to Aetna, which is causing incorrect data transmission.",
    "rca": "The root cause of the issue is that Noyo, the vendor responsible for handling carrier-specific cases, is not correctly mapping the non-binary gender code for Aetna. Noyo uses 'X' as the standard for non-binary, but Aetna requires 'U'.",
    "steps_taken": "The team decided to work with Noyo to initiate a short-term fix and to establish a long-term solution. A support ticket was suggested to be opened with Noyo to address the data fix on their end, as this is a carrier-specific logic that Noyo should handle.",
    "data_models": "[]"
  },
  "BENINTEG-3620": {
    "key": "BENINTEG-3620",
    "issue": "OneKonnect reported production file failures due to incorrect effective dates being passed, affecting multiple customers including Garner Health Technology.",
    "issue_summary": "Production file failures occurred because benefits were being sent with an effective date of 1/1/2025 and a termination date of 12/31/2024, which appeared to be waived benefits.",
    "rca": "There was a new expectation from the carrier that when invalidated coverage is sent, the effective date should be equal to the expiration date. This expectation was not initially met, leading to the issue.",
    "steps_taken": "The team reviewed the datasets and confirmed that the issue was not related to a recent fix. It was identified as a system behavior where the termination date was set before the effective date. The implementation was updated to ensure that the termination date is the same as the effective date for invalidated coverages. Communication with OneKonnect was initiated to align on expectations, and the necessary changes were implemented and tested to resolve the issue.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3619": {
    "key": "BENINTEG-3619",
    "issue": "Employee's Guardian Dental coverage effective date was incorrectly set to 12/1/2024 instead of 8/1/2024, causing issues with filing dental claims.",
    "issue_summary": "A QLE event caused an incorrect coverage effective date for Guardian Dental coverage via Noyo API, leading to a gap in coverage and issues with dental claims.",
    "rca": "There was a wrong expectation from the carrier, which went against the documentation provided with the vendor. The system was working as expected, but the carrier required a manual snapshot to override the dates for Guardian to process the coverage correctly.",
    "steps_taken": "A manual snapshot was sent to override the effective dates to 8/1/2024. The JSON transmitted included the corrected effective dates for the employee's coverage. The field 'latest_change_effective_date' was updated to reflect the correct date, and a new snapshot was pushed to Noyo.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-3618": {
    "key": "BENINTEG-3618",
    "issue": "UHC transactions are not passing on feeds to Noyo, despite being live and no setup tasks pending. Information is not flowing to Noyo as expected.",
    "issue_summary": "UHC transactions for Hakkoda are not being transmitted to Noyo as expected, even though the setup appears complete and OE closed on 11/26/24.",
    "rca": "The discrepancies were reported by the carrier via Noyo and did not require engineering involvement. All transmissions were sent out on time as expected.",
    "steps_taken": "The issue was resolved without engineering involvement. It was confirmed that transmissions were sent, and the discrepancies were due to carrier reports via Noyo. The ticket was marked as resolved after confirmation.",
    "data_models": "[]"
  },
  "BENINTEG-3617": {
    "key": "BENINTEG-3617",
    "issue": "The setup tasks for VANNEVAR LABS, INC related to Noyo were completed but reopened unexpectedly, causing delays in the Open Enrollment transactions for a 1/1 renewal API group.",
    "issue_summary": "Setup tasks for VANNEVAR LABS, INC related to Noyo were not staying resolved due to duplicate plan mappings being created.",
    "rca": "Duplicate plan mappings were created, which were not visible in the frontend, causing the tasks to reopen.",
    "steps_taken": "The incorrect mappings were identified and deleted using the following code:\n\n```python\nfrom insurance.models.noyo_models import NoyoCompanyPlanInfo\nncpis_to_delete = [\"67814986f6b5e816b89dd08e\", \"67814986019c79073a0f11fe\"]\nncpis = NoyoCompanyPlanInfo.objects.filter(id__in=ncpis_to_delete)\nfor ncpi in ncpis:\n  ncpi.delete()\nreturn None\n```\nAfter deletion, the tasks were marked as resolved and monitored to ensure they did not reopen.",
    "data_models": "[NoyoCompanyPlanInfo]"
  },
  "BENINTEG-3613": {
    "key": "BENINTEG-3613",
    "issue": "The issue faced was that a new hire enrollment (NHE) did not send to Noyo for the group Anvyl Technologies, and there was an error indicating a missing Noyo plan mapping for the Anthem Gold PPO 3000/0%/3000 w/HSA plan.",
    "issue_summary": "The issue was a mapping problem where the NHE did not send to Noyo due to missing Noyo plan mapping information for the Anthem Gold PPO 3000/0%/3000 w/HSA plan.",
    "rca": "The root cause of the issue was that there were two plans on Noyo's end with 'noyo_eligible_member_types' as 'all', making it impossible to distinguish between them. Additionally, one of the plans was discontinued, and discontinued plans were not shown in the NPM.",
    "steps_taken": "The steps taken to resolve the issue included confirming with Noyo to distinguish between the plans by changing one to 'employee-with-dependents' and the other to 'employee'. Once confirmed, the mapping was deleted and recreated. The discontinued plan mapping was also deleted. The following code snippet was used to delete the discontinued plan mapping: `return NoyoCompanyPlanInfo.objects.filter(company_plan_info=\"670d62f711546c06c4c69b8d\", id=\"671b4fe2f804eeade0dfe0d2\").delete()`.",
    "data_models": "[NoyoCompanyPlanInfo]"
  },
  "BENINTEG-3611": {
    "key": "BENINTEG-3611",
    "issue": "The Open Enrollment (OE) transaction for the employee Cindy Fornoles was blocked due to an error from Noyo stating 'Employee not found matching your query'. This was preventing the OE transaction from proceeding.",
    "issue_summary": "The OE transaction was blocked because the employee Cindy Fornoles could not be found in Noyo's system, likely due to a mismatch in employee IDs between Rippling and Noyo.",
    "rca": "The root cause was identified as an error in how Noyo members were mapped to users in Rippling. Specifically, when the employee updated their SSN and name, it likely triggered the creation of a new Noyo member ID, which was not persisted in Rippling, leading to the continued use of the older ID. Additionally, the original Noyo member was deleted on Noyo's side, which required further investigation with the Noyo team.",
    "steps_taken": "The Noyo ID was updated and the Pending Action (PA) was re-run to unblock the transaction. Further investigation was initiated to understand why the original Noyo member was deleted and why the new ID was not persisted.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-3610": {
    "key": "BENINTEG-3610",
    "issue": "Guardian does not allow a family to be in more than one benefit class at any one time, causing ~200 blocked transactions (BTs) for the PEO.",
    "issue_summary": "The issue was that Guardian does not allow a family to be in more than one benefit class at any one time, leading to blocked transactions due to a PEO mapping error.",
    "rca": "There was a bug in the system causing older coverages to be sent with different benefit classifications. This was due to merging coverages based on the Noyo plan ID, where coverages for 2024 and 2025 renewals were merged incorrectly, causing the identifier to be sent by the older logic.",
    "steps_taken": "The engineering team identified that two coverage blocks were being sent for the same line of coverage in a single payload. The issue was traced to a method in the codebase, specifically in the file `peo_guardian.py`. A pull request was created and deployed to fix the merging logic. After deployment, the issue was monitored, and it was confirmed that the errors were resolved.",
    "data_models": "[InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-3609": {
    "key": "BENINTEG-3609",
    "issue": "The Harrison Group General is facing a blockage in Open Enrollment (OE) transactions due to multiple benefit_class options for dental coverage, causing errors in benefit transactions (BTs).",
    "issue_summary": "Harrison Group General is experiencing blocked OE transactions due to multiple benefit_class options for dental coverage, which are not mapping correctly to employees.",
    "rca": "The root cause of the issue is that the benefit_class_identifiers are mapped only to life plans and not to dental plans, leading to multiple benefit class options for dental plans. This needs to be fixed on the carrier classification side.",
    "steps_taken": "The issue is being addressed in a related ticket (BENINTEG-1347), where the necessary changes to the carrier classification are being made to resolve the mapping issue.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3606": {
    "key": "BENINTEG-3606",
    "issue": "Blocked OE transactions for C & F Enterprises due to bill group not populating correctly in the snapshot payload, causing errors and preventing successful processing.",
    "issue_summary": "OE transactions for C & F Enterprises were blocked because the bill group was not populating correctly in the snapshot payload, leading to errors such as 'Multiple bill group options' and 'Bill group 20 is not valid'.",
    "rca": "Pending actions were not retried even though they were in a failed state due to certain issues with the setup. This required manual reprocessing of all blocked transactions, which then went through successfully.",
    "steps_taken": "Reviewed and corrected the bill group setup. Manually reprocessed blocked transactions, which then processed successfully. Investigated why transactions were not auto-retried and identified a larger issue with processing delays, which was being addressed separately.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-3604": {
    "key": "BENINTEG-3604",
    "issue": "Limble Solutions faced a blockage in Open Enrollment (OE) transactions due to missing class codes in the payload, causing around 100 Benefit Transactions (BTs) to be blocked.",
    "issue_summary": "The issue was that the Division IDs and Eligibility class codes were not populating in the transaction payloads for Limble Solutions, leading to blocked OE transactions.",
    "rca": "The root cause was identified as a legacy issue with member requests where additional carrier classifications were present, which should not have been there, causing the Noyo API to reject the requests with a 422 response code.",
    "steps_taken": "The steps taken to resolve the issue included spoofing and deleting the additional carrier classifications, raising a pull request to address the legacy issue with member requests, and confirming that the transactions went through successfully after the fix.",
    "data_models": "[PendingAction, EnrollmentEvent]"
  },
  "BENINTEG-3603": {
    "key": "BENINTEG-3603",
    "issue": "The employee Jonathan Berzanar faced an issue where the Rippling PEO (Tech) payload reflected the correct enrollment information, but an error occurred when trying to push through a snapshot. The error message indicated that coverages were found in multiple benefit classes for the period beginning 2023-12-01, which is not allowed by Guardian.",
    "issue_summary": "The issue was caused by a plan mapping problem where coverages were found in multiple benefit classes for the same period, which is not permitted by Guardian.",
    "rca": "There was a plan mapping issue that auto-resolved either due to the mappings being corrected or because the retro transmission period had passed. The employee was unblocked, and a separate internal thread was started to further investigate the root cause.",
    "steps_taken": "The issue resolved itself as no coverages were populating for the employee for Rippling PEO (Tech) due to being past the retro coverage window. Noyo amendments were successfully pushed through for the employee, resolving the issue.",
    "data_models": "[]"
  },
  "BENINTEG-3602": {
    "key": "BENINTEG-3602",
    "issue": "Customer requested to turn off Dual Communications for three Rippling instances to avoid terminations during a merger, but forms were still sent to Aetna, causing significant escalation.",
    "issue_summary": "Despite turning off Aetna forms, termination forms were still sent to Aetna due to incorrect communication settings, leading to escalated customer issues.",
    "rca": "The root cause was the presence of a broker email configuration that led to emails being sent despite the dual communication tool being turned off. Additionally, there was a fallback mechanism that defaulted to sending emails to the carrier when no specific configuration was found, which was not accounted for in the dual communication tool.",
    "steps_taken": "The brokerInfo was set to None for the affected companies to stop emails from being sent. A fallback communication method was added to prevent any emails from being sent out. The communication method for Rain Retail was set to NoActionCommunicationDetail to ensure no emails were sent. The broker change for Quilt was reverted as per the customer's request.",
    "data_models": "[CompanyInsuranceInfo, CustomEmailCommunicationDetail, NoActionCommunicationDetail]"
  },
  "BENINTEG-3601": {
    "key": "BENINTEG-3601",
    "issue": "The OE transaction for Kaiser HDHP is blocked due to a mismatch in the sub_group_identifier, causing the transaction to fail.",
    "issue_summary": "The OE transaction for Kaiser HDHP is blocked because the sub_group_identifier is incorrectly set to 0 instead of 1, leading to a failure in finding a matching Noyo plan mapping.",
    "rca": "The issue was caused by a bug where the current SLI's configuration was being passed to the next SLI, resulting in an incorrect sub_group_identifier being used in the transaction payload.",
    "steps_taken": "The bug was identified and fixed as part of an incident fix. The error was due to passing the current SLI's config in the next SLI, which was corrected in the code. The fix was implemented in the following code snippet:\n\n```python\nFile \"/home/ripplinguser/rippling-main/app/insurance/internal_lib/noyo_snapshot/noyo_member_snapshot_payload_generator.py\", line 153\nFile \"/home/ripplinguser/rippling-main/app/insurance/internal_lib/noyo_snapshot/noyo_member_snapshot_payload_generator.py\", line 730\nFile \"/home/ripplinguser/rippling-main/app/insurance/internal_lib/noyo_snapshot/noyo_member_snapshot_payload_generation_utils.py\", line 184\nFile \"/home/ripplinguser/rippling-main/app/insurance/internal_lib/noyo_snapshot/noyo_member_snapshot_payload_generation_utils.py\", line 203\nFile \"/home/ripplinguser/rippling-main/app/insurance/models/noyo_models.py\", line 5449\n```",
    "data_models": "[NoyoCompanyPlanInfo, SubscriberLineInfo]"
  },
  "BENINTEG-3599": {
    "key": "BENINTEG-3599",
    "issue": "The issue was related to the EE salary field being passed incorrectly to OneKonnect for Modular Inc / Sunlife, causing discrepancies with the carrier.",
    "issue_summary": "The salary was being passed in the 'salaryperpayfrequency' field, leading to discrepancies with Sun Life Financial.",
    "rca": "There was no actual issue in the system. The ticket was a request for clarification on the system's behavior, which was then explained by the engineering team.",
    "steps_taken": "The engineering team clarified the behavior of the system, confirming that the salary discrepancies were due to the way salaries are reported after changes, such as renewals. The issue was resolved by providing this clarification.",
    "data_models": "[]"
  },
  "BENINTEG-3598": {
    "key": "BENINTEG-3598",
    "issue": "The employee completed the New Hire Enrollment (NHE) event on January 1, 2025, but the forms were not sent as of January 10, 2025. The forms to Kaiser had to be sent manually, and there was uncertainty about why the forms to Voya and Kaiser were not sent automatically. The reason provided for Voya was 'No communication details'.",
    "issue_summary": "New Hire Enrollment forms were not sent automatically for Ottobooks. The forms to Kaiser and Voya were not sent due to 'No communication details' and unsupported event for carrier communication details.",
    "rca": "The system was working as expected. For Kaiser PEO and Voya, forms are not sent because all enrollments are transmitted via EDI/LDEX files. The EE debugger displaying that forms are not sent for employees covered on these carriers is expected behavior.",
    "steps_taken": "A fix was pushed for Voya to address the behavior where any CCLI in 'Onboarding' state was not transmitted. The next scheduled transmission was expected to contain the employees for transmission. For Kaiser, it was confirmed that the impacted employee was in the latest EDI transmission, and their enrollment should reflect soon. Manual intervention was done to push forms for Kaiser.",
    "data_models": "[InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-3597": {
    "key": "BENINTEG-3597",
    "issue": "E-Block is unable to import their FSA elections in the Wex third-party app integration as no employees are appearing in the eligible employees list during the import process.",
    "issue_summary": "E-Block is facing an issue where they cannot import FSA enrollments for the Wex integration because eligible employees are not appearing in the app, blocking the completion of the FSA app installation.",
    "rca": "The issue was caused by a problem with the handling of supergroups for legacy groups, which prevented eligible employees from appearing in the FSA app.",
    "steps_taken": "The engineering team investigated the issue and unblocked the bug that was preventing eligible employees from showing up. After unblocking, the elections were imported, and the installation was completed. The initial absence of enrollees in the FSA app was identified as a timing issue, which was resolved shortly after.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3596": {
    "key": "BENINTEG-3596",
    "issue": "The Employee Enrollment Notification email did not contain the necessary forms for the employee.",
    "issue_summary": "The Employee Enrollment Notification email was missing forms due to the system working as expected, but there was a misunderstanding about the email settings for attaching forms.",
    "rca": "The system was functioning as expected. The issue arose because the email settings for attaching forms were not configured to include the forms in the emails. The setting to attach forms was set to 'No', and this setting is only visible to the Enrollment Manager.",
    "steps_taken": "The issue was resolved by checking the email settings for the Enrollment Manager, which showed that the option to attach forms with emails was set to 'No'. Once this setting was updated, the forms were expected to be included in the emails.",
    "data_models": "[]"
  },
  "BENINTEG-3595": {
    "key": "BENINTEG-3595",
    "issue": "Employees are being mapped to the wrong dental and vision plans in Guardian. They should be mapped under 0016 but are incorrectly mapped under 0001. Additionally, there is a concern about the plan year effective date being shown as 01/01/2025 instead of the expected 12/01/2024.",
    "issue_summary": "Employees' dental and vision plans were incorrectly mapped in Guardian, and there was a discrepancy in the plan year effective date.",
    "rca": "The issue was related to plan mapping in Noyo and was fixed as part of another ticket. The incorrect mapping was due to a recent bug that was fixed, which corrected the benefit class identifier for new coverages.",
    "steps_taken": "A recent bug fix corrected the benefit class identifier for new coverages. Snapshots were resent for affected employees with the corrected benefit class identifier. For non-TX employees like Tom Kelly, the correct identifier 0016 was sent.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3594": {
    "key": "BENINTEG-3594",
    "issue": "The user is unable to update the carrier contact email for Guardian to service@onedigital.com via the product interface.",
    "issue_summary": "The user faced an issue where they could not update the carrier contact email for Guardian through the product interface, which was identified as a product enhancement requirement.",
    "rca": "The root cause of the issue was identified as a lack of functionality in the product to modify carrier emails via the carrier connections tab. This was categorized as a product enhancement.",
    "steps_taken": "The issue was resolved by adding the ability to modify carrier emails via the carrier connections tab in the product interface. The user was informed that they should now be able to edit this from the UI itself.",
    "data_models": "[]"
  },
  "BENINTEG-3593": {
    "key": "BENINTEG-3593",
    "issue": "The issue faced was the inability to transmit files to the carrier's gateway, causing a blockage in onboarding the group with the carrier.",
    "issue_summary": "The problem was that files were not getting through the carrier's gateway, and the carrier couldn't provide an error on the file. The root cause was identified as an issue with the carrier's SFTP.",
    "rca": "The root cause of the issue was identified as a problem with the carrier's SFTP, which was eventually fixed on their end.",
    "steps_taken": "The steps taken included revising SFTP credentials, file name, and onboarding documents. A script was run to delete existing configurations for the company in Stedi, and the company was re-onboarded. Despite these efforts, the error persisted until the carrier resolved the issue on their end.",
    "data_models": "[VendorPartnerCompany, StediPartnerCompanyGroupingPayloadData, BaseVendorPartnerGroupingConfig, StediPartnerTransmissionConfig, CustomStediCommunicationDetail, BaseCompanyCarrierTransmission]"
  },
  "BENINTEG-3592": {
    "key": "BENINTEG-3592",
    "issue": "The admin was unable to update the carrier contact for UHC to a specified email address via the product interface.",
    "issue_summary": "The admin faced an issue where they could not update the carrier contact email for UHC through the product interface due to a lack of functionality.",
    "rca": "The root cause of the issue was the absence of a feature that allows modification of carrier emails via the carrier connections tab. This was identified as a product enhancement requirement.",
    "steps_taken": "A feature was rolled out that enabled the editing of carrier emails, allowing the admin to update the contact email successfully. The issue was then marked as resolved.",
    "data_models": "[]"
  },
  "BENINTEG-3591": {
    "key": "BENINTEG-3591",
    "issue": "The Carrier Transmission tab displays 'Communication type: Email', but when accessing the 'Set up Carrier Connections' section, it shows 'API active' for Principal, causing confusion about the actual communication type for the client's Principal lines.",
    "issue_summary": "Inconsistent display of communication type (Email vs. API) on the Carrier Transmission tab and 'Set up Carrier Connections' section for Principal lines, leading to confusion about the true communication method.",
    "rca": "The issue is categorized as a Product Enhancement, and the fix will be addressed as part of a carrier transmissions rebuild project.",
    "steps_taken": "The issue was confirmed through proxy and screenshots were attached. It was identified as a bug and deemed tricky to resolve immediately. The resolution is planned as part of a larger project to rework carrier transmissions, with a target release date in Q1 2025.",
    "data_models": "[]"
  },
  "BENINTEG-3590": {
    "key": "BENINTEG-3590",
    "issue": "Rippling was not sending the required 3-digit 'Rippling profile ID' to OneKonnect in the EDI file for Aetna, causing compliance issues with Aetna's requirements.",
    "issue_summary": "Rippling was not transmitting the 3-digit 'Rippling profile ID' in the OneKonnect EDI file for Aetna, which was a requirement from Aetna.",
    "rca": "The issue was due to the absence of the 'Rippling profile ID' in the EDI file sent to OneKonnect for Aetna. This was a special case handling requirement that was not previously implemented.",
    "steps_taken": "The code was updated to include the 'Rippling profile ID' in the 'customfield1' of the Employee table in the EDI file. The change was confirmed and pushed to production after ensuring no other custom fields were being used. The update was verified in the EBN transmissions.",
    "data_models": "[Employee]"
  },
  "BENINTEG-3589": {
    "key": "BENINTEG-3589",
    "issue": "There is an incompatibility between Rippling and Noyo in handling situations where employees transition between PEOs, leading to terminated employees not being reinstated correctly after re-hire, causing coverage lapses.",
    "issue_summary": "Rippling and Noyo have a compatibility issue in handling employee transitions between PEOs, where the re-hire information is not correctly processed, leading to coverage lapses due to the use of different employee ID handling methods.",
    "rca": "The issue arises because Rippling and Noyo handle employee IDs differently. Noyo uses a single ID for each employee, while Rippling uses multiple IDs depending on the situation. This discrepancy leads to incorrect processing of re-hire events, as the system does not maintain the historical context of the employee's previous coverage, resulting in coverage lapses.",
    "steps_taken": "To resolve the issue temporarily, Noyo amendments were submitted to correct the employee's status. The long-term solution involves implementing system logic to handle PEO transitions without wiping previous enrollment data. This includes ensuring that the system can intelligently handle termination and re-hire events in the correct order and maintain historical context. A related product ticket (BENINTEG-3616) has been filed to prioritize this fix.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-3564": {
    "key": "BENINTEG-3564",
    "issue": "EE's benefits were effective as of 10/1 but forms were not sent until 12/6. EE enrolled in coverage on 10/28/24, and forms should have sent shortly thereafter.",
    "issue_summary": "Forms for EE's benefits were delayed and sent two months after the effective date due to Rippling not managing forms initially.",
    "rca": "The error while trying to send the form in October was because 'Rippling was not managing forms' as indicated in the pending action log. This property was later changed on December 5, which is why the forms were sent on December 6.",
    "steps_taken": "Reviewed script history to find the timing when the form task was generated. Checked the pending action log which showed that Rippling was not managing forms initially. The property was changed on December 5, allowing the forms to be sent on December 6.",
    "data_models": "[PendingAction]"
  },
  "BENINTEG-3563": {
    "key": "BENINTEG-3563",
    "issue": "Blocked transmission error due to inability to find a matching Noyo plan mapping information for the Voluntary Life Plan, affecting 19 employees.",
    "issue_summary": "The transmission of insurance benefits was blocked because the company carrier plan info (ccli) was not eligible for Noyo, specifically for the Voluntary Life Plan.",
    "rca": "The root cause of the issue was a bug related to plan syncing at Noyo's end, which resulted in the inability to find a matching Noyo plan mapping information.",
    "steps_taken": "The team collaborated with the INS Ops team to verify and update Noyo plan mappings. A sync request was made with Noyo to pull in any missing plans. The sync was completed with Principal, and the issue was resolved as the blocked transmissions were no longer present.",
    "data_models": "[NoyoCompanyPlanInfo]"
  },
  "BENINTEG-3562": {
    "key": "BENINTEG-3562",
    "issue": "Admin is reporting a delay in the forms submission for a new hire, Emily Lott. The forms were expected to be processed within 24 hours of enrollment completion but were delayed.",
    "issue_summary": "The admin reported a delay in the submission of enrollment forms for employee Emily Lott. The forms were submitted much later than the expected 24-hour window after the completion of the enrollment task.",
    "rca": "The delay in form submissions was caused by the infrastructure (ETA framework) used to transmit the transactions. It was experiencing issues, causing automated tasks to be picked up late.",
    "steps_taken": "Communications have been made to the carriers to address the delay issue. The main reason for the delay was identified and communicated to the customer.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3560": {
    "key": "BENINTEG-3560",
    "issue": "Group has 31 blocked transactions for the 'std' plan due to an 'Unknown field' error, suspected to be caused by the 'division' field. The error is related to the Noyo connection, and the transactions are blocked for Guardian plans.",
    "issue_summary": "Blocked transactions for the 'std' plan due to an 'Unknown field' error, suspected to be caused by the 'division' field in the Noyo connection for Guardian plans.",
    "rca": "Blocked transactions have got unblocked via another fix.",
    "steps_taken": "The issue was resolved by another fix, as indicated in the comments.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3559": {
    "key": "BENINTEG-3559",
    "issue": "Forms were being sent unexpectedly for OneKonnect connections that are in production, affecting multiple customers.",
    "issue_summary": "Unexpected form submissions were occurring for OneKonnect connections in production, potentially leading to numerous customer cases.",
    "rca": "A bug was identified as the root cause of the unexpected form submissions for OneKonnect connections.",
    "steps_taken": "The bug was fixed, and the issue was marked as resolved.",
    "data_models": "[]"
  },
  "BENINTEG-3556": {
    "key": "BENINTEG-3556",
    "issue": "The employee, Brayden Cruz, is unable to add a newborn child as a dependent to his COBRA open enrollment plans. He can only select plans from his initial COBRA enrollment, which he does not want.",
    "issue_summary": "Brayden Cruz is facing an issue where he cannot add his newborn child to his COBRA open enrollment plans due to being restricted to selecting plans from his initial COBRA enrollment.",
    "rca": "The root cause was identified as the employee not being able to change their open enrollment coverage. The integration team confirmed that the forms for this employee had already been sent, which restricted the ability to modify the coverage.",
    "steps_taken": "The open enrollment event was reopened, and the employee was guided to finalize the event by adding the new child before a specified deadline. Once the employee completed the task, the ticket was moved to the benefits integration team to update the carrier about the change. All pending actions were sent to the respective carriers for the employee.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent, PendingActionGroup, PendingAction]"
  },
  "BENINTEG-3555": {
    "key": "BENINTEG-3555",
    "issue": "The member, Medea Giordano, is experiencing issues due to not being enrolled in coverage because of an Anthem plan mapping error when attempting to submit a Noyo amendment.",
    "issue_summary": "An Anthem plan mapping error occurred when submitting a Noyo amendment for Medea Giordano, causing enrollment issues.",
    "rca": "The root cause analysis category is 'Product Enhancement' with a subcategory of 'Needs Prioritisation', but no specific detailed reason is provided in the ticket.",
    "steps_taken": "The issue was flagged to the EDI/API team, who confirmed that the Anthem plan was mapped correctly. The issue was then assigned to a team member related to ongoing plan mapping issues and was subsequently resolved.",
    "data_models": "[]"
  },
  "BENINTEG-3553": {
    "key": "BENINTEG-3553",
    "issue": "Collective Health reported missing enrollments in the EDI files sent on 1/10/2025. The first file had no medical or dental enrollments, and the second file had only 801 medical enrollments and no vision enrollments.",
    "issue_summary": "The EDI files sent to Collective Health on 1/10/2025 were incomplete, missing a significant number of enrollments due to an issue with the file generation process.",
    "rca": "The issue was caused by out-of-order execution of the fragments pipeline due to delayed ETAs, which exceeded the merge step threshold of 2 hours.",
    "steps_taken": "A new EDI file was generated and sent to Collective Health to resolve the issue.",
    "data_models": "[]"
  },
  "BENINTEG-3552": {
    "key": "BENINTEG-3552",
    "issue": "The broker from Capitol Benefits reported not receiving emails from Rippling regarding Huntress Labs and not seeing termination tasks in their insurance task dashboard.",
    "issue_summary": "The broker from Capitol Benefits was not receiving emails and termination tasks were not visible in their insurance task dashboard due to the broker closing the tasks themselves.",
    "rca": "The system was functioning as expected. The broker had closed the tasks themselves, which is why they were not visible.",
    "steps_taken": "The engineering team investigated the issue and found that the tasks were marked as done by the broker themselves. A screenshot was provided for reference, confirming the broker's action.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3549": {
    "key": "BENINTEG-3549",
    "issue": "The Principal API connection for Heredity Capital is not working, causing automatic transactions to Noyo to fail. This results in missed enrollments, requiring manual amendments.",
    "issue_summary": "Automatic transactions for Heredity Capital's Principal API connection to Noyo are not being sent, despite correct setup, leading to missed enrollments.",
    "rca": "The company's Noyo connection was not set up until January 10, 2025. The system does not differentiate between whether communication details are not set up by choice, leading to no setup tasks or blocked transactions being flagged.",
    "steps_taken": "Resolved four Noyo setup tasks on January 10, 2025, which allowed the transactions to be sent automatically. The issue was identified as a timing problem, as the tasks were cleared right before the Jira was filed.",
    "data_models": "[]"
  },
  "BENINTEG-3548": {
    "key": "BENINTEG-3548",
    "issue": "The employee Richard Neil Kalata submitted a QLE on 1/07 with an effective date of 1/01/2025, but the submission has not been made to the carriers, Principal and BCBS. The task is still in 'to-do' status.",
    "issue_summary": "The QLE form for employee Richard Neil Kalata was not submitted to the carriers Principal and BCBS due to a delay in processing, leaving the task in 'to-do' status.",
    "rca": "The issue was caused by ETAs having up to 6 days of start delay, which resulted in the late sending of these enrollments. Additionally, there was a bug in the runImmediately function that prevented the Pending Action from running on the day it was created.",
    "steps_taken": "The emails for the employee were sent after identifying the delay. The bug in the runImmediately function was fixed, and the Pending Action was transmitted on 01/11. The forms were eventually sent, and the delay was attributed to the ETAs being throttled.",
    "data_models": "[PendingAction]"
  },
  "BENINTEG-3547": {
    "key": "BENINTEG-3547",
    "issue": "The effective date for the group Beehive Industries, LLC was incorrectly set to an outdated 2024 date in the Cigna system, causing data overwrites.",
    "issue_summary": "The renewal file for Beehive Industries, LLC was using an outdated 2024 effective date, leading to data overwrites in the Cigna system.",
    "rca": "The issue was caused by a file generated using the retool, which included the outdated 2024 effective date.",
    "steps_taken": "A test file was generated to the internal server without any 2024 effective dates. A fresh ingestion file was created and marked as accepted. A production file was generated and sent to the internal test server to verify the fix. The last snapshot was used, and no 2024 coverages were found in the group's feed. The process of unchecking the last snapshot and pending actions, then marking it as accepted, was completed to resolve the issue.",
    "data_models": "[]"
  },
  "BENINTEG-3545": {
    "key": "BENINTEG-3545",
    "issue": "The system is sending duplicate snapshots to Noyo for the same employees on the same day, which is causing issues with Noyo's system logic.",
    "issue_summary": "The system is sending duplicate snapshots to Noyo for the same employees on the same day due to multiple pending actions created for each carrier associated with the company.",
    "rca": "The issue is categorized as an Ops Issue with the subcategory 'Wrong Expectation - System working as expected'. The system is designed to send a snapshot for each pending action, and when multiple carriers are associated with a company, multiple pending actions are created, leading to multiple snapshots being sent on the same day.",
    "steps_taken": "The team acknowledged that the system is working as expected by sending snapshots for each pending action. A follow-up with Noyo was planned to gather more details and potentially create a feature request to address the concern.",
    "data_models": "[PendingAction]"
  },
  "BENINTEG-3543": {
    "key": "BENINTEG-3543",
    "issue": "The admin wanted to update the 'send email securely' option to 'Yes' in the carrier transmission tab, but it was not updating properly and was showing as 'No'.",
    "issue_summary": "The 'send email securely' option in the carrier transmission tab was not updating correctly due to a UI bug, even though the backend had the correct value.",
    "rca": "The issue was due to a UI bug that displayed the 'send email securely' option incorrectly. The backend had the correct value set to 'True', but the UI was not reflecting this change. This UI issue is planned to be fixed in an upcoming rework of the carrier-transmissions tab.",
    "steps_taken": "The backend property was checked and confirmed to be set to 'True'. The issue was identified as a UI bug, and a new Jira ticket (BENINTEG-3736) was created to track the fix in the upcoming UI rework. The current issue was marked as fixed since the backend had the correct value.",
    "data_models": "[CustomEbnCommunicationWithCustomEmailDetail]"
  },
  "BENINTEG-3542": {
    "key": "BENINTEG-3542",
    "issue": "COBRA enrollments are not being transmitted to the carrier, causing concerns for Townsend Management Services Group, LLC.",
    "issue_summary": "COBRA enrollments are not flowing over to the carrier because BenAdmin is not sending COBRA enrollment forms. The root cause is that communication is set to 'None' for all carriers, preventing form transmission.",
    "rca": "As per the company configuration, communication is set as 'None' for all carriers, which is why Rippling is not sending COBRA forms to the carriers.",
    "steps_taken": "The issue was identified as a configuration problem where communication was set to 'None'. The engineering team suggested enabling carrier communications from the carrier-transmissions tab. Debugging involved checking the CompanyInsuranceInfo and verifying the communication settings using the following code:\n\n```python\ncii = CompanyInsuranceInfo.get_or_none(company=\"66689798923b71b70d5b07f9\")\ncarrier = USBenefitsCarrier.get_or_none(id=\"5c4ee3d0c592910f37fe9c77\")\nisRipplingManagingForms = cii.isRipplingManagingForms()\nprint(f\"isRipplingManagingForms -> {isRipplingManagingForms}\")\nreturn cii.getCustomCarrierCommunication(carrier)\n```",
    "data_models": "[CompanyInsuranceInfo, USBenefitsCarrier]"
  },
  "BENINTEG-3540": {
    "key": "BENINTEG-3540",
    "issue": "Aetna flagged 18 employees for discrepancies in terminated plans, requiring corrections. The issue persisted despite attempts to fix it using available Ops tools, necessitating engineering intervention.",
    "issue_summary": "Discrepancies in terminated plans for 18 employees flagged by Aetna, requiring corrections. The issue persisted despite attempts to fix it using available Ops tools, necessitating engineering intervention.",
    "rca": "The root cause analysis was not detailed in the ticket, but it involved discrepancies in the CSA suffix for terminated plans, which needed to be corrected from 015 to 020.",
    "steps_taken": "The team reviewed the discrepancies and updated the CSA information in the provided spreadsheet. Engineering notes were shared, and after review with Noyo, the issue was resolved and closed.",
    "data_models": "[]"
  },
  "BENINTEG-3539": {
    "key": "BENINTEG-3539",
    "issue": "The company Simple Modern needs to change the email address used for the EDI file feed for their Delta Dental plan, but they are unable to make this change through the carrier transmissions tab.",
    "issue_summary": "Simple Modern requires an update to the email address used for the Delta Dental EDI file feed, but the change cannot be made through the carrier transmissions tab.",
    "rca": "The issue falls under the EBN category, specifically related to tooling, indicating a limitation or issue with the current tools used for managing EDI file feeds.",
    "steps_taken": "The email address was updated using the EBN Tools available at the provided Retool link.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3538": {
    "key": "BENINTEG-3538",
    "issue": "Texas based employees are not mapping into the correct plan for Guardian Dental coverage, causing 6 blocked transactions. Additionally, a separate employee transitioned from W2 to 1099 contractor and enrolled in Cobra vision, leading to a COBRA orphan situation.",
    "issue_summary": "Employees in Texas are not correctly mapped to Guardian Dental plans due to unmapped plans from last year, causing blocked transactions. A separate issue involves a contractor's classification not aligning with carrier setup.",
    "rca": "The root cause of the issue is that last year's plans were not mapped, leading to incorrect plan mapping for employees.",
    "steps_taken": "The issue was addressed by mapping the plans using a webscript. The script iterates over NoyoCompanyPlanInfo objects and updates the company plan information with the correct mappings. The script snippet used is:\n\n```python\nfor ncp in NoyoCompanyPlanInfo.objects.filter(company_plan_info=\"66feddd8915aba1c34d8b771\"):\n    NoyoCompanyPlanInfo.create_or_update(\n      company_plan_info=\"653fd708f0eeed51a3c72985\",\n      company=ncp.company,\n      noyo_group_id=ncp.noyo_group_id,\n      noyo_plan_id=ncp.noyo_plan_id,\n      noyo_eligible_member_types=ncp.noyo_eligible_member_types,\n      noyo_line_type=ncp.noyo_line_type,\n      update={\n        \"eligible_classification_values\": ncp.eligible_classification_values,\n        \"eligible_carrier_classifications\": ncp.eligible_carrier_classifications\n        }\n      )\n  return\n```\n\nAdditionally, it was noted that the carrier classification setup includes all employees but not all contractors, which needs adjustment.",
    "data_models": "[NoyoCompanyPlanInfo]"
  },
  "BENINTEG-3536": {
    "key": "BENINTEG-3536",
    "issue": "Enrollment forms for employees were generated and sent to the broker and admin via email one month after the employees completed their enrollment.",
    "issue_summary": "The enrollment forms for employees were sent to the broker and admin on 08/01/2025, even though the employees completed their enrollment on 18/12/2024. The expected behavior was to send the forms within 1 business day.",
    "rca": "The main reason for the delay in sending the enrollment forms was due to the infrastructure (ETA framework) used to transmit the transactions, which was experiencing issues and causing automated tasks to be picked up late.",
    "steps_taken": "The issue was investigated, and it was identified that the ETA framework was causing delays. The client was informed about the root cause, and the issue was monitored for any further client feedback.",
    "data_models": "[]"
  },
  "BENINTEG-3535": {
    "key": "BENINTEG-3535",
    "issue": "The admin reported that the employee's enrollment form was not sent to Guardian despite the debugger indicating 'Yes Need to send one more request'.",
    "issue_summary": "The employee's enrollment form was not transmitted to Guardian even though the debugger showed that a request needed to be sent.",
    "rca": "The root cause analysis category is 'Documentation', but no specific description was provided. The issue seems to be related to a discrepancy in the form transmission process.",
    "steps_taken": "The issue was resolved as the admin confirmed that the employee is now active with Guardian. The debugger also shows that the forms were sent on 1/9/25. No specific code snippets or detailed steps were provided in the ticket.",
    "data_models": "[]"
  },
  "BENINTEG-3534": {
    "key": "BENINTEG-3534",
    "issue": "There are 84 Noyo Guardian transactions blocked due to the error message: 'Ltd lines of coverage require volume for Guardian'. This is blocking transactions for a 1/1 OE API group.",
    "issue_summary": "Noyo Guardian transactions are blocked due to missing LTD volume information, which is required for processing. This issue is linked to a feature flag that has not been enabled yet.",
    "rca": "The root cause of the issue is a business logic change that requires LTD volume information for Guardian transactions, which is not being processed due to a feature flag that has not been enabled.",
    "steps_taken": "Confirmed that LTD volumes were present in Rippling enrollment details. Identified a related issue (BENINTEG-3449) where it was confirmed that there isn't a fix that Ops can push themselves. Requested engineering to push a fix to allow these transactions to be sent to Noyo.",
    "data_models": "[]"
  },
  "BENINTEG-3533": {
    "key": "BENINTEG-3533",
    "issue": "Voltus/Cigna production files did not go out as expected after the new plan year commenced, causing manual intervention to send files.",
    "issue_summary": "Production files for Voltus/Cigna did not transition to automation after the new plan year started, requiring manual intervention to send files due to validation errors.",
    "rca": "The system was working as expected, but there was a misunderstanding regarding the transition from INGESTING to PROD status. The files were not automatically moved to production because the connection to production was not marked via the tool. Additionally, there were validation errors due to missing required properties in the data.",
    "steps_taken": "Test files were run with different settings to identify the issue. The cutover process was completed manually using the coverage reference date, which allowed the files to be sent successfully. The issue was identified as a gap in carrier classification mapping, and it was confirmed that files are now sending automatically without errors.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3531": {
    "key": "BENINTEG-3531",
    "issue": "Kaiser reported that the 1/8/2024 file included duplicate entries for employees, causing the file size to be almost double its normal size. The carrier cannot process the file with duplicates and has requested a new file. Additionally, terminations from the 1/8 file need to be resent.",
    "issue_summary": "The 1/8/2024 file sent to Kaiser contained duplicate employee entries due to incorrect webscript execution, leading to a file size almost double its normal size.",
    "rca": "The issue was caused by incorrect webscript execution, which led to partial uploads and the creation of duplicate entries in the file.",
    "steps_taken": "The file was regenerated to remove duplicates and ensure correct entries. The terminations from the 1/8 file were also resent as requested.",
    "data_models": "[]"
  },
  "BENINTEG-3530": {
    "key": "BENINTEG-3530",
    "issue": "Inboxlab Inc. is facing issues with Guardian plans not appearing in the Plan Mapper and outstanding Noyo setup tasks not clearing. Additionally, there are errors related to the Guardian and Anthem setups.",
    "issue_summary": "Guardian plans are not appearing in the Plan Mapper, and there are unresolved Noyo setup tasks related to Anthem plans. The issue might be related to the Guardian setup.",
    "rca": "The issue seems to be auto resolved.",
    "steps_taken": "Deleted and reconfigured the mapping and configuration, reviewed plan mapper for inconsistencies.",
    "data_models": "[NoyoCompanyPlanInfo]"
  },
  "BENINTEG-3529": {
    "key": "BENINTEG-3529",
    "issue": "Anthem: subgroup 0 attempting to populate incorrectly for COBRA enrollees. Should be in subgroup 7000.",
    "issue_summary": "COBRA enrollees were incorrectly being assigned to subgroup 0 instead of subgroup 7000 due to incorrect setup of last year's billing group.",
    "rca": "The issue was caused by a manual data entry error where last year's carrier classifications were deleted and not set up correctly, leading to incorrect mapping of COBRA plans.",
    "steps_taken": "Restored last year's carrier classifications and corrected the setup for last year's billing group to resolve the mapping error for COBRA enrollees.",
    "data_models": "[InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-3528": {
    "key": "BENINTEG-3528",
    "issue": "The employee's payload is not updating with a standard or advanced amendment, and a 'push' data is not working either, potentially due to a failed carrier correction event.",
    "issue_summary": "The issue was that the employee's insurance payload was not updating due to an incorrect expiration of the Vericred Coverage Period ID (VCPI) on the Vericred side, which led to the amendment tab not being visible.",
    "rca": "There was an issue on the Vericred side, which resulted in the VCPI incorrectly getting expired. However, they had moved another VCPI to production. This caused the coverage period to be terminated on their side, leading to the failure in updating the employee's payload.",
    "steps_taken": "The CCLI was updated with the new VericredId using a script. The script checked the current VericredId, verified the expiration state, and updated the CCLI with the new production VericredId. Additionally, the plan.vericredIds were updated using another script to ensure the correct IDs were in place. The amendment tab was then made visible, and the amendment was sent to Vericred.",
    "data_models": "[BaseCompanyCarrierLineInfo, VericredCompanyCoveragePeriodInfo, InsuranceCompanyCarrierLineInfo, BaseCompanyPlanInfo]"
  },
  "BENINTEG-3507": {
    "key": "BENINTEG-3507",
    "issue": "Profile Extrusion had over 100 forms sent to the carrier on 1/4, despite the elections being completed in December. The forms were expected to be sent only for changes made since 1/1, not effective 1/1.",
    "issue_summary": "Forms were sent based on the effective date rather than the intended logic of sending only for changes made since the specified form send-date.",
    "rca": "The issue was caused by the logic that sent forms if the pending-action's form-generated-at date was on or after the company's form send-date. This logic was incorrect as it should have been based on the pending-action's event finalizedOn date.",
    "steps_taken": "The logic was updated to send forms only if the pending-action's event finalizedOn date is on or after the company's form send-date. The changes were merged to production as per the MR: https://github.com/Rippling/rippling-main/pull/306218.",
    "data_models": "[PendingAction]"
  },
  "BENINTEG-3505": {
    "key": "BENINTEG-3505",
    "issue": "534 Blocked Transactions (BTs) for Noyo Open Enrollment (OE) with the error message 'the company carrier plan info (ccli) is not eligible for Noyo'.",
    "issue_summary": "A high volume of Noyo Blocked Transactions for Open Enrollment due to the error message indicating that the company carrier plan info (ccli) is not eligible for Noyo. This issue was common during migration when two vendors were linked to a single group in Rippling.",
    "rca": "The root cause was identified as a mapping issue at the vendor level, which was not visible in the company debugger UI. It was categorized as an Ops Issue under Incorrect Steps/State error, indicating a need to retrain some team members on the mapping steps.",
    "steps_taken": "The team conducted an office hours call to work through some of the blocked transactions as examples to see what could be unblocked. The issue was to be reopened if needed after the call.",
    "data_models": "[CompanyCarrierLineInfo]"
  },
  "BENINTEG-3503": {
    "key": "BENINTEG-3503",
    "issue": "Admin found that employees' enrollment forms were not sent to the carrier UHC, and the EE debugger showed the status as 'To-do' with the reason 'UNSUBMITTED_PRIOR_FORMS'.",
    "issue_summary": "Enrollment forms for employees were not sent to the carrier UHC despite having the email ID in the carrier transmission tab. The issue was due to the scheduled ETA not running at the expected time.",
    "rca": "The ETA, which was responsible for processing the event, had not run at the expected time. However, it ran a couple of hours later and sent the email as expected. No engineering action was required as the scheduled job eventually processed the event.",
    "steps_taken": "The issue was resolved automatically when the scheduled ETA ran and processed the event, sending the form as expected. No manual intervention was required.",
    "data_models": "[]"
  },
  "BENINTEG-3501": {
    "key": "BENINTEG-3501",
    "issue": "Forms are not getting sent to the carrier after the employee completes the New Hire Enrollment task.",
    "issue_summary": "Forms were expected to be sent to the carrier after the New Hire Enrollment task was completed by employees, but they were not sent, causing a blockage in employee enrollment.",
    "rca": "This was a non-issue as the system automatically sent the forms over the weekend for all three employees. It was initially thought that someone marked the transactions as confirmed before they were sent, but it was later verified that the forms were indeed sent automatically.",
    "steps_taken": "The issue was investigated by checking if the transactions were marked as confirmed before being sent. It was confirmed with the admin that forms for Oxford were sent manually, and they requested to resend forms for Guardian. Eventually, it was verified that the system sent the forms automatically, and the ticket was closed.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3498": {
    "key": "BENINTEG-3498",
    "issue": "Admin is unable to proceed in the setup flow for carrier connections; clicking the continue button does not advance to the next screen.",
    "issue_summary": "The setup flow for carrier connections is blocked because the continue button is non-functional, preventing the admin from proceeding.",
    "rca": "There were existing VericredCompanyCarrierTransmission objects created for carriers Metlife and Kaiser, which were meant to go via EBN. This caused the API to return a 500 error while upserting the records for EBN. Deleting the older VCCT objects resolved the issue.",
    "steps_taken": "The issue was resolved by identifying and marking the VericredCompanyCarrierTransmission objects for Kaiser and Metlife as deleted, which were incorrectly set up to go via EBN.",
    "data_models": "[VericredCompanyCarrierTransmission]"
  },
  "BENINTEG-3497": {
    "key": "BENINTEG-3497",
    "issue": "An employee (EE) is not appearing in the Hawaii Bill group snapshot for the Noyo Kaiser Connection.",
    "issue_summary": "The employee should be in the Hawaii Bill group but is not showing up in the snapshot. Mappings and configurations appear correct.",
    "rca": "The issue was due to a special case handling for the Hawaii Bill group.",
    "steps_taken": "The issue was debugged with the help of another team member, and it was resolved as indicated by the comment from akathuria@rippling.com.",
    "data_models": "[]"
  },
  "BENINTEG-3496": {
    "key": "BENINTEG-3496",
    "issue": "The admin wanted to confirm if an enrollment change event email notification and task were generated for Nathan Lytle, who was terminated in 2022, as Rippling does not manage their forms. The admin needed this information to ensure the forms were submitted to carriers.",
    "issue_summary": "The issue was about confirming the generation of an enrollment change event email notification and task for a terminated employee, Nathan Lytle, to ensure forms were submitted to carriers.",
    "rca": "The root cause was that Rippling does not manage forms for the company, and there was confusion about whether a task and email notification were generated for the admin. It was found that the system did not generate a task for the admin due to the company's settings, but an email was sent.",
    "steps_taken": "The team confirmed that an email was sent to the admin with the subject 'Safety Transport Inc forms for submission to carrier'. They checked internal data models and found no task was generated for Denise Laughery. It was clarified that tasks for enrollment notifications are not created to avoid overwhelming the admin dashboard, and the logic for task creation depends on specific settings like RipplingManagingForms and EDI/API enablement.",
    "data_models": "[Company, RoleWithCompany, EmployeeEnrollmentTask, AppNotification]"
  },
  "BENINTEG-3495": {
    "key": "BENINTEG-3495",
    "issue": "The issue was that the Administrator's signature was being used as both the Employer's and Employee's signature on the UHC termination form, which was incorrect.",
    "issue_summary": "The UHC termination form incorrectly displayed the Administrator's signature as both the Employer's and Employee's signature due to the absence of the Employee's signature.",
    "rca": "The root cause was that the Employee's signature was not present on the termination form because it is not required for terminations, only for enrolling in coverage. The form template was updated to remove the signature field, but a proper fix might involve removing the field from the form filler itself.",
    "steps_taken": "The form template was updated to omit the Employee's signature for UHC CA terminations. Debugging involved checking the PendingAction and EnrollmentEvent models to verify signature URLs. The form generation context was built using the FormGenerationContextBuilder, and the form filler was used to fill signature fields. The form template was modified to unmap the signature field, and a Jira ticket was filed to remove the signature from all termination forms.",
    "data_models": "[PendingAction, EnrollmentEvent, InsuranceRoleTransition]"
  },
  "BENINTEG-3494": {
    "key": "BENINTEG-3494",
    "issue": "Blocked OE Transactions for The Linux Foundation with Noyo/Guardian. Unable to retry the pending action due to error: UNSUPPORTED_EVENT_FOR_CARRIER_COMMUNICATION_DETAILS.",
    "issue_summary": "The Linux Foundation faced an issue with 203 blocked Open Enrollment transactions. The error 'UNSUPPORTED_EVENT_FOR_CARRIER_COMMUNICATION_DETAILS' was encountered when attempting to retry the pending actions, despite having forms toggled on and a live feed.",
    "rca": "The root cause analysis was deferred, but it appears that the issue was related to mapping, which may have initially caused the transactions to be blocked.",
    "steps_taken": "The issue was resolved after reviewing and adjusting the mapping, which eventually allowed the transactions to process successfully.",
    "data_models": "[]"
  },
  "BENINTEG-3493": {
    "key": "BENINTEG-3493",
    "issue": "528 transactions are blocked due to the error 'Std lines of coverage require volume for Guardian'.",
    "issue_summary": "A large number of transactions are blocked because the standard lines of coverage require volume for Guardian, and this issue has been recurring, requiring a root cause fix.",
    "rca": "The root cause analysis category is 'Bug Fix' with a subcategory of 'Special Case Handling'. The detailed description is not provided, but it implies that there is a special case handling issue with the standard lines of coverage requiring volume for Guardian.",
    "steps_taken": "The issue was resolved by turning on specific feature flags in LaunchDarkly, as indicated by the comment linking to the LaunchDarkly project and stating that the issue should be resolved after the flags are turned on.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: []"
  },
  "BENINTEG-3491": {
    "key": "BENINTEG-3491",
    "issue": "The group's Dual Communication for Kaiser CA contact needs to be changed to csc-sd-sba@kp.org. Currently, communications are being sent to amt@kp.org, and there is no option to edit the email contact from the Carrier Transmission tab.",
    "issue_summary": "Superhuman Labs, INC needs to update the dual communication email address for Kaiser CA from amt@kp.org to csc-sd-sba@kp.org, but there is no option to edit this in the system.",
    "rca": "The root cause of the issue is related to the forms category, where the current system does not allow for the email contact to be edited from the Carrier Transmission tab.",
    "steps_taken": "The engineering team is required to update the Kaiser CA dual communication method to send emails to csc-sd-sba@kp.org. It was noted that there is no confirmation from the carriers, and the functionality is already being addressed in a previous Jira ticket.",
    "data_models": "[]"
  },
  "BENINTEG-3490": {
    "key": "BENINTEG-3490",
    "issue": "Noyo Blocked Transactions are preventing Open Enrollment (OE) selections from being transmitted to Kaiser for the Aviatrix group.",
    "issue_summary": "The issue involves 6 Blocked Transactions (BTs) that are preventing OE selections from being transmitted to Kaiser. The error message indicates that the company carrier plan info (ccli) is not eligible for Noyo, despite plan mappings and configurations appearing correct.",
    "rca": "The root cause analysis category is 'Bug Fix' with a subcategory of 'Special Case Handling'. The detailed reason for the issue is not provided in the ticket.",
    "steps_taken": "The issue was reviewed and resolved, as indicated by the comments. Specific steps or code snippets used to resolve the issue are not provided in the ticket.",
    "data_models": "[InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-3486": {
    "key": "BENINTEG-3486",
    "issue": "Client is reporting incorrect 401K data coming from Alerus integration.",
    "issue_summary": "The 401K contributions data from Alerus integration is incorrect due to missing updates from the provider.",
    "rca": "The root cause of the issue is that the provider, Alerus, did not send the necessary data updates, resulting in the system not making any updates to the 401K contributions.",
    "steps_taken": "The issue was identified as a lack of data updates from Alerus. It was suggested to confirm the tiered match setup and manually update the rates via the recurring deductions for active employees page if necessary.",
    "data_models": "[]"
  },
  "BENINTEG-3484": {
    "key": "BENINTEG-3484",
    "issue": "The forms for Delayed Open Enrollment were sent for some employees through email without carrier transmission set-up, but for one employee, it is showing UNSUPPORTED_EVENT_FOR_CARRIER_COMMUNICATION_DETAILS.",
    "issue_summary": "The issue is that while forms for Delayed Open Enrollment were sent for some employees, one employee's form was not sent due to an error showing UNSUPPORTED_EVENT_FOR_CARRIER_COMMUNICATION_DETAILS.",
    "rca": "The employees did not experience a new hire enrollment task because they were hired through import and had their debugger refreshed to populate the event. The Delayed Open Enrollment task was sent to the carrier through email, but the carrier transmission is not set-up for the group. The error occurred for one employee, Josh Fontanilla, due to unsupported event details for carrier communication.",
    "steps_taken": "The issue was reproduced using a Log Rocket session. The employee event debugger was used to investigate the specific employee, Josh Fontanilla, who experienced the issue.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-3483": {
    "key": "BENINTEG-3483",
    "issue": "There are 4 blocked transactions for the group's Anthem coverage due to incorrect plan information being sent to Noyo, causing unnecessary amendments and blocking transactions.",
    "issue_summary": "Blocked transactions for Anthem coverage due to incorrect plan information being sent to Noyo, resulting in unnecessary amendments.",
    "rca": "Noyo Plan mapper issue where discontinued plans were incorrectly mapped, causing amendments to resubmit outdated plan information.",
    "steps_taken": "Confirmed current coverage info on file with Noyo, verified plan ID correspondence, and ensured no additional configurations were needed. Remapped the plans correctly to resolve the blocked transactions. Code snippet used for debugging: ```for ncp in NoyoCompanyPlanInfo.objects.filter(company=\"5fac48345a87af002999cc29\"): plans = NoyoAPI.get_group_plans(\"e285459d-a827-4c0e-a1e9-9f94e7acbc0c\") for plan in plans: if plan[\"id\"] == ncp.noyo_plan_id: if plan[\"status\"] == \"discontinued\": print(ncp.company_plan_info, ncp.company_plan_info.companyCarrierLineInfo.effectiveDate, \"<<<<\") if str(ncp.company_plan_info.companyCarrierLineInfo.effectiveDate) == \"2024-12-01\": print(\"deleting\", ncp.company_plan_info) # ncp.delete() break return```",
    "data_models": "[NoyoCompanyPlanInfo, CompanyCarrierLineInfo]"
  },
  "BENINTEG-3482": {
    "key": "BENINTEG-3482",
    "issue": "OneKonnect reported multiple production file failures on 1/7 due to missing benefit termination dates for several members who were terminated in December. This issue is blocking the production files.",
    "issue_summary": "OneKonnect is not receiving benefit termination dates for certain members on the 1/7 files, causing production file failures. The root cause was identified as a missing feature that needed to be added.",
    "rca": "The root cause of the issue was identified as a missing feature in the product, which was addressed by a small feature addition as per the linked GitHub pull request.",
    "steps_taken": "A fix was implemented through a pull request as part of another Jira ticket (BENINTEG-3579). After the fix was deployed, a feature flag was enabled for one of the companies, and an EBN dataset was generated to verify the fix. The issue with termination dates was resolved and verified for a few companies by checking their datasets sent on the day of verification.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3481": {
    "key": "BENINTEG-3481",
    "issue": "OneKonnect reported multiple production file failures on 1/7 due to missing benefit terminations for several members, causing a blockage in processing these files.",
    "issue_summary": "Production file failures occurred on 1/7 due to missing benefit terminations for members, indicating a logic regression that was previously fixed to ensure OneKonnect received both Role Termination and Benefit Termination.",
    "rca": "A small feature was added which caused a logic regression, leading to missing benefit terminations in the production files sent to OneKonnect. This regression was identified in a pull request: https://github.com/Rippling/rippling-main/pull/298896.",
    "steps_taken": "A fix was implemented and a pull request was raised as part of BENINTEG-3579. The issue with term dates was resolved and verified for several companies by checking their datasets sent on the day of resolution. The fix was confirmed to be effective, and the ticket was marked for closure.",
    "data_models": "No specific data models were mentioned in the ticket or comments."
  },
  "BENINTEG-3480": {
    "key": "BENINTEG-3480",
    "issue": "Production file failures on 1/7 due to missing class codes for members who are termed or not eligible for benefits.",
    "issue_summary": "The production file failed on 1/7 because of missing class codes for certain members who were either terminated or not eligible for benefits. This was due to a logic regression related to class codes.",
    "rca": "The root cause of the issue was incorrect setup of carrier classifications, which did not include all employees in the group. This setup error led to the missing class codes in the production file.",
    "steps_taken": "The issue was identified as a setup error in carrier classifications. It was suggested to verify and correct the carrier classifications to ensure all employees are included in the group. The ticket was closed as it was determined that the issue might be due to the time horizon in the retool running out, and it was decided to review further and reopen if needed.",
    "data_models": "[]"
  },
  "BENINTEG-3479": {
    "key": "BENINTEG-3479",
    "issue": "The termination of employee Isabella Brooks was not sent on the EDI feed, resulting in the employee being enrolled in coverage they were not eligible for and the group being overcharged.",
    "issue_summary": "The termination of Isabella Brooks was not transmitted due to a mismatch in the form generation date and the broker's settings for sending forms, leading to the employee being incorrectly enrolled and the group being overcharged.",
    "rca": "The root cause of the issue was identified as a mismatch in the company's insurance broker settings. The form for termination was generated on 2024-09-30, but the broker's setting 'sendFormsGeneratedOnAndAfter' was set to 2024-10-01. This discrepancy prevented the form from being sent, and as a result, the termination was not processed.",
    "steps_taken": "The issue was identified by checking the company's insurance broker settings and the carrier connection dashboard. It was confirmed that the form was not sent due to the broker's setting. A request with the end-date was sent to Vericred on 01/08/2025 to address the issue.",
    "data_models": "[CompanyBrokerInfo]"
  },
  "BENINTEG-3478": {
    "key": "BENINTEG-3478",
    "issue": "Enrollment transactions for Bullpen Sports Network, Inc. are blocked due to a mapping issue, affecting 13 employees' dental PPO plans.",
    "issue_summary": "The issue is that enrollment transactions are blocked because the system is pulling in an expired line of coverage for the dental PPO plan, causing a mismatch in Noyo plan mapping.",
    "rca": "The root cause of the issue is a special case handling bug where the system is unable to find a matching Noyo plan mapping information due to the company carrier plan info (ccli) being ineligible for Noyo. The error details indicate that the CCLI is not valid for the Noyo integration, possibly due to an expired line of coverage.",
    "steps_taken": "The blocked transactions were resolved, as indicated by the comment from the team member. However, specific steps or code snippets used to resolve the issue are not provided in the ticket.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3475": {
    "key": "BENINTEG-3475",
    "issue": "A new PEO client with a start date of 1/1/2025 was missing from the weekly Kaiser PEO EDI file sent on 1/1. All employees with Kaiser coverage had to be manually added to Kaiser\u2019s portal.",
    "issue_summary": "The new PEO client 'Hotwire Public Relations Group, LLC' was not included in the Kaiser PEO EDI file due to an issue with the vendor configuration, causing manual addition of employees to Kaiser\u2019s portal.",
    "rca": "The function incorrectly picked up the vendor as Stedi for the company and created a suspended VendorPartnerCompany without Stedi configurations being created. The VendorPartnerCompany was marked as PROD without an established vendor partner connection.",
    "steps_taken": "The client configuration was seeded, and a new file was generated with the client included. The function 'start_stop_transmission_during_renewals' was reviewed for any required fixes.",
    "data_models": "[VendorPartnerCompany]"
  },
  "BENINTEG-3474": {
    "key": "BENINTEG-3474",
    "issue": "The STD lines of coverage for Guardian require volume amounts, causing errors when running the Census Tool for multiple employees.",
    "issue_summary": "The STD lines of coverage for Guardian require volume amounts, resulting in a 422 error when using the Census Tool for employees at XCJ Corp.",
    "rca": "The issue was due to an incorrect implementation where the fix was already in place but needed to be deployed using DL.",
    "steps_taken": "The troubleshooting steps included following a confluence article to finalize the Noyo connection and reconfiguring the mapping. The engineering team was requested to resolve the volume amount issue to complete the finalization process without errors.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3473": {
    "key": "BENINTEG-3473",
    "issue": "The customer with New York Life, which is self-funded, does not require enrollment forms to be sent. The admin is unable to modify the send method while the feeds are being worked on under the Carrier Transmission tab within the BenAdmin app.",
    "issue_summary": "The issue is that for the company '3 Step' with New York Life as the carrier, enrollment forms do not need to be sent due to it being self-funded. However, the admin is unable to deactivate the form sending due to ongoing work on the Carrier Transmission tab.",
    "rca": "The root cause of the issue was that forms were not disabled for the company and New York Life carrier, which was necessary because the carrier is self-funded and does not require forms to be sent.",
    "steps_taken": "The email communication for the company and New York Life carrier was disabled. The following code snippet was used to delete the existing communication details and create a new entry:\n\n```python\ndeleted_ccd = CustomCommunicationDetail.objects.filter(\n\tcompany=\"66f72c52511422e21494809b\",\n\tcarrier=\"64ff3515716a18177d55ce77\"\n).delete()\nprint(deleted_ccd)\nreturn CustomEbnCommunicationDetail.objects.create(\n\tcompany=\"66f72c52511422e21494809b\",\n\tcarrier=\"64ff3515716a18177d55ce77\",\n)\n```\nThe ticket was then closed as the required work was completed.",
    "data_models": "[CustomCommunicationDetail, CustomEbnCommunicationDetail]"
  },
  "BENINTEG-3469": {
    "key": "BENINTEG-3469",
    "issue": "3 PEO employees from separate companies had their Kaiser Nor Cal coverage terminated effective 11/30 suddenly on 1/3.",
    "issue_summary": "3 PEO employees from different companies had their Kaiser Nor Cal coverage unexpectedly terminated on 1/3, effective from 11/30. This was confirmed by the employees and the Kaiser portal.",
    "rca": "The issue was not due to a file transmission error but was caused by a group number error on the EDI file sent to Kaiser in early December. During the resolution of removing dual enrollments, 180 Northern California enrollments were inadvertently cancelled manually by Kaiser. Kaiser confirmed that the affected employees have been reinstated.",
    "steps_taken": "The last couple of transmissions were checked, and it was confirmed that there was no DTP 349 which could have triggered a termination, only DTP 348 was present. It was determined that the issue was due to a group number error on the EDI file sent to Kaiser. Kaiser manually cancelled the enrollments during the resolution of dual enrollments, and they have since reinstated the affected employees.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-3468": {
    "key": "BENINTEG-3468",
    "issue": "The employee's dependent is disabled and eligible for an 11-month COBRA extension, but the extension was not processed because the admin signed off on the expiration.",
    "issue_summary": "The COBRA extension for an employee's disabled dependent was not processed due to the admin signing off on the expiration, requiring manual intervention to extend the coverage.",
    "rca": "The new COBRA event details were automatically sent via EBN for the company & carrier, but the system failed to send feeds to Noyo for Dental & Vision because CompanyInsuranceInfo.isRipplingManagingCompanyForms returned False, preventing the feed from working.",
    "steps_taken": "1. Confirmed with COBRA lead that a JIRA ticket is needed to extend COBRA. 2. Deleted existing expiration events. 3. Created a new open enrollment event and asked the employee to select plans. 4. Checked feeds and confirmed that the updated file feed was sent via EBN for BlueShield (MEDICAL). 5. Identified that feeds for Dental & Vision were not sent due to CompanyInsuranceInfo.isRipplingManagingCompanyForms returning False.",
    "data_models": "[CompanyInsuranceInfo]"
  },
  "BENINTEG-3467": {
    "key": "BENINTEG-3467",
    "issue": "The Census Tool is returning an error message for several employees indicating that LTD lines of coverage require volume for Guardian, preventing the finalization process needed to send the connection for the group without errors.",
    "issue_summary": "The LTD lines of coverage for Guardian require volume amounts, causing errors in the Census Tool for multiple employees, which blocks the finalization process.",
    "rca": "Retried sending the census, it went successfully.",
    "steps_taken": "The issue was resolved by retrying to send the census, which then went through successfully.",
    "data_models": "[]"
  },
  "BENINTEG-3457": {
    "key": "BENINTEG-3457",
    "issue": "The member's Open Enrollment (OE) election for United Healthcare was not included in the file feed until 12/26/2024, despite the file feed going live in early December.",
    "issue_summary": "The OE transaction for Mateo Muzek was delayed in being added to the file feed, causing a discrepancy in the expected timeline for the United Healthcare coverage.",
    "rca": "The root cause analysis category is marked as 'Salesforce case closed', but no detailed description is provided. It suggests that the issue might have been related to a closed Salesforce case, potentially leading to the delay in processing the OE transaction.",
    "steps_taken": "The ticket was flagged as the associated support case was closed to keep the customer task backlog clean. No specific steps to resolve the issue are detailed in the ticket.",
    "data_models": "[]"
  },
  "BENINTEG-3456": {
    "key": "BENINTEG-3456",
    "issue": "Group has 65 blocked transactions to Guardian due to error: 'Std lines of coverage require volume for Guardian'.",
    "issue_summary": "Transactions to Guardian were blocked due to missing volume information for STD lines of coverage.",
    "rca": "The issue was categorized as a bug related to the Noyo component, where the system was not handling the requirement for volume information for STD lines of coverage correctly.",
    "steps_taken": "The issue was identified as a known problem requiring an engineering fix. A similar fix was applied, which resolved the problem, allowing transactions to go through successfully.",
    "data_models": "[]"
  },
  "BENINTEG-3455": {
    "key": "BENINTEG-3455",
    "issue": "The Harrison Group General is facing an issue where the benefit ID for an employee, Kayla Taylor, is not being recognized as eligible for the basic life plan she is enrolled in, despite meeting the eligibility criteria.",
    "issue_summary": "The system is incorrectly pulling the benefit ID for an employee, causing an error in eligibility for the basic life plan, even though the employee meets the eligibility criteria.",
    "rca": "The issue was due to an incorrect implementation related to CarrierClassification. This was resolved by addressing the problem in a previous ticket (BENINTEG-2529), and the resolution was verified by checking the snapshot sent to Noyo on January 28, 2025.",
    "steps_taken": "The issue was identified as already resolved in a previous ticket (BENINTEG-2529). Verification was done by checking the snapshots sent to Noyo, confirming that the snapshot sent on January 28, 2025, was successfully processed. The ticket was then closed as the issue was resolved.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [CarrierClassification]"
  },
  "BENINTEG-3454": {
    "key": "BENINTEG-3454",
    "issue": "The Harrison Group General is facing an issue where the system is pulling a benefit ID error for an employee, Kayla Taylor, indicating she is not eligible for the basic life plan she is enrolled in, despite meeting the eligibility criteria.",
    "issue_summary": "The system is incorrectly flagging an eligibility error for an employee enrolled in a basic life plan, even though the employee meets the eligibility criteria. This issue is a duplicate of another ticket.",
    "rca": "This ticket is a duplicate of another ticket - https://rippling.atlassian.net/browse/BENINTEG-3455.",
    "steps_taken": "The ticket was closed as it was identified as a duplicate of another ticket where the issue was already resolved.",
    "data_models": "[]"
  },
  "BENINTEG-3453": {
    "key": "BENINTEG-3453",
    "issue": "Limble Solutions is facing an issue where the benefit class identifier 0001 is missing in the Noyo plan mapper, causing blocked transactions.",
    "issue_summary": "The Noyo plan mapper is missing the benefit class identifier 0001 for Guardian, which is causing transactions to be blocked.",
    "rca": "The root cause analysis indicates that the system is working as expected, but there was a wrong expectation regarding the presence of the benefit class identifier 0001 in the Noyo plan mapper.",
    "steps_taken": "The issue was identified as a small bug on the system's end, and it was communicated that the fix would be implemented by the end of the day.",
    "data_models": "[]"
  },
  "BENINTEG-3452": {
    "key": "BENINTEG-3452",
    "issue": "EE Medical termination date not sending on dataset to EBN, causing issues with COBRA election.",
    "issue_summary": "The termination date for an employee's medical benefits was not being sent in the dataset to EBN, which is necessary for COBRA election.",
    "rca": "The issue was due to a recent change in logic where termination dates were not sent in the current plan year file if the next SubscriberLineInfo (SLI) is from an Open Enrollment (OE) event. These terminations were instead sent in the OE file.",
    "steps_taken": "A small feature addition was implemented to fix the issue, as referenced in the pull request https://github.com/Rippling/rippling-main/pull/298896.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-3451": {
    "key": "BENINTEG-3451",
    "issue": "OneKonnect reported data issues in the payload they are receiving from Rippling, where dependents are still active in the previous medical plan, and the employee has two active coverages with overlapping effective dates.",
    "issue_summary": "OneKonnect reported that dependents are still active in the previous medical plan, and the employee has two active coverages with overlapping effective dates. The issue was due to missing termination dates for expired coverages in the data sent to EBN.",
    "rca": "Business logic change was needed to handle termination dates for expired coverages. The issue was identified as missing termination dates from the regular file sent to EBN.",
    "steps_taken": "The team discussed the issue offline and decided to ask EBN if they could omit the older/expired coverages from the regular OE file. Once EBN confirmed, the necessary changes were made to adhere to the expected changes. The issue was resolved in a related ticket BENINTEG-3482.",
    "data_models": "[]"
  },
  "BENINTEG-3450": {
    "key": "BENINTEG-3450",
    "issue": "Blocked transactions for employees due to missing STD and LTD volume amounts in the payload for Noyo transactions.",
    "issue_summary": "Transactions for several employees were blocked because the payloads sent to Noyo were missing the required disability volume amounts for Short Term Disability (STD) and Long Term Disability (LTD).",
    "rca": "The root cause of the issue was identified as a bug in the volume implementation, which was incorrectly implemented, leading to the missing volume amounts in the payloads.",
    "steps_taken": "The issue was resolved by fixing the volume implementation bug, ensuring that the correct volume amounts are included in the payloads sent to Noyo.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3449": {
    "key": "BENINTEG-3449",
    "issue": "The Census Tool is returning an error message for several employees indicating that STD lines of coverage require volume for Guardian, preventing the finalization of the Noyo connection for Atlantic Coast Mortgage, LLC.",
    "issue_summary": "The issue arises from the Census Tool returning an error message stating 'Std lines of coverage require volume for Guardian' for multiple employees, indicating a problem with the calculation or configuration of STD lines for Guardian.",
    "rca": "The root cause was identified as an issue in computing the is_voluntary value for SubscriberLineInfo (SLI) of line-type STD. The problem was resolved by enabling a LaunchDarkly feature flag for the company, which corrected the computation.",
    "steps_taken": "The steps taken to resolve the issue included enabling the LaunchDarkly feature flag 'noyo-volument-voluntary-sli-based' for the company, which addressed the computation issue for the is_voluntary value.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-3446": {
    "key": "BENINTEG-3446",
    "issue": "The team faced inconsistencies with the Stedi snapshot generator in the retool. Specifically, only one file ran successfully while others fluctuated between 'Transmission error' and 'file delivered' statuses. Additionally, Cigna confirmed file delivery, but the retool did not show the ingestion file log.",
    "issue_summary": "Inconsistencies with the Stedi snapshot generator caused files to fluctuate between error and delivered statuses, and ingestion logs were missing despite confirmed deliveries.",
    "rca": "The root cause was linked to an incorrect implementation, as detailed in the related ticket BENINTEG-3416.",
    "steps_taken": "The issue was fixed by addressing the incorrect implementation as referenced in the related ticket BENINTEG-3416.",
    "data_models": "[]"
  },
  "BENINTEG-3445": {
    "key": "BENINTEG-3445",
    "issue": "Coverage Period ID numbers have not been generated and submitted to Ideon for several Kaiser regions where People Center Inc is offering coverage. This is blocking the transmission of insurance data to Ideon.",
    "issue_summary": "Coverage Period IDs for Kaiser regions (CA, NW, CO, GA) were not created and sent to Ideon due to incorrect integration setup for PEO to ASO, causing a blockage in data transmission.",
    "rca": "The root cause was identified as a wrong integration setup for transitioning from PEO to ASO, which led to the failure in generating and sending Coverage Period IDs to Ideon.",
    "steps_taken": "1. Confirmed the presence of group ID numbers in the 'Current Benefits' section for the affected Kaiser regions. 2. Attempted to set up Kaiser connections with Vericred, but ingestion failed due to an invalid carrier_name. 3. Updated the vericredName to match Ideon's system requirements. 4. Re-ingested the Kaiser NW Coverage Period ID to Ideon. 5. Verified that all coverage periods are now in 'production' status with Ideon.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, SubscriberLineInfo]"
  },
  "BENINTEG-3444": {
    "key": "BENINTEG-3444",
    "issue": "Unable to create a file in the In-House EDI (Stedi) Custom Trigger Retool for a group that moved to 3 medical plans and added dental and vision for 2025 renewal.",
    "issue_summary": "The group transitioned to new medical, dental, and vision plans for 2025, but faced issues creating a file in the In-House EDI (Stedi) system due to a validation error related to plan coverage description length.",
    "rca": "This issue was fixed as part of another ticket and its resolved now.",
    "steps_taken": "Initially, an ingestion file was created for all three benefits with the request type as 'Regular', which resulted in a validation error. The issue was resolved by choosing 'open enrollment' and selecting the coverage start date of 1/1/2025. A test file was successfully generated later.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3443": {
    "key": "BENINTEG-3443",
    "issue": "The last three files sent to Collective Health had incorrect filenames, which needed to be corrected before the next file was sent.",
    "issue_summary": "Files sent to Collective Health had incorrect filenames due to a regression caused by not updating CH's header mapping after moving the filename to Stedi's header mapping.",
    "rca": "The issue was caused by a regression due to the movement of the filename to Stedi's header mapping. Collective Health's header was not updated once this update was rolled out, leading to incorrect filenames being generated.",
    "steps_taken": "The issue was resolved by updating CH's mapping to align with the changes made in Stedi's header mapping framework.",
    "data_models": "[Stedi]"
  },
  "BENINTEG-3426": {
    "key": "BENINTEG-3426",
    "issue": "ComboCurve's setup for carrier connection fails with the message 'whatever you're searching for hasn't been built yet', blocking the EDI setup process.",
    "issue_summary": "The setup for carrier connection for ComboCurve fails due to an error message indicating that the required component hasn't been built yet, caused by an incorrect implementation.",
    "rca": "The root cause of the issue was an incorrect implementation in the code, as identified in the pull request https://github.com/Rippling/rippling-webapp/pull/121492 and discussed in the Slack thread https://rippling.slack.com/archives/C016AQL1W69/p1736193948996269.",
    "steps_taken": "A fix was identified and merged in the pull request https://github.com/Rippling/rippling-webapp/pull/121492. The issue was resolved after identifying a problem on the billing side, as confirmed in the Slack thread.",
    "data_models": "[]"
  },
  "BENINTEG-3423": {
    "key": "BENINTEG-3423",
    "issue": "The issue was that the carrier send email securely settings needed to be updated from 'No' to 'Yes' for certain carriers, but the Retool application was not updating this setting.",
    "issue_summary": "The carrier send email securely settings were not updating from 'No' to 'Yes' for carriers like Aetna, Kaiser Permanente, and New York Life, causing a delay in secure enrollment transmissions.",
    "rca": "The root cause was related to the expected behavior of the system not being documented or communicated properly, leading to confusion about the current settings.",
    "steps_taken": "The engineer checked the current settings and found that the 'Send Email Securely' setting was already set to 'Yes'. No further action was needed, and the ticket was ready to be closed.",
    "data_models": "[]"
  },
  "BENINTEG-3422": {
    "key": "BENINTEG-3422",
    "issue": "The 'Confirm Submission' banner was missing from the Ben Admin app for a HUB-BOR customer, preventing them from confirming their intent to renew with carriers for EDI/API connections.",
    "issue_summary": "The 'Confirm Submission' banner was missing from the Ben Admin app, which was needed for a HUB-BOR customer to confirm their intent to renew with carriers for EDI/API connections. The issue was related to the setting 'Is Rippling managing forms?' being set to 'No'.",
    "rca": "The issue was caused by a bug where the banner should not have been shown for this customer. The backend API controlled the banner display, and there were no incomplete manual submission tasks for this customer. The email prompting action was triggered because tasks were open until December 16th.",
    "steps_taken": "Proxied as broker and customer admin to check the banner. Enabled 'Is Rippling managing forms?' to 'Yes' and backdated to 12/1/24, but the banner still did not appear. Verified that only UHC was set up on EDI, and the banner issue was identified as a bug. A rough script was provided to verify the open tasks:\n\n```python\ncompany = Company.objects.get(id='65e11ee071022ea534d4b54b')\ncompany_enrollment_events = CompanyEnrollmentEvent.objects.filter(\n    company=company,\n    status__nin=[\"INIT\", \"STARTED\"],\n)\nfrom insurance.models.insurance_task_models import (\n    InsuranceTaskState,\n    SubmitGroupEnrollmentPacketTask,\n)\nx = []\nfor company_enrollment_event in company_enrollment_events:\n    self = company_enrollment_event\n    incomplete_submission_tasks = SubmitGroupEnrollmentPacketTask.objects.filter(\n        company=self.company, companyEnrollmentEvent=self\n    )\n    x.append(incomplete_submission_tasks)\nreturn x\n```",
    "data_models": "[Company, CompanyEnrollmentEvent, SubmitGroupEnrollmentPacketTask]"
  },
  "BENINTEG-3421": {
    "key": "BENINTEG-3421",
    "issue": "The CEO, Nicholas Gavronsky, is unable to receive urgent medical care due to issues with COBRA coverage. The termination and waiver of coverage were not correctly reflected in the Noyo EDI payload after the group migrated from one company instance to another.",
    "issue_summary": "The issue arose because the termination and waiver of coverage for Nicholas Gavronsky were not correctly reflected in the Noyo EDI payload after a company migration, leading to COBRA coverage issues.",
    "rca": "The root cause was a missing account structure mapping, which was not correctly handled during the migration process. This led to incorrect data being sent in the Noyo EDI payload, specifically missing coverage blocks.",
    "steps_taken": "The issue was resolved by manually adding the missing account structure mapping via a webscript to unblock the process. This allowed the correct data to be populated and transmitted via the Noyo Amendment tool.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-3420": {
    "key": "BENINTEG-3420",
    "issue": "Guardian PEO discontinued a dental plan, and Noyo communicated that they will no longer manually update the plan mapping for employee enrollments. This has caused a blocker in processing employee Alexander Hayes' enrollment.",
    "issue_summary": "Guardian PEO discontinued a dental plan, and Noyo will not manually update the plan mapping, causing issues in employee enrollments.",
    "rca": "The root cause of the issue was the discontinuation of the dental plan by Guardian PEO, and the assumption that Noyo would handle the plan mapping updates. However, Noyo communicated that they would not continue to manually update the mappings, leading to a need for Rippling to update the mappings on their end.",
    "steps_taken": "The team confirmed the correct plan ID with Noyo and submitted a new snapshot to Noyo for processing. They also decided to update the mappings on their end after realizing Noyo would not handle it.",
    "data_models": "[]"
  },
  "BENINTEG-3417": {
    "key": "BENINTEG-3417",
    "issue": "The issue was that the DTP*348 date was not populating correctly for one record (Subscriber name - IAN SAMUEL and their 5 dependents) in the NPY file for the 01/01/2025 effective group. The date was showing as 20241201 instead of 20250101.",
    "issue_summary": "The DTP*348 date in the NPY file was incorrect for one subscriber, showing 20241201 instead of the expected 20250101.",
    "rca": "The root cause analysis was deferred for future investigation, indicating that the issue might have been transient or not immediately reproducible.",
    "steps_taken": "The issue was monitored, and it was observed that the data reported correctly in a subsequent file. No specific debugging steps or code snippets were mentioned in the comments.",
    "data_models": "[]"
  },
  "BENINTEG-3416": {
    "key": "BENINTEG-3416",
    "issue": "Errors encountered while pushing manual production files to Cigna carrier, including older data being captured, ingestion files reverting status, and triggered files not appearing in Retool.",
    "issue_summary": "The issue involved errors in pushing manual production files to Cigna, where older data was being captured, ingestion files marked as accepted reverted to regular status, and triggered files were not appearing in Retool due to an incorrect implementation causing idempotency issues.",
    "rca": "The root cause was identified as an incorrect implementation related to idempotency conditions, which led to items being overwritten and not appearing as new tasks in Retool.",
    "steps_taken": "The fix involved ensuring that ingestion files are generated, verified, marked as accepted, and then production files are generated. It was noted that generating multiple ingestion files in a day would overwrite previous items. The fix was rolled out and verified to ensure only 2025 coverages were included.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3415": {
    "key": "BENINTEG-3415",
    "issue": "Unable to schedule the production file for NIVO Solar LLC via Ideon cutover tool due to an error.",
    "issue_summary": "The issue was that the user was unable to schedule a production file for NIVO Solar LLC using the Ideon cutover tool due to an error, which was caused by the presence of two onboarded feeds for the client, where dental and vision coverages needed to be off-boarded.",
    "rca": "The root cause of the issue was the presence of two onboarded feeds for the client, NIVO Solar LLC. The dental and vision coverages with Cigna were cancelled starting 1/1/2025, but they were still present in the system, causing a conflict when trying to schedule the medical file feed in production.",
    "steps_taken": "The steps taken to resolve the issue included identifying the cause of the error as the presence of dental and vision coverages that needed to be off-boarded. Since there was no tooling in place for offboarding, the configurations were removed via the back-end. A suggestion was made to raise a feature request for a simple offboarding tool to handle such requests in the future. After the configurations were removed, the user was able to successfully schedule the file in production.",
    "data_models": "[]"
  },
  "BENINTEG-3413": {
    "key": "BENINTEG-3413",
    "issue": "The group initiated a file feed with UHC and needs to update the carrier transmission email address from clientserviceoperations@uhc.com to moses.reyes@uhc.com, but there is no option to update the email address in the carrier transmission tab.",
    "issue_summary": "The group needs to update the carrier transmission email address for UHC, but there is no option available to do so in the carrier transmission tab.",
    "rca": "A new feature was added to allow the addition of emails, which was not previously available, causing the inability to update the email address.",
    "steps_taken": "A feature was released to allow editing of the email address in the carrier connections tab. Users can now proxy as super admin, open the carrier connections tab, click edit, and add the new email address.",
    "data_models": "[]"
  },
  "BENINTEG-3412": {
    "key": "BENINTEG-3412",
    "issue": "The class codes for BCN enrollment forms were not populating as expected, causing issues in the forms sent to the carrier.",
    "issue_summary": "The BCN enrollment forms were not reflecting the class codes due to incorrect mapping, leading to missing output on the forms.",
    "rca": "The root cause of the issue was identified as an incorrect carrier classification setup, which led to the class codes not being populated on the forms.",
    "steps_taken": "The issue was investigated by checking the mapping of fields {{EmployeeMedicalPlan_Classification}} and {{EmployeeMedicalPlan_Subgroup}}. It was found that the mapping was not done correctly. The agent responsible for the mapping was contacted to verify and correct the setup. Communication was maintained through Slack and comments in the request tracker. Once the mapping was corrected, the admin was informed to update their settings.",
    "data_models": "[]"
  },
  "BENINTEG-3411": {
    "key": "BENINTEG-3411",
    "issue": "The forms for the employee are being generated but are not being sent because EDI is not set.",
    "issue_summary": "Forms for the employee are generated but not sent due to EDI not being set, occurring after task completion.",
    "rca": "The root cause of the issue is related to missing data, as indicated by the duplicate ticket BENINTEG-3101.",
    "steps_taken": "The issue was previously raised in Jira ticket BENINTEG-3101. The team is asked to confirm if the forms were sent to the carrier and updated on the carrier's end. A screenshot was provided showing the reason for the form not being sent.",
    "data_models": "[]"
  },
  "BENINTEG-3410": {
    "key": "BENINTEG-3410",
    "issue": "Ops is unable to send group enrollments for UNUM coverages due to mapping issues and new lines of coverage being added.",
    "issue_summary": "OE selections for Unum were not sent due to mapping issues and new lines of coverage being added, causing Ops to be unable to send group enrollments for UNUM coverages.",
    "rca": "Missed renewing plans on Noyo, leading to no active plan under several lines.",
    "steps_taken": "Checked with Noyo/Unum to update the lines. Once updated, confirmed that the issue was resolved and the OE could be resent.",
    "data_models": "[]"
  },
  "BENINTEG-3407": {
    "key": "BENINTEG-3407",
    "issue": "The Ameritas EDI connection order to OneKonnect failed for Skipper Pets due to an error indicating 'Invalid order data' with a message that the 'Customer Code already exists'.",
    "issue_summary": "The EDI connection order to OneKonnect for Ameritas failed due to an existing Customer Code, preventing the order from being processed.",
    "rca": "The root cause of the issue is related to tooling under the EBN category, specifically tracked in a different issue BENINTEG-3709. The error message indicates that the Customer Code already exists, which suggests that the connection is already set up and in the TESTING phase, leading to a conflict when trying to re-onboard.",
    "steps_taken": "The issue was acknowledged and it was noted that Rohan is actively debugging the issue. The instance was closed as it appeared to have unblocked itself, but the underlying problem is being tracked in BENINTEG-3709.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3399": {
    "key": "BENINTEG-3399",
    "issue": "Former employee's COBRA Medical cancellation was not processed due to the reason 'UNSUBMITTED_PRIOR_FORMS', causing a delay in form submission to the carrier.",
    "issue_summary": "The COBRA cancellation for a former employee was not processed because the system showed 'UNSUBMITTED_PRIOR_FORMS', indicating that prior forms were not submitted, even though they were.",
    "rca": "Steelgems forms were not automatically sent by the daily cron job. The issue was related to the handling of special cases where forms were not transmitted because Rippling does not manage forms for this company, despite indications to the contrary in the company debugger.",
    "steps_taken": "The issue was investigated by checking the Pending Action's state for the COBRA Open Enrollment event. It was found that some forms were stuck and were manually triggered and cleared to resolve the issue.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-3395": {
    "key": "BENINTEG-3395",
    "issue": "The Benefits sub-tab and Open Enrollment sub-tab in the Benefits Admin app are crashing when accessed by the Broker from Sequoia.",
    "issue_summary": "The Benefits sub-tab and Open Enrollment sub-tab are crashing due to a duplicate issue related to special case handling in the integrations.",
    "rca": "The issue is caused by a duplicate issue in the integrations, as referenced in the related ticket BENINTEG-3394.",
    "steps_taken": "The issue was identified as being related to a duplicate issue in integrations, and the ticket was transferred to the Benefits - Integrations board for further handling.",
    "data_models": "[]"
  },
  "BENINTEG-3392": {
    "key": "BENINTEG-3392",
    "issue": "The Noyo snapshot does not include the Principal member group ID for all coverages, resulting in a 422 error from Noyo. This affects multiple employees in the group, particularly for STD and other coverages.",
    "issue_summary": "The issue is that the Noyo snapshot is missing the Principal member group ID for certain coverages, leading to a 422 error from Noyo. The root cause is identified as missing classifications due to manual data entry errors.",
    "rca": "The root cause of the issue is categorized as an Ops Issue with a subcategory of Manual Data Entry Error. The specific problem is missing classifications, which means that the necessary plan configurations were not set up correctly in the system.",
    "steps_taken": "The issue was identified as missing plan configurations in the classifications for SHORT_DISABILITY, LONG_DISABILITY, and LIFE plans. The suggestion was made to allow operations to debug these issues via the UI, as it should be straightforward to handle directly.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3391": {
    "key": "BENINTEG-3391",
    "issue": "Four employee termination transactions were not sent timely from Rippling to Noyo, resulting in each member having an extra month of medical coverage than necessary.",
    "issue_summary": "Delayed transmission of employee termination transactions from Rippling to Noyo due to incomplete setup tasks and lack of plan mapping during vendor migration.",
    "rca": "Till 26 Nov, transmission was blocked due to incomplete task and from 27 Nov to 1 Dec the user was linked to a Rippling plan that had no corresponding Noyo plan. This happens in the case where clients are being migrated off of vericred/EBN to noyo and no plan mapping was done for the old plans for the new carriers. You can avoid such issues by ensuring that plans mapping are in place for new vendors even for old plans on migrated vendors.",
    "steps_taken": "Confirmed the presence of three Kaiser setup tasks that were open from 10/10/2024 - 11/26/2024. Confirmed that enrollment forms were not sent as expected due to the three Kaiser setup tasks being open for more than 4 business days. Requested engineering to research why transactions were not sent via enrollment form and why they were not delivered to Noyo on 11/27, and to push any fixes to prevent similar delays.",
    "data_models": "[]"
  },
  "BENINTEG-3389": {
    "key": "BENINTEG-3389",
    "issue": "Companies are appearing on the carrier routing report but not on the master report pulled from the app, and the carrier routing report includes demo companies.",
    "issue_summary": "The issue is that certain companies with Cigna lines of coverage are not appearing on the master report from the app, despite being present on the carrier routing report. Additionally, demo companies are appearing on the carrier routing report.",
    "rca": "The root cause of the issue is that the master report only includes CompanyCarrierLineInfo (CCLI) entries that are active and not in the INIT state. Many of the companies in question have CCLIs that are either expired or still in the INIT state, which is why they do not appear on the master report. Additionally, there are two companies with active CCLIs in the ONBOARDING state that require further investigation.",
    "steps_taken": "A new sheet named 'Master Roster List' was created to maintain a comprehensive list of company-carrier combinations. The discrepancies were identified by checking the state of the CCLIs for the companies in question. It was confirmed that the master report only includes active CCLIs not in the INIT state. Further investigation is needed for two companies with active CCLIs in the ONBOARDING state.",
    "data_models": "[CompanyCarrierLineInfo]"
  },
  "BENINTEG-3388": {
    "key": "BENINTEG-3388",
    "issue": "The issue involves discrepancies in the carrier routing and EDI feed status for several companies. Companies without active CarrierConnectEDI subscriptions or connection requests are showing as 'COMPLETED' in the routing sheet with Stedi as the vendor. Additionally, some companies with active subscriptions but no connection requests are also marked as 'COMPLETED'. There are inconsistencies in the system state for certain companies, leading to confusion about the actual connection status.",
    "issue_summary": "Discrepancies in carrier routing and EDI feed status for companies, with some showing 'COMPLETED' in routing sheets despite not having active subscriptions or connection requests.",
    "rca": "The root cause of the issue is attributed to poor documentation of the tool, leading to confusion and incorrect assumptions about the connection status of companies. The system's routing status does not accurately reflect the actual connection status, as it does not consider the 'is_active' and 'connection_id' fields.",
    "steps_taken": "The investigation involved checking the connection status of companies listed in the issues. It was confirmed that no active connections existed for companies in Issue 1 and Issue 3. For Issue 2, it was verified that the companies had active connections with other vendors (EBN and Vericred) despite being shown with Stedi in the routing table. Issue 4 was identified as a system state inconsistency, with multiple VPC objects in PROD state. A suggestion was made to improve the visibility of the connection status by interspersing routing and connection data and creating a guide to interpret the routing sheet.",
    "data_models": "[CarrierConnectEDI, VPC, ECC]"
  },
  "BENINTEG-3387": {
    "key": "BENINTEG-3387",
    "issue": "The group admin was concerned about the primary contact being changed without their knowledge during the renewal process. Two different names were sent as primary contacts at group renewal and company renewal stages, which caused confusion.",
    "issue_summary": "The issue was that different primary contacts were sent at group renewal and company renewal stages, causing confusion for the group admin. The primary contact should have been Piero, but Alex's name was sent instead.",
    "rca": "The root cause was that the enrollment information was filled in by the admin based on a specific history timestamp. However, the carrier packet was sent before this timestamp, leading the system to fall back to the first insurance admin found, which resulted in the wrong primary contact being set.",
    "steps_taken": "The engineering team reviewed the logic used to fetch the primary contact. The code snippet used was:\n\n```python\nprimaryContactRoleId = self.enrollmentInfo.get('signedBy')\nif not primaryContactRoleId:\n    insurance_admins = get_insurance_admins(self.company)\n    assert len(insurance_admins) > 0\n    primaryContactRoleId = str(insurance_admins[0].id)\nself.primaryContact: RoleWithCompany = RoleWithCompany.objects.get(id=primaryContactRoleId, company=self.company) if primaryContactRoleId else None\n```\n\nThe team discussed the logic and decided that the system should prioritize the insurance admin over the partner admin when selecting the primary contact. A product fix was raised to address this issue.",
    "data_models": "[RoleWithCompany, PendingAction]"
  },
  "BENINTEG-3386": {
    "key": "BENINTEG-3386",
    "issue": "Forms were not sent for a Qualifying Life Event (QLE) for employee ID 651b15d8e9f73577a503fe74, causing a delay in processing the insurance changes.",
    "issue_summary": "Forms were not sent for a QLE event due to an incorrect reason being populated, despite the company having an active Noyo feed and Rippling managing forms.",
    "rca": "The root cause was identified as an incorrect reason being populated, which prevented the forms from being sent automatically. This was due to a bug in the system that was fixed and deployed.",
    "steps_taken": "The team investigated the issue and identified that an incorrect reason was being populated. A fix was made and deployed to resolve the issue. After debugging, forms were sent automatically, and it was noted that there is usually a waiting period before forms are sent immediately under specific conditions.",
    "data_models": "[EnrollmentEvent, PendingActionGroup]"
  },
  "BENINTEG-3384": {
    "key": "BENINTEG-3384",
    "issue": "The member's current Aetna enrollment is being rejected by the carrier due to a plan misconfiguration. The Open Choice PPO $1000 plan is correct, but Noyo requires a plan coverage identifier for the previous coverage block. Additionally, the coverage information block for the 2024 plan year is missing, and the issue is time-sensitive as the Open Enrollment window closes soon.",
    "issue_summary": "The issue is a plan misconfiguration where the current Aetna enrollment is rejected due to missing plan coverage identifiers and missing coverage information for the 2024 plan year.",
    "rca": "The root cause of the issue is an incorrect plan mapping, categorized as a manual data entry error. Specifically, there was no plan mapping for the 'MO' state for the plan 'PPO 2000/80%', and the plan number data was not properly seeded.",
    "steps_taken": "The steps taken to resolve the issue included identifying the missing plan mapping for the 'MO' state and confirming the plan number data. The plan ID and plan code were provided, and the snapshot was submitted to resolve the issue.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3368": {
    "key": "BENINTEG-3368",
    "issue": "Employee enrollment for Tour24 was not sent via the file feed to Noyo, causing a delay in coverage confirmation.",
    "issue_summary": "The employee's enrollment was not transmitted via the active file feed to Noyo, despite having an active connection, and was instead confirmed via an RIS task.",
    "rca": "The root cause was identified as a pending Noyo setup task. The task remained unresolved because the connection was created using a different group ID than originally intended, preventing the system from sending BCBS MA coverage to Noyo.",
    "steps_taken": "The resolution involved marking the pending Noyo setup task as done, which allowed the coverages to start going through. It was noted that if a Noyo task is pending for more than 4 days, the system falls back to email, but for Open Enrollment, forms are not sent via email.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3366": {
    "key": "BENINTEG-3366",
    "issue": "A blocked transaction for an employee with a 422 error: \"Coverage must specify plan_number_identifier\". This appears to be a mapping error related to a PEO group.",
    "issue_summary": "The issue is a blocked transaction due to a missing plan_number_identifier in the coverage details, likely caused by a mapping error in a PEO group.",
    "rca": "The root cause analysis category is 'Ops Issue' with a subcategory of 'Incorrect Steps/State error'. The detailed description is not provided, but it suggests an operational error in the steps or state management.",
    "steps_taken": "The issue is being tracked with another Jira ticket BENINTEG-3714. The steps to resolve the issue would involve investigating the mapping error and ensuring the plan_number_identifier is correctly specified in the coverage details.",
    "data_models": "[]"
  },
  "BENINTEG-3365": {
    "key": "BENINTEG-3365",
    "issue": "OneKonnect is unable to send a new test file because 2025 UHC data is not being sent to OneKonnect as expected for Barry's Bootcamp.",
    "issue_summary": "The 2025 UHC data for Barry's Bootcamp was not being transmitted to OneKonnect, causing a delay in sending a new test file.",
    "rca": "The system was working as expected, but there was a misunderstanding or wrong expectation regarding the data transmission timing.",
    "steps_taken": "The issue was monitored, and it was confirmed that OE files including 2025 elections were being sent since 26/12/2024. The latest file was sent on 30th December, indicating that the system was functioning correctly.",
    "data_models": "[]"
  },
  "BENINTEG-3364": {
    "key": "BENINTEG-3364",
    "issue": "HostGPO Solutions Inc had two Noyo Setup Tasks in the queue for BEAM coverage that were not clearing. The tasks were related to assigning correct classification values to specific Noyo plans, and it was unclear why these tasks were generating when everything appeared to be set up correctly.",
    "issue_summary": "The issue was that Noyo Setup Tasks were not clearing due to incorrect classification values being assigned to Noyo plans, despite the setup appearing correct.",
    "rca": "Ops had added additional plan carrier classifications which were not differentiating in the Noyo plan mapping. Once these were removed, the issue was resolved.",
    "steps_taken": "The steps taken to resolve the issue included removing the billing_group from the carrier classifications for plan mapping, as it was not a differentiating factor between plans. It was advised that carrier classifications should only be added if they differentiate between plans. Once the unnecessary classifications were removed, the setup tasks were marked as done and did not re-open.",
    "data_models": "[]"
  },
  "BENINTEG-3363": {
    "key": "BENINTEG-3363",
    "issue": "OneKonnect is unable to send a new test file as requested by the carrier because 2025 SunLife data is not sending to OneKonnect as expected.",
    "issue_summary": "The 2025 SunLife data for Aviatrix Systems, Inc. is not being transmitted to OneKonnect, preventing the carrier from receiving the necessary test file.",
    "rca": "The root cause analysis category is EBN with a subcategory of Bug, but the detailed description of the root cause is not provided in the ticket.",
    "steps_taken": "The comments indicate that the data was being sent to OneKonnect daily, including the 2025 data. However, it was not sending as expected on the day the ticket was opened. The issue was reviewed by checking the dataset sent on 12/27 to OneKonnect.",
    "data_models": "[]"
  },
  "BENINTEG-3362": {
    "key": "BENINTEG-3362",
    "issue": "Dataset is blocked and not passing for Rhythm Energy's SunLife file feed through OneKonnect, preventing the implementation from moving forward.",
    "issue_summary": "The dataset for Rhythm Energy's SunLife file feed is not being sent to OneKonnect, causing a blockage in the implementation process.",
    "rca": "The root cause analysis category is 'Bug Fix' with a subcategory of 'Special Case Handling'. The detailed description of the root cause is not provided in the ticket.",
    "steps_taken": "The issue was addressed by running a script to generate files asynchronously for the affected companies. The script iterates over a list of company IDs, retrieves active carriers, and generates files for open enrollment. The RCA was expected to be fixed by the next day. Additionally, there was a deployment freeze which delayed the resolution. The dataset was confirmed to be sent after these actions.\n\nCode snippet used:\n```python\nfor company_id in ['6102cbf895224f722339619f', '66d9f36a3d65d9eefd9af1e5', '66f72c52511422e21494809b', '64b17268262d91d7a024c068', '649e84346f5da3c0a34761d5', '65971a4cba7844ce6f072b5c', '666369e58f14fe34b213e07f', '65006e1af4badc64ec1068df', '5f836ad76b37c80028c192e0', '653936c38269dc2cee53c40b', '63585f3f8ab37ff45bc9d0d5', '64271b235d6a795bb2450724', '66be71a42423fc39ad206472', '6705504c8c38cade4092cd57', '66fad75a8322da96c6cec89c', '665dd998779196db816ee57c', '64494c1039b7f08b98114f84', '64ff6cbfa4774ca8410c6ed2', '66b67cd553e9bdc2b3b53bb9', '61cb371a163f3bc910f6af0f', '66ce02b503a2ae72cbe3c368', '5c82ca306ab9e2661ec32974', '65131bc7491dbd15ae277c9f', '618c58c8fc935a17c0d01ca3', '6532a97819002290d5316f32', '5bf335fb573d202b43f3e21c', '612e85413df0855843e30d4a', '611b22aa03f75eb4144f0a39', '630fe8f0497365afee4e6d43', '6408b06c8bded2ba52beddd5', '62b5c4d4f918247a004f2fc4', '65ccdbd8fdac0641d27b20f1', '669530c9b4c35623e3ddd9ee', '5f87649d698f7e009ea9e0c6', '66461b7df799b9bf5338d0c6', '66c376554ce7a21e22071509']:\n    company = Company.objects.get(id=company_id)\n    reference_date = pst_today()\n    active_carriers = EbnFileGenerationController.get_company_active_carriers(company, reference_date)\n    for carrier in active_carriers:\n        request_reason = \"OPEN_ENROLLMENT\"\n        EbnFileGenerationController.generate_file_async(company, carrier, request_reason)\n```",
    "data_models": "[Company, EbnFileGenerationController]"
  },
  "BENINTEG-3361": {
    "key": "BENINTEG-3361",
    "issue": "Vermeer is blocked from progressing with testing because 2025 Cigna data is not sending to OneKonnect, preventing the generation of a test file.",
    "issue_summary": "The 2025 Cigna data for Vermeer is not being transmitted to OneKonnect, which is blocking testing progress.",
    "rca": "The root cause analysis category is 'Bug Fix' with a subcategory of 'Incorrect Implementation'. However, the detailed description of the root cause is not provided in the ticket.",
    "steps_taken": "The comments indicate that the data was not sending as expected on the day the ticket was opened. It was noted that OE files, including 2025 data, were being sent daily, and a request was made to review the situation.",
    "data_models": "[]"
  },
  "BENINTEG-3360": {
    "key": "BENINTEG-3360",
    "issue": "Dataset is blocked and not passing for Personify's Sunlife file feed through OneKonnect. OneKonnect is not receiving any data from Rippling, causing delays in implementation and customer escalation.",
    "issue_summary": "The dataset for Personify's Sunlife file feed is not being transmitted to OneKonnect, causing implementation delays and customer escalation. The issue is occurring at a higher rate than in the past.",
    "rca": "The root cause analysis category is EBN with a subcategory of Bug, but the detailed description of the root cause is not provided in the ticket.",
    "steps_taken": "A script was executed to iterate over a list of company IDs, retrieve each company, and generate files asynchronously for active carriers with the request reason 'OPEN_ENROLLMENT'. The OE file was submitted for review, and the RCA was expected to be fixed by the end of the day.",
    "data_models": "[Company, EbnFileGenerationController]"
  },
  "BENINTEG-3359": {
    "key": "BENINTEG-3359",
    "issue": "Aetna PEO Migration is facing production errors related to CSAs and duplicate records. There are issues with ensuring valid CSA and Plan Numbers for employees and duplicate enrollments that need to be resolved.",
    "issue_summary": "The issue involves production errors during Aetna PEO Migration, specifically related to CSA and Plan Numbers validation for employees and duplicate enrollments that need to be addressed.",
    "rca": "The root cause of the issue is identified as a bug on Noyo's end, which is affecting the CSA plan errors.",
    "steps_taken": "The team reached out to Noyo to address the CSA plan errors. The correct plan number identifier (213) was confirmed, and follow-up communication with Noyo was initiated to resolve the issues.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3358": {
    "key": "BENINTEG-3358",
    "issue": "Real Value LLC's Delta Dental data was not being sent to OneKonnect, blocking the dataset and preventing implementation.",
    "issue_summary": "The dataset for Real Value LLC's Delta Dental was blocked and not passing through OneKonnect due to a recent code change that caused no files to be sent when there were no employees in the payload.",
    "rca": "A bug in the system was identified where the testing connections did not send the Open Enrollment (OE) files. This was due to a regression in the async code path, which did not create an EbnUploadFileRequest when there were no employees in the payload, unlike the sync code path. This behavior was introduced by a recent code change.",
    "steps_taken": "The issue was debugged by checking the EbnUploadFileRequest objects and manually generating files to identify the absence of employees in the payload. The async file generation code path was reviewed, and it was confirmed that no ETA chunks were launched due to empty work_ids, preventing the success callback from being invoked. The team was informed about the regression, and a fix was implemented to ensure files are sent even when the employees block is empty. Regular emails for the group were resumed, and the ticket was closed.",
    "data_models": "[EbnUploadFileRequest, EbnFileGenerationController, EbnCompanyFileGenerator, SubscriberLineInfo, Company]"
  },
  "BENINTEG-3356": {
    "key": "BENINTEG-3356",
    "issue": "Collective Health reported that the 12/25 file contained invalid plan codes for the waiver plan, specifically members were in a \"VIS*Waiver\" plan which is not a valid plan code. Additionally, the file size was over 14 MB.",
    "issue_summary": "Invalid plan codes were reported in the 12/25 file for the waiver plan, with members incorrectly listed under a \"VIS*Waiver\" plan. The issue was due to incorrect cron-based execution on Wednesday.",
    "rca": "The issue was caused due to incorrect cron-based execution on Wednesday, which led to the generation of files with invalid plan codes.",
    "steps_taken": "The steps to resolve the issue were not detailed in the ticket.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: []"
  },
  "BENINTEG-3355": {
    "key": "BENINTEG-3355",
    "issue": "Employee Hung Nguyen's corrected effective date in Rippling was not reflected in the EDI 834 file sent to Kaiser PEO. The effective date was changed from 1/1/2025 to 12/1/2024, but the files still showed the original date.",
    "issue_summary": "The effective start date for employee Hung Nguyen was updated in Rippling but not reflected in the EDI 834 files sent to Kaiser PEO, causing a discrepancy in the effective date.",
    "rca": "The root cause was identified as data issues due to incorrect implementation, where two SubscriberLineInfo (SLI) entries were active simultaneously, impacting the transmission of the correct effective date.",
    "steps_taken": "The effective date was manually overridden in the transmission using a script. The script filtered and updated the effective date in the FragmentRequestData. Additionally, the New Hire Enrollment (NHE) SLIs were invalidated to correct the data. The script used was:\n\n```python\ncarriers = USBenefitsPeoCarrier.objects.filter(name='PeoKaiser')\nstedi_requests = StediRequestMetaData.objects_across_company.filter(carrier__in=carriers, referenceDate=date(2024, 12, 25), requestStatus='FRAGMENTED')\nsrmd = stedi_requests.filter(company='6668726c0e9234b7b830ae68').first()\nfr = FragmentRequestData.objects.filter(stediRequestMetadata=srmd).first()\nmems = fr.premappedDataFragment['member_level_detail_INS_loop']\nfor mem in mems:\n  if mem['role_id'] == '6744eb334bbf08c08819943f':\n    mem['health_coverage_HD_loop'][0]['health_coverage_dates_DTP'][0]['coverage_period_03'] = '2024-12-01'\nfr.save()\nreturn fr\n```",
    "data_models": "[USBenefitsPeoCarrier, StediRequestMetaData, FragmentRequestData]"
  },
  "BENINTEG-3354": {
    "key": "BENINTEG-3354",
    "issue": "Rippling EE needs a new snapshot sent to Noyo to correct vision/dental enrollment discrepancy.",
    "issue_summary": "Rippling EE missed Guardian enrollment due to a discrepancy in vision/dental enrollment, requiring a new snapshot to be sent via Noyo API.",
    "rca": "The root cause analysis category is marked as 'Deferred', indicating that the detailed reason for the issue was not provided or deferred for later analysis.",
    "steps_taken": "The issue was resolved by Noyo regenerating the snapshot on their end, as indicated by the comment 'Closing out. Noyo regenerated on their end.'",
    "data_models": "[]"
  },
  "BENINTEG-3352": {
    "key": "BENINTEG-3352",
    "issue": "The enrollment forms for Edgeconnex need to be updated with a new email address for UHC, but the user is unable to edit the address.",
    "issue_summary": "The user is unable to update the email address for UHC in the enrollment forms for Edgeconnex, and requires the email to be updated to sean_kurt_romeroso@uhc.com with client contact kbradfield@edgeconnex.com included.",
    "rca": "The root cause was identified as a limitation in the support tool that prevented the user from updating the email address. The email was proxied and updated manually.",
    "steps_taken": "The engineering team enabled the flag to allow email editing for the company, and manually updated the email address to the specified contacts.",
    "data_models": "[]"
  },
  "BENINTEG-3351": {
    "key": "BENINTEG-3351",
    "issue": "The end date of the role 64b6f78b720ddc9cc299f9c6 was updated from 2024-12-20 to 2024-12-31, requiring a 'Termination (end date correction)' event to be created and insurance timelines to be updated accordingly.",
    "issue_summary": "The role's end date was updated, necessitating the creation of a 'Termination (end date correction)' event and updates to insurance timelines. Rippling is not managing forms for this group.",
    "rca": "Rippling is not managing forms for this group, which led to no forms being sent for the end date correction.",
    "steps_taken": "1. Verified that a 'Termination (end date correction)' event was created for the prior event 6765f72382e182386d30d67d. 2. Confirmed that the insurance timelines were updated by the 'Termination (end date correction)' event. 3. No forms were sent as Rippling is not managing forms for this group. 4. Since there is no COBRA event, the ticket was closed.",
    "data_models": "[]"
  },
  "BENINTEG-3349": {
    "key": "BENINTEG-3349",
    "issue": "The DG93 UHC plan is missing in the plan mapper for the Homevision group, causing issues with Noyo and enrollments.",
    "issue_summary": "The DG93 UHC plan is present in the renewal event and Noyo Dashboard but missing in the plan mapper, leading to enrollment issues.",
    "rca": "The root cause was identified as a plan mapping mismatch due to the use of a support tool (retool) that deleted the wrong mapping.",
    "steps_taken": "The incorrect mapping was deleted, and the plan was updated in the plan mapper. The engineering team completed their actions, and the ticket was closed after confirming the plan appeared correctly.",
    "data_models": "[]"
  },
  "BENINTEG-3348": {
    "key": "BENINTEG-3348",
    "issue": "Dataset is blocked and not passing for Hometeam's MetLife file feed through OneKonnect, preventing OneKonnect from moving forward with implementation.",
    "issue_summary": "The dataset for Hometeam's MetLife file feed through OneKonnect is blocked due to an incorrect implementation, causing a delay in the implementation process.",
    "rca": "The root cause of the issue is categorized as a bug fix due to incorrect implementation, although the detailed description is not provided.",
    "steps_taken": "The team sent the Open Enrollment (OE) files for processing. A code snippet was used to iterate over company IDs, retrieve active carriers, and generate files asynchronously for each carrier with the request reason 'OPEN_ENROLLMENT'. The RCA was in progress and expected to be fixed by the end of the day.",
    "data_models": "[Company, EbnFileGenerationController]"
  },
  "BENINTEG-3347": {
    "key": "BENINTEG-3347",
    "issue": "Dataset is blocked and not passing for CareAtHome's MetLife file feed through OneKonnect, preventing OneKonnect from moving forward with implementation.",
    "issue_summary": "The dataset for CareAtHome's MetLife file feed through OneKonnect is blocked due to an incorrect implementation, causing a delay in the implementation process.",
    "rca": "The root cause of the issue is categorized as a bug fix due to incorrect implementation, although the detailed description of the root cause is not provided.",
    "steps_taken": "The team sent the Open Enrollment (OE) file including 2025 elections for the affected company IDs. A script was used to iterate over company IDs, retrieve active carriers, and generate files asynchronously using the EbnFileGenerationController. The RCA was in progress and expected to be fixed by the end of the day.",
    "data_models": "[Company, EbnFileGenerationController]"
  },
  "BENINTEG-3345": {
    "key": "BENINTEG-3345",
    "issue": "The group flagged that Aetna PEO coverage was not terminated as expected. PEO coverage should have ended on 11/30, but it remained active, causing issues for employees transitioning to new coverage.",
    "issue_summary": "Aetna PEO coverage was not terminated as expected, causing issues for employees transitioning to new coverage. The termination was supposed to be effective from 12/01/2024.",
    "rca": "The root cause analysis indicates that the Salesforce case related to this issue was closed, which might have led to the delay or oversight in processing the termination of the PEO coverage.",
    "steps_taken": "Debugging was performed using the employee event debugger to verify the status of coverage termination. It was confirmed that the termination was transmitted to Noyo, and the coverage was terminated at Noyo. However, there was a delay in processing, which might have caused the issue.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent, PendingActionGroup, PendingAction]"
  },
  "BENINTEG-3344": {
    "key": "BENINTEG-3344",
    "issue": "The enrollment forms for the company Valon need to be sent to a different email address (tpa_eligibility@uhc.com) instead of the current one (clientserviceoperations@uhc.com).",
    "issue_summary": "The issue is that the enrollment forms for Valon are being sent to the wrong email address, and the email needs to be updated to tpa_eligibility@uhc.com for form-sending.",
    "rca": "The root cause was identified as a need for a product enhancement to allow the email address for form-sending to be updated for specific companies.",
    "steps_taken": "The edit email functionality was enabled for the company Valon, allowing the email address to be updated directly. This resolved the issue.",
    "data_models": "[]"
  },
  "BENINTEG-3343": {
    "key": "BENINTEG-3343",
    "issue": "Group is receiving multiple emails from insurance-broker-ops@rippling.com despite the email address section being blank under the Carrier Transmission tab.",
    "issue_summary": "Group is receiving emails when there is no email address listed in the Carrier Transmission tab. The emails are being sent due to the communication method being set to Email, despite the Ideon connection being expired and the eBN connection being in Testing.",
    "rca": "The email was sent because the Carrier communication method was determined to be Email. The company had an Ideon connection earlier which is now expired, and there is an eBN connection in the TESTING state. There is no Custom Communication Detail for the eBN connection, and the new vendor routing table is enabled for the company.",
    "steps_taken": "Debugging involved checking the PendingAction's object history to determine why the email was sent. The communication method was found to be set to Email. The Ideon connection was confirmed to be expired, and the eBN connection was in the TESTING state. It was also confirmed that there was no Custom Communication Detail for the eBN connection. The new vendor routing table was found to be enabled for the company.",
    "data_models": "[PendingAction, CustomCommunicationDetail, CompanyPartnerVendorRoutingLog]"
  },
  "BENINTEG-3341": {
    "key": "BENINTEG-3341",
    "issue": "The issue was that 20 clients had canceled their renewal for the upcoming 01/01/2025 plan year, and the automated schedules for production files needed to be stopped for these clients. The last feed for Cigna was to be delivered on 12/31/2024, and for UHC on 12/25/2024. The team needed to ensure that the production file automatic schedules were stopped on or after the specified dates for Cigna and UHC.",
    "issue_summary": "20 clients canceled their renewal for the 01/01/2025 plan year, requiring the stopping of automated production file schedules for Cigna and UHC after the last feed dates.",
    "rca": "The root cause was identified as the need to stop the automated schedules for production files due to the cancellation of renewals by 20 clients for the 01/01/2025 plan year. A webscript was run to address this.",
    "steps_taken": "The steps taken to resolve the issue included running a webscript to expire all Cigna and UHC feeds for the specified companies. The script filtered out configurations related to Kaiser PEO and deleted the relevant entries for the companies from various models such as VendorPartnerCompany, BaseVendorPartnerGroupingConfig, StediPartnerCompanyGroupingPayloadData, StediPartnerTransmissionConfig, CustomStediCommunicationDetail, and BaseCompanyCarrierTransmission. The script ensured that the production files were expired as required.",
    "data_models": "[VendorPartnerCompany, BaseVendorPartnerGroupingConfig, StediPartnerCompanyGroupingPayloadData, StediPartnerTransmissionConfig, CustomStediCommunicationDetail, BaseCompanyCarrierTransmission]"
  },
  "BENINTEG-3339": {
    "key": "BENINTEG-3339",
    "issue": "Forms were not sent for employee Danielle Compton's Cigna COBRA enrollment despite the 1P file feed being paused.",
    "issue_summary": "Forms for Danielle Compton's Cigna COBRA enrollment were not sent due to missing CustomStediCommunicationDetail for certain groups, even though the 1P file feed was paused.",
    "rca": "The root cause was identified as missing CustomStediCommunicationDetail for three specific groups. This setup problem prevented the forms from being sent. An audit revealed that these were the only groups affected by this error.",
    "steps_taken": "The issue was resolved by creating the necessary CustomStediCommunicationDetail for the affected groups. An audit was conducted to ensure no other suspended companies were affected. The forms will now be sent automatically for these groups. The communication type will still show as Stedi, but emails are being sent as a dual communication method. The following code snippet was used to identify and create the missing details:\n\n```python\nforms_not_sending_companies = [\"5eda37929838c74fc604046c\",\n\"62bb9a471014bf1773bf07c5\",\n\"62b203f7824321e39361ef76\",]\n\nfor c in companies:\n  cc = CustomStediCommunicationDetail.objects.get_or_none(company=c)\n  if not cc:\n    vpc = VendorPartnerCompany.objects.get(company=c, vendor=\"STEDI\")\n    print(c, vpc.state)\n\n    ccc = CustomStediCommunicationDetail.objects.get_or_create(\n               carrier=vpc.partner, company=vpc.company\n           )\n    print(ccc)\n```\n\nAn audit script was also used:\n\n```python\nvpcs = VendorPartnerCompany.objects_across_company.filter(state=\"SUSPENDED\", vendor=\"STEDI\", benefits__ne=[])\nfor vpc in vpcs:\n  if not vpc.partner.isPeoCarrier:\n    ccd = CustomStediCommunicationDetail.objects.get_or_none(company=vpc.company,carrier=vpc.partner)\n    if not ccd:\n      print(vpc.company.id, ccd)\nreturn\n```",
    "data_models": "[CustomStediCommunicationDetail, VendorPartnerCompany]"
  },
  "BENINTEG-3337": {
    "key": "BENINTEG-3337",
    "issue": "The issue faced was an error message indicating that LTD lines of coverage require volume for Guardian, which was blocking the Noyo 1/1 Open Enrollment process for multiple employees at APEX Analytix, LLC.",
    "issue_summary": "The issue was that the LTD lines of coverage required volume for Guardian, causing a 422 error status and blocking the Noyo 1/1 Open Enrollment process for multiple employees.",
    "rca": "The root cause of the issue was identified as a missing feature flag that needed to be added to handle the volume requirement for Guardian's LTD lines of coverage.",
    "steps_taken": "The steps taken to resolve the issue included following the steps outlined in a Confluence article to finalize the Noyo connection, deleting and reconfiguring the mapping, and adding the necessary feature flag to handle the volume requirement.",
    "data_models": "[]"
  },
  "BENINTEG-3336": {
    "key": "BENINTEG-3336",
    "issue": "Noyo Setup Tasks for Academia, Inc.'s Kaiser coverage are not clearing from the Insurance Tasks Dashboard despite being set up correctly.",
    "issue_summary": "Noyo Setup Tasks are not clearing due to incorrect steps/state error, even though plans and classes are mapped correctly in the Noyo Plan Mapper.",
    "rca": "The root cause was identified as an 'Incorrect Steps/State error' in the operations process, which led to the generation of tasks despite correct setup.",
    "steps_taken": "Referred to the Base Noyo Setup Task Walkthrough runbook for guidance, confirmed correct mapping of plans and classifications in the Noyo Plan Mapper, and engaged engineering to investigate the task generation issue. The issue was resolved by following the steps provided by Chirag, as confirmed in the comments.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3335": {
    "key": "BENINTEG-3335",
    "issue": "The broker confirmed with BCBS IL that they will accept emailed forms for Form Sending until the group's EDI feeds are live. However, the admin is unable to enable dual communication on the Carrier Connections tab as the email address input isn't being saved.",
    "issue_summary": "The admin is unable to save the email address for dual communication with BCBS IL on the Carrier Connections tab, preventing the sending of forms via email until EDI feeds are live.",
    "rca": "The issue was due to the inability to add the email using the standard method, which was resolved by using a proxy tool to add the email.",
    "steps_taken": "The email addresses for BCBS IL were added using a proxy tool on the carrier transmissions tab, as the standard method was not saving the email addresses.",
    "data_models": "[]"
  },
  "BENINTEG-3333": {
    "key": "BENINTEG-3333",
    "issue": "The end date of a role for an employee at eWorld Enterprise Solutions, Inc. was updated from 2024-10-25 to 2024-12-30, requiring verification and updates to insurance timelines and potential COBRA coverage.",
    "issue_summary": "The end date of an employee's role was updated, necessitating the creation of a 'Termination (end date correction)' event and ensuring insurance timelines are updated accordingly. Additionally, if COBRA coverage is involved, further actions are needed.",
    "rca": "The issue was related to the verification of a termination date correction event, which falls under the 'Forms' category.",
    "steps_taken": "1. Verified that a 'Termination (end date correction)' event was created for the prior event. 2. Reviewed and confirmed that the insurance timelines were updated correctly. 3. Confirmed successful transmission of updates. 4. Since no COBRA event was finalized, the ticket was closed.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3332": {
    "key": "BENINTEG-3332",
    "issue": "DTP*356 dates for dependents are not populating accurately compared to the employee's dates for Personify Inc with Cigna.",
    "issue_summary": "The DTP*356 dates for dependents of employees Cameron Zandkarimi and Eric Cooper were incorrect, showing earlier dates than the employees' dates.",
    "rca": "The issue was identified as a bug that needed fixing, and a fix was deployed to correct the DTP*356 dates for the dependents to match the employees' dates.",
    "steps_taken": "A fix was raised and deployed to production after a deployment freeze. The DTP*356 dates were verified to be correct by generating a test OE file.",
    "data_models": "[]"
  },
  "BENINTEG-3330": {
    "key": "BENINTEG-3330",
    "issue": "The group Everlaw, Inc. had approximately 260 blocked transactions due to transactions on the old API version in error (member request). These snapshots were blocking the group's Open Enrollment (OE).",
    "issue_summary": "Everlaw, Inc. had blocked transactions due to old API version errors, preventing Open Enrollment. Snapshots were not initially enabled, causing issues with transaction processing.",
    "rca": "The root cause was that the group was never migrated to the snapshot API, and the NoyoVendorGroupSettings was only created when snapshots were enabled. The blocked transactions were due to the member requests being in a 'canceled' state, and the system flip-flopped between marking them as BLOCKED and RESOLVED due to conflicting states in the sync_noyo_member_requests_chunk and clean_blocked_transactions tasks.",
    "steps_taken": "Snapshots were enabled for the group in the company debugger. The Pending Actions were retried, resulting in successful transmission via snapshots. Blocked transactions were identified and retried, even those marked as RESOLVED, to ensure they were processed correctly. The following code snippet was used to process the blocked transactions:\n\n```python\nfrom insurance.models.carrier_connections_models import BlockedTransaction\n\nblocked_transaction_ids = [\n  \"676887d8a1bcec4fed6f645a\",\n  ...\n]\nitems = []\nfor blocked_transaction_id in blocked_transaction_ids:\n  blocked_transaction = BlockedTransaction.objects.get(id=blocked_transaction_id)\n  assert str(blocked_transaction.company.id) == \"6674a3f1a1b74172191ef109\"\n  assert blocked_transaction.vendor == \"NOYO\"\n  assert blocked_transaction.error_type == \"NoyoMemberRequestError\"\n  pending_action = blocked_transaction.pending_action\n  assert pending_action.state in [\"PROCESSED\", \"PENDING\"]\n  try:\n    pending_action.state = \"PROCESSED\"\n    pending_action.performAction()\n    blocked_transaction.state = \"RESOLVED\"\n    blocked_transaction.save()\n    error = None\n  except Exception as e:\n    error = str(e)\n  items.append({\n    \"BlockedTransaction ID\": blocked_transaction_id,\n    \"PendingAction ID\": str(pending_action.id),\n    \"New PendingAction State\": pending_action.state,\n    \"Error\": error,\n  })\nreturn items_to_csv_str(items)\n```",
    "data_models": "[NoyoVendorGroupSettings, BlockedTransaction, PendingAction]"
  },
  "BENINTEG-3329": {
    "key": "BENINTEG-3329",
    "issue": "Duplicate UHC (PRIME and USP) EDI files were being sent from Stedi to UHC twice without cause, when only one production file should be sent.",
    "issue_summary": "Duplicate EDI files were being sent to UHC due to manual errors in the Kaiser PEO weekly file transmission, causing all files to be sent on specific dates instead of just the intended ones.",
    "rca": "The root cause for the duplicate files was identified as a manual error during the Kaiser PEO weekly file transmission. The files were sent manually, and a human error caused all files to be sent on 18 and 25 Dec instead of just the Kaiser one.",
    "steps_taken": "The Kaiser PEO files are now sent automatically, and a memo was sent internally to ensure that all EDI files are not triggered when using webscripts. This should prevent the issue from occurring again.",
    "data_models": "[StediRequestMetaData]"
  },
  "BENINTEG-3328": {
    "key": "BENINTEG-3328",
    "issue": "Guardian did not receive the group's Open Enrollment (OE) elections due to a failed transmission to Noyo on 11/16/2024, resulting in over 150+ blocked transactions.",
    "issue_summary": "The issue was that Guardian did not receive the OE elections for Atlantic Coast Mortgage, LLC due to a failed transmission to Noyo, caused by a missing volume for 'Std lines of coverage' required by Guardian.",
    "rca": "The root cause of the issue was a business logic error where the 'Std lines of coverage' required volume for Guardian was not provided, leading to a failure in the Noyo API transmission.",
    "steps_taken": "The issue was resolved by implementing a fix behind a feature flag 'noyo-volument-voluntary-sli-based' in LaunchDarkly, which was enabled for everyone. This allowed the transactions to process successfully during the next scheduled job.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-3327": {
    "key": "BENINTEG-3327",
    "issue": "Noyo OE elections not transmitting due to a full census not being sent when pushed.",
    "issue_summary": "The Noyo plan mapper's unintuitive behavior caused the renewal plan's mapping to lack configuration assignments, preventing the transmission of the full census.",
    "rca": "The Noyo plan mapper did not show the renewal Rippling plan's configuration assignments, leading to missing assignments in the plan mappings. This was due to the mapper's inherent limitation in handling renewal plans.",
    "steps_taken": "The issue was resolved by toggling the checkboxes in the Noyo plan mapper and clicking 'Save assignments' to update the plan mappings. This action sent updated values in the request bodies, fixing the plan mapping errors. A new batch of census snapshots was then successfully sent to Noyo using the Noyo Census Request Tool.",
    "data_models": "[Company, InsuranceCompanyCarrierLineInfo, NoyoCompanyPlanInfo]"
  },
  "BENINTEG-3326": {
    "key": "BENINTEG-3326",
    "issue": "Request to delete current medical and dental/vision onboarding as Cigna requested all 3 benefits be on the same file. Currently, Medical is in production and dental/vision were anticipated to be ACE, but the carrier wants one Facet file.",
    "issue_summary": "Cigna requested that all benefits (medical, dental, vision) be on the same file, but currently, they are not. Medical is in production separately, and dental/vision were anticipated to be handled differently.",
    "rca": "The issue was identified as a need to consolidate the benefits into a single file as requested by Cigna. A webscript was run to address the issue.",
    "steps_taken": "A Python script was executed to delete existing configurations and data related to the separate onboarding of medical and dental/vision benefits. The script filtered and deleted entries from several models: VendorPartnerCompany, BaseVendorPartnerGroupingConfig, StediPartnerCompanyGroupingPayloadData, StediPartnerTransmissionConfig, CustomStediCommunicationDetail, and BaseCompanyCarrierTransmission for the specified company.",
    "data_models": "[VendorPartnerCompany, BaseVendorPartnerGroupingConfig, StediPartnerCompanyGroupingPayloadData, StediPartnerTransmissionConfig, CustomStediCommunicationDetail, BaseCompanyCarrierTransmission]"
  },
  "BENINTEG-3325": {
    "key": "BENINTEG-3325",
    "issue": "The carrier packet for Steller Innovations, LLC's new group enrollment with MetLife is missing the Commission Agreement form, which is required for implementing the group's coverage.",
    "issue_summary": "The Commission Agreement form was missing from the MetLife carrier packet for Steller Innovations, LLC due to a missing EFT form template, causing the packet generation to crash.",
    "rca": "The NSCA form was not generating because the EFT form template was missing, causing the packet generation process to crash. This error was visible in the company debugger but was not intuitive, leading to the missing Commission Agreement form.",
    "steps_taken": "The EFT and renewal forms were added to the MetLife PA folder. After these additions, the carrier packet was regenerated, and the missing form was successfully included.",
    "data_models": "[]"
  },
  "BENINTEG-3313": {
    "key": "BENINTEG-3313",
    "issue": "Elevate Fence Partners' employee's QLE never transitioned from FINALIZED to PROCESSED because Aetna forms were not generated or sent for their medical enrollment.",
    "issue_summary": "Aetna forms were not generated or sent for an employee's QLE, preventing the transition from FINALIZED to PROCESSED.",
    "rca": "The root cause was identified as a manual data entry error where forms were missing from box.com, specifically for the Large group - Aetna, QLE.",
    "steps_taken": "The issue was identified as a mapping problem, and it was confirmed that the forms were present in BOX but not properly mapped. An Ops request was suggested to address the forms issue, and it was confirmed that general Aetna FL forms for large groups were in place.",
    "data_models": "[EnrollmentEvent, PendingActionGroup]"
  },
  "BENINTEG-3311": {
    "key": "BENINTEG-3311",
    "issue": "The end date of a role was updated from 2024-09-20 to 2024-12-19, requiring updates to termination events and insurance timelines.",
    "issue_summary": "The end date of the role was updated, necessitating the creation of a 'Termination (end date correction)' event and ensuring insurance timelines are updated accordingly.",
    "rca": "No action needed",
    "steps_taken": "1. Verified that a 'Termination (end date correction)' event was created for the prior termination event. 2. Confirmed that insurance timelines were correctly updated by the event. 3. Sent all relevant forms from Integrations. 4. Since the employee does not have COBRA coverage, the ticket was closed.",
    "data_models": "[]"
  },
  "BENINTEG-3310": {
    "key": "BENINTEG-3310",
    "issue": "Forms were not sent for an employee's Qualifying Life Event (QLE) at Everlaw, Inc. due to the accidental deletion of SubscriberLineInfos (SLIs) before the event was finalized.",
    "issue_summary": "Forms were not generated for an employee's QLE event because the SLIs were accidentally deleted before finalization. Although the SLIs were restored and the event re-finalized, forms were still not generated.",
    "rca": "The root cause was deferred, indicating no immediate action was needed. The SLIs were accidentally deleted before the event was finalized, which prevented the forms from being generated.",
    "steps_taken": "The SLIs were restored, and the event was re-finalized. Forms for Noyo were sent, and it was confirmed that no forms were needed for Kaiser and Cigna. The ticket was then closed.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-3309": {
    "key": "BENINTEG-3309",
    "issue": "The new hire employee Ramya Idury completed the new hire enrollment task on December 17, 2024, but the forms were not transmitted to the email mentioned in the carrier transmission tab. The forms had to be sent manually.",
    "issue_summary": "The new hire enrollment forms for employee Ramya Idury were not automatically transmitted via email as expected after completing the enrollment task. This issue occurred for a BOB group and required manual intervention.",
    "rca": "An unrelated bug was identified that prevented the forms from being sent out immediately. The root cause analysis for this specific ticket could not be provided, but a related bug fix is being tracked under a different ticket (BENINTEG-3405).",
    "steps_taken": "The forms were manually sent during an Office Hours call. A bug was identified that prevented immediate transmission, and a fix is being tracked in a separate ticket (BENINTEG-3405).",
    "data_models": "[]"
  },
  "BENINTEG-3307": {
    "key": "BENINTEG-3307",
    "issue": "The form-sending tool was enabled to send enrollment changes starting from 12/1, but the broker reported not receiving email notifications for changes sent to carriers. It appeared that forms were not being sent despite the tool being enabled.",
    "issue_summary": "The form-sending tool was not sending forms as expected, leading to brokers not receiving email notifications for enrollment changes. The system was actually working as expected, but there was a misunderstanding about the form-sending process.",
    "rca": "The system was working as expected. Forms were not sent for Open Enrollment (OE) events, which was the reason the broker did not receive notifications. The expectation that forms would be sent for OE events was incorrect.",
    "steps_taken": "A list of forms that needed to be sent after 12/1 was pulled, revealing only two employees for whom forms needed to be sent. Forms for one employee were already sent, and forms for the other were scheduled to be sent. It was confirmed that the form-sending process was functioning correctly and would continue to do so.",
    "data_models": "[]"
  },
  "BENINTEG-3306": {
    "key": "BENINTEG-3306",
    "issue": "Multiple Guardian Dental Plans are showing in the Plan Mapper for a group, with both high and low plans appearing multiple times.",
    "issue_summary": "The Plan Mapper is displaying multiple instances of high and low Guardian Dental Plans for a group during a Renewal Event.",
    "rca": "The root cause analysis indicates that there is no issue.",
    "steps_taken": "The issue was monitored, and it was determined that there was no actual problem. The ticket was eventually marked as good to close.",
    "data_models": "[]"
  },
  "BENINTEG-3303": {
    "key": "BENINTEG-3303",
    "issue": "Alert Media needs the Open Enrollment (OE) to be manually pushed via the Unum connection.",
    "issue_summary": "The Unum connection for Alert Media was activated, and there was a need to manually push the Open Enrollment (OE) data, although it was expected to be sent automatically.",
    "rca": "The root cause analysis revealed that the system was working as expected, and forms were sent. There was a misunderstanding regarding the expectation that the OE data would be sent automatically to Noyo, but it was confirmed that Unum does not send automatically at this time.",
    "steps_taken": "The team confirmed that the transmissions had occurred as expected and matched the expectations. It was noted that the OE was sent on the 27th, and there was no need for engineering intervention, leading to the closure of the ticket.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3297": {
    "key": "BENINTEG-3297",
    "issue": "The end date of the role for an employee was updated from 2024-07-29 to 2024-12-11, requiring updates to insurance timelines and potential communication with carriers.",
    "issue_summary": "The end date of an employee's role was updated, necessitating the creation of a 'Termination (end date correction)' event and ensuring insurance timelines are updated accordingly. Additionally, the ticket needs to be reassigned to the Marketplace - Integrations team to update the end date with carriers, and if COBRA coverage is involved, further action with the Compliance team may be required.",
    "rca": "No action needed",
    "steps_taken": "The event was refreshed because coverage was split across two events. The UHC TX termination was processed as forms were not sent via email, while Metlife TX forms were already sent. Both Metlife and UHC transmissions were completed, with UHC transmission sent through Noyo snapshot on 14 Dec. Since the employee does not have COBRA coverage, the ticket was closed as no further action from the Compliance team was required.",
    "data_models": "[]"
  },
  "BENINTEG-3296": {
    "key": "BENINTEG-3296",
    "issue": "The termination form was incorrectly sent to UnitedHealthcare (UHC) for an employee and their dependents who were not enrolled with UHC but with Kaiser. This occurred during the termination of the dependent's coverage.",
    "issue_summary": "The termination form was sent to UHC despite the employee and dependents not being enrolled with them, due to a waiver form being sent for a waived medical coverage with UHC.",
    "rca": "The issue was not a bug but a valid scenario where a waiver form was sent to UHC because there was a CCLI for medical coverage with United that the employee had waived.",
    "steps_taken": "The engineering team identified that a waiver form was sent to UnitedHealthcare because the employee had waived medical coverage with them. The CCLI ID for United was 665de475fd2cacd543aab48f, and the pending action for United was identified as 67466f1813cec9ae3fe4e8ed. The issue was clarified and marked as resolved.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, SubscriberLineInfo]"
  },
  "BENINTEG-3295": {
    "key": "BENINTEG-3295",
    "issue": "EE processed address change and the wrong plan name was generated on the form field and demographic form. Forms from 2023 were sent on a demographic change initiated on 11/1/2024.",
    "issue_summary": "During a demographic change, an address change initiated on 11/1/2024 resulted in forms with plan details from 2023 being sent. This was due to a bug on the EEx side.",
    "rca": "The issue occurred due to a bug in the BenAdmin EEx side, which has already been fixed.",
    "steps_taken": "The bug was identified and fixed. The engineering team offered to regenerate forms with the correct data and resend them.",
    "data_models": "[]"
  },
  "BENINTEG-3294": {
    "key": "BENINTEG-3294",
    "issue": "Collective Health reported orphaned dependents on the EDI file with no subscriber. Dependents are being sent as COBRA active under the spouse SSN, but Rippling shows that the COBRA coverage for the subscribers and their dependents is canceled.",
    "issue_summary": "Dependents are appearing as COBRA active on the EDI file despite the subscribers having canceled COBRA coverage, leading to orphaned dependents being reported.",
    "rca": "Reported employees were removed with invalid coverage, causing dependents to appear as COBRA active without a corresponding subscriber.",
    "steps_taken": "The issue was identified as dependents being dropped from the file. Further investigation was suggested to look for other examples of this issue.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-3289": {
    "key": "BENINTEG-3289",
    "issue": "The issue was that for TCM Payroll LLC, the carrier contacts for Cigna and Principal were not listed, resulting in enrollment changes not being sent as the group's feeds expired in June and form sending was used as the default method.",
    "issue_summary": "The carrier contacts for Cigna and Principal were not listed, causing enrollment changes not to be sent after the group's feeds expired in June.",
    "rca": "The root cause analysis indicated that no action was needed, but it was noted that the issue might have been related to the feed not expiring correctly. Additionally, there was confusion about why the Kaiser feed remained active when others were turned off.",
    "steps_taken": "The group added the carrier contact for Cigna, and it was confirmed that Principal does not accept forms. A banner was added to communicate this. The setup of the feed was initiated again, and all details in the system were updated. Ideon confirmed that the Kaiser feed was never live, and all related feeds should have been expired at the same time.",
    "data_models": "[]"
  },
  "BENINTEG-3274": {
    "key": "BENINTEG-3274",
    "issue": "A bulk snapshot push for all employees of the group led to salaries being updated with Guardian outside of the group's annual redetermination schedule.",
    "issue_summary": "The issue was caused by a regression bug from a previous Metlife fix, which resulted in incorrect salary updates being sent to Guardian.",
    "rca": "The root cause of the issue was identified as a regression bug from a previous fix related to Metlife. The bug caused the salary effective date to be incorrectly recognized as the transfer date (2/13) instead of the intended date (3/1), leading to incorrect salary updates being sent to Guardian.",
    "steps_taken": "The team investigated the issue and identified that the salary effective date needed to be corrected to reflect 3/1 in the Guardian payload for specific employees. The bug was reverted on the team's side, and the issue was resolved with the start of the new plan year. The team also monitored the situation to ensure the issue did not reoccur.",
    "data_models": "[VendorRequest]"
  },
  "BENINTEG-3273": {
    "key": "BENINTEG-3273",
    "issue": "When mapping Anthem Plans for a group, the Silver 3200 plan is divided into EE only/EE with dependents from Anthem. An error message is encountered when trying to map the plans from Noyo to the single Rippling plan.",
    "issue_summary": "Anthem plans are not mapping correctly due to a plan mapping issue with Noyo, resulting in an error message when attempting to map plans.",
    "rca": "There was a plan mapping issue for Noyo. This group has been moved to Ideon, and the mapping for Noyo is no longer needed.",
    "steps_taken": "The issue was identified as related to a plan mapping problem with Noyo. It was confirmed that the group has been migrated to Ideon for Anthem, resolving the need for Noyo mapping. The ticket was then closed.",
    "data_models": "[]"
  },
  "BENINTEG-3270": {
    "key": "BENINTEG-3270",
    "issue": "The updated data is not being captured in the EDI files, causing manual updates made in Rippling and Guardian to be overridden by the EDI files, which default the coverage back to 1x salary.",
    "issue_summary": "The issue is that the EDI files are not capturing updated data, leading to manual changes being overridden and coverage defaulting to 1x salary. This is due to the way EDI files interact with Guardian's system, which overrides manually entered amounts.",
    "rca": "The root cause of the issue is the expected behavior of Guardian's system, where EDI file processing overrides any manual updates made in Rippling or Guardian, reverting coverage to default values. This behavior is different from Principal's system, which allowed manually entered data to remain unaffected by EDI file updates.",
    "steps_taken": "The engineering team was asked to investigate the root cause of offline changes not showing up on feeds. It was clarified that Guardian communication is via API, not EDI, and offline changes in Rippling will be picked up in the next transmission. Noyo amendments can be triggered at an employee level from the EE debugger, and a tool is available to send the census at a company level.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3269": {
    "key": "BENINTEG-3269",
    "issue": "The change report for Guardian's open enrollment materials is showing incorrect information for multiple employees, including Amy Dolan Salvatore, whose Voluntary Life coverage is incorrectly marked as waived for both past and current coverage years.",
    "issue_summary": "The change report for Guardian's open enrollment is incorrectly showing employees' Voluntary Life coverage as waived for both past and current years due to offline changes made for 2025, which should not affect the previous year's elections.",
    "rca": "For the employees mentioned, there was an offline change update to the selected open enrollment coverage, resulting in the Voluntary Life coverage for the open enrollment event being marked as invalid. This caused data issues in the change report, as the system fetches old enrollment details from the current open enrollment event, which was invalidated.",
    "steps_taken": "The engineering team clarified that the system currently fetches old enrollment details from the coverage related to the current open enrollment event. Due to the invalidation of coverage, it was not fetched correctly, leading to incorrect details in the change report. The team acknowledged the issue and is considering how to handle invalidated coverage better, but no immediate fix is available.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-3268": {
    "key": "BENINTEG-3268",
    "issue": "The file feed for USAble is effectively in production, but the Carrier Transmission tab is still showing 'Action Required'.",
    "issue_summary": "The Carrier Transmission tab is incorrectly showing 'Action Required' despite the file feed for USAble being in production. This is due to the blackout period before the renewal effective date, during which carriers may not process enrollments via EDI.",
    "rca": "The issue is due to the blackout period before the renewal effective date (1/1/25), during which many carriers do not accept enrollments via EDI. Although the feed is being sent to the vendor (Ebn), carriers may not process these files, hence the 'Action Required' notice for brokers to confirm form acceptance.",
    "steps_taken": "Confirmed that files are being sent to the vendor (One Konnect for USAble) and that the 'Action Required' message is for the admin to be aware of the blackout period. The feed will be active once the new plan is effective on 1/1/25.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3265": {
    "key": "BENINTEG-3265",
    "issue": "Unable to send a snapshot for employee Albert Luo due to a Noyo mapping issue, resulting in a missed enrollment.",
    "issue_summary": "The issue was caused by an incorrect Noyo group ID being used, which did not match the current plan mapping for the employee's enrollment.",
    "rca": "The amendment tab was failing because it was using an older, non-premium Noyo group ID, which did not correspond to the current premium group ID after the group moved from Rippling PEO 1 (Tech) to premium tech during the 12/01/24 renewals.",
    "steps_taken": "The engineering team identified the incorrect Noyo group ID being used and sent the correct snapshot for the employee, unblocking the issue. Screenshots were provided to show the current coverages for the correct group.",
    "data_models": "[CompanyInsuranceInfo, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-3262": {
    "key": "BENINTEG-3262",
    "issue": "The admin is unable to proceed with setting up Carrier Transmission for the group. When they click 'Continue', it loads for some time and then does not proceed to the next page.",
    "issue_summary": "Admin is unable to proceed with setting up Carrier Transmission due to a loading issue when clicking 'Continue'. The issue is caused by redundant VericredCompanyCarrierTransmission objects for Kaiser and UHC, leading to a duplicate key error.",
    "rca": "The issue was caused by redundant VericredCompanyCarrierTransmission objects for Kaiser and UHC. These carriers have been defaulted to API, and the frontend attempted to create BaseCompanyCarrierTransmission objects with Noyo as the Vendor, resulting in a duplicate key error.",
    "steps_taken": "The redundant VericredCompanyCarrierTransmission objects for Kaiser and UHC were deleted to resolve the issue. The following code snippet was used to delete these objects: ```python return VericredCompanyCarrierTransmission.objects.filter(company=\"6698ab55740dac4f6f1597a4\").delete() ```",
    "data_models": "[VericredCompanyCarrierTransmission, BaseCompanyCarrierTransmission]"
  },
  "BENINTEG-3261": {
    "key": "BENINTEG-3261",
    "issue": "OneKonnect is not receiving the 2025 data for First Help's UHC file as expected, which is needed for testing.",
    "issue_summary": "OneKonnect is not receiving the expected 2025 data for First Help's UHC file due to the initial behavior of only suspending production connections and not testing connections.",
    "rca": "In the initial behavior for OneKonnect, the system was configured to send Open Enrollment (OE) files only for groups whose VPC state was suspended. However, only the production connections were being suspended, not the testing connections. This oversight led to the issue where OneKonnect was not receiving the expected data for testing.",
    "steps_taken": "The internal team worked on a fix to also send the OE files for groups with a testing status, not just for production connections. This fix was implemented and the OE file was successfully sent to OneKonnect for UHC, as confirmed by the comments.",
    "data_models": "[]"
  },
  "BENINTEG-3260": {
    "key": "BENINTEG-3260",
    "issue": "The 2025 Open Enrollment (OE) data for Kaptyn with carrier Voya was not being transmitted to OneKonnect, causing a blockage in the OE file processing.",
    "issue_summary": "The OE data for Kaptyn with carrier Voya was not passing to OneKonnect after the OE window closed, despite being informed that the data was ready.",
    "rca": "The root cause analysis category is marked as 'Deferred', indicating that the detailed reason for the issue was not provided or investigated further.",
    "steps_taken": "The issue was resolved as data started passing to Voya through OneKonnect, as confirmed in the comments.",
    "data_models": "[]"
  },
  "BENINTEG-3259": {
    "key": "BENINTEG-3259",
    "issue": "Forms are being sent to Guardian unexpectedly, specifically snapshots and PDF forms for PCI.",
    "issue_summary": "Forms are being sent to Guardian unexpectedly due to a change in requirements, leading to incorrect data being sent.",
    "rca": "The root cause of the issue was a change in requirements that led to forms being incorrectly sent to Guardian.",
    "steps_taken": "The issue was assigned to another ticket (BENINTEG-3264) for handling, indicating that further investigation and resolution steps are being tracked there.",
    "data_models": "[]"
  },
  "BENINTEG-3258": {
    "key": "BENINTEG-3258",
    "issue": "Member telephone numbers are not being sent on the file feed, causing file feed errors and preventing the group's feed from going live.",
    "issue_summary": "The issue is that member phone numbers are not being submitted on the file feed despite being listed in Rippling, due to invalid phone numbers (non-US or incorrect digit count) which are causing errors.",
    "rca": "The root cause of the issue is that the phone numbers for the employees are invalid. Manuel Cintron's phone number is non-US, and Jessica Rhoads' phone number has only 9 digits instead of the required 10 digits (excluding the country code). Additionally, a change made in July restricted phone numbers to 'US' region only, which further contributed to the issue.",
    "steps_taken": "The steps taken to resolve the issue included verifying the phone numbers and understanding the recent changes in the system that restricted phone numbers to 'US' region only. The team communicated with Ideon and the carrier, who confirmed they could suppress the members' numbers, allowing the group's feed to move to production.",
    "data_models": "[]"
  },
  "BENINTEG-3257": {
    "key": "BENINTEG-3257",
    "issue": "The admin wants to update the email for Kaiser from amt@kp.org to csc-largeaccounts@kp.org for employee termination forms and confirm the email used for UHC. The admin is unable to make these changes as the carrier transmission tab does not provide an Edit button.",
    "issue_summary": "Admin is unable to update the email for Kaiser termination forms and confirm the email for UHC due to lack of edit functionality in the carrier transmission tab.",
    "rca": "The Kaiser CA connection for this group is through Noyo API, which does not send emails except during the Open Enrollment period. During this period, communication is dual, with the preferred method for Kaiser CA being Fax for non-Cobra enrollments and Email to amt@kp.org. The product does not currently support changing this email, and such changes require confirmation from the carrier and are planned for Q2 2025.",
    "steps_taken": "1. Confirmed with the admin that the email can be updated for all types of communication. 2. Identified that the change would be at a carrier level and requires confirmation from the carrier. 3. Suggested raising a carrier edit ticket on BENINFRA to add the new email addresses to the carrier, which will update the email for all groups on this carrier.",
    "data_models": "[]"
  },
  "BENINTEG-3255": {
    "key": "BENINTEG-3255",
    "issue": "The group experienced delays in Cigna enrollments being transmitted, with multiple enrollments held until 11/05.",
    "issue_summary": "Cigna enrollments for the group were delayed in transmission and held until 11/05 due to the transition from in-house EDI to form-based transmission during the group's Open Enrollment period.",
    "rca": "The system was working as expected. The group's Cigna transmissions were initially processed through the in-house Stedi EDI flow, which does not mark pending actions as completed. On 11/05, during the group's Open Enrollment, the in-house Cigna transmissions were paused, and the process fell back to form-based transmission, marking the pending actions as completed. This transition led to the appearance of delayed transmission.",
    "steps_taken": "The issue was investigated, and it was confirmed that the system was functioning as expected. The transition from EDI to form-based transmission during Open Enrollment was identified as the cause of the perceived delay. No further action was required as the enrollments were transmitted in a timely manner.",
    "data_models": "[PendingAction]"
  },
  "BENINTEG-3254": {
    "key": "BENINTEG-3254",
    "issue": "Dataset is not sending to OneKonnect for RNWBL Holdings, causing project delays.",
    "issue_summary": "The dataset for RNWBL Holdings is not being sent to OneKonnect due to a bug where files for EBN were not being sent for this group as it was in testing and did not have a past connection.",
    "rca": "There was a bug in the system where files were not being sent for EBN for the group RNWBL Holdings because it was in a testing state and did not have a past connection. This prevented the dataset from being sent to OneKonnect.",
    "steps_taken": "To resolve the issue, the engineering team updated the VPC state to 'Suspended' for the group, allowing the file to be sent. A script was used to change the state of the VendorPartnerCompany to 'Suspended'. Additionally, a manual file was triggered to unblock the group's testing. The script used was:\n\n```python\n#BENINTG-3254\necc= EbnCompanyCarrier.objects.get(company=\"61cb371a163f3bc910f6af0f\",state=\"TESTING\")\nassert ecc.carrier.name==\"UHC\"\nvpc = VendorPartnerCompany.objects.get(company=ecc.company,partner = ecc.carrier)\nvpc.state=VendorPartnerCompanyState.SUSPENDED\nvpc.save()\nreturn vpc.reload()\n```",
    "data_models": "[Company, EbnFileGenerationController, USBenefitsCarrier, EbnCompanyFileGenerator, SubscriberLineInfo, EbnEmployeeOverrideRecord, EbnCompanyCarrier, VendorPartnerCompany]"
  },
  "BENINTEG-3253": {
    "key": "BENINTEG-3253",
    "issue": "Customer requested to cancel the production schedule for Playvox - Cigna as they no longer have benefits on the system.",
    "issue_summary": "The production schedule for Playvox - Cigna needed to be disabled because the customer no longer has benefits on the system.",
    "rca": "A webscript was run to offboard the group, which led to the need to disable the production schedule.",
    "steps_taken": "The group was off-boarded and the production file schedule was stopped as confirmed by the comment from jgoel@rippling.com.",
    "data_models": "[]"
  },
  "BENINTEG-3245": {
    "key": "BENINTEG-3245",
    "issue": "Due to a 'CONNECTION_NOT_INITIATED' error, snapshots did not transmit for the group's Guardian coverage updates on 12/01/2024. There are approximately 40 employees affected, and bulk Noyo snapshots need to be pushed for Guardian coverage.",
    "issue_summary": "The issue was caused by a 'CONNECTION_NOT_INITIATED' error due to a bug in the Company debugger, which prevented the transmission of snapshots for Guardian coverage updates. The group had changed their state for Guardian plans from MA to CA, requiring a new Noyo connection setup.",
    "rca": "The root cause of the issue was a bug in the Company debugger that led to a 'CONNECTION_NOT_INITIATED' error for Pending actions of Open Enrollment (OE). The group had changed their state for Guardian plans from MA to CA, which required a new Noyo connection setup. Additionally, the new plans for the group's OE with Guardian were not loaded on Noyo, preventing the transmission of coverage.",
    "steps_taken": "The issue with the Noyo connection setup was fixed, and the Noyo connection was requested from the debugger, creating the necessary Guardian CA models. The team worked with Noyo to get the new plans loaded. Once confirmed, bulk snapshots for Guardian coverage were sent using the Noyo Census Request Tool. A faulty NoyoCompanyPlanInfo corresponding to a deleted Noyo plan was identified and deleted using the script: `return NoyoCompanyPlanInfo.objects.get(id=\"67615397db6e9976470b858e\").delete()`.",
    "data_models": "[NoyoCompanyPlanInfo]"
  },
  "BENINTEG-3244": {
    "key": "BENINTEG-3244",
    "issue": "The issue faced was the need to regenerate forms for a New Hire Enrollment (NHE) event for Little Otter, Inc. The forms were required by Anthem as proof of timely completion of NHE, but the information was lost after an update.",
    "issue_summary": "The forms for a New Hire Enrollment event were lost due to an update, and there was a need to regenerate them for Anthem to accept the request.",
    "rca": "The root cause was a special request to retrieve forms for a deleted event. The EnrollmentEvent and related pending actions had been deleted, which led to the loss of information.",
    "steps_taken": "The steps taken included fetching deleted objects to retrieve the forms. The following code snippet was used to retrieve the forms:\n```python\nevent = EnrollmentEvent.objects_including_deleted.get(id=\"665f721f752caf8aae4c7b0d\")\npag = PendingActionGroup.objects_including_deleted.filter(event=event)\nfileUrls = PendingAction.objects_including_deleted.filter(pendingActionGroup=pag[0]).distinct(\"fileUrls\")\nreturn fileUrls\n```\nThe forms were then provided to the requester, and updated links were shared to download the forms.",
    "data_models": "[EnrollmentEvent, PendingActionGroup, PendingAction]"
  },
  "BENINTEG-3243": {
    "key": "BENINTEG-3243",
    "issue": "The amendment for an employee's Aetna termination is blocked due to a non-USD salary currency error. The termination was mistakenly sent to Ideon instead of Noyo.",
    "issue_summary": "An employee's termination amendment is blocked because their salary currency is not in USD, and the termination was incorrectly sent to Ideon instead of Noyo.",
    "rca": "The employee changed their country, and the Noyo snapshot was not sent at the time of the change because Vericred was the vendor. Now, the process has to be handled offline.",
    "steps_taken": "The team reached out to Aetna directly to make the necessary termination changes for the employee.",
    "data_models": "[]"
  },
  "BENINTEG-3242": {
    "key": "BENINTEG-3242",
    "issue": "The process to finalize the Noyo connection for Anduril Industries keeps timing out, preventing the completion of the connection establishment.",
    "issue_summary": "The Noyo connection finalization for Anduril Industries is timing out due to the large number of employees, causing the process to fail.",
    "rca": "The system was functioning as expected, but the retool was throwing a timeout error due to the large number of employees at Anduril Industries. The error was related to the synchronous sending of snapshots during the finalization process.",
    "steps_taken": "Verified that the Noyo connection was finalized despite the timeout error. For large companies, it was suggested to trigger the snapshot sending separately from the census sending retool and to uncheck the send snapshot option during finalization.",
    "data_models": "[]"
  },
  "BENINTEG-3241": {
    "key": "BENINTEG-3241",
    "issue": "The client requested to add an email form contact for Sun Life Financial in the carrier transmissions tab for Personify, but there was no option to do so in the UI.",
    "issue_summary": "The UI did not provide an option to add an email form contact for Sun Life Financial, as requested by the client.",
    "rca": "The issue no longer exists, indicating that the system was working as expected and the problem was resolved without any changes.",
    "steps_taken": "The issue was checked and it was found that the email for Sun Life could now be added. The priority was moved back to low and the ticket was closed since the issue no longer existed.",
    "data_models": "[]"
  },
  "BENINTEG-3240": {
    "key": "BENINTEG-3240",
    "issue": "A confirm enrollment task was generated for a group regarding Metlife coverages, but Rippling records show no Metlife coverages for the group. Metlife could not complete the request as the request form lacked a group ID, and Metlife cannot locate the group by its name.",
    "issue_summary": "A confirm enrollment task was incorrectly generated for Metlife coverages for a group that, according to Rippling records, does not have Metlife coverages. This was due to a missed removal of a pending action when the CCLI was removed.",
    "rca": "The root cause of the issue was a missed removal of a pending action on the CompanyCarrierLineInfo (CCLI) removal. The Metlife CCLI was deleted, but the pending actions related to Metlife were not cleaned up, leading to the generation of tasks for Metlife.",
    "steps_taken": "The steps taken to resolve the issue included identifying that the Metlife CCLI was deleted, which led to the absence of Metlife coverages on the Ben Admin page. It was determined that the pending actions for Metlife should be closed. A feature request was submitted to improve the PendingAction cleanup logic in the removeCclis function to prevent similar issues in the future.",
    "data_models": "[SubscriberLineInfo, BaseCompanyCarrierLineInfo, PendingAction, CompanyEnrollmentEvent]"
  },
  "BENINTEG-3239": {
    "key": "BENINTEG-3239",
    "issue": "Forms were not sent for an employee's QLE event due to accidental deletion of SLIs before finalization.",
    "issue_summary": "Forms not generated for EE's QLE event as SLIs were deleted before finalization, requiring manual regeneration.",
    "rca": "The SLIs for the employee's QLE event were accidentally deleted before the event was finalized, which prevented the automatic generation of forms. This required manual intervention to regenerate the forms.",
    "steps_taken": "The forms for the QLE event were manually regenerated to ensure the employee's elections were reflected with the carriers.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-3238": {
    "key": "BENINTEG-3238",
    "issue": "An employee experienced a new hire event after their Noyo carrier setup for Blue Cross Blue Shield of Massachusetts was initiated, but the employee does not have a Noyo-specific Member Vendor ID, blocking the submission of an amendment to Noyo and the entire project.",
    "issue_summary": "The issue was that a Noyo-specific Member Vendor ID was not created for an employee after a new hire event, blocking the submission of an amendment to Noyo. The root cause was that the Snapshots API was disabled from the company debugger.",
    "rca": "Snapshots API was disabled from company debugger when it should have been enabled.",
    "steps_taken": "The Snapshots API was re-enabled from the company debugger, allowing the submission of the amendment to proceed.",
    "data_models": "[]"
  },
  "BENINTEG-3237": {
    "key": "BENINTEG-3237",
    "issue": "The Open Enrollment (OE) change correction for an employee on 12/01 did not transmit to Noyo as expected, unlike previous selections.",
    "issue_summary": "The OE change correction for an employee was not transmitted to Noyo due to the default communication method being set to Vericred until 11/14.",
    "rca": "The OE change correction was transmitted to Vericred instead of Noyo because Vericred was the default communication method for PEO Aetna until 11/14. The snapshots visible on the Noyo dashboard were likely triggered manually using amendments or census.",
    "steps_taken": "No specific steps were taken to resolve the issue as it was a request for root cause analysis. The issue was clarified in the comments, and the ticket was closed.",
    "data_models": "[]"
  },
  "BENINTEG-3236": {
    "key": "BENINTEG-3236",
    "issue": "Collective Health reported that terminated employees were being sent as active on the daily 834 file, despite having a termination status in Rippling. The employment termination date was correctly sent in the DTP*337 segment, but benefit coverages were still being sent as active, except for dental coverage.",
    "issue_summary": "Terminated employees were incorrectly sent as active on the 834 file due to the system sending benefit termination dates before the start date as a correction mechanism, which is consistent across different vendors and carriers.",
    "rca": "The system is designed to send benefit termination dates before the start date to indicate a correction when an employee enrolls and then changes their election, rendering the old election void. This behavior is intended to avoid discrepancy reports and is consistent across different vendors and carriers.",
    "steps_taken": "The issue was discussed internally, and it was clarified that the behavior is intentional for correction cases. The data from the BenAdmin side contained 'invalidated slis' with future enrollment dates and past expiry dates, which are transmitted to carriers to invalidate coverage at their end. Monitoring of eligibility reports from Collective Health will continue to ensure the issue does not reoccur.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-3226": {
    "key": "BENINTEG-3226",
    "issue": "The group 'Getaround Operations inc' needs to be re-onboarded with a new partner ID because they have dropped the Medical plan with Cigna, retaining only Dental and Vision plans. The current setup still shows Medical, Dental, and Vision, which needs to be updated to reflect only Dental and Vision.",
    "issue_summary": "Cigna Medical plan was dropped for 'Getaround Operations inc', requiring re-onboarding with a new partner ID. The system still shows Medical, Dental, and Vision, but should only show Dental and Vision.",
    "rca": "The root cause of the issue was the removal of the Medical plan from the line, which required updating the system to reflect only the remaining Dental and Vision plans.",
    "steps_taken": "The Medical plan was removed from the benefits. The OE file was sent to Stedi for review, and the environment was updated to show only Dental and Vision plans. The files were validated over a call, and the ticket was closed.",
    "data_models": "[]"
  },
  "BENINTEG-3225": {
    "key": "BENINTEG-3225",
    "issue": "Middle name and last name are being reported together in the NM104 field for Trovata.io - UCH PRIME, causing incorrect data formatting.",
    "issue_summary": "The NM104 field in the insurance data transmission is incorrectly combining the last name and middle name, which should be reported separately.",
    "rca": "The root cause of the issue is related to the support tool used, which is not correctly parsing or formatting the middle name and last name in the NM104 field.",
    "steps_taken": "The steps to resolve the issue would involve modifying the data parsing or formatting logic to ensure that the middle name and last name are reported separately in the NM104 field. This would likely involve updating the code responsible for generating the NM1 segment in Loop 2100A.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-3224": {
    "key": "BENINTEG-3224",
    "issue": "Forms for COBRA cancellation were not sent to VSP and Cigna during the blackout period, causing customer frustration.",
    "issue_summary": "Forms for COBRA cancellation for Heidi Parks were only sent to Guardian and not to VSP and Cigna during the blackout period, due to the cancellation event being on the new plan year.",
    "rca": "The COBRA cancellation event was on the new plan year coverages, and during the blackout period, forms are only sent for current plan year changes. As a result, the cancellation was processed via the EBN feed, which is in production state, and not via forms.",
    "steps_taken": "Reviewed outgoing emailed forms and confirmed the issue. Verified that the COBRA cancellation was on the new plan year, which led to the decision to send it via the EBN feed. Confirmed that all new plan year QLEs during the blackout will go via feed, and current plan year QLEs will go via forms.",
    "data_models": "[]"
  },
  "BENINTEG-3223": {
    "key": "BENINTEG-3223",
    "issue": "The Open Enrollment (OE) data for the group MacKay Sposito needed to be sent to OneKonnect, but it was not being transmitted, causing a blockage in the OE file processing.",
    "issue_summary": "The OE data for MacKay Sposito was not sent to OneKonnect due to an issue with the vendor connections, where the group was active with both Vericred and OneKonnect, causing a conflict.",
    "rca": "Initially, the system was set to send OE files only for groups whose VPC state was suspended, but only production connections were being suspended, not testing connections. Additionally, there was an incorrect expectation that a group-carrier combination should not be active with two vendors simultaneously, which led to the issue.",
    "steps_taken": "The custom communication details for EBN were deleted and needed to be restored. The following script was used to undelete the custom communication details:\n\n```python\nmetlife_vpc = VendorPartnerCompany.objects.get(id=\"67594a227c1aac9c27d2d911\")\nmetlife_ebn_custom_communication_detail = CustomEbnCommunicationDetail.objects_including_deleted.get(id=\"67410035ce68335766fe8302\")\nassert metlife_ebn_custom_communication_detail.company == metlife_vpc.company\nassert metlife_ebn_custom_communication_detail.carrier == metlife_vpc.partner\nmetlife_ebn_custom_communication_detail.isDeleted=False\nmetlife_ebn_custom_communication_detail.save()\nreturn CustomCommunicationDetail.objects.filter(company=metlife_vpc.company,carrier=metlife_vpc.partner)\n```\nThe OE file was then sent to OneKonnect for the group.",
    "data_models": "[VendorPartnerCompany, CustomEbnCommunicationDetail, CustomCommunicationDetail]"
  },
  "BENINTEG-3222": {
    "key": "BENINTEG-3222",
    "issue": "The OE (Open Enrollment) data for Cartography Biosciences needs to be sent to OneKonnect, but it was expected in the 12/12 dataset and was not sent, causing a blockage in the OE file processing.",
    "issue_summary": "The OE data for Cartography Biosciences was not sent to OneKonnect as expected, causing a blockage in the OE file processing. The issue was due to the initial behavior where OE files were only sent for groups with suspended VPC state, but only production connections were being suspended.",
    "rca": "In the initial behavior for OneKonnect, OE files were sent only for groups whose VPC state was suspended. However, only production connections were being suspended, not the testing connections. This oversight led to the OE data not being sent to OneKonnect as expected.",
    "steps_taken": "The behavior was updated to also suspend the testing connections, ensuring that the OE data is sent to OneKonnect. The OE file for the group was sent on 12/20, and confirmation was received that it was processed successfully.",
    "data_models": "[VericredCompanyCarrier]"
  },
  "BENINTEG-3218": {
    "key": "BENINTEG-3218",
    "issue": "Employee Douglas Welsh is unable to verify his dental coverage with Guardian due to a plan mapping error in the Rippling system, preventing enrollment via the feed.",
    "issue_summary": "Guardian plan mapping error for employee Douglas Welsh, preventing dental coverage verification and enrollment via the feed.",
    "rca": "The root cause of the issue was that the CCLI group ID was not updated to the premium ID during renewals, causing a mismatch in the Noyo plan mapping.",
    "steps_taken": "The CCLI group ID was refreshed during renewals, and plans were re-ingested. The following code snippet was used to update the group ID and re-ingest the plans:\n\n```python\nguardian_line_types = [\n    LineType.DENTAL,\n    LineType.VISION,\n    LineType.SHORT_DISABILITY,\n    LineType.LONG_DISABILITY,\n    LineType.LIFE,\n    LineType.VOLUNTARY_LIFE,\n]\n\ncompany = get_company(\"625575c4ae2928236171003c\")\ncEvent = PeoRenewalCompanyEnrollmentEvent.get_or_none(company=company, tentativeEffectiveDate=PeoInsuranceRenewalDate.FOURTH)\ncclis = InsuranceCompanyCarrierLineInfo.objects(company=company, lineType__in=guardian_line_types, effectiveDate=PeoInsuranceRenewalDate.FOURTH)\ngid = getDefaultGroupIdForGuardian(company, PeoInsuranceRenewalDate.FOURTH)\n\nfor ccli in cclis:\n    ccli.groupId = gid\n    ccli.save()\n\ncEvent = PeoRenewalCompanyEnrollmentEvent.get_or_none(company=company, tentativeEffectiveDate=PeoInsuranceRenewalDate.FOURTH)\ningestPeoGroupToNoyo(cEvent, forceIngest=True)\n```\n\nAdditionally, the following code was used to delete incorrect Noyo member entries:\n\n```python\nreturn NoyoMember.objects.filter(company=\"625575c4ae2928236171003c\", groupVendorId__in=ACTIVE_PEO_NOYO_GROUP_IDS[0:4]).delete()\n```",
    "data_models": "[InsuranceCompanyCarrierLineInfo, PeoRenewalCompanyEnrollmentEvent, NoyoMember]"
  },
  "BENINTEG-3216": {
    "key": "BENINTEG-3216",
    "issue": "Clayton Keener-Blaha's COBRA enrollment and Open Enrollment forms were not submitted to Cigna, despite the termination forms being processed.",
    "issue_summary": "The COBRA enrollment and Open Enrollment forms for Clayton Keener-Blaha were not submitted to Cigna due to the status 'UNSUBMITTED_PRIOR_FORMS', even though termination forms were sent.",
    "rca": "The issue was due to a gap in the handling of Open Enrollment (OE) events for in-house/Stedi transmissions. The COBRA INIT on old plans was finalized after the new coverage started, and the OE event was not fully implemented for the in-house team, leading to the pending action not being created.",
    "steps_taken": "A fresh test snapshot was generated, and the employee was included in it. A StediEdiPendingAction was created for the COBRA OpenEnrollmentEvent. It was recommended to reset the base snapshot and manually send it to Cigna to avoid further issues.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-3215": {
    "key": "BENINTEG-3215",
    "issue": "The Aetna PEO migration to Noyo is experiencing issues with incorrect CSA (Control Suffix Account) assignments, leading to errors in member enrollments. Specifically, there are discrepancies in plan IDs, incorrect CSA confirmations, and issues with members being active on different CSAs.",
    "issue_summary": "During the Aetna PEO migration to Noyo, there are errors related to incorrect CSA assignments, causing misalignment of plan IDs and enrollment issues for members.",
    "rca": "The root cause of the issue is categorized under Noyo as a bug, which is causing discrepancies in CSA assignments during the migration process.",
    "steps_taken": "The team is working on resolving the issue by reviewing the incorrect plan numbers and confirming the correct CSA assignments. Manual intervention may be required for some errors, and snapshots of the incorrect plan numbers are being prepared. Additionally, there is a need to address multiple active profiles for some members within the same or different companies.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3214": {
    "key": "BENINTEG-3214",
    "issue": "Aetna requires effective end dates for missing records in the migration to Noyo, and the data needs to be manually inputted for about 600 employees, which is not feasible for Ops to do manually.",
    "issue_summary": "Aetna's migration to Noyo resulted in production errors requiring effective end dates for missing records. Aetna provided only SSNs, and Rippling needs to pull effective end dates from its data to populate the list.",
    "rca": "The root cause of the issue is a bug related to the Noyo transition, where effective end dates for certain records were not provided, leading to discrepancies in the data shared with Aetna.",
    "steps_taken": "The engineering team was requested to run a script to gather effective end dates from Rippling's data using SSNs provided by Aetna. Access to the necessary Google Sheet was granted to the team to facilitate this process.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-3213": {
    "key": "BENINTEG-3213",
    "issue": "The admin at Retro Biosciences wanted to know why there was a delay in sending the new hire enrollment forms for employees, which were completed on 11/20, to the carrier. The forms were sent on 12/12, causing inconvenience as the employee's effective date was 12/01, and they were showing inactive with the carriers.",
    "issue_summary": "The delay in sending new hire enrollment forms was due to the Group ID not being added to the coverages (CCLI), which prevented the system from sending the forms until 12/11.",
    "rca": "The root cause of the issue was that the Group ID was not added to the coverages (CCLI), which caused the system to attempt sending the enrollment forms daily without success until the Group ID was added.",
    "steps_taken": "The issue was resolved by regenerating the forms from the backend after ensuring the Group ID was populated correctly. The client was updated about the resolution, and the ticket was closed.",
    "data_models": "[InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-3212": {
    "key": "BENINTEG-3212",
    "issue": "Reopened tasks in Insurance",
    "issue_summary": "Tasks related to insurance were reopened, but the issue has been auto-resolved.",
    "rca": "This issue has been auto resolved.",
    "steps_taken": "The issue was identified as resolved and the ticket was marked to be closed.",
    "data_models": "[]"
  },
  "BENINTEG-3211": {
    "key": "BENINTEG-3211",
    "issue": "In insurance tasks, Noyo setup tasks for carrier Unum SC are reopening after being resolved multiple times, preventing the API file from running correctly.",
    "issue_summary": "Noyo setup tasks for carrier Unum SC keep reopening after resolution, due to missing setup tasks for the group, which affects the API file execution.",
    "rca": "There were a few setup tasks missing for this group pending, specifically carrier classifications and Noyo plan mappings, which caused the tasks to reopen.",
    "steps_taken": "The missing carrier classifications and Noyo plan mappings were identified and fixed, resolving the outstanding tasks. Confirmation was received that the issue was fixed, and the ticket was closed.",
    "data_models": "[]"
  },
  "BENINTEG-3210": {
    "key": "BENINTEG-3210",
    "issue": "Shooster Holdings - Base Noyo Setup Task has been reopened multiple times after resolution.",
    "issue_summary": "The Noyo setup tasks for Shooster Holdings are being reopened automatically after being marked as resolved, causing operational disruptions.",
    "rca": "The root cause analysis is not detailed in the ticket, but the issue seems to be related to the task management system where tasks are not remaining closed after resolution, possibly due to a system or configuration error.",
    "steps_taken": "The ticket was triaged and moved to open for further investigation. Comments indicate a need for specific task examples and links to be added to the description for better understanding and resolution.",
    "data_models": "[]"
  },
  "BENINTEG-3206": {
    "key": "BENINTEG-3206",
    "issue": "The issue was the need to off-board the current configuration for the client Chemistry with group number 634843 to allow re-onboarding due to the addition of DEN to the New Plan Year.",
    "issue_summary": "The client Chemistry needed their current Cigna configuration off-boarded to re-onboard the group due to changes in the New Plan Year.",
    "rca": "The root cause was identified as the need to delete existing configurations using a webscript to allow for re-onboarding.",
    "steps_taken": "The steps taken involved running a Python script to delete the existing configurations for the specified company and carrier. The script filtered and deleted entries from VendorPartnerCompany, BaseVendorPartnerGroupingConfig, StediPartnerCompanyGroupingPayloadData, and StediPartnerTransmissionConfig models.",
    "data_models": "[VendorPartnerCompany, BaseVendorPartnerGroupingConfig, StediPartnerCompanyGroupingPayloadData, StediPartnerTransmissionConfig]"
  },
  "BENINTEG-3205": {
    "key": "BENINTEG-3205",
    "issue": "The end date of the role for an employee was updated from 2024-11-30 to 2024-12-15, requiring updates to insurance timelines and potential COBRA coverage adjustments.",
    "issue_summary": "The end date of an employee's role was updated, necessitating the creation of a 'Termination (end date correction)' event and updates to insurance timelines. The Marketplace - Integrations team needs to update the end date with carriers, and if COBRA coverage is involved, the Compliance team should update COBRA timelines.",
    "rca": "The root cause was related to documentation and tooling usage, specifically the validation of forms.",
    "steps_taken": "1. A 'Termination (end date correction)' event was created for the prior termination event. 2. Insurance timelines were reviewed and updated. 3. The ticket was reassigned to the Marketplace - Integrations team to update the end date with carriers. 4. It was confirmed that there was no COBRA coverage involved. 5. Correct forms were generated and sent to the carrier (Guardian). 6. The PendingAction remained in a pending state because the ConfirmEnrollmentTask was not marked done by the OPs team. 7. The ticket was closed as nothing further was needed from the Compliance team.",
    "data_models": "[PendingAction, ConfirmEnrollmentTask]"
  },
  "BENINTEG-3203": {
    "key": "BENINTEG-3203",
    "issue": "The employee's dental coverage end date in the snapshot was incorrect, not matching the expected 12/31/9999 end date, causing urgent issues for the employee needing dental care.",
    "issue_summary": "The dental coverage end date for an employee was incorrect in the snapshot, not aligning with other lines of coverage, due to multiple dental blocks causing confusion.",
    "rca": "There were multiple dental blocks in the employee's coverage, which led to confusion about the end date being sent. It was confirmed that there was another coverage block for dental without an end date, and a new snapshot was sent.",
    "steps_taken": "The issue was resolved by sending a new snapshot with the correct coverage dates. The snapshot was generated correctly, but there was an issue in the amendment tab, so the snapshot was triggered manually using a script:\n\n```python\nsubscriber= Subscriber.objects.get(role=\"66d5b1cd0d7c1f217e8b9599\")\nnoyo_group_id=\"164174a1-8878-4b37-9469-05c53be3fec0\"\nreturn NoyoMemberSnapshotController.submit_member_snapshot_adhoc(noyo_group_id=noyo_group_id,subscriber=subscriber,noyo_census_request=None)\n```\nThe amendment page issue was also fixed and the tab is now working as expected.",
    "data_models": "[Subscriber]"
  },
  "BENINTEG-3202": {
    "key": "BENINTEG-3202",
    "issue": "The OE data for the group WeAreRally, LLC was expected to be sent to OneKonnect but was not found in the dataset, causing a blockage in the OE file transmission.",
    "issue_summary": "The OE data for WeAreRally, LLC was not sent to OneKonnect as expected because the group moved off the BCBS connection via EBN, resulting in no OE file generation.",
    "rca": "The group WeAreRally, LLC canceled their BCBS coverage in their latest renewal, which led to the expectation mismatch. The system was working as expected by not generating an OE file for a canceled coverage.",
    "steps_taken": "The issue was identified as a misunderstanding of the data pull process after the group's renewal was finalized in Rippling. The responsible party acknowledged the oversight and confirmed the system's correct behavior, leading to the closure of the ticket.",
    "data_models": "[]"
  },
  "BENINTEG-3201": {
    "key": "BENINTEG-3201",
    "issue": "COBRA enrollment form for a BOB group was not sent to the designated email addresses, leading to a missed enrollment. Additionally, there was a noted decrease in the number of forms being sent over the past three weeks.",
    "issue_summary": "The COBRA enrollment form for a BOB group was not sent due to a change in the product behavior where COBRA support for Principal was added to Noyo, eliminating the need for form-based communication unless in specific scenarios like new group setup or OE blackout periods.",
    "rca": "The issue was due to a recent update where COBRA support for Principal was added to Noyo, which meant that forms were no longer required to be sent to the designated email addresses. The Noyo system had not yet processed the COBRA enrollment, which was the actual issue.",
    "steps_taken": "The team verified that the COBRA support for Principal was added to Noyo and confirmed that the form was not required to be sent via email. They checked the Noyo dashboard and confirmed that the snapshot was sent but still in processing. It was determined that the issue was with Noyo not processing the enrollment, and the team was advised to reach out to Noyo for resolution.",
    "data_models": "[]"
  },
  "BENINTEG-3194": {
    "key": "BENINTEG-3194",
    "issue": "Missing communication method for COBRA letters for a specific carrier.",
    "issue_summary": "The COBRA administrator letter for a company was signed with a carrier, but the carrier does not have a communication method for COBRA letters, resulting in a None return value when attempting to retrieve it.",
    "rca": "The issue was identified as a deferred problem with no immediate issue, as the method preferredCarrierCommunicationMethodForCOBRALetters() was not being used effectively.",
    "steps_taken": "The solution involved updating the code to use a different method, getOrNoneCobraCommunicationMethod, from the insurance.interface.carrier_interface.BaseCarrierInterface to fetch the COBRA communication method. The ticket was then closed.",
    "data_models": "[CobraAdministratorLetter, SignedDocument, BaseCarrier]"
  },
  "BENINTEG-3192": {
    "key": "BENINTEG-3192",
    "issue": "Employee Cheng Zhao's demographic change forms are generating the old Gold PPO 25/30% plan instead of the updated Silver PPO 45/1750/40% plan.",
    "issue_summary": "The demographic change forms for employee Cheng Zhao are incorrectly showing the old Gold PPO 25/30% plan instead of the new Silver PPO 45/1750/40% plan due to a bug in the form generation process.",
    "rca": "The root cause of the issue was identified as a bug in the BendAdmin EEx team's logic for populating pending actions. The logic was incorrectly fetching the SubscriberLineInfo (SLI) from the first New Hire Enrollment (NHE) event instead of the latest one. This was due to a recent change in the getLatest method of SLI, which returned the first SLI that matched the carrier, but the SLIs were sorted in ascending order of effective date.",
    "steps_taken": "The issue was resolved by updating the logic to correctly fetch the latest SLI. The pending actions for the demographic event were re-populated to reflect the updated information. The demographic event forms were regenerated, and it was confirmed that the Aetna form now shows the correct Silver PPO plan. The pending action associated with Aetna was marked as PROCESSED, and the updated forms were sent using the performAction method.",
    "data_models": "[PendingAction, EnrollmentEvent, SubscriberLineInfo]"
  },
  "BENINTEG-3191": {
    "key": "BENINTEG-3191",
    "issue": "Submission tasks for New Group Enrollment (NGE) events were not auto-populating, and carrier packets were not being sent to insurance carriers automatically after the Open Enrollment (OE) deadline for Jackson Square Capital LLC and other groups.",
    "issue_summary": "The NGE events for Jackson Square Capital LLC and other groups were not being automatically submitted as expected, causing delays in sending carrier packets to insurance carriers.",
    "rca": "The root cause was identified as an incorrect implementation where the 'Regenerate Forms' process was consuming all benefits marketplace resources, leading to inconsistent behavior in estimated time of arrivals (ETAs) for submissions.",
    "steps_taken": "A platform-level issue was identified and addressed in ticket BENINTEG-2929. Fixes were pushed to resolve the cron job issues affecting the submission process. Additional logging was added to improve debugging capabilities. Manual submissions were performed as a temporary measure to ensure timely processing.",
    "data_models": "[CompanyEnrollmentEvent, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-3189": {
    "key": "BENINTEG-3189",
    "issue": "Fairmarkit employee's QLE submission for BCBS enrollment encountered an exception, preventing confirmation of spouse coverage submission to the carrier.",
    "issue_summary": "An exception occurred during a QLE submission for BCBS enrollment by an employee at Fairmarkit, causing issues with confirming the addition of a spouse to coverage.",
    "rca": "The issue was caused by the new logic for determining whether a SubscriberLineInfo (SLI) is voluntary, which is controlled by a flag. The group was not initially added to this flag, resulting in a volume of 0 and causing Noyo to throw a 422 error.",
    "steps_taken": "The group was added to the flag controlling the new logic for voluntary SLI determination. A new snapshot with the correct volume was sent, which resolved the issue and allowed the pending action to proceed.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-3186": {
    "key": "BENINTEG-3186",
    "issue": "Noyo Setup Tasks for eWorld Enterprise Solutions, Inc. are not clearing from the Insurance Tasks Dashboard despite correct plan mapping.",
    "issue_summary": "Noyo Setup Tasks are not clearing due to incorrect inclusion of classifications in the plan configuration, which are not present in the Noyo plan configuration.",
    "rca": "The root cause of the issue was identified as a manual data entry error where classifications were included in the plan configuration that were not present in the Noyo plan configuration. Specifically, a billing group was added for both plan mappings, which was unnecessary as the group had only one billing group.",
    "steps_taken": "The plans were unmapped from the billing group to resolve the issue. This action was taken after confirming that the inclusion of the billing group was causing the tasks to not clear.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3185": {
    "key": "BENINTEG-3185",
    "issue": "Noyo Setup Tasks for Twelve Benefit Corporation are not clearing from the Insurance Tasks Dashboard despite correct plan mappings.",
    "issue_summary": "Noyo Setup Tasks for Twelve Benefit Corporation are not clearing from the Insurance Tasks Dashboard due to a manual data entry error related to subgroup classification.",
    "rca": "The issue was caused by a manual data entry error where the mappings were incorrectly assigned to a subgroup instead of the correct classification, similar to a previous issue (BENINTEG-3186).",
    "steps_taken": "The mappings were removed from the subgroup, which resolved the issue and allowed the tasks to be cleared from the dashboard.",
    "data_models": "[InsuranceCompanyPlanInfo]"
  },
  "BENINTEG-3184": {
    "key": "BENINTEG-3184",
    "issue": "Admin is unable to proceed in the setup flow for EDI Feeds for BCBS (NC) and Mutual of Omaha (NC) as the 'Continue your carrier connection setup' button is missing.",
    "issue_summary": "The admin is unable to proceed with setting up EDI Feeds for BCBS (NC) and Mutual of Omaha (NC) because the 'Continue your carrier connection setup' button is not visible in the Carrier connections tab.",
    "rca": "The issue was caused by an incorrect implementation where a vendor was not added to the corresponding routing for the company and partner.",
    "steps_taken": "The issue was resolved by adding the vendor to the corresponding routing for the company and partner, which made the 'Setup carrier connections' button visible.",
    "data_models": "[]"
  },
  "BENINTEG-3183": {
    "key": "BENINTEG-3183",
    "issue": "Employee insurance is not found within the Aetna & Guardian system nor Noyo. Error found when trying to push employee amendment to Noyo.",
    "issue_summary": "Plan mapping error for Inflection AI Inc with PEO Guardian, causing employee insurance not to be found in Aetna & Guardian systems or Noyo.",
    "rca": "The snapshot was sent after the group's setup was fixed as part of another ticket, indicating a possible delay or misalignment in updating the plan mappings.",
    "steps_taken": "The issue was assigned to a team member with more context on the Guardian plan mapping issue. The correct EE ID was updated, and it was confirmed that the data was sent to Noyo as per the snapshot. The group ID for Guardian PEO coverage was updated internally, and there was a request to update this information on both the front end and back end.",
    "data_models": "[CompanyInsuranceInfo, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-3182": {
    "key": "BENINTEG-3182",
    "issue": "Seed // Noyo Setup Tasks not clearing from Insurance Tasks Dashboard despite correct plan mapping.",
    "issue_summary": "Noyo setup tasks for Guardian coverage are not clearing from the Insurance Tasks Dashboard even though the plans are correctly mapped in the Noyo Plan Mapper page.",
    "rca": "For the Noyo plan mapping, only class codes differentiating between two plans were needed, but the ops team removed the billing_group, leading to the issue.",
    "steps_taken": "The issue was resolved by populating the appropriate eligible_classification_values for the plan 6553cfd518567d232a1bd5ca, which was mapped to two Noyo plans without these values. Additionally, a new structure was added in RP and mapped accordingly.",
    "data_models": "[InsuranceCompanyPlanInfo]"
  },
  "BENINTEG-3180": {
    "key": "BENINTEG-3180",
    "issue": "Unum lines are failing to connect to Noyo via the request button in the Company Debugger and manual addition.",
    "issue_summary": "Unum lines are not connecting to Noyo due to a setup issue, possibly related to multi EIN, causing connection requests to fail.",
    "rca": "The issue was identified as an error on Noyo's end, possibly related to a setup issue involving multi EIN.",
    "steps_taken": "The issue was followed up with Noyo to resolve the error on their end. Internal discussions with Ops were initiated to determine the best course of action regarding the Multi EIN/Unum error.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3179": {
    "key": "BENINTEG-3179",
    "issue": "The 2025 Open Enrollment (OE) data for the group Bexco needs to be resent to OneKonnect due to class code changes, which is blocking the OE file.",
    "issue_summary": "The OE data for Bexco needs to be updated and resent to OneKonnect because of class code changes, causing a blockage in the OE file transmission.",
    "rca": "The issue was caused by the need to update and resend the OE file to OneKonnect due to class code changes for the group Bexco.",
    "steps_taken": "The OE file for the group was submitted to OneKonnect to address the issue. Confirmation of submission was requested in the comments.",
    "data_models": "[]"
  },
  "BENINTEG-3178": {
    "key": "BENINTEG-3178",
    "issue": "Employee Amit Manjhi and his daughter were unable to use their dental insurance as they were not found in the system. The enrollment could not be pushed via the feed due to a Guardian plan mapping error.",
    "issue_summary": "The issue was caused by a plan mapping error with Guardian for the dental insurance of employee Amit Manjhi, preventing the enrollment from being processed.",
    "rca": "There was a bug in the PEO system where the group ID for groups that moved from PEO to PEO premium remained the old one. The PEO team updated the CCLI.groupId, and the snapshot for the employee was resent.",
    "steps_taken": "1. Modified the group ID to the correct one as expected. 2. Re-ingested the plans to NOYO. 3. Resent the snapshot for the employee to resolve the issue.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, InsuranceCompanyPlanInfo]"
  },
  "BENINTEG-3169": {
    "key": "BENINTEG-3169",
    "issue": "COBRA dependents Jenee Pinter-Miller and Julie Cheek were not correctly enrolled in the COBRA Open Enrollment (OE) for dental and vision plans. Clinton Miller and his dependents were incorrectly included in the COBRA OE, and Scott Cheek's COBRA OE needed updating as he waived it.",
    "issue_summary": "COBRA dependents Jenee Pinter-Miller and Julie Cheek were not correctly enrolled in the COBRA OE for dental and vision plans due to errors in the enrollment process. Clinton Miller and his dependents were incorrectly included in the COBRA OE, and Scott Cheek's COBRA OE needed updating as he waived it.",
    "rca": "Regenerated forms and sent them again due to error in Cobra enrollment.",
    "steps_taken": "The forms for Clinton Miller and Scott Cheek were updated to reflect the correct COBRA OE enrollments. For Clinton Miller, the COBRA OE was adjusted to exclude him and his dependents, and for Scott Cheek, the forms were regenerated to include his ex-spouse Julie Cheek's enrollment in dental and vision plans. The forms were verified and regenerated as needed.",
    "data_models": "[EnrollmentEvent, SubscriberLineInfo]"
  },
  "BENINTEG-3166": {
    "key": "BENINTEG-3166",
    "issue": "The employee, Jeremy Schoenberger, had a salary raise in August, and the updated salary was being sent on the file feed outside of the renewal period, which was not intended. This issue was impacting the member's coverage from being processed correctly.",
    "issue_summary": "The issue was that mid-year salary updates were being transmitted on the file feed, affecting the member's coverage processing, and needed to be restricted to the group's scheduled redetermination period.",
    "rca": "The root cause analysis was not detailed in the ticket, but the issue seems to be related to the file feed settings that allowed mid-year salary updates to be transmitted, which should have been restricted to the renewal period.",
    "steps_taken": "The ticket was flagged for review to ensure the issue does not occur again, especially since the group now has 2025 coverage active. The priority was initially set to highest, and the ticket status was updated to open for further investigation.",
    "data_models": "[]"
  },
  "BENINTEG-3165": {
    "key": "BENINTEG-3165",
    "issue": "The issue involves an urgent escalation for Citrine Informatics due to discrepancies in salary information sent to Noyo, affecting volume amount calculations for insurance. The outdated salary information was sent for two employees, Madlen Gafiteanu and Crishelle Balingit, after initially sending the correct information.",
    "issue_summary": "The issue was caused by outdated salary information being sent for employees Madlen Gafiteanu and Crishelle Balingit, affecting insurance volume calculations. This was due to a change in how salary information was derived, moving from HRIS models to Benadmin models, which led to discrepancies.",
    "rca": "The root cause was a change in the business logic for deriving salary information. Previously, salary was fetched from HRIS models, but it was changed to derive from Benadmin models, specifically SubscriberLineInfo (SLI) and CompanySalaryUpdatesEvent. There was a mismatch in expectations between teams on how to rely on these models, leading to incorrect salary information being sent.",
    "steps_taken": "The fix involved not relying on CompanySalaryUpdatesEvent to derive salary information. A decision was made to use a feature flag to roll out the change, ensuring that salary information is correctly derived from SLIs without depending on CompanySalaryUpdatesEvent. The fix was merged and deployed, and updated snapshots with correct salaries were sent to Noyo and Guardian.",
    "data_models": "[SubscriberLineInfo, CompanySalaryUpdatesEvent]"
  },
  "BENINTEG-3163": {
    "key": "BENINTEG-3163",
    "issue": "The group 'Green Planet 21 Utility Services LLC' does not have the setup carrier connections button in their carrier connection tab, preventing them from setting up carrier connections for EDI/API.",
    "issue_summary": "The setup carrier connections button is missing from the carrier connection tab for the group 'Green Planet 21 Utility Services LLC', which is a BOB group, due to a routing logic issue.",
    "rca": "The issue was caused by an incorrect implementation in the routing logic, which led to the carrier-connection-setup button being removed from the carrier-transmissions tab.",
    "steps_taken": "The routing issue was identified and fixed, restoring the visibility of the 'setup carrier connection button' in the carrier-transmissions tab. A screenshot was provided to confirm the fix.",
    "data_models": "[]"
  },
  "BENINTEG-3161": {
    "key": "BENINTEG-3161",
    "issue": "The incorrect benefits information is being transmitted on the BCBS MA EDI feed managed by Noyo for an employee. The employee filed a marriage QLE on 10/15/2024 for an 11/01/2024 start date, and this QLE had no actual changes in benefit elections from the previous open enrollment SLI. On 10/28/2024, the employee filed a second QLE request to add a dependent child to coverage. This resulted in a 10/31/2024 coverage end date being sent on the EDI feed for the dependent child.",
    "issue_summary": "Incorrect coverage end date of 10/31/2024 was being sent for a dependent child on the Noyo amendment due to QLE processing issues.",
    "rca": "The issue was categorized as an Ops Issue with an Incorrect Steps/State error. The QLE coverage itself had an expiration date of 10/31/2024, which was incorrect and needed to be fixed by the EEx team before the integrations team could send the correct date.",
    "steps_taken": "The first QLE was invalidated, and the expiration date for the second QLE was refreshed. This corrected the coverage data, and the expiration date was updated to show correctly in the Noyo amendment. The integration team was then able to push the amendment with the correct data.",
    "data_models": "[EnrollmentEvent]"
  },
  "BENINTEG-3160": {
    "key": "BENINTEG-3160",
    "issue": "Aerielle's insurance ended on 11/12/24, and her COBRA start date was 11/13/24. An offline change updated the insurance end date to 11/30/24, requiring the COBRA start date to be updated to 12/01/24 and a refund of the COBRA premium for November.",
    "issue_summary": "The issue involved updating Aerielle's COBRA start date due to an offline change in her insurance end date, necessitating a refund of the November COBRA premium and regeneration of the COBRA election notice.",
    "rca": "The root cause was an offline change that updated Aerielle's insurance end date to 11/30/24, which required a corresponding update to the COBRA start date to 12/01/24. This discrepancy led to the need for a refund of the November COBRA premium and regeneration of the COBRA election notice.",
    "steps_taken": "1. Issued a refund for the November COBRA premium. 2. Updated the COBRA start date to 12/01/24 using Retool. 3. Updated the SLIs start-date and end-date associated with the INIT event using Retool. 4. Regenerated the COBRA election notices for both email and physical address. 5. Updated the {{approximateEffectiveDate}} on the event.",
    "data_models": "[SubscriberLineInfo, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-3159": {
    "key": "BENINTEG-3159",
    "issue": "Employee with COBRA coverage is not being sorted into the COBRA bill group, preventing enrollment from being sent over the Noyo API.",
    "issue_summary": "The issue was that an employee with COBRA coverage was not being sorted into the correct COBRA bill group, which blocked the enrollment process via the Noyo API. The root cause was identified as a manual data entry error in the setup.",
    "rca": "The root cause of the issue was a manual data entry error where the COBRA plans were not correctly mapped, leading to the employee not being sorted into the correct bill group for COBRA coverage.",
    "steps_taken": "The steps taken to resolve the issue included mapping the COBRA plans correctly and updating the carrier classification to ensure the employee is sorted into the correct member group. The code snippet used for debugging included filtering and retrieving relevant data models such as NoyoCompanyPlanInfo, InsuranceCompanyPlanInfo, SubscriberLineInfo, and CarrierClassification to identify and fix the mapping issue.",
    "data_models": "[NoyoCompanyPlanInfo, InsuranceCompanyPlanInfo, SubscriberLineInfo, CarrierClassification]"
  },
  "BENINTEG-3158": {
    "key": "BENINTEG-3158",
    "issue": "Opala Health, Inc. wants to correct the waiting period information on their insurance cover letter, which is not editable through the admin dashboard.",
    "issue_summary": "Opala Health, Inc. is unable to edit the waiting period information on their insurance cover letter through the admin dashboard. The cover letter incorrectly shows both 'new waiting period' and 'old waiting period', whereas it should only reflect 'Employees eligible on the first of the month on or after their hire date'.",
    "rca": "The issue arises because the waiting period information in the cover letter is derived from the model CarrierInsuranceCoverLetter, which contains incorrect data for the voluntary life plan. The current benefits show 'No waiting period. Employees eligible on their hire date', which contradicts the admin's claim that the waiting period should be 'Employees eligible on the first of the month on or after their hire date'.",
    "steps_taken": "The team investigated the CarrierInsuranceCoverLetter model to understand the source of the waiting period information. It was confirmed that the current benefits for the voluntary life plan show 'No waiting period. Employees eligible on their hire date'. The admin was advised to work with the BenAdmin Employer team to correct the waiting period in the current benefits, which would then reflect correctly in the cover letter.",
    "data_models": "[CarrierInsuranceCoverLetter, CompanyEnrollmentEvent]"
  },
  "BENINTEG-3157": {
    "key": "BENINTEG-3157",
    "issue": "The OE file for Literati / BCBS needed to be resent to OneKonnect, but the 2025 data was not present in the file sent.",
    "issue_summary": "The OE file for Literati / BCBS was requested to be resent to OneKonnect, but the 2025 data was missing in the file sent.",
    "rca": "Ops needed the OE file to be resent, and it was verified by Brendon that the trigger was necessary.",
    "steps_taken": "The updated OE data was pushed to OneKonnect to unblock the OE file.",
    "data_models": "[]"
  },
  "BENINTEG-3156": {
    "key": "BENINTEG-3156",
    "issue": "A member had a delayed Open Enrollment (OE) event that is blocking OneKonnect, and they need updated OE data to be pushed to OneKonnect to unblock the OE files.",
    "issue_summary": "The Open Enrollment data for a member was delayed, causing a blockage in OneKonnect. The updated OE data needs to be pushed to OneKonnect to resolve the issue.",
    "rca": "Ops needed us to resend the OE file, trigger that, and Brendon has verified the same.",
    "steps_taken": "The OE file was submitted for the group, and the payload for the given employee was verified.",
    "data_models": "[]"
  },
  "BENINTEG-3155": {
    "key": "BENINTEG-3155",
    "issue": "Admin is unable to proceed in the setup flow for Cigna while trying to set up the Feed manually. Clicking on the continue button does not take them to the next screen.",
    "issue_summary": "Admin is unable to proceed in the setup flow for Cigna due to a broken continue button, caused by an existing EbnCompanyCarrier already created for the company and carrier (CIGNA), which led to the failure of the carrier-transmission-request for STEDI.",
    "rca": "An existing EbnCompanyCarrier was already created for this company & carrier (CIGNA) due to which carrier-transmission-request was failing for STEDI. The existing ECC was in INIT state, which blocked the flow.",
    "steps_taken": "The existing EbnCompanyCarrier (ECC) in INIT state was deleted, allowing the STEDI flow to work. The connection with STEDI was initiated, and the admin was advised to resume the flow.",
    "data_models": "[EbnCompanyCarrier]"
  },
  "BENINTEG-3153": {
    "key": "BENINTEG-3153",
    "issue": "The OE file sent to MetLife via OneKonnect was rejected due to a 0.00 benefit amount and incorrect coverage codes, preventing the carrier from processing child termination.",
    "issue_summary": "The OE file for Vynca Inc. was rejected by MetLife because it contained a 0.00 benefit amount and incorrect coverage codes, which hindered the processing of child termination.",
    "rca": "The issue was identified as being on the EBN (OneKonnect) end, where there were bugs causing incorrect data transmission.",
    "steps_taken": "The team verified that the correct coverage codes (FAM and ECH) were sent for dependents. They requested OneKonnect to check why the carrier reported incorrect codes and to ensure the data was transmitted correctly. The issue was eventually closed due to inactivity.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3149": {
    "key": "BENINTEG-3149",
    "issue": "The team needed to stop the automated schedules for production files for certain clients before specific deadlines because these clients had already started their Open Enrollment (OE).",
    "issue_summary": "Automated schedules for production files needed to be stopped for clients who had already started their OE, but the system was set to stop them automatically after the OE deadline.",
    "rca": "The new OE implementation already supports the automatic stopping of production files after the OE deadline, so there was no need for manual intervention.",
    "steps_taken": "It was clarified in the comments that the production files would be automatically stopped after the OE deadline plus one day, eliminating the need for manual stopping.",
    "data_models": "[]"
  },
  "BENINTEG-3148": {
    "key": "BENINTEG-3148",
    "issue": "The system was incorrectly pulling Ideon-related information into the carrier transmission tab for the Regence carrier, even though the connection had been moved to Noyo. This caused forms to be incorrectly emailed and not processed.",
    "issue_summary": "The issue was that the system was still using Ideon-related information for carrier transmissions for Regence, despite the connection being moved to Noyo, leading to incorrect form processing.",
    "rca": "The root cause was identified as a documentation and business logic/system behavior issue. Specifically, the routing entry for the company and carrier was missing because the migration from Vericred to Noyo was not fully completed, as the CarrierConnection was still in the INGESTING state and not moved to PROD state.",
    "steps_taken": "The steps taken to resolve the issue included checking the logic with the function `check_if_vendors_mapping_exists_in_company_partner_vendor_routing`, deleting the EmailCustomCommunication to prevent incorrect emails, and ensuring the CarrierConnection was moved to the production state using the finalize connection tool. Additionally, the group was informed to manually submit their Open Enrollment (OE) due to the connection not being live yet.",
    "data_models": "[CompanyPartnerVendorRouting, CarrierConnection]"
  },
  "BENINTEG-3147": {
    "key": "BENINTEG-3147",
    "issue": "Guardian OE elections are not being transmitted over the feed due to an error.",
    "issue_summary": "Guardian OE elections for Astra Space Operations, LLC are failing to transmit due to a NoyoMemberRequestError caused by an invalid query parameter related to temporal date.",
    "rca": "The issue was caused by a bug in handling BOR events with Noyo snapshots, specifically related to recent changes that affected the processing of BOR (transfer) events.",
    "steps_taken": "Reached out to Noyo for assistance. Identified that the company was moved to snapshot, but recent changes prevented processing BOR events. A pull request was raised to resolve the issue, and the fix was deployed, allowing enrollments to be processed successfully.",
    "data_models": "[PendingAction, EnrollmentEvent]"
  },
  "BENINTEG-3143": {
    "key": "BENINTEG-3143",
    "issue": "Member Kaiser coverage was not sent to the carrier resulting in a missed enrollment and multiple members are affected by this.",
    "issue_summary": "Member Kaiser coverage was not sent to the carrier due to the member enrollment form type being reflected as 'Form Not Sent Reason: UNSUBMITTED_PRIOR_FORMS'.",
    "rca": "The root cause was identified as a documentation issue related to tooling usage, specifically the need to fill in information about employee enrollment.",
    "steps_taken": "The issue was resolved by ensuring that the employee enrollment was sent correctly in the last production file. The EDI analyst team was involved to provide the necessary information, and it was confirmed that the employee enrollment was sent correctly in the last production file.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-3141": {
    "key": "BENINTEG-3141",
    "issue": "The client, Outmatch Inc, needs to be off-boarded from their current insurance setup for 2024, which includes Medical, Dental, and Vision, to re-onboard them for 2025 with only Medical coverage.",
    "issue_summary": "Outmatch Inc needs to be off-boarded from their current insurance setup to re-onboard with only Medical coverage for 2025.",
    "rca": "The issue required the use of a support tool, specifically a webscript, to off-board the client from their current insurance setup.",
    "steps_taken": "The client was off-boarded by running a webscript that deleted various configurations and data related to the client. The code snippet used was:\n\n```python\nvpcs = VendorPartnerCompany.objects.filter(company__in=companies)\nconfigs = BaseVendorPartnerGroupingConfig.objects.filter(company__in=companies)\npds = StediPartnerCompanyGroupingPayloadData.objects.filter(company__in=companies)\ntcs = StediPartnerTransmissionConfig.objects.filter(company__in=companies)\ncscds = CustomStediCommunicationDetail.objects.filter(company__in=companies)\n\nfor vpc in vpcs:\n  vpc.delete()\nfor config in configs:\n  config.delete()\nfor pd in pds:\n  pd.delete()\nfor tc in tcs:\n  tc.delete()  \nfor cscd in cscds:\n  cscd.delete()\nreturn```",
    "data_models": "[VendorPartnerCompany, BaseVendorPartnerGroupingConfig, StediPartnerCompanyGroupingPayloadData, StediPartnerTransmissionConfig, CustomStediCommunicationDetail]"
  },
  "BENINTEG-3139": {
    "key": "BENINTEG-3139",
    "issue": "ANTENNA GROUP, INC. faced a transmission error with Cigna for dental and vision insurance in the production file.",
    "issue_summary": "ANTENNA GROUP, INC. encountered a transmission error due to a missing required property 'reference_identification_02' in the production file sent to Cigna for dental and vision insurance.",
    "rca": "The root cause of the issue was an incorrect implementation where the 'reference_identification_02' property was missing in the transmission file. However, the file was successfully delivered to the carrier after the issue was identified.",
    "steps_taken": "The issue was identified and resolved by ensuring the 'reference_identification_02' property was included in the transmission file. The mapping was QA'd and found no errors, indicating the issue was fixed.",
    "data_models": "[]"
  },
  "BENINTEG-3138": {
    "key": "BENINTEG-3138",
    "issue": "Stellar Home Maintenance Inc. left the Rippling PEO on 7/31/2024, resulting in three COBRA enrollees becoming COBRA orphans. Their COBRA coverage showed as active in the Rippling PEO Inc. dashboard from 8/1/2024, but the enrollments were not actually active, requiring manual intervention by Insurance Ops.",
    "issue_summary": "COBRA enrollees from Stellar Home Maintenance Inc. became COBRA orphans after leaving Rippling PEO, and their COBRA coverage was incorrectly displayed as active in the system, though it was not, necessitating manual enrollment by Insurance Ops.",
    "rca": "The issue was due to a combination of misconfiguration on the PEO side, where company-sponsored COBRA was mistakenly selected, and expired CPs on Ideon's side, which prevented transmission of COBRA Orphans' COBRA OE coverages to Aetna. The migration of Aetna PEO to Noyo should prevent such issues in the future.",
    "steps_taken": "The issue was investigated, revealing misconfiguration and expired CPs as the root causes. Aetna PEO was migrated to Noyo, and COBRA OEs for the Orphan profiles were transmitted to Noyo. Manual enrollment was performed by Insurance Ops to resolve the immediate issue.",
    "data_models": "[]"
  },
  "BENINTEG-3136": {
    "key": "BENINTEG-3136",
    "issue": "The task was to export a list of open Noyo Setup Tasks that are older than 4 days.",
    "issue_summary": "The issue was to export a list of open Noyo Setup Tasks older than 4 days, but it was found to be a duplicate task.",
    "rca": "The task was identified as a duplicate of a task that had already been completed in another Jira ticket (BENINTEG-3120).",
    "steps_taken": "No additional steps were taken as the task was already completed in a previous ticket.",
    "data_models": "[]"
  },
  "BENINTEG-3123": {
    "key": "BENINTEG-3123",
    "issue": "Annual salary is being incorrectly passed to OneKonnect as $1 for Aaron Bailey under Steelgem LLC.",
    "issue_summary": "The annual salary for Aaron Bailey was incorrectly passed as $1 to OneKonnect due to an error in the SubscriberLineInfo model, which was populated with the wrong salary data.",
    "rca": "The root cause of the issue was traced back to the SubscriberLineInfo model, where the salary was incorrectly recorded as $1 due to a human error. The error occurred because the employee's salary was updated to $1 on 5/16/2024 and then reverted back to the correct amount on 9/16/2024. However, the 2024 coverage was finalized before the salary correction, leading to the incorrect salary being recorded in the SLIs.",
    "steps_taken": "The issue was initially attempted to be fixed by pushing subscriber data to Vericred. However, the problem persisted. It was later identified that the salary was incorrectly populated in the SubscriberLineInfo model. The SLIs were manually fixed by updating the salary to the correct amount. The following code snippet was used to fix the SLIs:\n\n```python\nfor sli in SubscriberLineInfo.objects(role=\"6604865f3d75e1f2d897403c\", expirationDate=date(2024,12,31)):\n    if sli.pendingSalaryChange:\n      sli.setFinalizedReportedSalary(sli._getCurrentSalary())\n      sli.pendingSalaryChange = False\n      sli.save()\n    print(sli.lineType, sli.finalizedReportedSalary, sli.pendingSalaryChange, sli._salaryChangedAt)\nreturn\n```\n\nThe issue was then re-routed back to the INTEG team for further checking and was eventually marked as fixed.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-3121": {
    "key": "BENINTEG-3121",
    "issue": "Incorrect COBRA coverage display for Christopher Hill's current spouse, Irina, and ex-spouse, Marlene. Irina and Chris are incorrectly shown as enrolled in COBRA coverage instead of Marlene, and Marlene's bank account was charged incorrectly for December's premium.",
    "issue_summary": "The COBRA enrollment forms incorrectly display Irina and Chris as enrolled in COBRA coverage instead of Marlene, leading to incorrect premium charges. This issue stems from a misconfiguration in the COBRA enrollment process and data handling for ex-spouses.",
    "rca": "The root cause of the issue is a gap in handling cases involving ex-spouses in the COBRA enrollment process. The system incorrectly marked the current spouse as enrolled in COBRA due to a lack of support for ex-partner scenarios in the Noyo member snapshots and the absence of Dependent only COBRA support.",
    "steps_taken": "1. Updated the COBRA SLIs to correctly reflect Marlene as the subscriber and removed Irina and Chris. 2. Refunded the incorrect premium charges for December and initiated the correct charges for Marlene. 3. Regenerated the COBRA forms to correct the enrollment information. 4. Worked with the Carrier Communications team to manually send the forms to Aetna and Guardian for Marlene's COBRA enrollment. 5. Identified the need for product enhancements to support ex-spouse scenarios and Dependent only COBRA in Noyo.",
    "data_models": "[SubscriberLineInfo, cobraEmployeeInfo]"
  },
  "BENINTEG-3117": {
    "key": "BENINTEG-3117",
    "issue": "Employees in the Northern California region were being sent with incorrect region codes on the EDI file to Kaiser. The REF*ZZ line was incorrectly set to SCR instead of NCR, causing enrollment issues in Kaiser's system.",
    "issue_summary": "The issue was that employees in Northern California were being sent with the wrong region code (SCR instead of NCR) on the EDI file due to incorrect plan setup.",
    "rca": "The root cause was identified as an incorrect implementation where the _carrierPlanName for Northern and Southern California plans were the same. This led to the Northern California account structure being overwritten by the Southern California account structure during the seeding for the 2024-25 plans.",
    "steps_taken": "The steps taken to resolve the issue included raising the concern with the PEO ENG team to fix the _carrierPlanName, reseeding the account structure for Kaiser plans 2024-25, and creating a new EDI file. A correct file was sent to the carrier, and a permanent fix was implemented for the account structure issue caused by the wrong _carrierPlanName.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3116": {
    "key": "BENINTEG-3116",
    "issue": "The scheduled weekly production file for 01/01 effective date encountered a transmission error, preventing it from being sent as planned. This issue blocked the automatic weekly transmission of the file.",
    "issue_summary": "The production file scheduled for 01/01 effective date faced a transmission error due to incorrect steps/state error during the move to production, causing a blockage in the automatic weekly transmission.",
    "rca": "The root cause of the issue was identified as an error during the process of moving the connection to production. This was due to incorrect steps or state error, which was self-served by operations.",
    "steps_taken": "To resolve the issue, the team manually pushed the production file. It was identified that one of the policy plans was missing 2 digits, which contributed to the error. The group also had dental and vision plans that needed to be onboarded with Cigna Ace using the onboarding tool. Once the dental and vision plans were onboarded, the medical connection was successfully moved to production, unblocking the process.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3115": {
    "key": "BENINTEG-3115",
    "issue": "Unable to initiate the EDI process for Parallel Technologies, Inc. due to an error in vendor partner routing setup.",
    "issue_summary": "The EDI setup for Parallel Technologies, Inc. could not be initiated because there was an error in creating the vendor partner routing for the group.",
    "rca": "There was an error while creating the vendor partner routing for this group, which prevented the initiation of the EDI process. The issue was identified as an internal error that caused the setup to break.",
    "steps_taken": "The issue was resolved by adding the vendor partner routing from the retool, which fixed the underlying data. The setup for EDI/API was then made available for the group. Additionally, the feature to edit emails for the company was enabled to allow updates to the Principal email for enrollments.",
    "data_models": "[CompanyInsuranceInfo, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-3113": {
    "key": "BENINTEG-3113",
    "issue": "The issue is that the transmission method for Aetna PEO is incorrectly set to Vericred instead of Noyo, causing missed enrollments and delayed coverage for employees.",
    "issue_summary": "The transmission method for Aetna PEO was incorrectly set to Vericred instead of Noyo, leading to missed enrollments and delayed coverage for employees. This was due to a bug in the routing logic that caused some QLEs to be sent via Vericred until 11-11-2024.",
    "rca": "The root cause of the issue was a bug in the routing logic that caused some QLEs to be sent via Vericred until 11-11-2024, even though the transition to Noyo was supposed to be completed by 08-11-2024. This resulted in some enrollments being missed or delayed.",
    "steps_taken": "An audit was conducted to identify the missed enrollments, and snapshots were resent for the affected employees. For two employees, operations will need to reach out to Noyo to determine why they were missed. The issue has been mitigated by resending the snapshots.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3112": {
    "key": "BENINTEG-3112",
    "issue": "Guardian form for an employee termination was sent 4 months late.",
    "issue_summary": "The Guardian form for an employee termination was delayed by 4 months due to a configuration issue that caused the connection to fall back to forms.",
    "rca": "The delay was caused by an UNSUBMITTED_PRIOR_FORMS error. There was an earlier transaction for the employee that was not sent, which blocked the current transaction because transactions are processed serially.",
    "steps_taken": "The configuration issue causing the fallback to forms was corrected. The pending action for Guardian was eventually sent, resolving the issue.",
    "data_models": "[PendingAction]"
  },
  "BENINTEG-3111": {
    "key": "BENINTEG-3111",
    "issue": "GreenSlate, LLC is facing billing errors and discrepancies due to the inclusion of members' middle initials in the file feed to Cigna, causing extra work for the admin and posing a churn risk.",
    "issue_summary": "The inclusion of members' middle initials in the file feed to Cigna is causing billing discrepancies for GreenSlate, LLC, leading to administrative burden and potential churn risk.",
    "rca": "The root cause of the issue is related to documentation and the way middle initials are being transmitted in the file feed to Cigna. The middle initials are causing discrepancies in billing on the client's side, not with the file feed itself.",
    "steps_taken": "The team discussed various solutions, including reaching out to Ideon to remove the middle initial for this specific client, considering a CSV dump for reconciliation, and exploring the possibility of suppressing middle initials for this group. However, it was concluded that customizing the carrier configuration for a one-off client request is not feasible, and the client needs to find an alternative way to manage this with Cigna or their internal process.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3110": {
    "key": "BENINTEG-3110",
    "issue": "The issue involves off-boarding specific groups from the system and preparing them for re-onboarding as they transition from prime to USP for the 2025 plan year. Additionally, any production files being run for the 2024 plan year for prime need to be stopped.",
    "issue_summary": "Groups need to be off-boarded and prepared for re-onboarding due to a transition from prime to USP for the 2025 plan year. Production files for 2024 should be halted.",
    "rca": "The root cause analysis indicates that a webscript was run to offboard the groups.",
    "steps_taken": "The steps taken to resolve the issue involved running a script to delete configurations related to the specified companies. The script filtered and deleted entries from several data models: VendorPartnerCompany, BaseVendorPartnerGroupingConfig, StediPartnerCompanyGroupingPayloadData, StediPartnerTransmissionConfig, and CustomStediCommunicationDetail.",
    "data_models": "[VendorPartnerCompany, BaseVendorPartnerGroupingConfig, StediPartnerCompanyGroupingPayloadData, StediPartnerTransmissionConfig, CustomStediCommunicationDetail]"
  },
  "BENINTEG-3109": {
    "key": "BENINTEG-3109",
    "issue": "Employee submitted a QLE waiving coverage with Cigna, but forms were not generated for Cigna while forms were generated for Sun Life, despite no enrollment changes with Sun Life.",
    "issue_summary": "Forms were not generated for Cigna when an employee waived coverage through a QLE, but forms were generated for Sun Life where no changes occurred. The system was expected to generate forms for Cigna and not for Sun Life.",
    "rca": "The system was working as expected. The QLE invalidated all SLIs from the previous OE event, and no forms were needed for Cigna as the QLE was considered the source of truth for OE elections. The carrier packet was automatically updated to reflect the change.",
    "steps_taken": "The issue was investigated using the EE Debugger and Company Debugger. It was confirmed that the QLE invalidated the previous OE event, and the carrier packet was updated to reflect the change. No forms were needed for Cigna as the QLE was the source of truth.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-3107": {
    "key": "BENINTEG-3107",
    "issue": "The 'Setup carrier connection' button is missing for the group Neon Flux under the Benefits Admin > Carrier Transmission tab, preventing them from starting the setup for UHC EDI.",
    "issue_summary": "The 'Setup carrier connection' button is missing due to an inactive VCC state, causing the `canCC` value to respond with False, thus preventing the setup initiation.",
    "rca": "A VCC (Vendor Carrier Connection) in the state of INACTIVE was causing the `canCC` value to respond with False. This inactive state was preventing the display of the 'Setup carrier connection' button. The routing was not correctly pointing to NOYO as expected.",
    "steps_taken": "To resolve the issue, the older INACTIVE VCC was cleaned up, and the routing was corrected to point to NOYO, which is the expected behavior.",
    "data_models": "[VendorCarrierConnection]"
  },
  "BENINTEG-3102": {
    "key": "BENINTEG-3102",
    "issue": "The system did not transmit the member's enrollment to Noyo correctly due to a race condition when the employee terminated COBRA and was rehired on the same day by two groups in the Guardian PEO.",
    "issue_summary": "The issue occurred because the employee terminated COBRA and was rehired by another company in the same PEO group on the same day, causing a race condition that led to the failure of the Noyo request for new hire.",
    "rca": "The root cause was a race condition caused by the employee terminating COBRA from one PEO company and being rehired by another company in the same PEO group, which led to the failure of the Noyo request for new hire.",
    "steps_taken": "The engineering team sent a modified payload with just the older coverage data to Noyo. The code snippet used was: ``` with freeze_time(date(2024,7,1)): return NoyoMemberSnapshotPayloadGenerator.generate(noyo_group_id=\"5dd33f3d-c8cb-4014-8c80-1445008fb209\",subscriber=Subscriber.objects.get(role=\"6671d5933a9ac93e1730cad7\"),trigger_enrollment_event=None).json() ``` Once the issue was fixed, the amendment could be triggered from the employee event debugger to send the newer plans.",
    "data_models": "[Subscriber]"
  },
  "BENINTEG-3101": {
    "key": "BENINTEG-3101",
    "issue": "For employee Taylor Lookofsky, termination forms were not sent to the carrier, causing an escalation from the client.",
    "issue_summary": "Termination forms for employee Taylor Lookofsky were not sent due to an issue with prior forms being unsubmitted, specifically the New Hire event forms from 2022.",
    "rca": "The termination forms were not sent because the New Hire event forms from 2022 were not sent for this employee. It is unclear why the forms were not sent back in 2022.",
    "steps_taken": "The issue was investigated using the EE debugger and object history scripts. It was identified that the New Hire event forms from 2022 were not sent, which blocked the termination forms. The suggestion was made to archive the old pending actions to allow the termination forms to be sent, but this action was not taken as the client was directly handling the situation.",
    "data_models": "[EnrollmentEvent]"
  },
  "BENINTEG-3100": {
    "key": "BENINTEG-3100",
    "issue": "For some employees who did not waive or enroll for the new plan year, the Open Enrollment (OE) file was being sent with a 2024 effective date and no termination date, even though the OE period had closed weeks ago. This caused issues as these employees were still being included in the file without proper termination or waiver status.",
    "issue_summary": "Employees who did not make elections during the OE period were being sent on the OE file with a 2024 effective date and no termination date, causing incorrect processing of their insurance status.",
    "rca": "The issue was due to a lack of special case handling for employees who did not make OE elections. These employees were not being marked as waived or terminated in the file transmission, leading to incorrect data being sent to the carrier.",
    "steps_taken": "A change was implemented to treat employees who have 'awaiting plan selection' status after the OE end date as waived. The code was updated to ensure that these employees are sent with a 2025 348 or have a 349 termination date. The changes were merged and deployed, and a test OE file confirmed that the DTP 349 was now populating correctly for the affected employees.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-3097": {
    "key": "BENINTEG-3097",
    "issue": "Insurance forms for three employees at CommandLink, LLC were sent late to Coastal Administrative Services, causing delays in processing.",
    "issue_summary": "Insurance forms for three employees were delayed in being sent to Coastal Administrative Services due to pending actions being stuck in INIT state.",
    "rca": "There was an issue in the system where pending actions, which are responsible for sending emails, were unable to generate forms. A batch job was run recently to regenerate these forms, and efforts are being made to improve visibility and prevent such issues in the future.",
    "steps_taken": "A batch job was executed to regenerate the forms that were not sent due to pending actions being stuck. The engineering team is working on improving system visibility to prevent similar issues.",
    "data_models": "[PendingAction]"
  },
  "BENINTEG-3096": {
    "key": "BENINTEG-3096",
    "issue": "Employee Josh Fleming was enrolled in the wrong insurance plan with UHC, different from what was elected in Rippling.",
    "issue_summary": "Employee was enrolled in a different plan with UHC than what was elected in Rippling due to incorrect plan mapping in the file feed.",
    "rca": "The root cause was a bug in the code where the incorrect plan was being selected for the account structure, leading to the wrong plan being sent in the file feed.",
    "steps_taken": "The plan mapping in the code was reviewed and corrected. A new file was generated with the correct plan mapping and sent to the production environment. The code snippet provided in the comments shows the mapping used: \n\n```python\nPEO_UHC_CLASSIFICATION_MAPPING = {\n    HealthCoveragePolicyNumberRIQEnum.SpecialProgramCode: {\n        \"DU43 (UHC POS 2024)\": \"58753614\",\n        \"DU5G (UHC POS 2024)\": \"58804369\",\n        \"DU57 (UHC POS 2024)\": \"58611464\",\n        \"DU6X (UHC POS 2024)\": \"58814532\",\n        \"DU6B (UHC POS 2024)\": \"58570858\",\n        \"DU6K (UHC POS 2024)\": \"58682548\",\n        \"DU6Y (UHC POS 2024)\": \"58733305\",\n        \"DU6Z (UHC POS 2024)\": \"58682543\",\n        \"DU9T* (UHC POS 2024 ONLY-HSA)\": \"58713006\",\n        \"DU94 (UHC POS 2024-HSA)\": \"58692696\",\n        \"DU8N* (UHC POS 2024 ONLY-HSA)\": \"58763761\",\n        \"DU77 (UHC POS 2024-HSA)\": \"58773918\",\n        \"DU8F (UHC POS 2024-HSA)\": \"58662232\",\n        \"DU7Z (UHC POS 2024-HSA)\": \"58844975\",\n        \"DWAL (UHC Non-Differential PPO 2024)\": \"58560712\",\n        \"DU42 (UHC POS 2024)\": \"59657222\",\n        \"DU44 (UHC POS 2024)\": \"59768906\",\n        \"DWA6 (UHC POS 2024-Adv Tier UHPD)\": \"59718144\",\n        \"DU8M (UHC EPO 2024)\": \"59697838\",\n        \"DU8W (UHC EPO 2024)\": \"59575993\",\n        \"DU8Z (UHC EPO 2024)\": \"59647070\",\n        \"DU9O (UHC EPO 2024)\": \"59596308\",\n        \"DWAD (UHC EPO 2024)\": \"59586156\",\n        \"DWBA (UHC EPO 2024-Adv Tier)\": \"59616609\",\n        \"DU7K (UHC EPO 2024-HSA)\": \"59758747\",\n        \"DU5O (UHC EPO 2024-HSA)\": \"59606455\",\n    }\n}\n```",
    "data_models": "[PEO_UHC_CLASSIFICATION_MAPPING]"
  },
  "BENINTEG-3095": {
    "key": "BENINTEG-3095",
    "issue": "Noyo Setup Tasks for Freestar/Publisher First, Inc. were reopening due to errors in configuration assignments, specifically related to classification values for Noyo plans.",
    "issue_summary": "Noyo Setup Tasks for Freestar/Publisher First, Inc. were reopening due to incorrect classification values assigned to Noyo plans, causing conflicts in the Guardian plans.",
    "rca": "The root cause was identified as incorrect steps/state error where plan mapping needed to be done correctly. Specifically, a 000 billing group was unnecessarily assigned to every Noyo plan map, and there was a lack of differentiation between two Noyo plans mapped to a single Rippling plan.",
    "steps_taken": "The team unmapped the bill group and mapped the benefit class identifiers where applicable. They identified that one LTD LOC in Rippling was populating as two in the mapping tool due to one being built in 2023 and another in 2024, while the Noyo plans were from the same year. The issue was resolved by mapping corresponding benefit classes, and the task was closed.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3093": {
    "key": "BENINTEG-3093",
    "issue": "The Noyo setup tasks for VANNEVAR LABS, INC were completed but reopened unexpectedly, causing a delay in sending the group's Open Enrollment (OE) elections for all Noyo API carriers (Guardian, Kaiser, and Beam) for more than 4 business days.",
    "issue_summary": "Noyo setup tasks for VANNEVAR LABS, INC were not staying resolved due to incorrect plan mapping where configurations not present in Noyo plans were mapped, causing delays in OE elections transmission.",
    "rca": "There was a minor issue in the plan mapping where operations had mapped configurations that were not present on Noyo plans, specifically the 'billing_group_10' configuration, which was not included in the 'Plan configurations' field of the Noyo plan data.",
    "steps_taken": "The engineering team ran a script to identify plan mapping errors, revealing conflicts in configuration assignments due to the 'billing_group_10' being common for both COBRA and non-COBRA plans. The solution involved unmapping all Kaiser plans from 'billing_group_10' and marking the tasks as resolved. The tasks were then closed, with a note to reopen if they reoccur.",
    "data_models": "[Company, InsuranceCompanyInfo, BadNoyoPlanMappingIssue]"
  },
  "BENINTEG-3092": {
    "key": "BENINTEG-3092",
    "issue": "The team needed to generate a test Open Enrollment (OE) file for specific groups for review, but it was crucial not to send this file to the carrier yet. The OE file was to be sent to the internal Stedi SFTP server for review.",
    "issue_summary": "The issue involved generating a test OE file for specific groups and ensuring it was sent to the internal Stedi SFTP server for review, not to the carrier. The OE file generation was urgent for the 01/01 date.",
    "rca": "The root cause was related to the use of a script for generating the OE file, as indicated by the 'Support Tool Used' category in the RCA. The process required manual intervention to ensure the file was sent to the correct location for review.",
    "steps_taken": "The steps taken included generating the OE test files for the specified groups and sending them to the internal Stedi server. For one group, no OE elections were made, so no file was generated. After review, the OE file for one group was sent to the carrier server. A tooling update was mentioned, allowing for self-service of USP OE files, and instructions were provided via a Loom video. Finally, the ticket was closed as the OE files could now be triggered from the Retool application.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3090": {
    "key": "BENINTEG-3090",
    "issue": "The issue involves migrating clients for UHC from Prime to USP for existing clients and re-onboarding these groups with updated file names and platform settings.",
    "issue_summary": "The migration of clients from Prime to USP requires re-onboarding with updated settings, and the current active weekly production file for the plan year needs to be stopped before proceeding.",
    "rca": "The root cause analysis indicates that a script was used as a support tool for the migration process.",
    "steps_taken": "The steps involved adding new groups to the ticket for re-onboarding, listing the group names and company IDs, and ensuring the process was completed as indicated by the final comment stating 'this is done'.",
    "data_models": "[]"
  },
  "BENINTEG-3086": {
    "key": "BENINTEG-3086",
    "issue": "Carrier connections are showing as unavailable for many common carriers like UHC and Kaiser, preventing clients from requesting connections.",
    "issue_summary": "Carrier connections are unavailable for many common carriers, affecting all companies and preventing clients from enabling these connections.",
    "rca": "A bug fix was required, and a migration was run to address the issue of carrier connections showing as unavailable.",
    "steps_taken": "The issue was identified as a bug, and a migration was run to fix it. After the fix, the connections were verified by proxying into the company and checking the carrier-transmissions page. The issue was resolved as the carriers were no longer showing the error messages.",
    "data_models": "[]"
  },
  "BENINTEG-3084": {
    "key": "BENINTEG-3084",
    "issue": "Everlaw is unable to initiate the carrier connection for Kaiser, although they could for Guardian. Kaiser CA should be on Noyo, but it is showing as unavailable for EDI feeds.",
    "issue_summary": "Everlaw is facing an issue where they cannot initiate EDI feeds for Kaiser, despite it being supported with Ideon, Noyo, and OneKonnect. The issue seems to be related to the carrier being registered as 'not supported' for carrier connection.",
    "rca": "The root cause of the issue was identified as a bug in the carrier routing configuration, where the carrier (carrier-id 5a656521d2a5f85842cb4844) was incorrectly registered as 'not supported' for carrier connection.",
    "steps_taken": "The team identified the issue as being on the carrier routing side. A fix was made to unblock Kaiser, and the Kaiser flag for enablement on Noyo was reverted. The issue was confirmed to be resolved after these changes.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3083": {
    "key": "BENINTEG-3083",
    "issue": "Admin wants to update the email address where enrollment forms are being sent because the current email address is no longer in use.",
    "issue_summary": "Enrollment forms were being sent to an outdated email address due to EDI/API being inactive during the renewal process. The admin requested to update the email address to a new one.",
    "rca": "The root cause of the issue was that the EDI/API was inactive due to the ongoing renewal process, leading to forms being sent via mail to an outdated email address.",
    "steps_taken": "The email address was updated using the Carrier Connection Tools as indicated in the comment with a link to the tool used.",
    "data_models": "[]"
  },
  "BENINTEG-3082": {
    "key": "BENINTEG-3082",
    "issue": "Zaden Technologies needs to be terminated from all coverage on the API as they canceled Rippling PEO before joining, but still appear on coverage with Aetna, preventing employees from accessing new coverage and causing financial losses.",
    "issue_summary": "Zaden Technologies was not properly terminated from Aetna coverage due to missing account identifiers in the API payload, causing blocked transactions and financial losses.",
    "rca": "The root cause of the issue was identified as missing account identifiers in the API payload sent to Aetna, which led to blocked transactions for the group.",
    "steps_taken": "Snapshots of the non-terminated employees were resent to Noyo for processing. Blocked transactions were cleared by addressing the account identifier error. Communication with Noyo and Aetna was suggested to expedite the termination process.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-3080": {
    "key": "BENINTEG-3080",
    "issue": "UHC's system requires Client IDs in all capital letters, invalid USPS addresses need updating, and a demo company is incorrectly included in the file.",
    "issue_summary": "The OE file for UHC PEO faced issues due to Client IDs not being in all caps, invalid USPS addresses, and inclusion of a demo company.",
    "rca": "The root cause of the issue was the need for product enhancement to ensure Client IDs are in all caps, addresses are valid per USPS standards, and demo companies are excluded from production files.",
    "steps_taken": "Feedback items were addressed as per the acknowledgment on Slack. Awaiting confirmation from UHC that the file was processed successfully.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-3079": {
    "key": "BENINTEG-3079",
    "issue": "Clients need to be re-onboarded with a new partner ID due to a state change for the Cigna group, requiring deboarding and re-onboarding for the 01/01 renewal.",
    "issue_summary": "The issue involves re-onboarding clients with a new partner ID because of a state change for the Cigna group, necessitating deboarding and re-onboarding for the 01/01 renewal.",
    "rca": "The root cause analysis indicates that a script was used for re-onboarding due to the state change.",
    "steps_taken": "The group was deboarded and re-onboarded with a new partner ID using a script to accommodate the state change.",
    "data_models": "[]"
  },
  "BENINTEG-3078": {
    "key": "BENINTEG-3078",
    "issue": "Equality California faced blocked transactions for the previous plan year, which was unexpected and needed resolution to unblock these transactions.",
    "issue_summary": "Blocked transactions for Equality California were occurring for the previous plan year due to unexpected plan mapping issues with the Principal carrier.",
    "rca": "The root cause of the issue was related to plan mapping with Noyo, which was not correctly set up for the previous plan year, leading to blocked transactions.",
    "steps_taken": "The issue was resolved by manually retrying the blocked transaction for Jorge Diaz, and ensuring that the appropriate plan mappings were in place. The remaining blocked transactions were expected to be cleared within a day. The code pointer for Noyo plan mapping was provided for reference: [https://github.com/Rippling/rippling-main/blob/d5d1747c43565922a859c9836aa67800a02c1c45/app/insurance/models/noyo_models.py#L5371-L5378].",
    "data_models": "[noyo_models]"
  },
  "BENINTEG-3077": {
    "key": "BENINTEG-3077",
    "issue": "Missing Kaiser Coverage Period (CP) information in the CO Debugger for three companies, despite being active with Ideon.",
    "issue_summary": "The Kaiser Coverage Period data for three companies was missing in the Rippling CO Debugger, although the data was present in Ideon. This issue was suspected to be related to migration work and deletion of Kaiser information from Ideon.",
    "rca": "The issue was initially thought to be related to migration work and deletion of Kaiser information from Ideon. However, it was later confirmed that the Ideon Coverage Period IDs were present for all the companies, indicating no issue.",
    "steps_taken": "The team checked the latest Kaiser files and confirmed that the companies were not being sent in them. It was suggested that if the companies needed to be sent via Kaiser, it should be done through the PEO team. However, the issue was resolved as the Ideon Coverage Period IDs were found to be present, and the ticket was closed.",
    "data_models": "[]"
  },
  "BENINTEG-3076": {
    "key": "BENINTEG-3076",
    "issue": "Buildout Inc's Short Term Disability (STD) and Long Term Disability (LTD) coverage requires immediate salary redetermination, but salary updates are not being sent as they occur. Instead, they are sent during Open Enrollment (OE) transactions.",
    "issue_summary": "The issue is that salary updates for Buildout Inc's STD and LTD coverage are not being sent immediately as required, due to the current 'Renewal' setting for salary redetermination. Recent salary updates were sent as part of OE transactions rather than as they occurred.",
    "rca": "The root cause of the issue is the salary redetermination logic, which is set to 'Renewal'. This setting does not support immediate salary updates, and the system currently only supports 'RENEWAL', 'MONTHLY', 'QUARTERLY_FIXED', 'QUARTERLY_FROM_RENEWAL', 'SIX_MONTH_FIXED', and 'SIX_MONTH_FROM_RENEWAL' options.",
    "steps_taken": "Confirmed that salary updates are not sent immediately due to the 'Renewal' setting. Verified that recent salary changes were sent as part of OE transactions. Identified that there are no current workarounds for immediate salary updates, and a feature request would be needed to support this functionality.",
    "data_models": "[\"salaryRedeterminationSchedule\"]"
  },
  "BENINTEG-3075": {
    "key": "BENINTEG-3075",
    "issue": "Form sent to carrier but shows Pending transmission to carrier for new hire forms at MIDI HEALTH INC.",
    "issue_summary": "The new hire forms for MIDI HEALTH INC are processed but remain in 'Pending transmission to carrier' status due to a Noyo plan mapping issue.",
    "rca": "The root cause of the issue is a Noyo plan mapping error. The system is unable to find a matching Noyo plan mapping information for the selected medical plan 'Anthem Silver PPO HSA/H 2600/3200/5200 35% PrevRx'. This requires action from the Insurance Ops team to verify or update the Noyo plan mappings.",
    "steps_taken": "The issue was identified as a Noyo plan mapping problem. The engineering team was informed that no action was needed from their side, and the Insurance Ops team was tasked with verifying and fixing the Noyo plan mapping for the medical plan selected by the employee.",
    "data_models": "[NoyoCompanyPlanInfo]"
  },
  "BENINTEG-3074": {
    "key": "BENINTEG-3074",
    "issue": "The system needs to be prepared for re-onboarding a client with USP instead of PRIME for the renewal on 01/01/2025.",
    "issue_summary": "The client needs to be re-onboarded with USP instead of PRIME for the upcoming renewal, requiring system setup changes.",
    "rca": "The re-onboarding process required the use of a script to transition the client from PRIME to USP.",
    "steps_taken": "A script was used to facilitate the re-onboarding process for the client with USP.",
    "data_models": "[]"
  },
  "BENINTEG-3073": {
    "key": "BENINTEG-3073",
    "issue": "The 9/30/2024 medical termination for employees Brett Wilson and Joerg Koehler were processed in Rippling but did not pass on the 10/02/2024 production file to UHC. This caused the manual termination entered in UHC to be removed as the file reactivated the coverage.",
    "issue_summary": "Terminations for employees Brett Wilson and Joerg Koehler were not passed to UHC on the production file, causing their active employment coverage to be incorrectly sent, which led to manual terminations being overridden.",
    "rca": "The issue occurred because the 'Pending Action' object, which is created when events need to be sent out, errored out during its creation. This resulted in the termination event not being sent. The engineering team is in the process of debugging this and is also considering doing away with 'Pending Actions' due to such issues.",
    "steps_taken": "To resolve the issue, a production file was manually generated and sent without checking 'Include Pending Action' and 'Use last snapshot'. A test file was manually generated including the DTP 349 for both employees, and after verification, the file was sent to the carrier. The issue was further addressed by triggering a snapshot to the internal test server and marking it as accepted, ensuring the termed employees did not populate again.",
    "data_models": "[StediPartnerCompanyGroupingPayloadData, RoleWithCompany, StediDataAggregator, EbnCompanyFileGenerator, StediGroupingConfigData, VendorDtoBuilderContext, StediDte]"
  },
  "BENINTEG-3072": {
    "key": "BENINTEG-3072",
    "issue": "Issue being faced in ticket",
    "issue_summary": "The ticket appears to be a test and does not require any action.",
    "rca": "The root cause analysis category indicates that a support tool was used, but no specific details are provided.",
    "steps_taken": "No steps were taken as the ticket is marked as a test and does not require action.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: []"
  },
  "BENINTEG-3071": {
    "key": "BENINTEG-3071",
    "issue": "Test ticket created with no action required.",
    "issue_summary": "A test ticket was created with the instruction not to take any action.",
    "rca": "The ticket was marked as 'Deferred' with no further details provided, indicating it was likely created for testing purposes and not meant to be acted upon.",
    "steps_taken": "No steps were taken as the ticket was a test and required no action.",
    "data_models": "[]"
  },
  "BENINTEG-3070": {
    "key": "BENINTEG-3070",
    "issue": "A test ticket was created with the highest priority, which should not have been done.",
    "issue_summary": "A test ticket was mistakenly created with the highest priority, which is not appropriate for testing purposes.",
    "rca": "The ticket was created as a test but was incorrectly marked with the highest priority, leading to unnecessary attention and potential disruption.",
    "steps_taken": "A comment was made to remind the creator not to raise highest priority tickets for testing purposes.",
    "data_models": "[]"
  },
  "BENINTEG-3069": {
    "key": "BENINTEG-3069",
    "issue": "The scheduled production files for the 12/1 renewal did not go out as expected for certain clients, and there was an inability to trigger these files manually.",
    "issue_summary": "Scheduled production files for the 12/1 renewal were not sent automatically for certain clients due to connection state issues, and manual triggering was also problematic.",
    "rca": "The root cause was identified as the exclusion of previous year pending actions from the Open Enrollment (OE) file generation, which led to the files not being sent as scheduled. Additionally, the connection state for some groups was not set to 'INGESTING', preventing the files from being triggered.",
    "steps_taken": "The connection state for the affected companies was changed from 'TESTING' to 'INGESTING' using the cutover tool. A manual trigger of the production file was attempted, and the connection state was eventually moved to 'PROD'. The issue with the regular production files for USP migrated groups was identified and fixed. It was advised to mark the ingestion OE file as 'ACCEPTED' to ensure future scheduled transmissions.",
    "data_models": "[VendorPartnerCompany]"
  },
  "BENINTEG-3068": {
    "key": "BENINTEG-3068",
    "issue": "The system needed to be prepared for re-onboarding specific clients using USP instead of PRIME.",
    "issue_summary": "The issue involved preparing the system for re-onboarding three clients (Lunch Money Group Inc, MedTech Momentum, Node.Digital LLC) using USP instead of PRIME.",
    "rca": "The root cause was related to the support tool used, specifically a script was utilized for re-onboarding the clients.",
    "steps_taken": "A script was used to facilitate the re-onboarding process for the specified clients.",
    "data_models": "[]"
  },
  "BENINTEG-3067": {
    "key": "BENINTEG-3067",
    "issue": "The scheduled weekly production file for 12/01 effective date encountered a transmission error and needed to be manually pushed to the carrier server to ensure it runs automatically in the future.",
    "issue_summary": "The 12/01 OE production file for USP Groups faced a transmission error, preventing it from being sent as scheduled. Manual intervention was required to push the file to the carrier server.",
    "rca": "The issue was related to the support tool used, which caused a transmission error in the scheduled file. The problem was fixed by manually sending the file.",
    "steps_taken": "The team manually pulled the OE production file and pushed it back to the carrier server. The file for the week was sent successfully, and the issue was resolved, allowing the next week's transmission to proceed without issues.",
    "data_models": "[]"
  },
  "BENINTEG-3065": {
    "key": "BENINTEG-3065",
    "issue": "The client experienced an issue where work location text was erroneously added as a classification for Guardian in the 'Manage Carrier Classifications' page, even though they are not a PEO client. The client is concerned that work location data was sent prior to 11/01/2024, despite not being a PEO customer.",
    "issue_summary": "Work location text was mistakenly added for a non-PEO client in the 'Manage Carrier Classifications' page, causing concerns about data transmission to Guardian.",
    "rca": "Checked Noyo member snapshots for historical work location text and found only one unique work location text, indicating that no additional work location data was sent.",
    "steps_taken": "Removed erroneous work location text from 'Manage Carrier Classifications' page. Searched for workarounds but found none. Confirmed through code that only one work location text was historically present. Code snippet used:\n```python\nsnapshots = NoyoMemberSnapshot.objects.filter(company=\"6477ba4cd9c1bbff64fbe607\")\nunique_work_location_text = set()\nfor snapshot in snapshots:\n    try:\n        request_data = json.loads(snapshot.request) if snapshot.request else {}\n        response_data = json.loads(snapshot.response) if snapshot.response else {}\n        for coverage in request_data.get(\"coverages\", []):\n            carrier_config = coverage.get(\"carrier_config\", {})\n            work_location_text = carrier_config.get(\"work_location_text\")\n            if work_location_text:\n                unique_work_location_text.add(work_location_text)\n        response_member_snapshot = response_data.get(\"member_snapshot\", {})\n        for coverage in response_member_snapshot.get(\"coverages\", []):\n            carrier_config = coverage.get(\"carrier_config\", {})\n            work_location_text = carrier_config.get(\"work_location_text\")\n            if work_location_text:\n                unique_work_location_text.add(work_location_text)\n    except json.JSONDecodeError:\n        print(f\"Failed to parse JSON for snapshot ID: {snapshot.id}\")\n    except AttributeError as e:\n        print(f\"Attribute error in snapshot ID: {snapshot.id}: {e}\")\nprint(\"Unique work_location_text values:\", unique_work_location_text)\n```\nConfirmed only one work_location_text value: '39fd989b'.",
    "data_models": "[NoyoMemberSnapshot]"
  },
  "BENINTEG-3064": {
    "key": "BENINTEG-3064",
    "issue": "Forms for medical coverage for Oxford (carrier) were not sent, and the status in EE debugger was showing PENDING_ACTION_DATE.",
    "issue_summary": "Forms for medical coverage for Oxford were not sent due to the system working as expected, where forms are scheduled to be sent one month before the effective date.",
    "rca": "The system was working as expected. The forms were scheduled to be sent one month before the effective date, which was February 1st, so the forms were supposed to be sent on January 1st.",
    "steps_taken": "The issue was investigated, and it was confirmed that the system was functioning as expected. The forms were scheduled to be sent on the correct date according to the effective date of the employee's coverage.",
    "data_models": "[]"
  },
  "BENINTEG-3063": {
    "key": "BENINTEG-3063",
    "issue": "The setup option for EDI/API is not available in the carrier transmission tab under the benefits admin app for the company DoseSpot.",
    "issue_summary": "The EDI/API setup option is missing in the carrier transmission tab for DoseSpot, a BOB group, preventing the setup of EDI/API connections.",
    "rca": "The issue was due to a bug that was resolved post-migration.",
    "steps_taken": "The migration was re-run, and the issue was verified as fixed by proxying into the customer's account.",
    "data_models": "[]"
  },
  "BENINTEG-3062": {
    "key": "BENINTEG-3062",
    "issue": "Omnidian completed insurance renewals for 12/1/2024 and 1/1/2025, but OneKonnect is confused with the data for the 1/1/2025 renewal, causing potential coverage issues.",
    "issue_summary": "OneKonnect is receiving mixed data for consecutive renewals with only a one-month gap, leading to confusion in processing 1/1/2025 elections.",
    "rca": "The issue arose because EBN (OneKonnect) had difficulty processing consecutive renewals with just one month in between, leading to mixed data being sent for both 12/1/2024 and 1/1/2025 renewals. This was not handled in the product, causing confusion and potential coverage issues.",
    "steps_taken": "The team audited the files sent to EBN to ensure that only the correct data for each renewal period was included. They confirmed that the file for 12/1/2024 did not contain 2025 plan data and ensured that the 1/1/2025 file contained only the relevant data. They also communicated with EBN to clarify expectations and ensure proper processing of the files.",
    "data_models": "[CompanyEnrollmentEvent, SubscriberLineInfo]"
  },
  "BENINTEG-3061": {
    "key": "BENINTEG-3061",
    "issue": "The 'Set up carrier connections' button is missing in the Carrier transmission tab for Sun Life, preventing the initiation of carrier connections.",
    "issue_summary": "The 'Set up carrier connections' button is missing in the Carrier transmission tab for Sun Life, despite it being available for a file feed, due to a bug.",
    "rca": "A bug was identified that caused the 'Set up carrier connections' button to not appear in the Carrier transmission tab for Sun Life, even though it was supported.",
    "steps_taken": "The engineering team re-ran the migration to fix the issue. The fix was verified by proxying into the customer's account, confirming that the button now appears.",
    "data_models": "[]"
  },
  "BENINTEG-3060": {
    "key": "BENINTEG-3060",
    "issue": "The broker requested to have their email address added to the Principal coverage for notifications on enrollment changes, but the system does not support adding email addresses for this purpose.",
    "issue_summary": "The system does not support adding email addresses to Principal coverage for broker notifications, causing the broker to not receive updates on enrollment changes.",
    "rca": "The feature to add email addresses for notifications in Principal coverage is not supported by the system currently.",
    "steps_taken": "The issue was acknowledged as a limitation of the current system. It was noted that if the broker wants emails for employee-related changes, it is handled by the Ben Admin Employer team. The API feed was confirmed to be turned off for the group, and tasks were verified to be completed from the Insurance dashboard. The engineering team confirmed that no further action was required from their side.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-3059": {
    "key": "BENINTEG-3059",
    "issue": "Employees at Calson Management received delayed emails regarding coverage loss on 12/31/23, but the emails were sent on 11/29/24.",
    "issue_summary": "Employees received emails about coverage loss almost a year after the actual event due to delayed email transmission.",
    "rca": "There were two underlying issues: the system initially failed to generate and transmit forms due to an issue, and later, an asynchronous task 'reProcessFinalizedEnrollmentEvents' regenerated and sent the forms.",
    "steps_taken": "The issue was resolved by the asynchronous task 'reProcessFinalizedEnrollmentEvents' which regenerated and sent the forms. Additionally, efforts are being made to improve monitoring and observability to prevent future occurrences.",
    "data_models": "[EnrollmentEvent]"
  },
  "BENINTEG-3058": {
    "key": "BENINTEG-3058",
    "issue": "Admin reported that an employee is not enrolled with Guardian, and attempts to push a snapshot to Noyo result in a 422 error due to missing LTD and STD volumes.",
    "issue_summary": "The issue is that the JSON payload for an employee does not include the required LTD and STD volumes, causing a 422 error when attempting to send a snapshot to Noyo.",
    "rca": "The root cause of the issue was identified as a feature flag that was enabled for the company, which affected the logic for fetching whether a coverage has voluntary volume or not.",
    "steps_taken": "The engineering team identified that the new logic for fetching coverage volumes was behind a feature flag. They enabled the feature flag for the group and resent the snapshot, which resolved the issue.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-3057": {
    "key": "BENINTEG-3057",
    "issue": "Hallmark HCS has a new carrier state at renewal, requiring an OE file for Aetna MA elections to be sent to OneKonnect, but there is a check preventing OE files from being sent if there is no prior relationship with the carrier.",
    "issue_summary": "Hallmark HCS's carrier state change at renewal from NY 2024 to MA 2025 requires OE files to be sent to OneKonnect for Aetna MA elections, but existing checks prevent this due to no prior carrier relationship.",
    "rca": "The system has a check that prevents sending OE files to carriers if the company doesn't have a prior relationship with the carrier at renewals. This check assumes a new carrier connection, which is not the case here as it's a state change.",
    "steps_taken": "A rough workaround was implemented to connect the new carrierID to OneKonnect. The following code was used to generate and send the OE file: ```ecc = EbnCompanyCarrier.objects.get(id=\"6759c334581b7eb879065113\") return EbnFileGenerationController.generate_file_async(ecc.company, ecc.carrier, \"OPEN_ENROLLMENT\")``` The file was sent within a couple of hours.",
    "data_models": "[EbnCompanyCarrier]"
  },
  "BENINTEG-3055": {
    "key": "BENINTEG-3055",
    "issue": "Need to merge two groups, Norwoodr Corp and Norwood, as they are identified to be the same company.",
    "issue_summary": "During the upload and verification process, it was realized that Norwoodr Corp and Norwood are the same company, requiring a merge of Norwoodr Corp into Norwood.",
    "rca": "This task is not related to the Benefits Marketplace Integrations team. It should be handled by the HRIS team, as indicated by a similar issue in ticket BENINTEG-2997.",
    "steps_taken": "The issue was identified as not being within the scope of the Benefits Marketplace Integrations team and was closed as it is similar to another ticket, BENINTEG-2997.",
    "data_models": "[]"
  },
  "BENINTEG-3054": {
    "key": "BENINTEG-3054",
    "issue": "Ex-broker receiving enrollment/termination emails for the group even though they are not the broker anymore.",
    "issue_summary": "Ex-broker for YieldStreet Inc. is still receiving enrollment/termination notifications despite no longer being the broker. The expected outcome is that they should not receive these notifications.",
    "rca": "The email of the ex-broker was not removed from the communication list, leading to them receiving notifications they shouldn't.",
    "steps_taken": "The email lisasmith@worldinsurance.com was removed from the communications to resolve the issue.",
    "data_models": "[]"
  },
  "BENINTEG-3053": {
    "key": "BENINTEG-3053",
    "issue": "The UHC PEO file feed needed to be scheduled to send each Monday at 6 am (PFC), with the first file due on 12/2/2024.",
    "issue_summary": "The UHC PEO file feed was not scheduled to send weekly as required, causing a delay in the first file which was due on 12/2/2024.",
    "rca": "The root cause was the need to generate a weekly production file for UHC, which was not initially scheduled.",
    "steps_taken": "A production file was set up for the day, including all necessary groups and enrollments. The task was confirmed as completed and the ticket was closed.",
    "data_models": "[]"
  },
  "BENINTEG-3051": {
    "key": "BENINTEG-3051",
    "issue": "The issue was that when trying to run the Open Enrollment (OE) file for groups migrating from Prime to USP, the old plan year 2024 group ID was being populated instead of the new 2025 plan year group ID.",
    "issue_summary": "The OE file for groups migrating from Prime to USP was incorrectly populating the old plan year 2024 group ID instead of the new 2025 plan year group ID.",
    "rca": "The root cause was related to the support tool used, which was not updating the group ID for the 2025 plans correctly, leading to the old 2024 group ID being populated in the OE file.",
    "steps_taken": "The steps taken to resolve the issue included generating OE test files for the affected groups and verifying that the group ID was updated to the 2025 plans. Additionally, a retool update was made to allow self-service generation of USP OE files, and instructions were provided via a Loom video. It was also confirmed that no file would be generated if there were no enrollments to be sent.",
    "data_models": "[CompanyInsuranceInfo, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-3046": {
    "key": "BENINTEG-3046",
    "issue": "The issue involves a request for confirmation of relocation and effective dates for three Rippling employees as part of a post-OE audit report. The request was misdirected to the wrong team, causing delays and confusion.",
    "issue_summary": "The ticket was incorrectly assigned to the HRIS team, which does not have access to Rippling employee data, leading to a delay in obtaining necessary relocation and effective dates for three employees.",
    "rca": "The root cause of the issue was the ticket being filed on the wrong board, specifically the HRIS board, which is not equipped to handle requests for Rippling employee data. This led to confusion and a lack of context for the HRIS team, who are not authorized to access or provide the requested information.",
    "steps_taken": "The ticket was transferred multiple times between boards, including 'Benefits - Country Launch' and 'Benefits - Integrations'. It was eventually clarified that the HRIS team cannot provide the requested information and that the request should be directed to Rippling's HR organization or the managers of the employees in question.",
    "data_models": "[]"
  },
  "BENINTEG-3043": {
    "key": "BENINTEG-3043",
    "issue": "The issue involves migrating clients for UHC from Prime to USP for existing clients and re-onboarding these groups with updated file names and platform settings.",
    "issue_summary": "The migration of clients for UHC from Prime to USP requires re-onboarding of groups with updated file names and platform settings. The process involves ensuring that the Weekly production file for the current plan year is stopped if it is active.",
    "rca": "The root cause analysis indicates that a script was used as a support tool to facilitate the migration and re-onboarding process.",
    "steps_taken": "The engineering team completed the necessary steps for the migration and re-onboarding process as indicated by the comment from mshashank@rippling.com stating that the task is done.",
    "data_models": "[]"
  },
  "BENINTEG-3042": {
    "key": "BENINTEG-3042",
    "issue": "The issue involves stopping the automated schedules for production files for specific clients before their Open Enrollment (OE) dates for Cigna and UHC.",
    "issue_summary": "The automated schedules for production files need to be stopped for certain clients before their OE dates, as these clients have already started their OE.",
    "rca": "The system is working as expected, and no action is needed. The files are no longer sending terms once the OE has started, and the file will automatically stop on the OE end date.",
    "steps_taken": "The files are set to automatically stop on the OE end date. Once the last scheduled file for the plan year sends, the feeds should be put on a ticket to be offboarded, then re-onboarded for USP, and an OE test file should be sent to the carrier.",
    "data_models": "[]"
  },
  "BENINTEG-3038": {
    "key": "BENINTEG-3038",
    "issue": "EE's enrollments and forms are being populated with effective dates that are not their date of hire, causing discrepancies in the insurance enrollment process.",
    "issue_summary": "The effective dates on enrollment forms for employees are incorrect, showing dates based on when addresses were added rather than the hire date.",
    "rca": "The issue was due to a mapping problem where the system was using the 'Date of Full Time Employment' instead of the 'Date of Hire' for certain forms. This discrepancy was particularly noted for one carrier, United, while others used the correct hire date.",
    "steps_taken": "The team reviewed the system rules and confirmed that the forms were supposed to be sent based on the 'Completed on Date'. It was identified that the mapping issue was causing the wrong date to be used for one carrier. The forms team confirmed that the 'Date of Hire' should be used across all events for all carriers. The issue was marked as resolved after ensuring the correct field mapping.",
    "data_models": "[EnrollmentEvent, SubscriberLineInfo]"
  },
  "BENINTEG-3034": {
    "key": "BENINTEG-3034",
    "issue": "Noyo Setup Tasks for Sastra Cell Therapy's Anthem coverage were not clearing from the Insurance Tasks Dashboard, despite appearing to be correctly set up.",
    "issue_summary": "Noyo Setup Tasks were not clearing due to a plan ID that was no longer active and not available for mapping or deletion, even though the current plan ID was mapped correctly.",
    "rca": "The issue was categorized as an Ops Issue with the subcategory 'Wrong Expectation - System working as expected'. The system eventually cleared the tasks, indicating that the system was functioning as expected, but there was a delay in the task clearance.",
    "steps_taken": "Referred to the runbook for guidance on actioning these task types and confirmed that all plans were mapped to the correct classifications in the Noyo Plan Mapper page. Eventually, the system cleared the tasks on its own.",
    "data_models": "[]"
  },
  "BENINTEG-3033": {
    "key": "BENINTEG-3033",
    "issue": "The broker requested to have their email address added to the Principal coverage for notifications of enrollment changes, but the system does not support adding an email address for this specific coverage.",
    "issue_summary": "The system does not support adding an email address to the Principal coverage for broker notifications, unlike other carriers.",
    "rca": "We don't have support for this feature.",
    "steps_taken": "The issue was deferred as the feature is not currently supported. It was suggested that if the broker wants emails for employee-related changes, this is handled by the Ben Admin Employer team.",
    "data_models": "[]"
  },
  "BENINTEG-3031": {
    "key": "BENINTEG-3031",
    "issue": "Collective Health requested a change in the file naming convention to include a daily sequence number due to issues with multiple files being sent over the Thanksgiving holiday.",
    "issue_summary": "Collective Health requested a file naming update to include a daily sequence number to distinguish between multiple files sent due to transmission issues.",
    "rca": "The request for a file naming update was deemed unnecessary as the issue of multiple files being sent was identified as a temporary aberration. A permanent solution was put in place to ensure only one file is sent per day.",
    "steps_taken": "The team communicated with Collective Health to assure them that a permanent solution was implemented to prevent multiple files from being sent. The request for a filename change was ultimately not pursued as Collective Health agreed it was not needed.",
    "data_models": "[]"
  },
  "BENINTEG-3030": {
    "key": "BENINTEG-3030",
    "issue": "A new PEO group starting on 12/1/2024 was missing from the Kaiser PEO OE file sent on 11/27, causing members who should be active at Kaiser to not appear in the file.",
    "issue_summary": "The Kaiser PEO OE file did not include a new PEO group starting on 12/1/2024, likely due to the group's PEO start date not being reached at the time the file was generated.",
    "rca": "The issue was caused by a code bug that incorrectly implemented the logic for adding groups to the Kaiser PEO OE file, resulting in the exclusion of the new PEO group.",
    "steps_taken": "The issue was investigated, and a pull request was raised to fix the code bug. The fix was implemented, and a new file was generated and sent to include the missing group.",
    "data_models": "[]"
  },
  "BENINTEG-3029": {
    "key": "BENINTEG-3029",
    "issue": "OneKonnect reported that they have not received the dataset for many connections where Rippling indicated that the data is ready, blocking the transmission of Open Enrollment (OE) files.",
    "issue_summary": "OneKonnect did not receive datasets for connections after the enrollment window passed, despite Rippling indicating data readiness. This blocked OE file transmissions.",
    "rca": "The issue was due to multiple fixes needed for EBN datasets, specifically related to business logic changes.",
    "steps_taken": "An audit was conducted for all company-carrier connections listed, revealing that most groups had their OE deadlines passed, leading to the suspension of regular transmissions. A special case was identified where a connection was suspended due to a deadline change, which was then corrected. A Python script was used to audit and generate a CSV report of the connections and their statuses.",
    "data_models": "[BaseCompanyEnrollmentEvent, VendorPartnerCompany]"
  },
  "BENINTEG-3028": {
    "key": "BENINTEG-3028",
    "issue": "The snapshot for The Dermot Company, LP did not include all applicable events under the 'events' tab, specifically missing the overage dependent's initial COBRA enrollment and Open Enrollment (OE) events.",
    "issue_summary": "The snapshot for The Dermot Company, LP was missing certain events in the 'events' tab, such as the overage dependent's initial COBRA enrollment and OE events, due to incomplete snapshot logic.",
    "rca": "The root cause of the issue was incomplete snapshot logic that did not accommodate all applicable events, such as the overage dependent's initial COBRA enrollment and OE events, in the 'events' tab of the snapshot JSON files.",
    "steps_taken": "The engineering team worked with Noyo to update the snapshot logic to include all applicable events. Noyo provided updated logic, which was then implemented to resolve the issue.",
    "data_models": "[]"
  },
  "BENINTEG-3026": {
    "key": "BENINTEG-3026",
    "issue": "The team needed to stop the automated schedules for production files for a specific client list before Wednesday due to the clients having already started their Open Enrollment (OE).",
    "issue_summary": "Automated schedules for production files needed to be stopped for certain clients as they had already started their Open Enrollment, and the system was working as expected.",
    "rca": "The issue was categorized as an Ops Issue with the subcategory 'Wrong Expectation - System working as expected'. The system was functioning correctly, and the production feed would automatically end on the client's OE end date.",
    "steps_taken": "The issue was resolved by acknowledging that the system would automatically end the production feed on the client's OE end date. The last file for the client would be sent on 12/11, after which the feed would be offboarded, allowing for re-onboarding and sending a test OE file.",
    "data_models": "[]"
  },
  "BENINTEG-3019": {
    "key": "BENINTEG-3019",
    "issue": "The team needed to send an Open Enrollment (OE) test file to Cigna for the group Nursa under the Ingestion environment. However, there was an error in generating the OE file for Cigna's Dental and Vision plans, while the Medical plan file was generated successfully.",
    "issue_summary": "The issue was that the OE test file for Cigna's Dental and Vision plans could not be generated due to invalidated Subscriber Line Information (SLI) caused by waivers and terminations after OE elections.",
    "rca": "The root cause of the issue was identified as the inclusion of invalidated SLIs in the OE file. Specifically, two employees had their coverage invalidated after making OE elections due to a waiver and a termination, leading to an invalid coverage block with incorrect date ranges and missing network identifier carrier classification.",
    "steps_taken": "The issue was resolved by identifying the root cause and implementing a fix to handle invalidated SLIs properly. A pull request was raised and merged to address the issue, ensuring that waivers and terminations are not included in the OE file for new plans with Cigna. The fix was deployed, and the OE file for Dental and Vision was successfully generated after the deployment.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-3012": {
    "key": "BENINTEG-3012",
    "issue": "The client needs to be re-onboarded due to migration from Prime to USP for UHC, requiring updated file names and platform settings.",
    "issue_summary": "Clients for UHC are being migrated from Prime to USP, necessitating re-onboarding with updated file names and platform settings.",
    "rca": "The issue required the use of a script for re-onboarding clients as part of the migration process.",
    "steps_taken": "The group details were provided in the case details, and the re-onboarding process was completed as confirmed in the comments.",
    "data_models": "[]"
  },
  "BENINTEG-3005": {
    "key": "BENINTEG-3005",
    "issue": "Customer is inquiring about the expected behavior for OneKonnect during the five-week blackout period where file sending is paused at the vendor leading up to their 1/1/25 renewal. They want to ensure COBRA changes/enrollments are sent to carriers during 11/26/24-12/31/24 or if they need to manage it themselves.",
    "issue_summary": "Customer is concerned about the handling of COBRA changes/enrollments during the OneKonnect blackout period and whether Rippling will manage these changes or if the customer needs to handle them.",
    "rca": "Ops needed confirmation on product behavior during renewals, specifically regarding the handling of COBRA changes/enrollments during the blackout period.",
    "steps_taken": "It was confirmed that forms are sent via email to carriers during the blackout period, but processing depends on the carrier. For carriers like Principal and HCHS that do not accept forms during this period, Rippling Ops will manually update the portals if Rippling is the TPA. The customer was informed that for BCBS TX, the forms are sent, and the question was resolved.",
    "data_models": "[]"
  },
  "BENINTEG-3003": {
    "key": "BENINTEG-3003",
    "issue": "The salary information for employees at Prompt Therapy Solutions with Sun Life Financial is being passed incorrectly to OneKonnect. The salary is being sent in the 'salaryperpayfrequency' field instead of the 'annualsalary' field.",
    "issue_summary": "The employee salary data for Prompt Therapy Solutions with Sun Life Financial is being transmitted to OneKonnect in the wrong field. The salary is currently being sent in the 'salaryperpayfrequency' field rather than the 'annualsalary' field.",
    "rca": "The issue was identified as a discrepancy between the salary fields due to an update in the employee's salary after the coverage was set up. The 'annualsalary' was initially reported during the setup of the renewal/coverages, but the salary was updated on 2024-12-03, leading to a mismatch between the two fields.",
    "steps_taken": "The issue was acknowledged, and it was noted that the salary update after the coverage setup caused the discrepancy. The ticket was eventually closed, indicating that the issue was resolved or deemed no longer relevant.",
    "data_models": "[]"
  },
  "BENINTEG-3002": {
    "key": "BENINTEG-3002",
    "issue": "The team needed to generate a test Open Enrollment (OE) file for internal review for several groups, but faced issues with the generated file containing data from the current year plan instead of the new plan year.",
    "issue_summary": "The issue was related to generating a test OE file for internal review, where the generated file included data from the current year plan instead of the new plan year, causing confusion and blocking the internal testing process.",
    "rca": "The root cause was categorized as an Ops Issue with incorrect steps/state error, but no specific action was needed as per the RCA description.",
    "steps_taken": "The team used the Stedi snapshot generator retool to generate the OE test file. A loom video was shared to guide the process. The issue was resolved as the team confirmed they were done with the groups and no longer faced issues.",
    "data_models": "[Stedi]"
  },
  "BENINTEG-3001": {
    "key": "BENINTEG-3001",
    "issue": "The team was requested to generate a PROD OE file for the group CUDDLY with Carrier Group ID 04V7307.",
    "issue_summary": "The issue was a request to generate a PROD OE file for the group CUDDLY with Carrier Group ID 04V7307, which was resolved by running a webscript.",
    "rca": "The issue was resolved by running a webscript, as indicated in the root cause analysis.",
    "steps_taken": "The ticket was closed after the task was added to another ticket (BENINTEG-2996), indicating that the necessary actions were taken there.",
    "data_models": "[]"
  },
  "BENINTEG-3000": {
    "key": "BENINTEG-3000",
    "issue": "Ventricle Health, a PEO client, had their Guardian enrollments sent to the carrier late, specifically 3 weeks after the open enrollment ended.",
    "issue_summary": "Guardian enrollments for Ventricle Health were delayed and sent to the carrier late due to an incident related to PEO plan mappings.",
    "rca": "There was an incident related to PEO plan mappings which caused the transactions to be delayed. After the incident was resolved, the enrollments were successfully sent.",
    "steps_taken": "The incident related to PEO plan mappings was identified and resolved, allowing the enrollments to be processed and sent to the carrier.",
    "data_models": "No specific data models were mentioned in the ticket."
  },
  "BENINTEG-2999": {
    "key": "BENINTEG-2999",
    "issue": "The employee, Aaron Gottfried, submitted a COBRA QLE to add their newborn to COBRA coverage, but the COBRA QLE was not added to the feed for Anthem, resulting in a blocked transaction due to an error message.",
    "issue_summary": "The COBRA QLE for Aaron Gottfried was not transmitted to Anthem due to a 'resource not found' error related to the coverage period ID, causing a blockage in the transaction.",
    "rca": "The error was caused by a 'resource not found' issue related to the coverage period ID in the Vericred API, which was due to Ideon marking coverage periods incorrectly and creating a new one, leading to the disconnection of the Ideon connection as the group moved from Anthem.",
    "steps_taken": "The forms were sent via email during the Ideon blackout period, and it was verified that other blocked transactions also went through. The group discontinued their Anthem coverage, and the issue was identified as a one-off case due to Ideon's handling of coverage periods.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-2998": {
    "key": "BENINTEG-2998",
    "issue": "The team needed to generate a test Open Enrollment (OE) file for specific groups for review, but faced a transmission error while pulling the OE files.",
    "issue_summary": "The team was unable to generate and transmit an OE test file for review due to a transmission error.",
    "rca": "The root cause of the issue was related to the use of a webscript in the support tool, which led to a transmission error when attempting to pull the OE files.",
    "steps_taken": "A test OE file was generated and sent to the internal Stedi SFTP server for review. After reviewing the test file, another test OE file was generated and successfully pushed to the carrier server.",
    "data_models": "[]"
  },
  "BENINTEG-2997": {
    "key": "BENINTEG-2997",
    "issue": "The issue involves merging two groups, Gloss Ventures and Sacheu Beauty Inc., as they are identified to be the same company with Sacheu Beauty Inc. being the parent company. The request is to merge Gloss Ventures into Sacheu Beauty Inc.",
    "issue_summary": "The issue is about merging two company groups, Gloss Ventures and Sacheu Beauty Inc., identified as the same entity, with the latter being the parent company. The request is to merge the two groups, but no actions have been taken yet.",
    "rca": "The root cause analysis indicates that this is not a task for the benefits engineering team. Operations has a specific sheet for handling such requests, and this task involves multiple teams (Payroll, People, Benefits, etc.) as it requires merging respective datasets.",
    "steps_taken": "The steps taken include discussions among team members to identify the appropriate team to handle the request. It was suggested to use a Confluence article and a Google sheet to add the client to a list of clients requesting to merge Rippling instances. However, it was noted that this is a material request involving multiple teams and cannot be completed by the requested date.",
    "data_models": "[]"
  },
  "BENINTEG-2996": {
    "key": "BENINTEG-2996",
    "issue": "The team was requested to send the 12/01 Open Enrollment (OE) Production file for specific groups to the USP carrier.",
    "issue_summary": "The issue was a request to send the 12/01 OE Production file for specific groups to the USP carrier, even though an OE file had already been sent recently.",
    "rca": "The root cause was a requirement from the USP carrier to receive another OE production file for the specified groups, despite a recent file having been sent.",
    "steps_taken": "The team confirmed the request and resent the OE files to the USP carrier. Links to the file executions were provided for confirmation.",
    "data_models": "[]"
  },
  "BENINTEG-2994": {
    "key": "BENINTEG-2994",
    "issue": "The end date of the role for an employee was updated from 2024-02-02 to 2024-01-12, requiring updates to insurance timelines and potential COBRA coverage adjustments.",
    "issue_summary": "The end date of an employee's role was updated, necessitating the creation of a 'Termination (end date correction)' event and updates to insurance timelines. Forms need to be submitted to carriers, and COBRA timelines may need adjustment.",
    "rca": "The root cause analysis indicates that there is no issue present, and the ticket can be reopened if the problem persists.",
    "steps_taken": "1. Verified that a 'Termination (end date correction)' event was created for the prior event. 2. Reviewed and confirmed that insurance timelines were updated. 3. Ensured forms were generated and sent to carriers Aetna and Guardian, but noted that pending actions were not marked active due to unclosed ConfirmEnrollmentTasks. 4. Identified that Voya forms were not sent due to missing communication details, and all coverages for the group were expired. 5. Suggested manual confirmation with the carrier for Voya forms and termination date acknowledgment.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent, PendingActionGroup, PendingAction]"
  },
  "BENINTEG-2992": {
    "key": "BENINTEG-2992",
    "issue": "The setup carrier connections button is missing from all companies, preventing clients from enabling carrier connections.",
    "issue_summary": "The setup carrier connections link is missing for all companies, which is preventing clients from enabling carrier connections. This issue is categorized under Bug Fix with a subcategory of Special Case Handling.",
    "rca": "The root cause of the issue was related to a bug in the system that affected the visibility of the setup carrier connections link. The issue was identified as part of an incident where the carrier connections setup link was missing due to special case handling not being properly managed.",
    "steps_taken": "The engineering team ran a script to debug the issue, which involved checking the company and role details, filtering non-initial transmissions, and retrieving carrier information for the setup. The function `get_carrier_info_for_carrier_vendor_connect_setup_legancy` was used to fetch carrier details, but errors were encountered. The team identified that the issue was related to the defaulting changes and fixed the state for the affected company. The setup was verified by proxying in and confirming the banner's appearance. The issue was mitigated specifically for the company in question, and the setup carrier connection box was restored.",
    "data_models": "[Company, RoleWithCompany, BaseCompanyCarrierTransmission, CompanyInsuranceInfo, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-2989": {
    "key": "BENINTEG-2989",
    "issue": "Burrows Cabinets, LLC production file failed due to dataset not sending to OneKonnect since 11/24/2024, causing a blockage in the production file transmission.",
    "issue_summary": "The production file for Burrows Cabinets, LLC failed because the dataset was not being sent to OneKonnect since 11/24/2024. The issue was due to the system working as expected during the OE blackout period.",
    "rca": "The transmissions were stopped because of the Open Enrollment (OE) blackout period. The system was working as expected, and transmissions were resumed after 12/1, which is the renewal effective date for the group.",
    "steps_taken": "Debugging revealed that the query for EbnUploadFileRequest was returning empty due to the OE blackout period. Transmissions were resumed after the blackout period ended on 12/1.",
    "data_models": "[EbnUploadFileRequest]"
  },
  "BENINTEG-2987": {
    "key": "BENINTEG-2987",
    "issue": "Dana Dettloff's 401(k) contributions were incorrectly split, with amounts being populated in the 401(k) catchup column despite her not being eligible for catchup contributions.",
    "issue_summary": "Dana Dettloff's 401(k) contributions were incorrectly split into the catchup column due to a miscalculation, as she had not reached the contribution limit and was not eligible for catchup contributions.",
    "rca": "The issue was caused by a bug where employee contributions were being added to the year-to-date (YTD) amount, leading to incorrect catchup deductions. The calculation did not consider the age limit for catchup contributions, and the function used to determine deduction limits was incorrect.",
    "steps_taken": "The team identified that the function used to calculate catchup contributions was incorrect. A draft pull request was created to fix the catchup limits, and the fix was reviewed by the apps team. The pull request was merged and deployed, resolving the issue.",
    "data_models": "[EmployeeEOYInfo]"
  },
  "BENINTEG-2986": {
    "key": "BENINTEG-2986",
    "issue": "Noyo Setup Tasks for CoinTracker's Guardian coverage are not clearing from the Insurance Tasks Dashboard despite being correctly mapped.",
    "issue_summary": "Noyo Setup Tasks for CoinTracker's Guardian coverage are not clearing due to incorrect mapping of common identifiers like billing_group in the plan mapping, which should only include carrier classifications differentiating between plans.",
    "rca": "During Noyo plan mapping, operations added common identifiers such as billing_group in the plan mapping, causing the mapping issues to reopen. The plan mapping should only include carrier classifications that differentiate between plans. Once these were removed, the issue was resolved.",
    "steps_taken": "Referred to the Base Noyo Setup Task Walkthrough for guidance, confirmed correct plan mapping in the Noyo Plan Mapper page, and unmapped plans from the billing group to ensure tasks remain closed.",
    "data_models": "[]"
  },
  "BENINTEG-2985": {
    "key": "BENINTEG-2985",
    "issue": "IC Summits is transitioning from Rippling PEO to Rippling ASO as of 12/1/2024 and needs to set up their EDI. However, the Carrier Connection Tab in their Ben Admin App is not showing the blue banner required to set this up.",
    "issue_summary": "IC Summits' Carrier Connection Tab in the Ben Admin App is missing the blue banner needed for EDI setup as they transition from PEO to ASO.",
    "rca": "A bug was identified that prevented the blue banner for EDI setup from appearing in the Carrier Connection Tab. The bug was fixed, and a migration was run to resolve the issue.",
    "steps_taken": "The engineering team ran a migration to fix the bug, which resolved the issue and allowed the blue banner to appear for EDI setup.",
    "data_models": "[]"
  },
  "BENINTEG-2984": {
    "key": "BENINTEG-2984",
    "issue": "Aetna reported multiple production errors related to CSA issues, duplicate enrollments, and dependent COBRA processing errors during the PEO migration.",
    "issue_summary": "Aetna flagged errors including invalid CSA details, duplicate enrollments due to PEO group transitions, and issues with dependent COBRA processing, requiring validation and corrections.",
    "rca": "The root cause of the issue is related to product enhancement needs, specifically the need to elevate dependents in the system, which was not supported at the time. Additionally, there were discrepancies in CSA details and duplicate enrollments due to transitions between PEO groups.",
    "steps_taken": "The team discussed the need for a feature enhancement with Noyo to address the dependent elevation issue. Other errors are being tracked in respective tickets and are actively being worked on. The CSA issues are acknowledged as a blocker for Aetna's processing.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2981": {
    "key": "BENINTEG-2981",
    "issue": "Admin needed to update a QLE snapshot date to show that a spouse dependent was dropped from dental coverage effective 1/31/24, but the amendment was initially pushed without this backdated effective date.",
    "issue_summary": "The issue was that a QLE snapshot needed to be updated to reflect a backdated effective date for dropping a spouse from dental coverage, but the initial amendment did not include this backdated date.",
    "rca": "The root cause was a documentation issue where the data change needed to be done in the BenAdmin system, and there was no action required from engineering. The manual date changes were not ideal as future enrollments or snapshots could override this information.",
    "steps_taken": "The steps involved pushing an updated snapshot to Noyo to reflect the correct coverage status as of 1/31/24. It was suggested to correct the information in the BenAdmin system to prevent future overrides.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2980": {
    "key": "BENINTEG-2980",
    "issue": "The automated schedules for production files needed to be stopped for specific clients before their Open Enrollment (OE) dates.",
    "issue_summary": "Automated production file schedules for certain clients needed to be halted due to the commencement of their Open Enrollment periods.",
    "rca": "The issue was resolved using a webscript to stop the transmissions. The script was used to change the state of the VendorPartnerCompany objects to 'SUSPENDED'.",
    "steps_taken": "The automated production file transmission for the specified companies was stopped. A script was executed to filter VendorPartnerCompany objects for the specified companies, and their state was changed to 'SUSPENDED'. The script iterated over the companies, checked for VendorPartnerCompany objects, and updated their state, printing a confirmation message for each update.",
    "data_models": "[VendorPartnerCompany]"
  },
  "BENINTEG-2979": {
    "key": "BENINTEG-2979",
    "issue": "The team needed to send an Open Enrollment (OE) production file to the carrier UHC USP for the company UseMagik, Inc.",
    "issue_summary": "The issue was the requirement to send an OE production file to the carrier UHC USP for UseMagik, Inc., which was not yet completed.",
    "rca": "The root cause was identified as the need to run a webscript to generate and send the OE production file to the carrier.",
    "steps_taken": "A team member ran the webscript to send the OE file to the carrier. Confirmation was provided via a comment with a link to the file execution on Stedi, and the ticket was subsequently closed.",
    "data_models": "[]"
  },
  "BENINTEG-2978": {
    "key": "BENINTEG-2978",
    "issue": "OneKonnect notified that they stopped receiving the dataset for MetLife benefits, causing a high business impact.",
    "issue_summary": "The dataset for MetLife benefits was not being sent to OneKonnect, with the last dataset sent on 11/24/24. This was due to a blackout period during Open Enrollment (OE).",
    "rca": "The transmissions were stopped because of the Open Enrollment (OE) blackout period. The transmissions were resumed after 12/1, which is the renewal effective date for the group.",
    "steps_taken": "The transmissions were resumed after the OE blackout period ended on 12/1, which is the renewal effective date for the group.",
    "data_models": "[]"
  },
  "BENINTEG-2976": {
    "key": "BENINTEG-2976",
    "issue": "Clients need to be re-onboarded from Prime to USP for UHC with updated file name and platform settings.",
    "issue_summary": "The issue involves migrating existing clients for UHC from Prime to USP, requiring re-onboarding with updated file names and platform settings.",
    "rca": "The root cause analysis indicates that a script was used for the migration process.",
    "steps_taken": "The engineering team completed the necessary steps for the migration, as indicated by the comment stating the task is done.",
    "data_models": "[]"
  },
  "BENINTEG-2974": {
    "key": "BENINTEG-2974",
    "issue": "Clients need to be re-onboarded from Prime to USP for UHC with updated file name and platform settings.",
    "issue_summary": "The issue involves migrating existing clients for UHC from Prime to USP, requiring re-onboarding with updated file names and platform settings.",
    "rca": "The root cause of the issue was related to the use of a script for the migration process.",
    "steps_taken": "The engineering team completed the migration process as requested and confirmed the completion in the comments.",
    "data_models": "[]"
  },
  "BENINTEG-2973": {
    "key": "BENINTEG-2973",
    "issue": "Clients need to be re-onboarded from Prime to USP for UHC with updated file name and platform settings.",
    "issue_summary": "The issue involves migrating existing clients for UHC from Prime to USP, requiring re-onboarding with updated file names and platform settings.",
    "rca": "The root cause analysis indicates that a script was used as a support tool to facilitate the migration process.",
    "steps_taken": "The engineering team executed the necessary steps to complete the migration, as confirmed by the comment indicating the task was done.",
    "data_models": "[]"
  },
  "BENINTEG-2971": {
    "key": "BENINTEG-2971",
    "issue": "The system needs to be prepared for re-onboarding the client Lunch Money Group Inc using USP instead of PRIME.",
    "issue_summary": "The client Lunch Money Group Inc needs to be re-onboarded using USP instead of PRIME, but the process is deferred as the client's renewal status was moved back to INIT.",
    "rca": "The issue was deferred because the client's renewal status was moved back to INIT, indicating that the setup process was not yet complete.",
    "steps_taken": "The ticket was initially moved to open status, but later actions were put on hold due to the client's renewal status. Eventually, the ticket was closed with instructions to create a new ticket once additional details are available.",
    "data_models": "[]"
  },
  "BENINTEG-2969": {
    "key": "BENINTEG-2969",
    "issue": "Default carrier email addresses for Sequoia Tech carriers are not populating on the Carrier Transmission tab after a group adds a new carrier.",
    "issue_summary": "The issue is that default Rippling email addresses for Sequoia Tech carriers are not appearing on the Carrier Transmission tab, which should happen automatically when a new carrier is added.",
    "rca": "The root cause of the issue was identified as a problem with the logic used to determine the communication type in the front end. Specifically, the 'carrier.contact' was fetched from the API 'get_carrier_connection_details', and the 'preferredCommunicationDetails' was coming as None for certain carriers, leading the logic to incorrectly infer the communication type as Email. Additionally, there was an issue with the backend data being corrupt, which caused the page to miss displaying the emails.",
    "steps_taken": "The engineering team identified that the logic in the front end was causing the issue. They noted that the 'carrier.contact' was fetched from the API 'get_carrier_connection_details', and the 'preferredCommunicationDetails' was coming as None for certain carriers. They also identified that the 'BaseVendorPartnerGroupingConfig' was not present, which was causing issues for Stedi. The team planned to update the admin carrier transmission page to reflect the correct communication type and ensure that the default emails are displayed. A script was used to fetch emails for Sequoia carriers: \n\n```python\ncarrier = USBenefitsCarrier.objects.filter(name__contains=\"Sequoia\")\nfor c in carrier:\n  print(c.preferredCommunicationDetailsForBOB)\nreturn\n```",
    "data_models": "[USBenefitsCarrier, BaseVendorPartnerGroupingConfig]"
  },
  "BENINTEG-2968": {
    "key": "BENINTEG-2968",
    "issue": "Groups that never joined the PEO are still being invoiced by carriers, leading to erroneous charges.",
    "issue_summary": "Groups that were set to join the PEO but canceled or postponed their join date are still being shown as active by carriers, resulting in incorrect billing.",
    "rca": "The issue was identified as a bug related to Noyo, where end-dates sent to Noyo were not processed correctly, leading to active coverage status for employees who should not have been covered.",
    "steps_taken": "The issue was raised with the Noyo team, and they manually ended the coverages on their end to resolve the problem. The ticket was initially closed after this manual intervention but was reopened to understand the root cause and ensure proper handling for future cases.",
    "data_models": "[]"
  },
  "BENINTEG-2967": {
    "key": "BENINTEG-2967",
    "issue": "Members/Groups termed but RPEO still being invoiced by Kaiser for groups/employees that have terminated.",
    "issue_summary": "Rippling is being invoiced by Kaiser for groups and employees that have terminated, indicating a breakdown in communication between RPEO and the carrier during renewals and mid-year terminations.",
    "rca": "The root cause of the issue is identified as an operational issue where the Standard Operating Procedure (SOP) needs to be updated to account for these cases during cutovers. Specifically, terminations were not communicated properly to the carrier, leading to continued invoicing.",
    "steps_taken": "The steps taken to resolve the issue included verifying termination dates in Kaiser's portal, requesting retroactive terminations, and investigating discrepancies in the termination process. The EDI Analyst team was tasked with figuring out the next steps for retro terms and identifying more such cases. Communication with Kaiser and Ideon was initiated to understand the discrepancies and ensure proper termination records.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2966": {
    "key": "BENINTEG-2966",
    "issue": "Admin is trying to review the Carrier Transmission screen in the BenAdmin app but is encountering a sad cloud error in both of their Rippling accounts, FoodSmart Nutrition Network and Foodsmart.",
    "issue_summary": "The Carrier Transmission page in the BenAdmin app is displaying a sad cloud error for the admin, indicating a problem with accessing the page.",
    "rca": "The issue was identified as a stale issue, which means it was likely an outdated or previously resolved problem that resurfaced.",
    "steps_taken": "The issue was initially identified as giving 500 errors on the API endpoint for getting carrier connection details. The problem was then moved to the Ben-INTEG team for resolution. Eventually, the issue was fixed, and the ticket was marked as done.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2965": {
    "key": "BENINTEG-2965",
    "issue": "Several employees are being invoiced by two carriers, leading to double charges. This issue arose during the renewal process where some members remained enrolled with their old carrier while also being enrolled with a new carrier. Additionally, one member's coverage was not canceled after the group pushed their start date.",
    "issue_summary": "Employees are being charged by two carriers due to overlapping enrollments during renewal and a delayed start date for one member's coverage.",
    "rca": "The issue is being tracked in other tickets not owned by this team, indicating that the root cause is being addressed elsewhere.",
    "steps_taken": "The team is coordinating with carriers to retroactively terminate the incorrect enrollments and recoup funds. Specific termination dates have been verified for some employees, and further investigation is being conducted with Ideon to understand the discrepancies.",
    "data_models": "[]"
  },
  "BENINTEG-2964": {
    "key": "BENINTEG-2964",
    "issue": "Employee submitted a Demographic change, but the forms sent to Principal and Anthem had a different plan name than what the employee had enrolled into. The employee enrolled in the Gold PPO plan, but the form sent to the carrier mentioned the Silver PPO plan.",
    "issue_summary": "The issue was that the Demographic change form sent to the carrier had the wrong plan name due to a bug in the EEx code, causing a mismatch between the employee's enrolled plan and the plan mentioned in the form.",
    "rca": "The root cause of the issue was a bug in the BenAdmin EEx code, which led to the wrong plan name being populated in the Demographic change form.",
    "steps_taken": "The Anthem form was regenerated and sent again with the correct Gold plan. The bug in the BenAdmin EEx side was fixed. The following code was used to debug and fix the issue:\n\n```python\npa = PendingAction.objects.get(id=\"672e1b5c69883f8a14a264ce\")\nevent = EnrollmentEvent.objects.get(id=\"671649000655b312bb6b8973\")\nevent.repopulatePendingActionLineInfos()\npa.state=\"PROCESSED\"\npa.performAction()\nreturn\n```",
    "data_models": "[PendingAction, EnrollmentEvent]"
  },
  "BENINTEG-2962": {
    "key": "BENINTEG-2962",
    "issue": "There are approximately 200 blocked transactions due to an error message indicating that 'Ltd, Std lines of coverage require volume for Guardian'. This issue is blocking the open enrollment (OE) transactions for multiple carriers, including medical, for various groups.",
    "issue_summary": "The issue involves blocked Noyo OE transactions due to missing volume amounts in the payload for certain lines of coverage, specifically for Guardian, which is causing a blockage in the open enrollment process for multiple groups.",
    "rca": "The root cause of the issue was identified as incorrect logic for fetching the voluntary volume. The logic needed an update, which was addressed by sending a feature flag.",
    "steps_taken": "The engineering team reviewed the logic used for voluntary volume and identified that the logic for passing 'line_helper.isAlwaysVoluntary()' was incorrect. A temporary fix was implemented by updating the logic and adding a pull request to unblock the transactions. The fix was verified for one of the companies, and the feature flag was enabled for all companies with blocked transactions to resolve the issue in the next run.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-2961": {
    "key": "BENINTEG-2961",
    "issue": "Dataset is not sending to OneKonnect, and customer is escalating for project to move forward.",
    "issue_summary": "The dataset for Well Health Inc. is not being transmitted to OneKonnect, causing a blockage in the project with United Healthcare.",
    "rca": "This was an intermittent issue.",
    "steps_taken": "The issue was unblocked, and the dataset is now being sent to EBN. A screenshot was attached to confirm the resolution.",
    "data_models": "[]"
  },
  "BENINTEG-2960": {
    "key": "BENINTEG-2960",
    "issue": "Noyo Setup Tasks for Partyslate's Kaiser coverage are not clearing from the Insurance Tasks Dashboard despite being correctly mapped.",
    "issue_summary": "Noyo Setup Tasks for Partyslate's Kaiser coverage are not clearing from the Insurance Tasks Dashboard. The tasks are related to assigning correct classification values to specific Noyo plans, which appear to be correctly mapped in the Noyo Plan Mapper page.",
    "rca": "The issue was due to a bug in the Noyo setup tasks that caused them to reopen even after being correctly set up.",
    "steps_taken": "The tasks were cleared and are no longer reopening, as part of a fix implemented for Noyo setup tasks issues.",
    "data_models": "[]"
  },
  "BENINTEG-2959": {
    "key": "BENINTEG-2959",
    "issue": "An error is received when trying to send Robert Wagner's coverage to Guardian, indicating that the Dental configuration is incorrect, blocking the transmission.",
    "issue_summary": "The issue involves an error in transmitting Robert Wagner's dental coverage to Guardian due to incorrect Dental configuration, specifically related to multiple benefit_class options for the group.",
    "rca": "There was an issue in the carrier classification setup where the employee was not part of any benefit_class_identifier, and Noyo could not auto-detect it. This needed to be fixed in the carrier config for the employee.",
    "steps_taken": "Reviewed mappings and identified that the employee was in Benefit Class Identifier 0003. It was noted that the carrier classification for the life plan was set, but similar classification was needed for dental plans. The explanation was provided, and the ticket was closed due to no update from operations.",
    "data_models": "[CompanyCarrierLineInfo, SubscriberLineInfo]"
  },
  "BENINTEG-2958": {
    "key": "BENINTEG-2958",
    "issue": "Noyo Setup Tasks for Sutro Labs Inc's Kaiser coverage are not clearing from the Insurance Tasks Dashboard despite correct plan mapping.",
    "issue_summary": "Noyo Setup Tasks are not clearing due to a manual data entry error where billing_group was removed, causing tasks to generate even though plans were correctly mapped.",
    "rca": "For the Noyo plan mapping, only class codes differentiating between two plans were needed, but the operations team removed the billing_group, leading to the issue.",
    "steps_taken": "Referred to the Base Noyo Setup Task Walkthrough runbook, confirmed correct plan mapping in the Noyo Plan Mapper page, and unmapped the plans from Kaiser Bill Group 10 to resolve the issue.",
    "data_models": "[]"
  },
  "BENINTEG-2955": {
    "key": "BENINTEG-2955",
    "issue": "The Event Date for every Snapshot needs to reflect the actual date of the relevant event.",
    "issue_summary": "The Event Date in Snapshots sent to Noyo does not align with the actual date of the relevant event, causing discrepancies in benefit termination and effective dates.",
    "rca": "The issue is categorized as a Product Enhancement. The Event Date in the Snapshot does not reflect the actual date of the event, such as termination, QLE, or new hire, leading to incorrect processing by Noyo.",
    "steps_taken": "The desired outcome is for Rippling to make a code change so that all event_date dates in the Snapshot will reflect the actual date of the relevant event.",
    "data_models": "[]"
  },
  "BENINTEG-2954": {
    "key": "BENINTEG-2954",
    "issue": "The group is missing the LTD buyup plan in Noyo, causing an error when sending transactions.",
    "issue_summary": "The group shows a basic and voluntary LTD plan in Noyo and the Plan mapper, but only one plan is showing in the renewal event, leading to transaction errors.",
    "rca": "The root cause analysis indicates that the operations team did not respond, which deferred the resolution of the issue.",
    "steps_taken": "The issue was not resolved due to lack of response from the operations team. The ticket was eventually closed after no reply for about a month.",
    "data_models": "[]"
  },
  "BENINTEG-2953": {
    "key": "BENINTEG-2953",
    "issue": "The employee's missed enrollment is causing them to be unable to seek care. The issue is related to a previous Jira ticket (BENINTEG-2891) and involves the need for the payload to reflect both New Hire and Open Enrollment events.",
    "issue_summary": "The employee's missed enrollment is due to the payload not reflecting both New Hire and Open Enrollment events, potentially related to an OE hold issue from a previous ticket.",
    "rca": "The root cause analysis category is 'Salesforce case closed', but no detailed description is provided. The issue seems to be related to the OE hold issue mentioned in a previous Jira ticket (BENINTEG-2891).",
    "steps_taken": "The ticket was assigned to an engineer believed to have a fix for the related issue (BENINTEG-2891). The ticket was flagged because the associated support case was closed, indicating a need to keep the customer task backlog clean.",
    "data_models": "[]"
  },
  "BENINTEG-2952": {
    "key": "BENINTEG-2952",
    "issue": "Employees Brad Deitch and Cirian Downey missed enrollments due to issues with their New Hire and Open Enrollment events, preventing them from seeking care.",
    "issue_summary": "The issue involves missed enrollments for employees Brad Deitch and Cirian Downey, related to both their New Hire and Open Enrollment events. The problem is linked to an OE hold issue mentioned in a related Jira ticket (BENINTEG-2891), causing the employees to be unable to seek care.",
    "rca": "The root cause analysis category is 'Salesforce case closed', but no detailed description is provided. The issue seems to be related to a previously identified problem in Jira ticket BENINTEG-2891, which involves an OE hold issue affecting the enrollment payload.",
    "steps_taken": "The ticket was assigned to an engineer believed to have fixed the related issue in BENINTEG-2891. The ticket was flagged because the associated support case was closed, indicating that the issue might have been resolved as part of a bulk action.",
    "data_models": "No specific data models are mentioned in the ticket."
  },
  "BENINTEG-2951": {
    "key": "BENINTEG-2951",
    "issue": "The employee's missed enrollment is causing them to be unable to seek care. The issue is related to a previous Jira ticket (BENINTEG-2891) and involves the need for the payload to reflect both New Hire and Open Enrollment events.",
    "issue_summary": "The employee's enrollment payload did not correctly reflect both New Hire and Open Enrollment events, causing issues with their ability to seek care.",
    "rca": "The issue was categorized as 'Deferred' and was autofixed, indicating that the system automatically resolved the issue without manual intervention.",
    "steps_taken": "The issue was resolved automatically, as indicated by the 'autofixed' status in the RCA. No specific manual steps or code snippets were provided in the ticket.",
    "data_models": "[]"
  },
  "BENINTEG-2950": {
    "key": "BENINTEG-2950",
    "issue": "The employee's missed enrollment is causing them to be unable to seek care. The issue is related to a previous Jira ticket (BENINTEG-2891) and involves the need for the payload to reflect both COBRA Init and COBRA Open Enrollment events.",
    "issue_summary": "The employee's enrollment payload does not correctly reflect COBRA Init and COBRA Open Enrollment events, preventing them from seeking care.",
    "rca": "The root cause analysis category is 'Salesforce case closed', but no detailed description is provided. The issue seems to be related to an OE hold issue mentioned in a previous Jira ticket (BENINTEG-2891).",
    "steps_taken": "The ticket was flagged because the associated support case was closed. The team is asked to ensure that the payload correctly reflects all information relevant to the employee's COBRA enrollment events.",
    "data_models": "[]"
  },
  "BENINTEG-2949": {
    "key": "BENINTEG-2949",
    "issue": "Employees Christine Franz, Ladeja Robinson, and Nicholas Wernicke missed enrollment due to issues with their payload not reflecting both New Hire and Open Enrollment events, preventing them from seeking care.",
    "issue_summary": "The issue involves employees missing enrollment because their payloads do not correctly reflect both New Hire and Open Enrollment events, likely due to an OE hold issue.",
    "rca": "The root cause analysis category is 'Salesforce case closed', but no detailed description is provided. The issue seems related to a previously mentioned OE hold issue in another Jira ticket (BENINTEG-2891).",
    "steps_taken": "The ticket requests ensuring that the payload correctly reflects all information relevant to both the employees' new hire and open enrollment events, including event information and enrollment dates.",
    "data_models": "[]"
  },
  "BENINTEG-2948": {
    "key": "BENINTEG-2948",
    "issue": "The employee's missed enrollment is causing them to be unable to seek care. The issue is related to a previous Jira ticket (BENINTEG-2891) and involves the need for the payload to reflect both New Hire and Open Enrollment events.",
    "issue_summary": "The employee's enrollment payload does not correctly reflect both New Hire and Open Enrollment events, causing issues with their ability to seek care.",
    "rca": "The root cause analysis category is 'Salesforce case closed', but no detailed description is provided. The issue seems to be related to an OE hold issue mentioned in a previous Jira ticket (BENINTEG-2891).",
    "steps_taken": "The ticket was flagged because the associated support case was closed. The team is asked to ensure that the payload correctly reflects all information relevant to both the employee's new hire and open enrollment events.",
    "data_models": "[]"
  },
  "BENINTEG-2947": {
    "key": "BENINTEG-2947",
    "issue": "The employee's missed enrollment is causing them to be unable to seek care. The issue is related to a previous Jira ticket (BENINTEG-2891) and involves the need for the payload to reflect both New Hire and Open Enrollment events.",
    "issue_summary": "The employee's enrollment payload is not correctly reflecting both New Hire and Open Enrollment events, causing issues with accessing care. The problem is linked to a previous issue (BENINTEG-2891) and involves a discontinued plan being reflected in the snapshot.",
    "rca": "The root cause analysis indicates that the issue is related to a Salesforce case being closed. The comments suggest that the problem involves a discontinued plan ('Plan 8 - $1500 Max, No Ortho - Discontinued') being reflected in the snapshot instead of the active plan. This discrepancy is expected to be mapped correctly on Noyo's end.",
    "steps_taken": "The issue was flagged due to the associated support case being closed. It was noted that the discontinued plan showing up in the payload is expected to be mapped to the correct plan on Noyo's end. The ticket was flagged to keep the customer task backlog clean, and feedback was requested if the ticket was incorrectly flagged.",
    "data_models": "No specific data models were mentioned in the ticket or comments."
  },
  "BENINTEG-2946": {
    "key": "BENINTEG-2946",
    "issue": "The employee's missed enrollment is causing them to be unable to seek care. The issue is related to a previous Jira ticket (BENINTEG-2891) and involves the need for the payload to reflect both New Hire and Open Enrollment events.",
    "issue_summary": "The employee's enrollment payload does not correctly reflect both New Hire and Open Enrollment events, causing issues with their ability to seek care.",
    "rca": "The root cause analysis indicates that the issue is related to a Salesforce case being closed, which might have led to the oversight in ensuring the payload reflects all necessary enrollment events.",
    "steps_taken": "The team is asked to ensure that the payload correctly reflects all information relevant to both the employee's new hire and open enrollment events, including event information and enrollment dates.",
    "data_models": "[]"
  },
  "BENINTEG-2945": {
    "key": "BENINTEG-2945",
    "issue": "The issue was to send an OE production file for only 2 out of 4 specified groups to the carrier UHC USP.",
    "issue_summary": "The task was to send OE production files for two specific groups (Keyri and UseMagik, Inc) to the carrier UHC USP, while not sending files for the other two groups (Funraise Inc. and Unearthly Materials) yet.",
    "rca": "The root cause analysis indicates that the issue was resolved by running a webscript, which is a support tool used to send the OE production files.",
    "steps_taken": "The steps taken included sending the OE production files for the specified groups using the Stedi platform. The files were sent successfully, and the links to the file executions were provided in the comments. The ticket was later closed as the OE files could be triggered using the Stedi snapshot generator retool.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2944": {
    "key": "BENINTEG-2944",
    "issue": "The issue was related to sending the Open Enrollment (OE) Production File to UHC USP for Funraise, Keyri, and Unearthly Materials.",
    "issue_summary": "The ticket was created in error, indicating that there was no actual issue with sending the OE Production File to UHC USP.",
    "rca": "The root cause analysis indicates that the issue was categorized as an Ops Issue due to a Manual Data Entry Error, specifically related to a webscript run.",
    "steps_taken": "No steps were taken to resolve the issue as the ticket was created in error.",
    "data_models": "[]"
  },
  "BENINTEG-2943": {
    "key": "BENINTEG-2943",
    "issue": "The system needed to be prepared for re-onboarding clients from USP instead of PRIME, which involved removing existing configurations for specific client groups.",
    "issue_summary": "The issue involved transitioning specific clients from the PRIME system to the USP system, requiring the removal of existing configurations to prevent further transmissions under the current plan year.",
    "rca": "The root cause was the need to transition clients from the PRIME system to the USP system, which required running a webscript to delete existing configurations and prepare for re-onboarding.",
    "steps_taken": "A webscript was executed to delete configurations related to the specified client groups. The script iterated over the list of company IDs, deleting entries from VendorPartnerCompany, BaseVendorPartnerGroupingConfig, StediPartnerCompanyGroupingPayloadData, and StediPartnerTransmissionConfig models. This ensured no further transmissions would occur under the current plan year, and the system was ready for new configurations under USP.",
    "data_models": "[VendorPartnerCompany, BaseVendorPartnerGroupingConfig, StediPartnerCompanyGroupingPayloadData, StediPartnerTransmissionConfig]"
  },
  "BENINTEG-2942": {
    "key": "BENINTEG-2942",
    "issue": "The team needed to generate and send a 12/01 Open Enrollment (OE) test file for specific groups to the USP carrier, but the files were initially sent to Stedi instead of USP.",
    "issue_summary": "The OE test files for the 12/01 enrollment were mistakenly sent to Stedi instead of the intended USP carrier.",
    "rca": "The root cause of the issue was identified as a misdirection in the transmission of the OE test files, which were sent to Stedi instead of the intended USP carrier. This was due to the use of a webscript that directed the files to the wrong destination.",
    "steps_taken": "The team used a webscript to generate the OE test files. The script involved fetching the CompanyCarrierLineInfo and generating the files using the StediDataAggregator and EbnCompanyFileGenerator. After realizing the files were sent to the wrong destination, the files were re-sent to the correct USP carrier.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, BaseCompanyCarrierLineInfo, StediPartnerCompanyGroupingPayloadData, StediDataAggregator, SubscriberLineInfo, StediRequestMetaData, StediGroupingConfigData, VendorDtoBuilderContext, StediDte, StediDtoBuilderHelpers]"
  },
  "BENINTEG-2940": {
    "key": "BENINTEG-2940",
    "issue": "The system needs to be prepared for re-onboarding using USP instead of PRIME for several companies.",
    "issue_summary": "The issue involves migrating the onboarding process from PRIME to USP for specific companies, requiring system preparation.",
    "rca": "The root cause analysis indicates that a script was used as a support tool to facilitate the migration process.",
    "steps_taken": "The engineering team completed the necessary changes for the migration, as confirmed by a comment stating the task is done and requesting verification if further action is needed.",
    "data_models": "[]"
  },
  "BENINTEG-2939": {
    "key": "BENINTEG-2939",
    "issue": "The team needed to generate and send a PROD OE file for the 12/1 renewal for specific groups to the carrier.",
    "issue_summary": "The issue was the need to generate and send a PROD OE file for the 12/1 renewal for specific groups to the carrier, which was resolved by running a webscript.",
    "rca": "The root cause was identified as the need to run a webscript to generate the required PROD OE file for the specified groups.",
    "steps_taken": "The steps taken included clarifying the requirement to send the OE file directly to the carrier, running the webscript to generate the files, and then sending the generated OE files to the carrier. The links to the executed files were provided in the comments.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2913": {
    "key": "BENINTEG-2913",
    "issue": "Unable to generate the Open Enrollment (OE) file for Catalyst Clinical Research, LLC using the new functionality for retool.",
    "issue_summary": "The issue was that the Open Enrollment file could not be generated for Catalyst Clinical Research, LLC using the new retool functionality. The client was newly set up in Rippling, and there was no file setup for this client.",
    "rca": "The root cause analysis indicated that the system was working as expected, and there was a wrong expectation. It was noted that no file transmissions were made before the successful test, and it might have been a one-off case.",
    "steps_taken": "A test file was successfully generated using the retool, and it was confirmed that the OE files would start generating without issues 40 days before the effective date. The issue was resolved as the file could be generated successfully.",
    "data_models": "[]"
  },
  "BENINTEG-2905": {
    "key": "BENINTEG-2905",
    "issue": "Rippling EE submitted a QLE but was only offered coverages until 10/31/2024. Additionally, an address change by the EE led to the creation of an INIT QLE that needed deletion.",
    "issue_summary": "Rippling EE's QLE coverage was limited due to an incorrect termination event caused by an unintended address change during feature testing.",
    "rca": "There was incorrect data due to the EE making changes in production, which caused a termination event to be generated. The BenAdmin team helped to clean up and revert the termination events. Amendments were sent for Noyo, and data was verified for EBN.",
    "steps_taken": "1. Invalidated the incorrect termination event using the script:\n\n```python\nterm = TerminationEvent.get_or_none(id=\"671a7b10607863623ddaca75\")\nslis = SubscriberLineInfo.objects(company=term.company, enrollmentEvent=term, status__ne=\"INIT\")\nfor sli in slis:\n    sli.invalidate()\n    sli.trimOverlappingSubscriberLineInfoTimelines()\n```\n\n2. Refreshed SLIs for the correct QLE:\n\n```python\nevent = EnrollmentEvent.objects.get(id=\"6727c6e28b593229d5db33e7\")\nevent.on_plan_change_for_all_lines()\nslis = SubscriberLineInfo.objects(role=event.role, company=event.company, enrollmentEvent=event)\nreturn slis\n```\n\n3. Deleted the INIT QLE:\n\n```python\nevent = EnrollmentEvent.objects.get(id=\"6721c75311b91dac157a9269\")\nevent.delete()\nreturn event\n```\n\n4. Communicated changes to carriers, sent amendment for Guardian via Noyo, and confirmed data sent to EBN.",
    "data_models": "[EnrollmentEvent, SubscriberLineInfo, TerminationEvent]"
  },
  "BENINTEG-2903": {
    "key": "BENINTEG-2903",
    "issue": "The issue involves handling changes in carrier objects at renewal with OneKonnect, specifically when a carrier object changes state (e.g., from MetLife - CA to MetLife - TX), which could impact the file feeds due to changes in the vendor ID (carrier ID).",
    "issue_summary": "The problem is related to how OneKonnect handles carrier object changes at renewal, particularly when the carrier's state changes, potentially affecting the vendor ID used in file feeds.",
    "rca": "The root cause is identified as a product enhancement requirement. When a carrier changes state, it is treated as a new carrier, necessitating a new connection request. OneKonnect was blocking the second connection due to the same carrier name, suggesting the inclusion of the carrier state in the name to differentiate.",
    "steps_taken": "The team decided to treat a carrier state change as a new connection to EBN instead of a renewal. They confirmed with OneKonnect that the use-case would be sent as a new connection. The fix involved including the carrier state in the carrier name to avoid blocking by OneKonnect. The fix was merged and tested, and the issue was considered resolved.",
    "data_models": "[]"
  },
  "BENINTEG-2900": {
    "key": "BENINTEG-2900",
    "issue": "The end date of the role 63521133ae0023dfbf40726a was updated from 2024-09-09 to 2024-11-22, requiring a 'Termination (end date correction)' event to be created and insurance timelines to be updated accordingly.",
    "issue_summary": "The end date of an employee's role was updated, necessitating the creation of a 'Termination (end date correction)' event and updates to insurance timelines. The issue involved ensuring that the updated end date was communicated to the carrier via Noyo.",
    "rca": "The root cause was related to the support tool used, where the end date was validated and sent to Noyo for processing.",
    "steps_taken": "1. Verified that a 'Termination (end date correction)' event was created for the prior event. 2. Reviewed and confirmed that insurance timelines were updated by the event. 3. Reassigned the ticket to the Marketplace - Integrations team to update the end date with carriers. 4. Confirmed that there was no COBRA coverage, so no action was needed from the Compliance team.",
    "data_models": "[]"
  },
  "BENINTEG-2899": {
    "key": "BENINTEG-2899",
    "issue": "The automated schedules for production files for a list of clients need to be stopped before specific dates due to the clients having already started their Open Enrollment (OE). There is also a need to confirm if the forms will automatically restart once the production schedules are stopped.",
    "issue_summary": "Automated production file schedules for certain clients need to be halted due to the commencement of their Open Enrollment, and confirmation is needed on whether the forms will automatically restart.",
    "rca": "The issue was addressed using a webscript to stop transmissions. The root cause was related to the need to halt automated file transmissions for clients who have started their Open Enrollment.",
    "steps_taken": "The automated production file transmission for the specified companies was stopped. A script was used to filter VendorPartnerCompany objects and change their state to 'SUSPENDED'. The code snippet used was:\n\n```python\nvpcs = VendorPartnerCompany.objects.filter(company__in=companies)\n\nfor company in companies:\n  vs = VendorPartnerCompany.objects.filter(company=company)\n  if not vs:\n    print(\"no VPCs\")\n    continue\n  for v in vs:\n    v.state = \"SUSPENDED\"\n    v.save()\n    print(f\"moved {v.id} to suspended from {v.state}\")\n\nreturn \"DONE\"\n```",
    "data_models": "[VendorPartnerCompany]"
  },
  "BENINTEG-2898": {
    "key": "BENINTEG-2898",
    "issue": "The team needs to stop the automated schedules for production files for a list of clients before specific deadlines due to the clients starting their Open Enrollment (OE). There is also a need to confirm if the forms will automatically restart once the production schedules are stopped.",
    "issue_summary": "Automated schedules for production files need to be stopped for specific clients due to the start of their Open Enrollment. Confirmation is needed on whether forms will automatically restart after stopping the schedules.",
    "rca": "The issue was deferred, indicating that the action to stop the production schedules was postponed or not immediately addressed.",
    "steps_taken": "The ticket was triaged and assigned to ensure it was picked up for action. It was kept in Triage after being linked to another ticket. The ticket was later closed to avoid impacting the Engineering Team's SLA reporting, with a suggestion to open a new ticket for further actions.",
    "data_models": "[]"
  },
  "BENINTEG-2892": {
    "key": "BENINTEG-2892",
    "issue": "Forms were not being sent to the dental carrier Beam during a New Hire Event for the company Boon, affecting employee Jim Medenis.",
    "issue_summary": "Forms not sent to Beam due to duplicate NoyoCompanyPlanInfo entries causing errors during the New Hire Event.",
    "rca": "The root cause of the issue was identified as duplicate entries in the NoyoCompanyPlanInfo, which led to multiple objects being returned when only one was expected. This caused errors in the form transmission process.",
    "steps_taken": "The issue was resolved by identifying the correct Noyo plan ID through the Noyo API and deleting the incorrect MongoDB object. This action was expected to auto-fix the issue for any other impacted employees in the next ETA run.",
    "data_models": "[NoyoCompanyPlanInfo]"
  },
  "BENINTEG-2891": {
    "key": "BENINTEG-2891",
    "issue": "High volume of escalations due to missed enrollments caused by the OE hold logic in Noyo Snapshot API, leading to delayed processing of multiple changes/events for employees.",
    "issue_summary": "The issue involves missed enrollments due to the OE hold logic in the Noyo Snapshot API, which delays processing of multiple changes/events for employees, causing confusion and incorrect processing of enrollments and terminations.",
    "rca": "The root cause was identified as the OE hold logic implemented in July 2021, which was causing delays in processing multiple changes/events for employees. This logic was intended to prevent denials by Noyo but resulted in holding transactions until the OE was ready to be transmitted.",
    "steps_taken": "1. Investigated the logic for OE snapshots and identified the hold logic as the issue.\n2. Removed the 2021 hold logic as it was causing problems.\n3. Made a code change to include multiple event blocks and deployed it behind a feature flag.\n4. Enabled the flag for two companies and sent amendment snapshots for impacted employees.\n5. Requested feedback from Noyo and received the green light to enable the change for all companies.\n6. Enabled the coverage-specific event blocks change for all companies.",
    "data_models": "[PendingAction, PendingActionGroup, EnrollmentEvent, Company]"
  },
  "BENINTEG-2889": {
    "key": "BENINTEG-2889",
    "issue": "Anthem groups on Noyo are experiencing API blockages due to setup tasks that remain open, preventing enrollments from passing through the API. This issue is urgent and is causing the send method to fall back to forms.",
    "issue_summary": "The issue is caused by a high volume of Anthem setup tasks for Noyo that remain open due to incorrect plan mappings, which block the API and force the system to revert to using forms.",
    "rca": "The root cause of the issue is the existing logic of rolling forward Noyo plan mappings from the previous year, which does not apply to newly added carriers like Anthem and UHC. This logic was updated to exclude these carriers, and existing plan mappings were cleaned up.",
    "steps_taken": "1. Investigated the issue and identified multiple plan mappings causing tasks to remain open.\n2. Deleted incorrect mappings manually and updated the logic to exclude Anthem and UHC from the roll-forward process.\n3. Ran scripts to identify and resolve bad mappings and open setup tasks.\n4. Manually added suffix IDs to resolve remaining open tasks.\n5. Confirmed that all blocking tasks were resolved, except for a separate issue with Myna Snacks, which requires a different operational process.",
    "data_models": "[NoyoCompanyPlanInfo, InsuranceCompanyPlanInfo, BaseNoyoSetupTask]"
  },
  "BENINTEG-2888": {
    "key": "BENINTEG-2888",
    "issue": "Aetna is showing certain employees as active, but Rippling is not sending enrollments to them. The forms are marked as 'Not Ready for Submission', and there is no visibility into what was sent to Ideon. Aetna requires termination dates to process manually.",
    "issue_summary": "Production errors with Aetna where employees are shown as active but enrollments are not being sent. Forms are marked 'Not Ready for Submission', and there is no visibility into the data sent to Ideon.",
    "rca": "The issue is related to system behavior where the forms are not ready for submission due to a logic that requires a 5-day wait after the company event effective date. Additionally, the data was migrated to Noyo, and historical data from Ideon is not visible.",
    "steps_taken": "The team investigated the logic for form submission readiness and confirmed that forms become ready 5 days after the company event effective date. It was found that the data was migrated to Noyo, and effective end dates were being sent in Noyo snapshots. A script was used to retrieve end dates for employees, and the data was updated in a Google Sheet for Aetna to process manually. The script iterated over employee data to find matching records and retrieve expiration dates from the SubscriberLineInfo model.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, InsuranceCompanyPlanInfo, SubscriberLineInfo]"
  },
  "BENINTEG-2887": {
    "key": "BENINTEG-2887",
    "issue": "Noyo setup tasks for Contra.Work, Inc. are reopening after being confirmed as successfully mapped and marked as resolved.",
    "issue_summary": "Noyo setup tasks for Contra.Work, Inc. are reopening despite being resolved, indicating a potential issue with task management or state persistence.",
    "rca": "The issue was related to a bug in the handling of Noyo setup tasks, causing them to reopen even after being marked as resolved.",
    "steps_taken": "The issue was fixed as part of addressing the Noyo setup tasks reopening problem. No specific code snippets or detailed steps were provided in the comments.",
    "data_models": "[]"
  },
  "BENINTEG-2885": {
    "key": "BENINTEG-2885",
    "issue": "Confirm Enrollment form is not generated for a task for carrier Beam.",
    "issue_summary": "The confirm enrollment task appeared on the dashboard without any enrollment forms attached. The submit method on the task shows Noyo, and it was expected that forms would be generated.",
    "rca": "The system was working as expected. There were no changes in the Beam coverage for the QLE, so no forms were generated. The employee's details were communicated through the Noyo snapshot API.",
    "steps_taken": "The issue was investigated, and it was found that no changes in coverage occurred, hence no forms were generated. The Confirm enrollment task was closed, and the ticket was subsequently closed.",
    "data_models": "[]"
  },
  "BENINTEG-2883": {
    "key": "BENINTEG-2883",
    "issue": "Zaden Technologies, Inc. was incorrectly registered under a PEO, and the PEO Noyo feeds need to be expired as the group never joined the PEO.",
    "issue_summary": "Zaden Technologies, Inc. was mistakenly set up with PEO Noyo feeds, but the group never joined the PEO, leading to a need for feed expiration.",
    "rca": "The behavior was as expected according to the system's business logic, but the group was incorrectly registered under a PEO, which was an onboarding issue.",
    "steps_taken": "The issue was discussed among team members to understand the requirements for expiring the PEO feeds. It was identified that the group should not have any PEO feeds or coverage, and terminations should be pushed as if they were never effective. The ticket was eventually closed as a duplicate issue was being tracked in another ticket (BENINTEG-3082).",
    "data_models": "[]"
  },
  "BENINTEG-2882": {
    "key": "BENINTEG-2882",
    "issue": "The issue was the need to generate and send a 12/01 Open Enrollment (OE) file for several groups to the USP carrier. However, some files were not sent to the carrier and were instead displayed on the internal SFTP, causing a delay in the process.",
    "issue_summary": "The 12/01 OE file for several groups was not sent to the USP carrier as expected, with some files being displayed on the internal SFTP instead.",
    "rca": "The root cause of the issue was related to the use of a webscript run, which resulted in the files being displayed on the internal SFTP instead of being sent to the carrier.",
    "steps_taken": "The files were manually sent to the USP carrier after the initial oversight. Links to the file executions on Stedi were provided to confirm the actions taken. Additionally, it was noted that the 'Testing' request type prevented scheduling of the weekly file, and a request was made to update or send a new file for ingestion. Eventually, it was confirmed that Retool was working, and no further action was needed from the IT team.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2881": {
    "key": "BENINTEG-2881",
    "issue": "Several employees reported missed enrollments for their Guardian coverage, suspected to be due to delays in processing Noyo enrollment transactions.",
    "issue_summary": "Employees faced missed enrollments for Guardian coverage due to suspected delays in Noyo transaction processing. The issue was escalated to determine if there were unexpected delays in sending enrollment data from Rippling to Noyo.",
    "rca": "The root cause was identified as a mismatch in Noyo plan mapping information. The eligibility was initially set incorrectly and later updated via a webscript, which caused delays in processing the enrollment transactions.",
    "steps_taken": "The issue was investigated by checking the Pending Action logs, which revealed the mismatch in Noyo plan mapping. A webscript was run to update the eligibility from 'employee' to 'all', allowing the snapshots to be processed. Further verification was done to ensure that recent enrollments were being sent to Noyo in a timely manner.",
    "data_models": "[EnrollmentEvent, NoyoCompanyPlanInfo]"
  },
  "BENINTEG-2880": {
    "key": "BENINTEG-2880",
    "issue": "Wonolo has multiple carrier objects for Kaiser, but only one was successfully ingested to OneKonnect, causing issues with handling multiple carrier objects with the same carrier name.",
    "issue_summary": "Wonolo has multiple carrier objects for Kaiser, and OneKonnect is not set up to handle multiple carrier objects with the same carrier name, leading to ingestion failures.",
    "rca": "The issue is categorized as a product enhancement that needs prioritization. The current OneKonnect routing does not support handling multiple carrier objects with the same carrier name, which is necessary for proper ingestion.",
    "steps_taken": "A product enhancement ticket was created to address the issue: https://rippling.atlassian.net/browse/BENINTEG-3106. Discussions were held to determine if the groups could continue on Ideon, and it was suggested to create a product enhancement ticket to track the issue.",
    "data_models": "[]"
  },
  "BENINTEG-2879": {
    "key": "BENINTEG-2879",
    "issue": "Incorrect salary details were being passed on the Metlife file feed for WELINK COMMUNICATIONS INC, causing incorrect billing and election amounts for members.",
    "issue_summary": "Salary changes made after 01/01/2024 were incorrectly included in the Metlife feed, despite the group's coverage being set to have salary details determined at renewal.",
    "rca": "The issue was due to the absence of salary redetermination logic for Vericred, which was implemented for Noyo and Ebn but not for Vericred. This led to incorrect salary details being transmitted.",
    "steps_taken": "The team identified that the salary redetermination logic was missing for Vericred. A pull request was raised to implement the necessary changes for Vericred, similar to those for Noyo and Ebn. The PR was merged, and the updated salary details were set to be pushed in the next feed. However, further issues were identified, and a subsequent fix was implemented and merged. Despite these efforts, the incorrect amounts continued to be transmitted, but Ideon managed to manually correct the coverage with the carrier.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-2875": {
    "key": "BENINTEG-2875",
    "issue": "Missed enrollment for employee Angie Orozco due to incorrect dental coverage mapping with Guardian, causing a request error.",
    "issue_summary": "The issue involves a missed enrollment for employee Angie Orozco due to a mapping error where the dental coverage class does not exist on the specified class, leading to a request error with Guardian.",
    "rca": "The root cause of the issue was identified as the state code being fetched from the Subscriber's address instead of the InsuranceCompanyCarrierLineInfo (CCLI) address, leading to an incorrect class identifier being sent in the request.",
    "steps_taken": "The investigation revealed that the state code was incorrectly fetched from the Subscriber's address. A code fix was implemented to ensure the correct state code is used. The relevant code snippet is:\n\n```python\ndef get_benefit_class_identifier_for_peo(\n    role: RoleWithCompany, cclis: list[InsuranceCompanyCarrierLineInfo]\n) -> Optional[str]:\n    if not cclis:\n        raise ValueError(\"CCLIs cannot be empty\")\n\n    ccli = cclis[0]\n    subscriber = Subscriber.objects.get(role=role)\n    address = subscriber.address\n    state_code = address.state if address else None\n```\n\nA pull request was raised and merged to fix the issue, and a new snapshot was generated and submitted to Noyo.",
    "data_models": "[PendingAction, RoleWithCompany, InsuranceCompanyCarrierLineInfo, Subscriber]"
  },
  "BENINTEG-2874": {
    "key": "BENINTEG-2874",
    "issue": "An employee (EE) was still active on COBRA coverage with Aetna PEO, despite having a termination date that should have ended their regular coverage. This discrepancy needed to be resolved as it was related to a C-suite request.",
    "issue_summary": "An employee was incorrectly showing active COBRA coverage due to a potential issue with the transmission of termination data to Aetna PEO.",
    "rca": "The root cause was identified as a potential issue with the transmission of termination data to Aetna PEO. The carrier connections dashboard was used to investigate the issue.",
    "steps_taken": "The team was asked to provide the Ideon payload information for the member in question for August and September. The payloads for various qualifying life events, including COBRA and termination of employment, were reviewed. It was found that there were no transmissions in September, but relevant transmissions were found in August and October. The information was provided to the requester, and the ticket was closed after all requested information was shared.",
    "data_models": "[qualifying_life_event]"
  },
  "BENINTEG-2871": {
    "key": "BENINTEG-2871",
    "issue": "Member termination was not sent on the file feed for Dunham Company, resulting in the group being overcharged for the member's coverage.",
    "issue_summary": "The termination of a member, David Williams, was not sent on the file feed due to unsubmitted prior forms, causing overcharges for the member's coverage.",
    "rca": "The termination was not sent because the employee had unsubmitted prior forms from their coverage period of 1/1/2022 - 12/31/2022. The elections for this period were made in December 2021, and the exact reason for the unsubmitted forms is unclear due to the time elapsed.",
    "steps_taken": "The issue was identified as being due to unsubmitted prior forms. Once the group moved to Noyo, the employee was terminated, resolving the issue.",
    "data_models": "[]"
  },
  "BENINTEG-2870": {
    "key": "BENINTEG-2870",
    "issue": "The system is transmitting incorrect earnings effective dates for new hires, causing carriers to enroll members with delayed coverage effective dates.",
    "issue_summary": "The system is sending the earnings effective date as the last date the salary was updated before today, instead of aligning it with the new hire start date, leading to incorrect coverage effective dates.",
    "rca": "The logic in the system was working as expected, but the business logic/system behavior required the earnings effective date to match the new hire start date, not the last salary update date.",
    "steps_taken": "The team reviewed the logic and updated it to ensure that the earnings effective date aligns with the new hire start date. However, retroactive updates to already sent dates are not possible, so manual updates by Insurance Ops were suggested. The updated logic will apply to future transmissions.",
    "data_models": "[Job]"
  },
  "BENINTEG-2869": {
    "key": "BENINTEG-2869",
    "issue": "There is a typo in the QLE form for Aetna and Guardian where the event date is incorrectly listed as 10/16/2024 instead of the correct date, 10/15/2024, which is Elena's birth date. This requires the engineering team to resend the forms with the correct date of birth for the dependent.",
    "issue_summary": "The QLE form for Aetna and Guardian has an incorrect event date listed as 10/16/2024 instead of 10/15/2024, causing a need for form resubmission with the correct date.",
    "rca": "The root cause of the issue is identified as a typo in the QLE form where the event date was incorrectly listed. The issue can be resolved using the Support tool and partner account, and does not require engineering intervention.",
    "steps_taken": "The event date was updated to the correct date, 10/15/2024, and the forms were resent through the existing communication type, Noyo. It was advised that for any future event date or form resending requests, a Support tool request should be created.",
    "data_models": "[]"
  },
  "BENINTEG-2868": {
    "key": "BENINTEG-2868",
    "issue": "Order to OneKonnect failed due to group number exceeding 50 characters. After removing letter prefixes, a new error occurred: 'InsuranceCompanyCarrierLineInfo' object has no attribute 'line_type'.",
    "issue_summary": "Order to OneKonnect failed initially due to group number length. After adjusting the group number, a new error related to 'InsuranceCompanyCarrierLineInfo' object lacking 'line_type' attribute was encountered.",
    "rca": "The issue was related to a missing 'line_type' attribute in the 'InsuranceCompanyCarrierLineInfo' object. The problem was not reproducible and worked on retry.",
    "steps_taken": "The issue was resolved by retrying the order submission using the retool, which succeeded without further intervention.",
    "data_models": "[InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-2867": {
    "key": "BENINTEG-2867",
    "issue": "The automated schedules for production files need to be stopped for a list of clients before specific deadlines due to the clients having already started their Open Enrollment (OE).",
    "issue_summary": "Automated schedules for production files for certain clients need to be halted as these clients have commenced their Open Enrollment, requiring immediate action to prevent further transmissions.",
    "rca": "The issue was addressed using a webscript to stop transmissions for the specified clients. The script was used to change the state of VendorPartnerCompany objects to 'INGESTING' and delete any existing CustomStediCommunicationDetail for the companies.",
    "steps_taken": "A script was executed to iterate over the list of company IDs. For each company, the script fetched the company details, updated the state of VendorPartnerCompany objects to 'INGESTING', and deleted any CustomStediCommunicationDetail associated with the company. The script handled exceptions and printed any errors encountered.",
    "data_models": "[Company, VendorPartnerCompany, CustomStediCommunicationDetail]"
  },
  "BENINTEG-2866": {
    "key": "BENINTEG-2866",
    "issue": "The carrier packet generated for Coram AI's Kaiser NGE was incomplete, missing employee forms and having an incomplete employer application.",
    "issue_summary": "The system generated an incomplete carrier packet for Coram AI's Kaiser NGE, treating it as a renewal instead of a new group enrollment, leading to missing documents.",
    "rca": "The system incorrectly treated the new group enrollment (NGE) as a renewal, which resulted in the generation of an incomplete carrier packet missing necessary documents.",
    "steps_taken": "The issue was identified and the system resubmitted the carrier packet, which then contained all the missing documents. The problem was resolved by ensuring the system correctly identified the event as a new group enrollment.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2864": {
    "key": "BENINTEG-2864",
    "issue": "Employee enrollment forms were missing from the carrier packet for Anthem GA, preventing the group's enrollment application from being submitted to the carrier.",
    "issue_summary": "The carrier packet for Anthem GA was missing employee enrollment forms due to a system configuration that excluded these forms for certain carriers, including Anthem GA.",
    "rca": "There was a configuration in the system that did not include employee forms for some carriers, including Anthem GA. This was due to a change made in a previous ticket (INSURANCE-49166) which was intended for a different carrier and situation. The configuration was expected to include forms for Anthem GA, but it did not.",
    "steps_taken": "The configuration was updated to include employee forms for Anthem GA. A pull request was made to enable the fix, and after deployment, the forms were regenerated to include the missing employee forms. The issue was resolved and the ticket was closed.",
    "data_models": "[]"
  },
  "BENINTEG-2861": {
    "key": "BENINTEG-2861",
    "issue": "The issue was that the OE (Open Enrollment) file needed to be generated for the Twelve Benefit Corporation for the new plan year starting 01/01/2025.",
    "issue_summary": "The OE file generation for the Twelve Benefit Corporation was required for testing the new plan year, but there was a blocker due to the business logic not supporting this initially.",
    "rca": "The root cause of the issue was a business logic change, as the retool was enhanced to generate the OE file, which was not previously supported.",
    "steps_taken": "The issue was resolved by enhancing the retool to support the generation of the OE file, after which the ticket was closed.",
    "data_models": "[]"
  },
  "BENINTEG-2857": {
    "key": "BENINTEG-2857",
    "issue": "The automated schedules for production files needed to be stopped for a list of clients before specific deadlines due to their Open Enrollment (OE) period starting. There was a concern about whether the forms would automatically restart after stopping the production schedules.",
    "issue_summary": "Automated production file schedules needed to be halted for specific clients due to their Open Enrollment period, with a need to confirm if forms would restart automatically.",
    "rca": "The root cause was identified as the need to use a webscript to stop transmissions for the specified clients during their Open Enrollment period.",
    "steps_taken": "The automated production file transmission for the specified companies was stopped. A Python script was used to filter the VendorPartnerCompany objects for the specified companies and change their state to 'SUSPENDED'. The script iterated over the companies, checked for VendorPartnerCompany objects, and updated their state, printing a confirmation message for each change.\n\n```python\nvpcs = VendorPartnerCompany.objects.filter(company__in=companies)\n\nfor company in companies:\n  vs = VendorPartnerCompany.objects.filter(company=company)\n  if not vs:\n    print(\"no VPCs\")\n    continue\n  for v in vs:\n    v.state = \"SUSPENDED\"\n    v.save()\n    print(f\"moved {v.id} to suspended from {v.state}\")\n\nreturn \"DONE\"\n```",
    "data_models": "[VendorPartnerCompany]"
  },
  "BENINTEG-2852": {
    "key": "BENINTEG-2852",
    "issue": "Zippin employees are unable to use the SSO button to automatically log into Human Interest; instead, they are redirected to the Human Interest site and must log in manually.",
    "issue_summary": "Zippin employees cannot SSO into Human Interest due to an issue managed by Human Interest.",
    "rca": "The root cause of the issue is that Human Interest manages the SSO login process, and any issues with it need to be addressed by them.",
    "steps_taken": "The issue was identified as being managed by Human Interest, and it was suggested that they be contacted for assistance. The ticket was closed as Not For Execution (NFE) on Rippling's part.",
    "data_models": "[]"
  },
  "BENINTEG-2851": {
    "key": "BENINTEG-2851",
    "issue": "Enrollment records for employees Alyssa Flowers, Kamaldeep Kaur, and Nikita Nigam's spouse were not being pulled over on any file feeds, causing issues with their enrollment data not being transmitted to the carrier.",
    "issue_summary": "Enrollment records for certain employees were missing from the file feeds, preventing their enrollment data from being sent to the carrier. This was due to a known issue that had been previously discussed in team meetings.",
    "rca": "Engineering is already aware of this type of issue and has addressed it in a team meeting with management. The issue falls under the category of special case handling, indicating that it might be related to specific conditions or exceptions not being handled correctly in the system.",
    "steps_taken": "The issue was acknowledged by the engineering team, and it was noted that the problem had been discussed in a team meeting. The ticket was reviewed to determine if additional research was needed, and it was suggested that if further investigation was required, the ticket would be taken out of triage for assignment.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2850": {
    "key": "BENINTEG-2850",
    "issue": "Calson Management employees are experiencing errors with their Unum connection, specifically when sending Noyo amendments, resulting in a 'can only concatenate str (not \"NoneType\") to str' error. This issue is causing delays in processing employee transactions.",
    "issue_summary": "Calson Management employees are facing errors with Unum connection due to incomplete setup and a bug in division code auto-resolution, leading to failed Noyo amendments.",
    "rca": "The root cause of the issue was identified as a bug in the division code auto-resolution, which was not functioning correctly. This caused the system to attempt to concatenate a string with a NoneType, resulting in the error. Additionally, the setup for Noyo amendments was incomplete, which contributed to the issue.",
    "steps_taken": "The team identified the bug in the division code auto-resolution and provided a manual workaround by clicking the resolve button. A fix was deployed over the weekend to prevent the issue from recurring. Additionally, the team suggested disabling Noyo amendments until the setup is complete and enabling future enrollments to be sent via the Noyo amendment tool.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-2849": {
    "key": "BENINTEG-2849",
    "issue": "Calson Management's employee termination transaction for Life coverage did not appear to have been sent via Noyo, despite being processed in Rippling.",
    "issue_summary": "The employee termination transaction for Calson Management's Life coverage was processed in Rippling but not sent to Noyo due to ongoing mapping issues with the Unum connection.",
    "rca": "The root cause of the issue was a logic in the code that falls back to sending forms via email or fax if there are outstanding Noyo setup tasks for too long. This fallback mechanism was triggered, preventing the transaction from being sent to Noyo.",
    "steps_taken": "The issue was identified as being related to a fallback logic in the code that sends forms via email or fax if Noyo setup tasks are outstanding for too long. The status of the pending action was checked and found to be PENDING, indicating emails were sent to the carrier. The team was informed about the fallback logic and asked if further action was needed.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-2848": {
    "key": "BENINTEG-2848",
    "issue": "The admin of Kairos Power LLC received 40-50 emails regarding changes made by various employees in their Unum coverage, which should not have been communicated via email.",
    "issue_summary": "The admin received multiple emails from the insurance broker email regarding employee insurance updates, which should not have happened as there is an API connection with Unum.",
    "rca": "The issue occurred because the communication type fell back to email due to Noyo setup tasks being older than 4 days. This fallback mechanism is in place when certain setup tasks are not completed by the Insurance operations team.",
    "steps_taken": "The team identified that the fallback to email communication was due to incomplete setup tasks by the Insurance operations team. Efforts were made to complete these tasks to prevent further email communications.",
    "data_models": "No specific data models were mentioned in the ticket for debugging or fixing the issue."
  },
  "BENINTEG-2847": {
    "key": "BENINTEG-2847",
    "issue": "The issue involves sending an Open Enrollment (OE) test file to the carrier UHC USP for two specific groups, UseMagik, Inc. and CUDDLY, while explicitly not sending it for the group Footprint.",
    "issue_summary": "The task was to send OE test files to UHC USP for UseMagik, Inc. and CUDDLY, but not for Footprint. The issue was resolved by executing the necessary web scripts to send the files.",
    "rca": "The root cause analysis indicates that the issue was resolved by running a web script to send the OE test files to the carrier.",
    "steps_taken": "The steps taken to resolve the issue involved executing web scripts to send the OE test files to the carrier. The links to the executed files are provided in the comments.",
    "data_models": "[]"
  },
  "BENINTEG-2846": {
    "key": "BENINTEG-2846",
    "issue": "The team was requested to send an Open Enrollment (OE) test file for two out of three specified groups to the carrier UHC USP. The groups involved were Funraise Inc. and Unearthly Materials, while Keyri was already approved for production.",
    "issue_summary": "The issue involved sending OE test files for Funraise Inc. and Unearthly Materials to the carrier UHC USP, as requested by the team. Keyri was already approved for production, so no test file was needed for it.",
    "rca": "The root cause analysis indicates that the issue was related to the use of a support tool, specifically a webscript run, to send the OE test files to the carrier.",
    "steps_taken": "The steps taken to resolve the issue included sending the OE test files to the carrier's system for Funraise Inc. and Unearthly Materials. The links to the sent files were provided in the comments, confirming the successful transmission of the files.",
    "data_models": "[]"
  },
  "BENINTEG-2845": {
    "key": "BENINTEG-2845",
    "issue": "The team needed assistance to generate an Open Enrollment (OE) test file for the group associated with Cigna Ace and Nursa, as part of internal testing before sending it to the carrier.",
    "issue_summary": "The issue was the inability to generate an OE test file using the retool for a UHC USP migration, requiring manual generation of the file for internal testing.",
    "rca": "The root cause was identified as the limitation of the retool, which could not be used to generate the required type of OE test file, necessitating the use of a webscript.",
    "steps_taken": "The issue was resolved by manually generating the test file using a webscript, as indicated by the final comment providing a link to the generated file on Stedi.",
    "data_models": "[]"
  },
  "BENINTEG-2842": {
    "key": "BENINTEG-2842",
    "issue": "Tasks for reviewing forms were not being generated or were delayed, impacting clients, employees, carriers, and NFP, causing disruptions including billing issues.",
    "issue_summary": "Tasks for reviewing forms were not generated or delayed for Total Vet Care and K4 Connect, causing disruptions. The issue was due to infrastructure delays and missing Group IDs.",
    "rca": "ETA delays due to infrastructure being choked by unoptimized high-priority ETAs caused delays in task creation. Additionally, missing Group IDs for coverage led to failures in task execution.",
    "steps_taken": "The infrastructure issue was fixed to prevent further delays. For Total Vet, the Group ID was added, and pending actions were processed. For K4 Connect, it was clarified that emails are not sent for groups not managed by Rippling, and manual enrollment was required.",
    "data_models": "[PendingAction, CompanyInsuranceInfo, NoyoCompanyCarrier]"
  },
  "BENINTEG-2837": {
    "key": "BENINTEG-2837",
    "issue": "Noyo did not receive transactions for multiple Rippling employees, resulting in these employees not being enrolled in coverage as expected. Additionally, there was an issue with filtering by employee name in the Vendor Requests section, causing a 'sad cloud' error.",
    "issue_summary": "Noyo did not receive transactions for several Rippling employees, leading to enrollment issues. The root cause was related to misconfigured plans on Noyo's end and missing routing for BOB companies. Additionally, there was a filtering error in the Vendor Requests section.",
    "rca": "The root cause was a combination of issues: misconfigured plans on Noyo's end that were set only for 'employee' instead of all dependents, missing routing for BOB companies which led to transactions being sent via email instead of through Noyo, and missing SSNs for some employees. Additionally, there were issues with invalidated SLIs and incorrect plan vs. benefit class mapping.",
    "steps_taken": "The transactions were resent to Noyo after correcting the routing setup for BOB companies. The misconfigured plans on Noyo's end were flagged and corrected. Missing SSNs were added for affected employees. An audit was conducted to ensure all eligible members had their snapshots sent. The filtering error in the Vendor Requests section was investigated, and blocked transactions were identified and resolved. Code snippet used: ```return BlockedTransaction.objects.filter(company='585c512df20db5063607e146', state__ne='RESOLVED').values_list(\"role_name\", \"error_message\", \"createdAt\", \"updatedAt\")```",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo, SubscriberLineInfo, NoyoMemberSnapshot, BlockedTransaction]"
  },
  "BENINTEG-2836": {
    "key": "BENINTEG-2836",
    "issue": "The primary email for the company was not updating after the admin was changed, resulting in forms having incorrect email information.",
    "issue_summary": "The benefits signatory was changed, but the primary email was not updated for the group, causing forms to display the incorrect email address.",
    "rca": "The root cause was identified as the email being taken from the company's primary email address instead of the signatory's email address. The logic was incorrectly implemented to fetch the company's primary email for forms instead of the signatory's email.",
    "steps_taken": "The logic was updated to ensure that the new forms reflect the signatory's email instead of the company's primary email. This change was confirmed and communicated in the comments.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [CompanyInsuranceInfo, CompanyCarrierLineInfo]"
  },
  "BENINTEG-2835": {
    "key": "BENINTEG-2835",
    "issue": "The medical enrollment for employee Holly Angelastro was not included in the files sent to Cigna, despite being entered into the system. The issue persisted even after an off-cycle file run, where only dental and vision enrollments were included.",
    "issue_summary": "Medical enrollment for Holly Angelastro was missing from the files sent to Cigna due to a timing issue with the SubscriberLineInfo activation and potential code changes during the relevant period.",
    "rca": "The root cause was not reproducible, but it was identified that the SubscriberLineInfo (SLI) for medical was made active on 10/10, which is why the member was not pulled before 10/8. Additionally, multiple code changes during November might have affected the inclusion of members in the files.",
    "steps_taken": "Reviewed the history of the SubscriberLineInfo to confirm activation dates. Verified that other members with the same company plan were present in the coverage. Investigated potential code changes that might have caused the issue.",
    "data_models": "[SubscriberLineInfo, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-2834": {
    "key": "BENINTEG-2834",
    "issue": "Kristen Lee, a Rippling employee, had her medical claims denied from July 1 to October 1 due to apparent lack of coverage. Her coverage starting October 1 is working as expected. There was a request to add her to the employer group on July 1, but a request to void the insurance was also received on the same day.",
    "issue_summary": "Kristen Lee's medical claims were denied due to a coverage issue between July 1 and October 1. A termination task with a cancellation form was generated, possibly causing the coverage void.",
    "rca": "The issue does not appear to be a systemic problem, and engineering does not have additional data to investigate. The cancellation form was generated on August 21, but the signature date was June 6, which might have caused confusion.",
    "steps_taken": "PEO ops worked with the carrier to manually reinstate the employee. The Integrations team was tasked with investigating the generation of the termination task. It was confirmed that the data elements mapped on the new hire and cancellation forms were correct. The issue was considered a one-off event, and the Jira was closed.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2833": {
    "key": "BENINTEG-2833",
    "issue": "The team was requested to generate a test Open Enrollment (OE) file for three companies: UseMagik, Inc., CUDDLY, and Footprint, using the Stedi platform. The test file was not to be sent to the carrier.",
    "issue_summary": "The issue involved generating a test OE file for three companies on the Stedi platform. The process was blocked for the third company, Footprint, due to a configuration mismatch in the test guide settings.",
    "rca": "The root cause of the issue was identified as a configuration mismatch for the third company, Footprint. The test configuration guide was set to UHC-UNET instead of USP, causing validation failures.",
    "steps_taken": "The issue was resolved by updating the test configuration guide for the third company, Footprint, from UHC-UNET to USP. After this update, the test file was successfully generated and sent for Footprint as well.",
    "data_models": "[]"
  },
  "BENINTEG-2830": {
    "key": "BENINTEG-2830",
    "issue": "The team needed to generate a test Open Enrollment (OE) file for specific groups (Funraise, Keyri, Unearthly Materials) using the Stedi platform, but the file should not be sent to the carrier.",
    "issue_summary": "The issue involved generating a test OE file for specific groups using Stedi, without sending it to the carrier, due to a requirement for internal review.",
    "rca": "The root cause was identified as the need to run a webscript to generate a future OE file for internal testing purposes.",
    "steps_taken": "A script was used to generate the future OE file. The script involved fetching the InsuranceCompanyCarrierLineInfo object, verifying the company ID, and triggering the ingestion file with a future date. The script utilized various classes and methods such as StediDataAggregator, EbnCompanyFileGenerator, and StediDte to process and generate the required data. The generated data was then uploaded to the Stedi S3 bucket for internal review.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, StediPartnerCompanyGroupingPayloadData, StediDataAggregator, EbnCompanyFileGenerator, EbnFileGenerator, StediGroupingConfigData, VendorDtoBuilderContext, StediDte, StediDtoBuilderHelpers]"
  },
  "BENINTEG-2829": {
    "key": "BENINTEG-2829",
    "issue": "The team needed to generate and send a 12/01 Open Enrollment (OE) file for specific groups to the USP carrier.",
    "issue_summary": "The issue was the need to generate and send an Open Enrollment file for specific groups to the USP carrier using a webscript.",
    "rca": "The root cause was related to the use of a webscript to send the file to the carrier. The process required manual intervention to ensure the file was generated and sent correctly.",
    "steps_taken": "The steps taken included assigning the task to the current on-call engineer, who then used a script to generate the future OE file. The script involved fetching the InsuranceCompanyCarrierLineInfo, filtering payload configurations, and using the StediDataAggregator to create request metadata. The file was then sent to the carrier, and the results were shared via Stedi links.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, StediPartnerCompanyGroupingPayloadData, StediDataAggregator, EbnCompanyFileGenerator, EbnFileGenerator, StediGroupingConfigData, VendorDtoBuilderContext, StediDte, StediDtoBuilderHelpers]"
  },
  "BENINTEG-2822": {
    "key": "BENINTEG-2822",
    "issue": "The termination of an employee's Guardian coverage was not processed due to missing coverage volume amounts for STD and LTD in the payload sent via Noyo API, resulting in a rejection of the snapshot.",
    "issue_summary": "The issue was that the employee's termination details were not processed because the Noyo API payload lacked coverage volume amounts for STD and LTD, leading to a rejection of the snapshot.",
    "rca": "The root cause was related to a bug fix for determining whether a line is voluntary or not, which affected the population of coverage volumes in the payload.",
    "steps_taken": "The issue was resolved as part of another ticket, and a fix was rolled out behind a feature flag. The amendment was successfully sent for the employee, and the ticket was closed.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2821": {
    "key": "BENINTEG-2821",
    "issue": "Vynca updated the salary of employee Agatha Franca from 74,894 to 80,598, but the updated salary was being transmitted in the {{salaryperpayfrequency}} field instead of the {{annualsalary}} field, causing issues with salary transmission to Metlife and BCBS.",
    "issue_summary": "The salary update for employee Agatha Franca was incorrectly transmitted in the {{salaryperpayfrequency}} field instead of the {{annualsalary}} field, leading to transmission issues with Metlife and BCBS.",
    "rca": "The root cause analysis indicated that the correct data was already being sent, suggesting that the issue might have been a misunderstanding or misconfiguration in how the data was being interpreted or expected by the receiving systems.",
    "steps_taken": "The issue was resolved by ensuring that the salary data was being passed correctly. The ticket was marked as done after verification that the data was being transmitted in the correct field.",
    "data_models": "[]"
  },
  "BENINTEG-2820": {
    "key": "BENINTEG-2820",
    "issue": "Michael's COBRA coverage is effective as of October 11, 2024, but the medical forms show a status of 'UNSUBMITTED_PRIOR_FORMS', causing the dental and vision coverage to be invalidated.",
    "issue_summary": "The issue is that Michael's COBRA coverage forms were not submitted, leading to invalidation of dental and vision coverage.",
    "rca": "The root cause analysis is not provided in the ticket. However, the issue seems to be related to the forms not being submitted to the carrier, which is causing the coverage to be invalidated.",
    "steps_taken": "The engineering team needs to investigate why the forms were not submitted and resend the forms to the carrier.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2819": {
    "key": "BENINTEG-2819",
    "issue": "OE transactions are not being submitted via the Noyo file feed due to a 30-day pending logic, causing delays in processing and potential overwhelming of systems when transactions are eventually sent.",
    "issue_summary": "OE transactions for Seed Health Inc are on hold due to a 30-day pending logic, leading to concerns about processing delays and system overload when transactions are released.",
    "rca": "The root cause of the issue is the 30-day pending logic applied to OE transactions, which holds the transactions until 30 days before the effective date. This logic is not well-documented or visible to stakeholders, leading to confusion and potential operational challenges.",
    "steps_taken": "The decision was made to move the transmission date to OE end Date+1 to transmit the data to Noyo for OE elections, effectively removing the 30-day hold. This change was communicated and expected to trigger pending OE transactions to process immediately once the logic is updated.",
    "data_models": "No specific data models were mentioned in the ticket."
  },
  "BENINTEG-2817": {
    "key": "BENINTEG-2817",
    "issue": "Three employees from the group Osmind are receiving an unknown mapping error when attempting to send a snapshot for their insurance coverage.",
    "issue_summary": "The issue is that three employees from the group Osmind are facing an unknown mapping error due to multiple benefit_class options for the group, which requires specifying a different benefit_class_identifier in the carrier_config for coverage with Carrier ID: c699414d-fd1c-4de4-86f0-66dfff2276c4, line of coverage: life.",
    "rca": "There was an issue in the plan mapping or the group setup where two plans were mapped with the exact same configuration apart from the classifications. One plan was for COBRA and the other for non-COBRA, but the employees did not belong to either classification. This setup issue was causing the error.",
    "steps_taken": "The setup was reviewed and fixed by ensuring the correct mapping of carrier classification for the employees. The plan mapper was checked, and the issue with the eligible classifications was resolved, unblocking the employees.",
    "data_models": "[InsuranceCompanyPlanInfo]"
  },
  "BENINTEG-2815": {
    "key": "BENINTEG-2815",
    "issue": "Carrier requires the Billing Code to show on termination forms, but once an employee is terminated, they are no longer attached to the carrier classification, preventing the addition of this information to the forms.",
    "issue_summary": "The issue is that the termination forms do not include the required Billing Code because terminated employees are not attached to the carrier classification, which is necessary for the code to be included.",
    "rca": "The root cause of the issue is that the system design does not allow for the Billing Code to be included in termination forms once an employee is terminated, as they are no longer linked to the carrier classification. This is a product enhancement issue that requires changes to the system to allow the Billing Code to be included based on EIN rather than department.",
    "steps_taken": "The team worked with support to find a workaround but was unsuccessful. The issue was escalated to engineering to explore the possibility of adding a field to termination forms with classification based on EIN. However, due to the busy season, the team did not have the bandwidth to address this immediately, and the ticket was filed in the backlog.",
    "data_models": "[]"
  },
  "BENINTEG-2814": {
    "key": "BENINTEG-2814",
    "issue": "The automated schedules for production files need to be stopped for specific clients before their Open Enrollment (OE) dates to prevent files from being sent to Cigna and UHC.",
    "issue_summary": "Automated file schedules for certain clients need to be halted before their OE dates to avoid sending files to Cigna and UHC.",
    "rca": "The issue was resolved using a webscript to stop transmissions for the specified clients.",
    "steps_taken": "A webscript was executed to stop the transmissions. The script involved filtering VendorPartnerCompany objects, retrieving CustomStediCommunicationDetail, and updating the state of VendorPartnerCompany objects to 'INGESTING'. The CustomStediCommunicationDetail was then deleted to stop the transmissions.",
    "data_models": "[VendorPartnerCompany, CustomStediCommunicationDetail, CompanyInsuranceInfo]"
  },
  "BENINTEG-2813": {
    "key": "BENINTEG-2813",
    "issue": "Ops team is unable to access data for a group in production using the Retool application due to permission restrictions, causing weekly production file failures because of a member with a missing SSN.",
    "issue_summary": "Ops team cannot access data for a group in production using Retool due to permission restrictions, leading to weekly production file failures because of a member with a missing SSN.",
    "rca": "The issue arises because Rippling's internal employee data is not accessible via Retool or any other tooling, requiring engineering to handle such tasks from the backend.",
    "steps_taken": "Engineering manually skipped the record for the employee with the missing SSN for a week to prevent the production file from failing. They coordinated with OneKonnect to address the issue.",
    "data_models": "[]"
  },
  "BENINTEG-2812": {
    "key": "BENINTEG-2812",
    "issue": "Enrollment tasks appeared on the dashboard without any enrollment forms attached for the carrier Guardian.",
    "issue_summary": "Enrollment tasks for the carrier Guardian appeared without any attached forms, and the submit method on the tasks shows Noyo.",
    "rca": "The root cause analysis category is 'Bug Fix' with a subcategory of 'Special Case Handling'. The detailed description is not provided, but it implies a special case where forms were not generated as expected.",
    "steps_taken": "The issue was resolved by executing a script to regenerate the forms for the affected tasks. The script iterated over the InsuranceTask objects with specific IDs and called the 'regenerateForms' method with 'forceRegenerate=True'.\n\n```python\nfor it in InsuranceTask.objects.filter(id__in=[\"6723cb7447230cc1785e4eb8\",\n  \"66f8684ccbf389d5056bf946\", \"67227458a604e631e65d51d9\", \"6733d6ba6b7377d54f678772\"]):\n    it.PendingAction.pendingActionGroup.regenerateForms(forceRegenerate=True)\nreturn\n```",
    "data_models": "[InsuranceTask, PendingActionGroup]"
  },
  "BENINTEG-2811": {
    "key": "BENINTEG-2811",
    "issue": "Confirm Enrollment task generated past effective date for carrier Kaiser Permanente.",
    "issue_summary": "The confirm enrollment task appeared on the dashboard after the effective date for the carrier Kaiser Permanente. The task was submitted via Noyo, and the reason for its late appearance needed investigation.",
    "rca": "The task appeared after the effective date because the employee was terminated on 10/26 with an effective date in the past (10/1). The system is working as expected.",
    "steps_taken": "The issue was investigated, and it was confirmed that the system is functioning as expected. The task appeared due to the termination date being set in the past, which is why it showed up after the effective date. No further action was required, and the ticket was closed.",
    "data_models": "[]"
  },
  "BENINTEG-2810": {
    "key": "BENINTEG-2810",
    "issue": "The team needed to generate a test Open Enrollment (OE) file for specific USP groups for review, but faced transmission errors while pulling the OE files.",
    "issue_summary": "The issue involved generating a test OE file for specific USP groups, but there were transmission errors encountered during the process.",
    "rca": "The root cause was identified as the need to generate test files temporarily using a webscript due to transmission errors.",
    "steps_taken": "The team used a Python script to generate the OE files. The script involved fetching the company and carrier IDs, obtaining a CCLI, and running the script with specific configurations for testing and production environments. The script utilized models like `BaseCompanyCarrierLineInfo`, `StediPartnerCompanyGroupingPayloadData`, and `StediDataAggregator` to generate and send the files. The files were sent to the internal Stedi SFTP for testing and to the carrier for production.",
    "data_models": "[BaseCompanyCarrierLineInfo, StediPartnerCompanyGroupingPayloadData, StediDataAggregator, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-2807": {
    "key": "BENINTEG-2807",
    "issue": "The end date of the role 651462bda4b7570d306788e0 was updated from 2023-11-15 to 2024-11-14, requiring updates to insurance timelines and carrier notifications.",
    "issue_summary": "The end date of an employee's role was updated, necessitating the creation of a 'Termination (end date correction)' event and updates to insurance timelines and carrier notifications.",
    "rca": "This was a verification ticket for end date correction.",
    "steps_taken": "1. Verified that a 'Termination (end date correction)' event was created for the prior event 672a508ccf6a38caba0d2c2e.\n2. Reviewed that the insurance timelines were updated by the Termination (end date correction) event.\n3. Reassigned the ticket to the Marketplace - Integrations team to update the end date with carriers as not all forms were submitted by email.\n4. Verified that the correct benefit end date 12/01/2024 was being sent to both carriers and closed the ticket.",
    "data_models": "[]"
  },
  "BENINTEG-2806": {
    "key": "BENINTEG-2806",
    "issue": "Unable to submit a Noyo amendment for employee Morgan Welker due to an error message: 'can only concatenate str (not \"NoneType\") to str'.",
    "issue_summary": "The issue was caused by a setup problem where the vision plan was not eligible for class code 002, although it should have been according to expectations.",
    "rca": "The root cause of the issue was that the vision plan for UNUM was only available for employees in class code 001, while the employee belonged to class code 002. This caused the API to throw an error when attempting to submit the amendment.",
    "steps_taken": "The issue was identified as a setup problem, and it was suggested to follow up with Noyo on Slack to address the eligibility of the plan for class code 002. The ticket was closed as the immediate issue was resolved.",
    "data_models": "[]"
  },
  "BENINTEG-2804": {
    "key": "BENINTEG-2804",
    "issue": "Employee Sean Carter reported that forms for COBRA initiation were not submitted to CIGNA, despite being enrolled in Cigna and Principal.",
    "issue_summary": "Forms for COBRA initiation were not submitted to CIGNA for employee Sean Carter, showing an 'UNSUBMITTED_PRIOR_FORMS' status.",
    "rca": "The issue was due to a gap in the product where the pending action was not updated, even though the transmissions were successfully processed via the in-house EDI system.",
    "steps_taken": "The team confirmed that the transmission to CIGNA was processed via STEDI. It was identified that the pending action was not updated, causing the admin to see the 'UNSUBMITTED_PRIOR_FORMS' status. A tracking ticket was created to address this gap in the product.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-2803": {
    "key": "BENINTEG-2803",
    "issue": "The team needed to generate a test Open Enrollment (OE) file for several groups for review, but encountered issues with generating files for some groups due to incorrect carrier classifications.",
    "issue_summary": "The issue was the inability to generate test OE files for certain UHC USP groups due to incorrect carrier classifications, which needed to be mapped correctly before file generation could proceed.",
    "rca": "The root cause of the issue was that the carrier classifications for the UHC USP groups were not mapped correctly, preventing the generation of the OE files.",
    "steps_taken": "The steps taken to resolve the issue included reviewing and correcting the carrier classifications for the UHC USP groups. Once the classifications were corrected, the OE files were successfully generated. The code snippet provided in the comments shows the function `generate_future_oe_file` used to generate the OE files, which involves filtering and processing data using the `StediDataAggregator` and `EbnFileGenerator` classes.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, BaseCompanyCarrierLineInfo, StediPartnerCompanyGroupingPayloadData, StediDataAggregator, EbnCompanyFileGenerator, SubscriberLineInfo, StediRequestMetaData, StediDte, StediGroupingConfigData, VendorDtoBuilderContext]"
  },
  "BENINTEG-2801": {
    "key": "BENINTEG-2801",
    "issue": "Confirm Enrollment tasks are generated past the effective date for carrier Guardian.",
    "issue_summary": "Enrollment tasks for Guardian carrier appeared on the dashboard after the effective date, with the submit method showing Noyo.",
    "rca": "The issue was categorized as an Ops Issue with the subcategory 'Wrong Expectation - System working as expected'. The tasks were created before the effective date, which is the correct behavior, but there was confusion regarding the task generation timing.",
    "steps_taken": "The task creation logic was reviewed by the Integrations team. It was noted that the task for company Capstack was generated correctly before the effective date. The issue was transferred to the Integrations team for initial triage, but no further updates were provided, and the ticket was closed due to inactivity.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2780": {
    "key": "BENINTEG-2780",
    "issue": "Giga Energy, Inc. was directed to send a cancellation letter to Rippling Ops instead of the carrier when initiating cancellation of coverage to join Rippling PEO.",
    "issue_summary": "An automated email incorrectly directed Giga Energy, Inc. to send their insurance cancellation letter to Rippling Ops instead of the carrier, due to a misconfiguration in the email template or carrier information.",
    "rca": "The issue was caused by a misconfiguration where the email template used for sending cancellation reminders was fetching the wrong email address from the Carrier objects. Specifically, the email address defaulted to 'insurance-ops@rippling.com' due to missing configuration for certain BCBS carriers at the US level. This led to the incorrect direction for sending cancellation letters.",
    "steps_taken": "The team identified that the email address was being fetched from the Carrier objects and was defaulting to 'insurance-ops@rippling.com' due to missing configuration. To resolve the issue, they proposed adding the correct cancellation email addresses directly in the code for the affected BCBS carriers. A fix was implemented by updating the email addresses in the code and a pull request was raised to change the cancellation letter email addresses. Additionally, a list of impacted groups was generated using a Python script to identify those affected by the misconfiguration.",
    "data_models": "[CompanyEnrollmentEvent, USBenefitsCarrier, CompanyCarrierLineInfo]"
  },
  "BENINTEG-2779": {
    "key": "BENINTEG-2779",
    "issue": "The automated schedules for production files for a list of clients needed to be stopped before specific deadlines due to the clients having already started their Open Enrollment (OE). There was also a need to confirm if the forms would automatically restart once the production schedules were stopped.",
    "issue_summary": "Automated production file schedules for certain clients needed to be halted due to the commencement of their Open Enrollment, and confirmation was required on whether forms would automatically restart.",
    "rca": "The root cause was identified as the need to stop transmissions using a webscript due to the clients' Open Enrollment period starting.",
    "steps_taken": "A webscript was executed to stop the automated file scheduling for the specified groups. The code snippet provided shows the process of filtering and updating the state of VendorPartnerCompany objects, deleting CustomStediCommunicationDetail, and handling CompanyInsuranceInfo and carrier objects.",
    "data_models": "[VendorPartnerCompany, CustomStediCommunicationDetail, CompanyInsuranceInfo]"
  },
  "BENINTEG-2778": {
    "key": "BENINTEG-2778",
    "issue": "File name has 2 dots in the name preventing the production file from being processed by Cigna.",
    "issue_summary": "The production file for client Muir X could not be processed by Cigna due to the presence of two dots in the file name.",
    "rca": "The root cause was identified as a misconfiguration in the file prefix, which was corrected using a webscript.",
    "steps_taken": "The issue was resolved by correcting the file prefix using a webscript. The correct company ID was also confirmed and used to address the issue.",
    "data_models": "[]"
  },
  "BENINTEG-2777": {
    "key": "BENINTEG-2777",
    "issue": "Rippling is not passing the 3-digit employee ID ('Rippling Profile Number') to OneKonnect, causing issues for the customer when reconciling invoices from Prudential.",
    "issue_summary": "The 3-digit 'Rippling Profile Number' is not being transmitted to OneKonnect, which is needed by Prudential for employee record identification, leading to reconciliation issues for the customer.",
    "rca": "The root cause of the issue is a missing feature in the current product setup where the 3-digit 'Rippling Profile Number' is not being sent to OneKonnect. This is categorized as a product enhancement requirement.",
    "steps_taken": "The team reached out to OneKonnect to inquire about the possibility of using a custom field to send the profile number. OneKonnect confirmed that custom fields (customfield1, customfield2, or customfield3) in the employee table can be used for this purpose. The task was then filed as a new feature work to be picked up in mid-February.",
    "data_models": "[]"
  },
  "BENINTEG-2776": {
    "key": "BENINTEG-2776",
    "issue": "The issue was that the Open Enrollment (OE) file for Freestar (Publisher First, Inc) with Cigna could not be pulled for review after the OE date had ended, and there was an urgent need to generate and review this file before sending it to the carrier.",
    "issue_summary": "The OE file for the upcoming plan year could not be pulled for review after the OE date ended on 10/16/2024, causing a delay in processing and potential SLA breach.",
    "rca": "The root cause was identified as a feature gap where termination dates were not being pulled for waived 2025 coverages in the OE file. This was a known issue that was addressed as part of the renewals handling.",
    "steps_taken": "The steps taken included generating a new OE test file, verifying the file, and ensuring it only contained the NPY enrollment. The issue with termination dates not being pulled was fixed by changes in the renewals handling. The updated file was then sent to Cigna's server.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2775": {
    "key": "BENINTEG-2775",
    "issue": "Special characters in names and addresses are causing file feed errors with OneKonnect.",
    "issue_summary": "Special characters in employee data are causing errors in file feeds sent to OneKonnect, as they are not being handled correctly.",
    "rca": "The issue is due to special characters in names and addresses not being translated to their English counterparts before being sent to OneKonnect, resulting in jumbled data.",
    "steps_taken": "To resolve the issue, a utility for encoding and decoding was suggested to fix the ASCII encoding issue. The solution involves using `json.dumps(generator.generate(), indent=2, ensure_ascii=False)` to encode and `common.unidecode.unidecode` to decode into plain text. A separate ticket (BENINTEG-3039) was created to track the progress of this product enhancement.",
    "data_models": "[]"
  },
  "BENINTEG-2774": {
    "key": "BENINTEG-2774",
    "issue": "The automated schedule for production files needs to be stopped for specific clients (Cigna and UHC) before their Open Enrollment (OE) starts.",
    "issue_summary": "The automated schedule for production files for Cigna and UHC needs to be halted as these clients have already started their Open Enrollment.",
    "rca": "The root cause analysis category is 'Support Tool Used', but no specific subcategory or detailed description is provided.",
    "steps_taken": "The ticket was initially assigned incorrectly and needed to be triaged before assignment. It was later requested to be added to a master ticket and subsequently closed.",
    "data_models": "[]"
  },
  "BENINTEG-2773": {
    "key": "BENINTEG-2773",
    "issue": "Errors were encountered while attempting to push Noyo snapshots for employees from a specific group, due to issues with plan mapping for multiple Anthem plans.",
    "issue_summary": "The issue involved errors in pushing Noyo snapshots for employees due to mismatched plan mapping information for Anthem plans, which were not eligible for Noyo.",
    "rca": "The root cause analysis indicates that there was no specific issue identified, as the category is marked as 'No Issue'. However, the description suggests that the problem was related to the inability to find matching Noyo plan mapping information for the Anthem plans, which were not eligible for Noyo.",
    "steps_taken": "The issue was eventually resolved, and the snapshots were successfully pushed through, as indicated by the final comment stating that the issue is resolved and the ticket is closed.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2771": {
    "key": "BENINTEG-2771",
    "issue": "The EDI file for Angle Health Inc. is not reporting the correct effective date (DTP*348) after a member's address change, despite the network identifier updating correctly.",
    "issue_summary": "The EDI file for Angle Health Inc. is passing an incorrect effective date under DTP*348 after a member's address change, while the network identifier is updated correctly.",
    "rca": "The issue is categorized under Product Enhancement and needs grooming. The problem is tracked in a separate Jira ticket (BENINTEG-3323) for further action.",
    "steps_taken": "The issue has been identified as a feature request and is being tracked in a separate Jira ticket (BENINTEG-3323) for further development and resolution.",
    "data_models": "No specific data models were mentioned in the ticket."
  },
  "BENINTEG-2769": {
    "key": "BENINTEG-2769",
    "issue": "Aperios, Inc., a BOB group, did not have new group employer forms generated after setting up a new enrollment for the UHC VA plan effective from 11/1/24. No tasks were created for carrier submissions.",
    "issue_summary": "For Aperios, Inc., a BOB group, no employer forms were generated for the new enrollment setup due to system design where forms are not generated for broker-managed companies when the carrier cannot NGE.",
    "rca": "For a broker company where a carrier cannot NGE, we do not generate company forms by design, and as Rippling is not responsible for forms submissions, company enrollment packet submission task was also not created. The function should_handle_underwriting_paperwork returned False for this company's enrollment event because the carrier's canBrokerNGE is set to False.",
    "steps_taken": "The issue was identified by checking the function should_handle_underwriting_paperwork, which returned False due to the carrier's canBrokerNGE being set to False. This was confirmed as the expected behavior, and the ticket was marked as resolved.",
    "data_models": "[CompanyInsuranceInfo, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-2766": {
    "key": "BENINTEG-2766",
    "issue": "Admin reported missing new hire enrollments for Anduril Industries, where 132 NHE enrollments were not sent to the carrier due to system logic that prevents sending changes during the Open Enrollment (OE) period.",
    "issue_summary": "New hire enrollments for Anduril Industries were not transmitted to the carrier due to system logic that blocks sending changes during the OE period, causing access to care issues.",
    "rca": "The root cause of the issue was identified as a misalignment between Rippling's system logic and vendor operations, where the system logic prevents sending enrollment changes during the OE period, leading to blocked transmissions.",
    "steps_taken": "A script was executed to manually process and send the pending actions related to the carrier that were blocked due to the OE_DEADLINE_NOT_PASSED reason. The script iterated over the pending actions and performed the necessary actions to transmit the enrollments. The script used was:\n\n```python\ncarrier_id = \"6357c1c692233cddd5430506\"\ncarrier = USBenefitsCarrier.objects.get(id=carrier_id)\ncompany_id= \"5e7d7ffebc3bc743a9e9c5fc\"\nnhes = EnrollmentEvent.objects.filter(company=company_id, finalizedOn__gte=pst_today()-relativedelta(days=60))\nprint(f\"Total CobraInit happened in last 60 days: {len(nhes)}\")\n\npags = PendingActionGroup.objects.filter(company=company_id, event__in=nhes)\nprint(f\"Total PAGs happened in last 60 days: {len(pags)}\")\n\npas = PendingAction.objects.filter(company=company_id, carrier=carrier, state__ne=\"ACTIVE\", pendingActionGroup__in=pags)\nprint(f\"Total PAs happened in last 60 days: {len(pas)}\")\n\npa_with_oe_deadline_reason = PendingActionLog.objects.filter(company=company_id, pending_action__in=pas, reason_for_not_performing=\"OE_DEADLINE_NOT_PASSED\").distinct('pending_action')\nprint(f\"Total PAs with OE_DEADLINE_NOT_PASSED happened in last 60 days: {len(pa_with_oe_deadline_reason)}\")\n\nfor pa in pa_with_oe_deadline_reason:\n  pa.performAction(checkShouldPerformAction=False)\n  print(f\"{pa.id}: {pa.state}, {pa.role.id}: {pa.role.fullName}: {pa.pendingActionGroup.event._cls}\")\n\nreturn\n```",
    "data_models": "[EnrollmentEvent, PendingActionGroup, PendingAction, PendingActionLog, USBenefitsCarrier]"
  },
  "BENINTEG-2765": {
    "key": "BENINTEG-2765",
    "issue": "The EE forms are populating with Jenn Elkin's signature instead of Nicole Travis's signature, and the signature date is missing. This issue occurs when forms are generated for the company Epiphany School.",
    "issue_summary": "The issue is that the EE forms are incorrectly using Jenn Elkin's signature instead of Nicole Travis's for the Employer Signature, and the signature date is not being added. This occurs during form generation for Epiphany School.",
    "rca": "The root cause of the issue was identified as the form reading the wrong field for the 'Employer Signature'. The field used was not updated to reflect the current HR Admin, Nicole Travis, as the signatory. Additionally, there was confusion about the requirement for a signature date.",
    "steps_taken": "The steps taken to resolve the issue included identifying the correct field for the 'Employer Signature' using the CompanySignatoryAssignment. It was confirmed that the form could be edited directly from the product under Documents to manage the signature. The need for a signature date was clarified, and it was determined that no additional date was required beyond the enrollment date.",
    "data_models": "[CompanySignatoryAssignment]"
  },
  "BENINTEG-2764": {
    "key": "BENINTEG-2764",
    "issue": "The team needed to migrate a list of clients from the PRIME platform to the USP platform for UHC. This required deleting existing configurations to re-onboard the clients for USP feeds.",
    "issue_summary": "The issue involved migrating clients from the PRIME platform to the USP platform, necessitating the deletion of existing configurations to enable re-onboarding for USP feeds.",
    "rca": "The root cause was the need to delete existing configurations to allow for the re-onboarding of clients onto the USP platform.",
    "steps_taken": "The engineering team deleted the configurations for all 15 groups, ensuring no files would be processed in production for these groups, and prepared them for setup on the new platform. The team also considered whether to fallback to forms temporarily.",
    "data_models": "[]"
  },
  "BENINTEG-2763": {
    "key": "BENINTEG-2763",
    "issue": "Admin reported that new hire enrollments were not being sent to Guardian for Concert Health, Inc. The system logic was preventing the enrollment from being sent due to the OE_DEADLINE_NOT_PASSED status, causing potential missed enrollments.",
    "issue_summary": "New hire enrollments for Concert Health, Inc. were not sent to the carrier due to system logic holding changes during the Open Enrollment (OE) period, leading to potential missed enrollments.",
    "rca": "The root cause was identified as a misalignment between Rippling's system logic and vendor operations. The system was holding enrollment changes during the OE period, which was not communicated to clients and did not align with vendor processes. This led to access to care issues and potential missed enrollments.",
    "steps_taken": "The team reviewed the system logic and identified that changes not related to OE should be sent to the carrier when completed. A request was made to update the system logic to allow member enrollment changes for current coverage periods to be sent even during OE. Scripts were run to check for blocked NHEs, but no blocked enrollments were found. The issue was marked resolved after confirming no additional requirements were needed from the engineering side.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-2753": {
    "key": "BENINTEG-2753",
    "issue": "There are approximately 7,000 mismatched plan numbers reported by Aetna, which do not match the state the member lives in or are not allowed values on the coding supplement for their respective CSA. Noyo confirmed that they sent Aetna the same information that was sent by Rippling.",
    "issue_summary": "Aetna reported discrepancies with plan numbers during the PEO Migration and Open Enrollment process, where plan numbers do not align with state requirements or allowed values, as confirmed by Noyo.",
    "rca": "The root cause of the issue was identified as a bug in the plan mapping process, specifically related to special case handling where plan numbers did not align with the state or allowed values as per Aetna's coding supplement.",
    "steps_taken": "The team is waiting for a response from Noyo to further investigate and resolve the discrepancies with the plan numbers.",
    "data_models": "[]"
  },
  "BENINTEG-2750": {
    "key": "BENINTEG-2750",
    "issue": "Cigna requested that the code 'CP' not be used in PER 03, 05, and 07 segments, causing a transmission error when removed from the Cigna Stedi Guide, and the system did not allow reassignment of 'CP' to 'HP'.",
    "issue_summary": "Cigna requested removal of 'CP' code from specific segments, leading to transmission errors and issues with reassignment to 'HP'.",
    "rca": "Changes were made in the Stedi mapping to accommodate Cigna's request, which led to transmission errors when the 'CP' code was removed.",
    "steps_taken": "The mapping was changed to replace 'CP' with 'HP' in the Cigna FACET mapping. The code snippet used was: `{{communication_number_qualifier_05 ? (communication_number_qualifier_05=\"CP\"?\"HP\":communication_number_qualifier_05) : $omitField}}`. A test transmission was conducted to verify the changes, and upon confirmation that the test file contained 'HP', the issue was resolved.",
    "data_models": "[communication_number_qualifier_05]"
  },
  "BENINTEG-2748": {
    "key": "BENINTEG-2748",
    "issue": "Dana Briskin's enrollment with Aetna was not included in the Vericred EDI file feed on 11/05/2023 after completing their QLE on 11/01/2024.",
    "issue_summary": "Dana Briskin's enrollment was missing from the Vericred EDI file feed due to system logic related to the OE deadline not being passed.",
    "rca": "The perform action for the pending enrollment was skipped because the system logic determined that the open enrollment (OE) deadline had not passed. The deadline for the pending action was set to 11/26 due to an ongoing company event, and since the Aetna coverage involved in the QLE was expiring, it was part of a participating CCLI that had to wait until the company event deadline.",
    "steps_taken": "The issue was identified by checking the pending action log, which showed that the perform action was skipped due to the OE deadline not being passed. The system logic needs to be updated to prevent missed enrollments in the future.",
    "data_models": "[PendingAction, PendingActionLog]"
  },
  "BENINTEG-2733": {
    "key": "BENINTEG-2733",
    "issue": "The customer requested the removal of Kelly Broderick's Metlife email (kelly.broderick@metlifeservice.com) from Metlife communications for enrollments, terms, and changes, but there was no tool or user interface available for operations to remove the email.",
    "issue_summary": "The issue was that Kelly Broderick's Metlife email needed to be removed from Metlife communications, but there was no tool available for operations to do so.",
    "rca": "The root cause was the need to remove emails from custom communication, which was not supported by the existing tools or user interface for Metlife.",
    "steps_taken": "The email address for dual communication was updated from ['kelly.broderick@metlifeservice.com', 'kelly.broderick@metlife.com'] to ['kelly.broderick@metlife.com']. The change was confirmed and the ticket was closed.",
    "data_models": "[CustomCommunicationEmailDetail]"
  },
  "BENINTEG-2732": {
    "key": "BENINTEG-2732",
    "issue": "In house EDI feeds are not showing on the insurance debugger page.",
    "issue_summary": "In house EDI feeds are missing from the insurance debugger page, unlike other vendors like Vericred and Noyo.",
    "rca": "The issue is categorized as a product enhancement that needs grooming, indicating that the current system does not support displaying in house EDI feeds on the debugger page.",
    "steps_taken": "The ticket was closed and marked to be taken up as a feature request in another ticket (BENINTEG-3124).",
    "data_models": "[]"
  },
  "BENINTEG-2730": {
    "key": "BENINTEG-2730",
    "issue": "Transmission error occurred during onboarding the group 'Huntridge Labs, LLC' as the file was giving a transmission error while running in test mode.",
    "issue_summary": "The issue was a transmission error during the onboarding of 'Huntridge Labs, LLC' due to an incorrect convention EDI.",
    "rca": "The root cause of the issue was identified as a manual data entry error where the wrong convention EDI was used.",
    "steps_taken": "The convention EDI was updated as per the attached document, which resolved the issue and allowed the file to be generated correctly. It was noted that the onboarding tool currently doesn't support updating convention-edi, and a suggestion was made to create a dashboard with such features.",
    "data_models": "[]"
  },
  "BENINTEG-2729": {
    "key": "BENINTEG-2729",
    "issue": "Snapshot generation is failing for five client groups due to a transmission error related to an incorrect EDI convention.",
    "issue_summary": "Snapshot generation for five client groups failed due to a transmission error caused by an incorrect EDI convention '005010X220A2' instead of '005010X220A1'.",
    "rca": "The root cause of the issue was a manual data entry error where the incorrect EDI convention '005010X220A2' was entered instead of the correct '005010X220A1'. This error occurred during the onboarding process for the client groups.",
    "steps_taken": "The corrupted data was fixed by running a script to update the incorrect EDI convention. The script filtered the configurations with the incorrect '005010X220A2' and updated them to '005010X220A1'. The script used was:\n\n```python\nfrom benefits_marketplace.common.vendor_partner import StediPartnerBenefitsGroupingConfig\nconfigs = StediPartnerBenefitsGroupingConfig.objects.filter(conventionEdi='005010X220A2')\nassert configs.count() == 5\n\nfor config in configs:\n    config.conventionEdi = \"005010X220A1\"\n    config.save()\nreturn\n```",
    "data_models": "[StediPartnerBenefitsGroupingConfig]"
  },
  "BENINTEG-2728": {
    "key": "BENINTEG-2728",
    "issue": "Duplicate emails are being sent for submissions to brokers for the group Encompass Technologies Development LLC.",
    "issue_summary": "Duplicate emails were being sent to brokers for the group Encompass Technologies Development LLC, likely due to the email client issue as only one email record was found in the system.",
    "rca": "The broker/admin received multiple emails for the same employee, but in the system, there is a record of only one such email. It is most likely an issue with the email client, as the emails were sent at the exact same time, indicating an intermittent issue with the email vendor.",
    "steps_taken": "The team checked all events and pending actions for the employee but found no deleted events or multiple email records. They also reviewed the complete history for the delta dental pending action. It was concluded that the issue is likely intermittent and related to the email vendor, as both emails were sent at the exact same time.",
    "data_models": "[PendingAction]"
  },
  "BENINTEG-2725": {
    "key": "BENINTEG-2725",
    "issue": "The Anthem form is pulling the wrong date of birth (DOB) for a dependent, despite the correct DOB being present in the system.",
    "issue_summary": "The Anthem form is displaying an incorrect DOB for a dependent due to a form-mapping issue where the same value is mapped for both DOB fields, leading to the wrong information being pulled.",
    "rca": "The root cause of the issue is a form-mapping error where the same value was mapped for both DOB fields in the Anthem form, resulting in the incorrect DOB being displayed for the dependent.",
    "steps_taken": "The issue was identified as a form-mapping problem. It was confirmed that the form field values were correct, but the mapping was incorrect. The team was advised to submit a forms request using the provided links to correct the mapping.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2724": {
    "key": "BENINTEG-2724",
    "issue": "The issue was the need to generate and send a test Open Enrollment (OE) file for several groups to review, specifically for Atmosphere Events Group, Combined Selection Group LLC, Dosu, Inc., and Elio. There was urgency in generating these files, and there were complications with the transaction settings and the SFTP connection for Atmosphere Events Group.",
    "issue_summary": "The issue involved generating and sending a test OE file for multiple groups, with complications arising from incorrect transaction settings and SFTP connection issues.",
    "rca": "The root cause of the issue was identified as incorrect transaction settings being used for the groups. The transaction setting ID '005010X220A2' was mistakenly used instead of '005010X220A1', which was the correct setting for other groups. Additionally, there was an SFTP connection issue when attempting to send the OE file for Atmosphere Events Group.",
    "steps_taken": "The steps taken to resolve the issue included verifying and correcting the transaction settings for the groups, generating the test OE files, and sending them to an internal test server for review. The files were reviewed and confirmed to be correct before being sent to the carrier. The SFTP connection issue was also addressed, allowing the files to be sent successfully.",
    "data_models": "No specific data models were mentioned in the ticket for debugging and fixing the issue."
  },
  "BENINTEG-2716": {
    "key": "BENINTEG-2716",
    "issue": "The client, Rhythm Energy Inc., wants to transition from BOR + NFP Tagged to BOB, requiring broker details update, addition of new BOB plans, and activation of Carrier Connections.",
    "issue_summary": "The client is facing an issue transitioning from BOR + NFP Tagged to BOB, which involves updating broker details, adding new BOB plans, and configuring Carrier Connections. The transition was blocked due to incorrect broker tagging in Rippling.",
    "rca": "The root cause of the issue was the incorrect broker tagging in Rippling, which prevented the admin from completing the Open Enrollment (OE) setup.",
    "steps_taken": "The broker was updated from Rippling to the client's broker, and the transition was completed. The Carrier Connections tab was activated, and the Marketplace Integrations team was involved to manage forms and transmissions. The issue was resolved, and the transition was confirmed as complete.",
    "data_models": "[CompanyInsuranceInfo]"
  },
  "BENINTEG-2715": {
    "key": "BENINTEG-2715",
    "issue": "Noyo Principal transactions were not sent due to missing Principal plan mappings, affecting enrollments for two employees.",
    "issue_summary": "The issue was that Principal plan mappings were missing, which prevented the NHE enrollments for two employees from being sent to Noyo.",
    "rca": "The root cause analysis category is marked as 'Deferred', indicating that the detailed reason for the issue was not provided or deferred for later analysis.",
    "steps_taken": "The ticket was closed without resolution as there was no update from Operations for 15 days.",
    "data_models": "[]"
  },
  "BENINTEG-2714": {
    "key": "BENINTEG-2714",
    "issue": "When sending a census for Bending Spoons US, Inc., an error occurs: \"Sub group identifier: 0 is not valid for medical plan: Streamyard Inc/cobra\", which contradicts the existing mapping.",
    "issue_summary": "The issue arises due to an error message indicating an invalid sub-group identifier for a medical plan, despite the mapping appearing correct. The error is caused by sending two coverages (one non-COBRA-related and one COBRA-related) in the snapshot, leading to the new plan ID being sent alongside the older coverage.",
    "rca": "The root cause of the issue is the simultaneous sending of two coverages (one non-COBRA-related and one COBRA-related) in the snapshot. This results in the new plan ID being sent alongside the older coverage, causing the error. The issue requires handling these cases differently, which may take time to implement.",
    "steps_taken": "The group was temporarily switched back to Ideon to avoid the issue while a feature request was created in the backlog to address the root cause. The ticket was closed with instructions to create a new ticket if the issue persists in the future.",
    "data_models": "[]"
  },
  "BENINTEG-2712": {
    "key": "BENINTEG-2712",
    "issue": "Datasets for Chive Media Group were not passing through EBN, causing a blockage.",
    "issue_summary": "Datasets for Chive Media Group were blocked and not passing through EBN due to visibility issues.",
    "rca": "The root cause was identified as a visibility issue where the file was going daily but not being processed correctly.",
    "steps_taken": "The issue was resolved by ensuring that data was being sent correctly from November 14th onwards, as confirmed in the comments.",
    "data_models": "[]"
  },
  "BENINTEG-2705": {
    "key": "BENINTEG-2705",
    "issue": "OE transactions are not being submitted via the Noyo file feed for Seed Health Inc due to a pending company event.",
    "issue_summary": "OE transactions for Guardian's Critical Illness and Accident coverage are not being submitted via the Noyo file feed due to a pending company event more than 30 days away.",
    "rca": "The issue is caused by a business logic check that prevents execution if there is a company enrollment event more than 30 days away. This logic is not documented well, leading to confusion.",
    "steps_taken": "The issue will resolve itself on December 2nd when the pending event is within 30 days. No immediate action is required, but a new ticket will be opened to address broader questions about the logic.",
    "data_models": "[CompanyEnrollmentEvent]"
  },
  "BENINTEG-2698": {
    "key": "BENINTEG-2698",
    "issue": "ReUp Education faced a transmission error when sending the first New Plan Year file for Cigna FACET/Open Enrollment. The error was related to a validation issue where a field was shorter than the required 8 characters.",
    "issue_summary": "The first New Plan Year file for ReUp Education failed due to a validation error in the transmission process, specifically a field being shorter than 8 characters.",
    "rca": "The system was working as expected, but there was a misunderstanding or wrong expectation regarding the file transmission requirements, leading to the validation error.",
    "steps_taken": "The priority of the issue was downgraded to high as the next feed was scheduled for Tuesday. The team coordinated to ensure the issue was fixed before the next file run. It was confirmed that the production file was sent correctly on November 7th, and the issue was resolved with the successful delivery of the week's file.",
    "data_models": "[]"
  },
  "BENINTEG-2695": {
    "key": "BENINTEG-2695",
    "issue": "The test file for Yieldstreet Inc with CIGNA ACE is stuck in the INIT stage, preventing further processing.",
    "issue_summary": "The test file for Yieldstreet Inc with CIGNA ACE is stuck in the INIT stage due to missing effective dates for one of the employees and a classification mismatch.",
    "rca": "The issue was caused by missing effective dates for one of the employees, which prevented the test file from passing. Additionally, there was a classification mismatch for the role {{65bae2e5ee9e705d2dfbf761}}, which caused a break in the process.",
    "steps_taken": "The team reviewed the account structure and generated an enrollment census to identify the missing classification. However, the issue was deferred as cut overs were paused.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2685": {
    "key": "BENINTEG-2685",
    "issue": "Dunham and Jones Voluntary STD benefit amount is passing a 0 to OneKonnect for most members, resulting in test file discrepancies preventing production approval.",
    "issue_summary": "The Voluntary STD benefit amount for Dunham and Jones is being sent as 0 to OneKonnect due to incorrect handling of the benefit amount logic, causing discrepancies in test files.",
    "rca": "The issue was caused by the feature flag 'benefits-integration-ebn-updated-benefit-amount' being turned off for the company, which prevented the updated logic for fetching benefit amounts from being applied. Additionally, the logic depended on 'approvedBuyUpInfo' to retrieve volume amounts, which was not populated correctly for the STD plan.",
    "steps_taken": "The feature flag 'benefits-integration-ebn-updated-benefit-amount' was enabled for the company to apply the updated logic for fetching benefit amounts. The flag was also turned on globally for all companies to prevent similar issues in the future. Debugging involved checking the 'SubscriberLineInfo' for the employee and verifying the 'hasVoluntaryBenefitBuyUp' and 'approvedBuyUpInfo' properties.",
    "data_models": "[SubscriberLineInfo, ShortTermDisabilityPlan]"
  },
  "BENINTEG-2683": {
    "key": "BENINTEG-2683",
    "issue": "End date of the role 666247d0e6ce599c21fe1b32 was updated from 2024-10-29 to 2024-11-01, requiring a 'Termination (end date correction)' event to be created and insurance timelines to be updated accordingly.",
    "issue_summary": "The end date of a role was updated, necessitating the creation of a 'Termination (end date correction)' event and updates to insurance timelines. The issue was caused by a wrong event generated due to an incorrect BOR init event.",
    "rca": "Wrong event generated because of wrong BOR init event, leading to incorrect data in forms and pending actions.",
    "steps_taken": "1. Verified that a 'Termination (end date correction)' event was created for the prior termination event. 2. Reviewed insurance timelines to ensure they were updated by the 'Termination (end date correction)' event. 3. Confirmed that no forms needed to be generated as the employee never had coverage in dental or vision. 4. Reassigned the ticket to the Marketplace - Integrations team to update the end date with carriers if necessary.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-2682": {
    "key": "BENINTEG-2682",
    "issue": "Codey Ho's new hire enrollment failed, and the user is unable to access DataDog for further investigation.",
    "issue_summary": "Codey Ho's new hire enrollment failed, and the user requested investigation into log entry 7 on 10/03/2024 03:43 PDT, but was unable to access DataDog for deeper analysis.",
    "rca": "The ticket was closed because the associated customer support case was closed, and it was flagged to keep the customer task backlog clean.",
    "steps_taken": "The ticket was flagged and closed as the associated support case was closed, indicating no further action was required.",
    "data_models": "[]"
  },
  "BENINTEG-2681": {
    "key": "BENINTEG-2681",
    "issue": "The group has 8 billing groups set up as subgroups for medical coverage, but after mapping these billing groups using UUIDs provided by Ideon, the information is not being transmitted to Ideon. This issue is blocking the group from moving forward with the EDI configuration.",
    "issue_summary": "The issue is that the medical coverage information is not being transmitted to Ideon due to a problem with subgroup mappings, which is blocking the EDI configuration process.",
    "rca": "The root cause of the issue was identified as the Vericred file feed not supporting multiple subgroups for multiple coverage periods. The account structure for the group contained subgroup classifications for Medical, Dental, and Vision, which caused the medical subgroup to be overridden by the Dental/Vision subgroup. Additionally, the carrier change did not clear the previous mappings, preventing re-ingestion.",
    "steps_taken": "The steps taken to resolve the issue included resetting the CCLI to a valid state, triggering re-ingestion, and clearing previous mappings using a script. The script cleared the vericredId and vericredVoluntaryId for the plans, allowing for successful re-ingestion. The ingestion was re-run, and the plans were successfully ingested into Vericred, including enrollments.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, InsuranceCompanyPlanInfo, SubscriberLineInfo, CarrierClassification]"
  },
  "BENINTEG-2680": {
    "key": "BENINTEG-2680",
    "issue": "The Cigna production files were being sent on Wednesdays instead of the scheduled Tuesdays, causing discrepancies and operational issues.",
    "issue_summary": "Cigna production files were incorrectly sent on Wednesdays due to a misconfiguration in the automation setup, which was supposed to send files on Tuesdays.",
    "rca": "The root cause was identified as a misconfiguration during the onboarding process, where the automation was set to send files on the wrong day (Wednesday) instead of the intended day (Tuesday). The support tool did not allow operations to edit the send-out date without engineering assistance.",
    "steps_taken": "The issue was resolved by updating the configuration using the partner onboarding tool to change the file transmission day to Tuesday. The final update was confirmed with a JSON configuration snippet showing the 'transmissionFrequency' set to 'TUESDAY'.",
    "data_models": "[BaseVendorPartnerTransmissionConfig, StediPartnerTransmissionConfig]"
  },
  "BENINTEG-2679": {
    "key": "BENINTEG-2679",
    "issue": "Blue Steel Cyber Security's UHC production files are being sent on Tuesdays instead of the scheduled Wednesdays.",
    "issue_summary": "The UHC production files for Blue Steel Cyber Security are being sent on the wrong day (Tuesdays instead of Wednesdays) due to an incorrect onboarding configuration.",
    "rca": "The issue was caused by the group being onboarded with the wrong weekly transmission date set to Tuesday instead of Wednesday. The support tool for onboarding was not effective in resolving the issue due to the VPC state being in production.",
    "steps_taken": "The issue was manually corrected by updating the transmission day to Wednesday, as the support tool could not be used in the production VPC state.",
    "data_models": "[]"
  },
  "BENINTEG-2678": {
    "key": "BENINTEG-2678",
    "issue": "Emails are being sent for form submissions even though the company has an active file feed, which should be used instead of email.",
    "issue_summary": "Emails are being sent for form submissions despite having an active file feed for the company, which should have been used for transmitting forms.",
    "rca": "The root cause of the issue is that during the open enrollment grace period, dual communication is forced for pending actions, leading to emails being sent in addition to the file feed.",
    "steps_taken": "The issue was identified as a result of forced dual communication during the open enrollment grace period. A pull request was referenced to address this behavior: [https://github.com/Rippling/rippling-main/pull/178478/files]. The client was informed about the reason for the emails being sent.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [PendingActionGroup, PendingAction]"
  },
  "BENINTEG-2674": {
    "key": "BENINTEG-2674",
    "issue": "The admin is unable to add Accident, Critical Illness (with EOI option), and Hospital Indemnity lines of coverage in the open enrollment setup for Stand Protect, Inc.",
    "issue_summary": "The admin lacks the option to add specific lines of coverage (Accident, Critical Illness with EOI, Hospital Indemnity) in the open enrollment setup due to the broker type needing an update.",
    "rca": "The root cause of the issue was identified as a documentation gap, where the broker type needed to be updated to Broker for the lines of coverage to be available. Additionally, the customer was preemptively converted to BOB from BOR, affecting the isManagedForms flag.",
    "steps_taken": "The issue was resolved by updating the broker type to Broker, which allowed the lines of coverage to be added. The customer was also converted to BOB from BOR to unblock them for their non-PEO renewal. The admin confirmed that the plans were now available and added.",
    "data_models": "[CompanyInsuranceInfo, CompanyCarrierLineInfo]"
  },
  "BENINTEG-2673": {
    "key": "BENINTEG-2673",
    "issue": "The client, Build Momentum, is churning from PEO effective 11/30 and does not have the 'Add my plan' option available in their non-PEO enrollment setup flow, which is needed to add custom plans for multiple lines of coverage.",
    "issue_summary": "Build Momentum, a client churning from PEO, lacks the 'Add my plan' option in their non-PEO enrollment setup, preventing them from adding custom plans. The issue is critical as it blocks the Partner admins from starting the Open Enrollment by 11/04.",
    "rca": "The root cause of the issue was related to documentation and system settings. The broker was updated to BOB, which inadvertently set 'Rippling Managed Forms' to 'No'. This setting prevented the 'Add my plan' option from being available.",
    "steps_taken": "The team ran a script to change the broker to BOB, which resolved the issue by allowing the 'Add my plan' option to appear. The Marketplace team was tasked with monitoring the forms until the PEO churn was complete. The issue was eventually resolved, and the client confirmed that the 'Add my plans' option was now available.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [CompanyInsuranceInfo, CompanyBrokerInfo]"
  },
  "BENINTEG-2672": {
    "key": "BENINTEG-2672",
    "issue": "Offline QLE change is not being picked up, causing Michelle Heideman to be continually reinstated each week despite being manually termed in the carrier's system.",
    "issue_summary": "The offline QLE change for Michelle Heideman was not being recognized by the system, resulting in her being sent as active on the file and reinstated weekly, despite manual termination in the carrier's system.",
    "rca": "The root cause was identified as the file feed stopping due to the use of a support tool, specifically retool, which led to the offline QLE change not being picked up.",
    "steps_taken": "The issue was resolved by resetting the snapshot as advised by engineering during a meeting, ensuring the employee was removed from the file feed before sending another production file.",
    "data_models": "[]"
  },
  "BENINTEG-2671": {
    "key": "BENINTEG-2671",
    "issue": "There is a discrepancy in the UHC benefits plan codes. The updated UHC plan codes for the renewal are not reflected in Rippling data, which still shows the old plan code DDVL. This discrepancy is causing UHC to reject data sent with these outdated codes.",
    "issue_summary": "The issue is that Rippling data is not updated with the new UHC plan codes, causing rejections from UHC when sending medical benefits forms.",
    "rca": "The root cause analysis category is 'Salesforce case closed', but no detailed description is provided. The issue seems to stem from outdated plan codes in Rippling's system that were not updated to reflect the new UHC plan codes.",
    "steps_taken": "The troubleshooting actions included checking the CO Debugger where the old DDVL plan was found. A link to the CO Debugger was provided for further investigation. The engineering team was requested to update Rippling data to reflect the correct plan codes.",
    "data_models": "[CompanyInsuranceInfo, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-2670": {
    "key": "BENINTEG-2670",
    "issue": "Noyo Setup Tasks with Type = Configuration Assignment are not closing out, preventing customer API connections from automatic go-live.",
    "issue_summary": "Noyo Setup Tasks with Type = Configuration Assignment are not closing out despite required actions being completed, blocking automatic go-live of customer API connections.",
    "rca": "The issue was due to a bug in the system's handling of special cases, which caused the setup tasks to not close out even after the required actions were completed.",
    "steps_taken": "The issue was fixed, and it was mentioned that once the ETA runs, it should resolve the problem. Monitoring was done to ensure the fix applied to all affected groups.",
    "data_models": "[]"
  },
  "BENINTEG-2669": {
    "key": "BENINTEG-2669",
    "issue": "Admin wants to know when and which user removed the carrier transmission email address for the Principal carrier.",
    "issue_summary": "The admin is seeking information on when and by whom the carrier transmission email address for the Principal carrier was removed. Rippling no longer sends forms by email for the Principal carrier as they do not accept it anymore.",
    "rca": "Rippling does not send forms by email for the Principal carrier as they do not accept it anymore. The admin wants to know when the email address was removed and which user removed it. A CustomEmailCommunicationDetail object was created by a user on January 23, 2024, indicating the current email addresses used for communication.",
    "steps_taken": "The engineering team checked the system and found a CustomEmailCommunicationDetail object created by the user 'kgsins@outlook.com' on January 23, 2024. The email addresses used for communication were identified, and it was confirmed that all communications for Principal are going through the specified emails. Debugging involved checking the PendingAction and CompanyInsuranceInfo objects to verify the communication details.",
    "data_models": "[CustomEmailCommunicationDetail, PendingAction, CompanyInsuranceInfo]"
  },
  "BENINTEG-2668": {
    "key": "BENINTEG-2668",
    "issue": "The Configuration Assignment Noyo Setup/Noyo Base Setup Tasks for the group's Guardian Noyo API connection setup are not being removed from the queue, even though the requested action in each task is being completed. Upon marking the task as completed, it reopens.",
    "issue_summary": "Tasks related to Noyo Setup are not closing out as expected due to a conflict in plan classifications, causing them to reopen after being marked as completed.",
    "rca": "The issue was caused by carrier configurations being assigned to more than one Noyo plan, which was not expected by the system. This led to tasks not closing out as the system did not recognize the logic of multiple Noyo plans being assigned to a single carrier configuration.",
    "steps_taken": "The engineering team confirmed that the tasks were not closing due to carrier configurations being assigned to multiple Noyo plans. They used the following code to debug the issue:\n\n```python\nfrom insurance.models.noyo_models import noyo_plans_require_carrier_configuration_assignment\nfrom insurance.models.noyo_models import NoyoCompanyPlanInfo\n\ntask = NoyoSetupTask.objects.get(id=\"670656209cac4e76b59580be\")\nnccs = NoyoCompanyCarrier.objects(company=task.company)\n\nbad_mappings, mappings = noyo_plans_require_carrier_configuration_assignment(task.company, nccs[0].noyoId)\n\nresult = []\nfor bad_plans in mappings.values():\n  for bad_plan in bad_plans:\n    result.append({\n      \"company_plan_info\": str(bad_plan.company_plan_info.id),\n      \"noyo_member_type\": bad_plan.noyo_member_type,\n      \"noyo_line_type\": bad_plan.noyo_line_type,\n      \"issue_details\": bad_plan.issue_details,\n    })\n\nunique_company_plan_infos = set([res[\"company_plan_info\"] for res in result])\n\nprint(list(unique_company_plan_infos))\nreturn result\n```\n\nThe team decided not to map plans to bill groups if the bill group is not specifically called out in the plan data from Noyo. This decision was documented to prevent similar issues in the future.",
    "data_models": "[NoyoSetupTask, NoyoCompanyCarrier, NoyoCompanyPlanInfo]"
  },
  "BENINTEG-2667": {
    "key": "BENINTEG-2667",
    "issue": "EE (David Rosson) has a new hire Equitable form where section 10 is not populating correctly, with child dependents showing in the spouse section during new hire enrollment.",
    "issue_summary": "In the new hire Equitable form for EE (David Rosson), section 10 is incorrectly populating child dependents in the spouse section instead of the expected spouse in the spouse section and children in the children section.",
    "rca": "The issue is related to incorrect form mapping, where the fields for spouse and children are not correctly mapped, leading to child dependents appearing in the spouse section.",
    "steps_taken": "Regenerated forms and confirmed that the form field details are correct but not populating correctly. Suggested submitting a form-mapping update request to correct the mapping.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2666": {
    "key": "BENINTEG-2666",
    "issue": "The issue involves PEO Open Enrollment snapshots where a significant number of requests encountered 422 API errors due to missing benefit class codes. Additionally, there is a problem with Texas (TX) benefit classes being incorrectly mapped to non-TX plans, affecting 1,700 out of 31,000 requests.",
    "issue_summary": "The issue is related to PEO Open Enrollment snapshots where missing benefit class codes caused API errors, and TX benefit classes were incorrectly mapped to non-TX plans.",
    "rca": "The root cause of the issue is a bug in the business logic for plan mappings for the PEO group for the new year, which led to incorrect mapping of benefit classes and missing class codes in the payload.",
    "steps_taken": "The steps taken to resolve the issue include updating the benefit class mapping for employees without a benefit class identifier, correcting the mapping for TX benefit class codes that were mapped to non-TX plans, investigating the incorrect mapping of TX employees to non-TX benefit classes, and running an audit query to generate a list of affected employees and correct their class code issues on the backend.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2664": {
    "key": "BENINTEG-2664",
    "issue": "There are multiple issues in this ticket. An employee terminated in March 2024 is still active with UHC, and UHC can only terminate back to 8/31/24. Additionally, there is a need to confirm the correct email address for sending UHC COBRA enrollments.",
    "issue_summary": "The issue involves a discrepancy in termination dates for an employee with UHC and the need to confirm the correct email address for COBRA enrollments. The root cause is a feature gap in Noyo.",
    "rca": "The root cause of the issue is a discrepancy in Noyo, which is categorized as a feature gap. This discrepancy led to missed terminations with UHC.",
    "steps_taken": "The steps taken to resolve the issue included confirming the correct email address for COBRA enrollments and resolving the discrepancy in termination dates. The discrepancy was eventually resolved, and the ticket was closed.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2663": {
    "key": "BENINTEG-2663",
    "issue": "The issue involved incorrect mapping of benefit classes for PEO groups in Texas, where employees were being mapped to non-TX plans, causing 422 API errors and incorrect processing at Guardian.",
    "issue_summary": "PEO groups in Texas had benefit classes incorrectly mapped to non-TX plans, leading to processing errors and requiring a remapping of benefit classes to the correct Texas-specific plans.",
    "rca": "There was an issue with the PEO plan mapping for Guardian, which was fixed by updating the benefit class mapping and resending the snapshots for the affected employees.",
    "steps_taken": "The steps taken included updating the benefit class mapping for employees with TX benefit class codes, running an audit query to identify affected employees, and resending the corrected snapshots. A script was used to send the snapshots, iterating over employee IDs and submitting member snapshots using the NoyoMemberSnapshotController.",
    "data_models": "[NoyoMember, NoyoMemberSnapshotController]"
  },
  "BENINTEG-2659": {
    "key": "BENINTEG-2659",
    "issue": "The carrier requires the transmission of 'DCP' in the HD03 field for the Arizona Liver Health group, but the system currently defaults to 'DEN'. This discrepancy is causing issues with the EDI file transmission.",
    "issue_summary": "The issue is that the system is set to transmit 'DEN' in the HD03 field by default, but for the Arizona Liver Health group, the carrier requires 'DCP'. This is a new request and the system does not currently support dynamic values based on account structure.",
    "rca": "The root cause of the issue is that the current system setup only allows for static plan codes in the HD03 field, which are set at the guide level and apply to all clients. The carrier's request for different codes for the same plan type based on group structure is not supported by the current system. This is a common requirement for larger clients with multiple plans and codes.",
    "steps_taken": "A feature request was created to address the need for dynamic values in the HD03 field based on client-level mapping rather than guide-level. The possibility of sending the feed to Ideon was also considered as an interim solution due to current capacity constraints.",
    "data_models": "No specific data models were mentioned in the ticket."
  },
  "BENINTEG-2657": {
    "key": "BENINTEG-2657",
    "issue": "The issue involves a request related to the 'Wall to wall inc - census snapshot' which was initially created from a Slack message.",
    "issue_summary": "The issue is a feature request related to the 'Wall to wall inc - census snapshot' that needs prioritization as a product enhancement.",
    "rca": "The root cause analysis indicates that the issue is categorized under 'Product Enhancement' and requires prioritization. It is linked to another Jira ticket BENINTEG-2759.",
    "steps_taken": "The issue was identified as a feature request and was subsequently closed, with a reference to the related Jira ticket BENINTEG-2759 for further tracking.",
    "data_models": "[]"
  },
  "BENINTEG-2649": {
    "key": "BENINTEG-2649",
    "issue": "Former Rippling employee Kyung Hyun Kim was not correctly enrolled in Aetna PEO COBRA coverage effective 09/01/2024. There is a request for the payload sent for this enrollment and any additional payload around 9/27/2024 that may indicate a termination.",
    "issue_summary": "Kyung Hyun Kim was not correctly enrolled in Aetna PEO COBRA coverage due to a possible mass termination event as Rippling was migrating off the PEO effective 10/01/2024.",
    "rca": "The operations team had the ability to handle this issue, and the system was working as expected. The issue arose from a misunderstanding or lack of awareness of the available resources, such as the Carrier Connections Dashboard.",
    "steps_taken": "The commenter suggested using the 'Carrier Connections Dashboard' to find the necessary information and advised against creating high-priority tickets unless discrepancies are found, as it adds unnecessary noise for the engineering team.",
    "data_models": "[]"
  },
  "BENINTEG-2648": {
    "key": "BENINTEG-2648",
    "issue": "The issue involves updating the email address where carrier enrollment forms are sent for the customer xai. The forms should be sent to Acis.teamdesare@amwins.com instead of the carrier. There is a problem with the system not allowing the update of email addresses for dual communication, causing delays in enrollment completion for new hires.",
    "issue_summary": "The issue is that carrier enrollment forms for the customer xai are not being sent to the correct email address (Acis.teamdesare@amwins.com) due to limitations in the system's ability to update email addresses for dual communication setups.",
    "rca": "The root cause of the issue is a gap in the system that does not allow editing of email addresses for dual communication once the connection is live. This limitation affects the ability to send enrollment forms to the correct email address, causing delays in enrollment completion.",
    "steps_taken": "To resolve the issue, a temporary solution was implemented by adding a custom communication email to redirect enrollments to the correct email address. The following code snippet was used: \n\n```\nncc = CustomCommunicationDetail.objects.filter(company=\"661593c2151f9b9615cdad0d\", id=\"6719465361ef2f4b6f2a09e1\")[0]\nncc.delete()\nreturn CustomEmailCommunicationDetail.objects.create(\n    company=ncc.company,\n    carrier=ncc.carrier,\n    emailAddress=\"Acis.teamdesare@amwins.com\"\n)\n```\n\nThis hack was necessary to redirect enrollments to the specified email address until the Noyo connection is set up.",
    "data_models": "[CustomCommunicationDetail, CustomEmailCommunicationDetail]"
  },
  "BENINTEG-2647": {
    "key": "BENINTEG-2647",
    "issue": "When mapping the group ACA Labs Inc as part of the Ideon to Noyo migration, there are duplicate instances of Anthem Gold PPO HSA/H 1700/3200/3400 15% PrevRx from Ideon, causing a 'Please choose a unique value' error.",
    "issue_summary": "Duplicate instances of a plan from Ideon are causing a mapping error during the Ideon to Noyo migration for the group ACA Labs Inc.",
    "rca": "The issue was caused by older mappings that were still present and causing conflicts during the mapping process.",
    "steps_taken": "The older mappings causing the issue were identified and deleted, allowing the mapping process to proceed without errors.",
    "data_models": "[]"
  },
  "BENINTEG-2645": {
    "key": "BENINTEG-2645",
    "issue": "EE's are in the wrong plan with Anthem due to incorrect mapping, preventing the amendment for Haley Matthys from being pushed over.",
    "issue_summary": "Employees were enrolled in the wrong plan with Anthem due to incorrect mapping, which needed updating to push an amendment for Haley Matthys.",
    "rca": "The issue was caused by a manual data entry error where the plan was incorrectly mapped to two plans.",
    "steps_taken": "The invalid mapping was deleted using the following code snippet: `return NoyoCompanyPlanInfo.objects.filter(company_plan_info=\"66ba84e0d5fdd3f89f3a8afc\", id=\"67077bb8bf330fa13133a4b0\").delete()`. After this correction, the amendment was successfully sent over.",
    "data_models": "[NoyoCompanyPlanInfo]"
  },
  "BENINTEG-2644": {
    "key": "BENINTEG-2644",
    "issue": "The 'Send Snapshots' checkbox in the Finalize Noyo Connection retool was not functioning as expected, leading to duplicate census requests being sent even when the checkbox was unchecked.",
    "issue_summary": "The 'Send Snapshots' checkbox in the Finalize Noyo Connection retool was not disabling the sending of duplicate census requests as intended, due to an implementation bug.",
    "rca": "The issue was caused by an incorrect implementation in the retool, which failed to properly disable the sending of snapshots when the checkbox was unchecked.",
    "steps_taken": "The bug was identified and fixed by the engineering team, as confirmed in the comments.",
    "data_models": "No specific data models were mentioned in the ticket."
  },
  "BENINTEG-2641": {
    "key": "BENINTEG-2641",
    "issue": "Noyo setup tasks for Hakkoda, Inc. have reopened due to incorrect carrier configuration, causing delays in processing insurance benefits.",
    "issue_summary": "Noyo setup tasks for Hakkoda, Inc. reopened due to incorrect mapping of billing group 000 to multiple vision plans, which is not valid according to Noyo API.",
    "rca": "The root cause of the issue was the incorrect mapping of the subgroup 000 to multiple vision plans with the same name in the Noyo system. This configuration was not valid as per Noyo API requirements, leading to the reopening of setup tasks.",
    "steps_taken": "The issue was identified as a mapping error where billing group 000 was assigned to multiple vision plans. The resolution involved correcting the mapping to ensure that configuration values do not overlap among plan mappings for the same line type, member type, and Rippling plan.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2640": {
    "key": "BENINTEG-2640",
    "issue": "The member elected to enroll in Dental coverage with Beam, but the carrier config box with the actual enrollment information is missing for the dental line of coverage.",
    "issue_summary": "The dental coverage enrollment information for the member is not populating, and there is no indication of a group-level issue or communication issue within Noyo and Rippling.",
    "rca": "The system was working as expected, and there was a wrong expectation regarding the missing carrier config box.",
    "steps_taken": "The issue was reviewed, and it was confirmed that the member has active enrollments as shown in Noyo. The ticket was then closed as the system was functioning correctly.",
    "data_models": "[]"
  },
  "BENINTEG-2639": {
    "key": "BENINTEG-2639",
    "issue": "Rippling employee's Noyo transaction issue where the event reason was incorrectly marked as 'new_hire' instead of 'termination', causing confusion in processing the employee's termination from the Noyo group.",
    "issue_summary": "The issue involved a Rippling employee's transaction with Noyo where the event reason was incorrectly marked as 'new_hire' instead of 'termination', leading to confusion about the intended action for the employee's coverage.",
    "rca": "The root cause of the issue was a bug in the Noyo system where the event reason for the employee's transaction was incorrectly set to 'new_hire' instead of 'termination'. This discrepancy led to confusion about whether the employee was being newly hired or terminated, especially since Rippling had moved off of PEO.",
    "steps_taken": "The issue was discussed in comments, and it was noted that another snapshot had already been sent to terminate coverage. The resolution involved ensuring that the correct snapshot was processed to terminate the employee's coverage. The ticket was eventually closed with the decision that the issue needed to be tracked by operations and Noyo engineering.",
    "data_models": "No specific data models were mentioned in the ticket."
  },
  "BENINTEG-2638": {
    "key": "BENINTEG-2638",
    "issue": "There is a future COBRA end date listed for the member's medical COBRA coverage that needs to be removed, and an amendment needs to be pushed via Ideon.",
    "issue_summary": "The issue involves a future COBRA end date for Kelcy Heringer's medical coverage that should not be present. The amendment needs to be pushed through Ideon to correct this.",
    "rca": "The root cause of the issue was identified as a Vericred QLE update, which likely led to the incorrect future COBRA end date being set.",
    "steps_taken": "A manual amendment was pushed to Vericred to address the issue. The team discussed using the Vericred retool to send out a manual amendment and explored ways to manually remove the end date for a Vericred amendment.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2637": {
    "key": "BENINTEG-2637",
    "issue": "The employee's Kaiser forms are incorrectly showing as sent via Vericred API, despite the Kaiser file feeds being expired since 2023.",
    "issue_summary": "The issue is that the Kaiser forms are being sent via Vericred API even though the Kaiser file feeds are expired, which should not happen.",
    "rca": "The Vericred coverage period on the Vericred side was deleted on 21-10-2024, causing the system to switch to using Noyo. The coverage actually expired in July 2024, and the API stopped sending data to Vericred after 21-10-2024.",
    "steps_taken": "The issue was identified by checking the object history of the Vericred coverage period, which showed that the coverage expired in July 2024 and was deleted on 21-10-2024, leading to the switch to Noyo.",
    "data_models": "[CustomVericredCommunicationDetail, VericredCompanyCoveragePeriodInfo]"
  },
  "BENINTEG-2636": {
    "key": "BENINTEG-2636",
    "issue": "Request to stop submission of all coverage periods to Ideon for Kaiser PEO and Voya PEO carriers by the week of 11/4/2024.",
    "issue_summary": "The issue involves stopping the submission of coverage periods to Ideon for Kaiser PEO and Voya PEO carriers to prevent accidental production moves by Ideon after they bulk-expire all active coverage periods for these carriers on 11/1/2024.",
    "rca": "The root cause was addressed by switching off the submission using a support tool called retool.",
    "steps_taken": "The submission of coverage periods to Ideon was switched off using retool. The task was added to the sprint, and the coverage periods (CPs) were checked and confirmed to be completed by 11/14/2024.",
    "data_models": "[]"
  },
  "BENINTEG-2635": {
    "key": "BENINTEG-2635",
    "issue": "The issue involves a lapse in COBRA medical coverage for a member due to an incorrect transmission of the medical COBRA term date, which was set to the policy-year end date, causing the member's coverage to lapse.",
    "issue_summary": "The COBRA medical coverage for a member lapsed due to an incorrect transmission of the term date, which was set to the policy-year end date, causing the member's coverage to lapse.",
    "rca": "The root cause of the issue was a manual data entry error where the medical COBRA term date was incorrectly transmitted as the policy-year end date. This led to the member's coverage being dropped from the file feed after two transmissions due to a system quirk in Ideon.",
    "steps_taken": "The steps taken to resolve the issue included removing the incorrect 11/30/2024 end date for the member's Aetna PEO COBRA coverage to prevent the member from dropping off the file feed and experiencing another lapse in coverage. It was noted that the member would either re-enroll or waive for 12/01, which should automatically re-apply an 11/30 end date in either scenario.",
    "data_models": "[PendingAction, SubscriberLineInfo]"
  },
  "BENINTEG-2634": {
    "key": "BENINTEG-2634",
    "issue": "101 blocked transactions with the group_coverage_cancellation event reason due to mapping issues, specifically related to benefit class options for various carriers.",
    "issue_summary": "Blocked transactions for group coverage cancellation due to mapping issues with benefit class options, particularly for groups that have left the PEO.",
    "rca": "The root cause of the issue was identified as a problem with the benefit class calculation, which led to multiple benefit_class options being available for a group, causing errors in the carrier configuration for coverage.",
    "steps_taken": "Engineering reviewed the blocked transactions and corrected the mapping issues related to benefit class options. The transactions were resolved with Guardian PEO.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2633": {
    "key": "BENINTEG-2633",
    "issue": "The Carrier transmission tab for Strive Health was not updated to reflect the active API connection with Kaiser after migrating from Ideon to Noyo.",
    "issue_summary": "The Carrier transmission tab for Strive Health was not updated to show the active API connection with Kaiser after the migration from Ideon to Noyo, causing confusion as the EDI was shown as inactive.",
    "rca": "The issue was due to incorrect steps/state error during the migration process, which required the use of a retool to finalize the Noyo connection and cut off Ideon.",
    "steps_taken": "The issue was resolved by using the Retool application to finalize the Noyo connection and cut off the Ideon connection for Kaiser. The link to the Retool application used was provided in the comments.",
    "data_models": "[]"
  },
  "BENINTEG-2632": {
    "key": "BENINTEG-2632",
    "issue": "Dianna Lesage needs access to coverage, but an amendment cannot be sent to get her coverage due to mapping issues for Monevate.",
    "issue_summary": "Mapping issue for Monevate preventing Dianna Lesage from accessing coverage, requiring a business logic change.",
    "rca": "The issue was caused by how carrier classifications (ccs) were set up, which required a business logic change to resolve.",
    "steps_taken": "The issue was fixed by deleting the incorrect carrier classification setup using the code: `CarrierClassification.objects.filter(company=role.company)[0].delete()`.",
    "data_models": "[CarrierClassification]"
  },
  "BENINTEG-2631": {
    "key": "BENINTEG-2631",
    "issue": "The enrollment form for the employee, Shubham Singhal, was not attached while sending the email to MetLife, causing the carrier to push back.",
    "issue_summary": "The issue was that the enrollment form for an employee was not attached to the email sent to MetLife, which is expected to contain the attachment. This was a one-time issue that required further investigation.",
    "rca": "The root cause analysis revealed that the issue was an intermediate system glitch where the attachment was not sent with the email. The email template had been modified to remove the insurance-broker-ops email due to high delivery failure rates, which might have contributed to the oversight. Additionally, the deprecated email service being used lacked observability, making it difficult to track attachment issues.",
    "steps_taken": "The steps taken to resolve the issue included verifying that the attachment was being created using the following code snippet:\n\n```python\npa = PendingAction.objects.get(id=\"671937eb5849ed63cdcf5ded\")\nattachmentData = pa.pendingActionGroup.generateFormsForAttachment([pa])\nreturn attachmentData\n```\n\nA test email was sent to verify the attachment was included using a script derived from `EmailDetails.performAction`. The email was then resent to the client, and the status was checked on the Paubox dashboard, which confirmed email delivery but did not provide attachment tracking.",
    "data_models": "[PendingAction, PendingActionGroup, CompanyInsuranceInfo]"
  },
  "BENINTEG-2628": {
    "key": "BENINTEG-2628",
    "issue": "The automated schedules for production files for the client Kenetic with carrier UHC need to be stopped as the client is moving to PEO.",
    "issue_summary": "The client Kenetic is transitioning to PEO, requiring the cessation of automated production file schedules with carrier UHC.",
    "rca": "The issue was resolved by stopping the feed from Webscript, as indicated in the root cause analysis.",
    "steps_taken": "The production feed for the group was stopped, and communications are now being handled via email.",
    "data_models": "[]"
  },
  "BENINTEG-2627": {
    "key": "BENINTEG-2627",
    "issue": "OneKonnect received plan terminations for TaskRabbit in the 10/29/2024 production file, which should not have been passed. This affected 122 members who completed their elections for 1/1/2025 plans, and the carrier flagged this issue due to tolerance checks.",
    "issue_summary": "Plan terminations were incorrectly generated and sent to OneKonnect for TaskRabbit's 1/1/2025 renewal, affecting 122 members.",
    "rca": "The issue was due to a bug in the logic handling special cases, which led to incorrect termination dates being populated for members who had completed their elections for the upcoming plan year.",
    "steps_taken": "The logic was reviewed and optimized to ensure terminations are passed correctly. The issue was confirmed to be fixed as per the comments.",
    "data_models": "[]"
  },
  "BENINTEG-2626": {
    "key": "BENINTEG-2626",
    "issue": "Rounding rules for Basic Life and AD&D benefits were not working as expected, causing benefit amounts to not round up to the nearest $1,000 as required. For example, an employee with a salary of $136,500 was not having their benefit amount rounded to $137,000.",
    "issue_summary": "The issue was that the benefit amounts for Basic Life and AD&D were not rounding to the nearest $1,000 as per the plan settings, causing discrepancies in the transmitted benefit amounts.",
    "rca": "The root cause was identified as a special case handling for Ideon where the rounding logic was deliberately removed in a previous code change. This was done without clear documentation or reasoning, leading to the current issue where the benefit amounts were not rounded as expected.",
    "steps_taken": "The team reviewed the existing code and identified that the rounding logic was removed for Ideon. After discussions, it was decided to rely on the `approvedBasicVolumeInfo` method, which includes the rounded volume. The changes were implemented and pushed to production, and the issue was verified to be resolved after MetLife confirmed the rounding rules were working as expected.",
    "data_models": "[SubscriberLineInfo, LifeLikePlan, ShortTermDisabilityPlan, LongTermDisabilityPlan]"
  },
  "BENINTEG-2625": {
    "key": "BENINTEG-2625",
    "issue": "The automated schedules for production files for a list of clients needed to be stopped before specific dates due to the clients starting their Open Enrollment (OE).",
    "issue_summary": "Automated schedules for production files for certain clients needed to be halted as these clients had already begun their Open Enrollment, and there was a need to ensure that forms would restart automatically after stopping the schedules.",
    "rca": "The root cause was related to the support tool used, which required intervention to stop the automated schedules for the specified clients due to their Open Enrollment period.",
    "steps_taken": "A script was executed to disable the feed and fallback to communication details. The script involved filtering VendorPartnerCompany objects by company IDs, checking for existing communication details, and printing old and new communication methods. The feeds were marked to ingestion, and all of them fell back to default carrier emails. The process was verified, and the ticket was closed after ensuring the weekly EDI file didn't transmit for the mentioned clients.",
    "data_models": "[VendorPartnerCompany, CustomStediCommunicationDetail, CompanyInsuranceInfo]"
  },
  "BENINTEG-2622": {
    "key": "BENINTEG-2622",
    "issue": "OneKonnect received plan terminations for Astra Space Operations in the 10/29/2024 production file, which should not have occurred. This issue has a high impact potential for upcoming 1/1/2025 renewals.",
    "issue_summary": "Plan terminations were incorrectly generated for Astra Space Operations in the data sent to OneKonnect, affecting the 1/1/2025 renewal. The terminations were caught by the carrier's tolerance checks.",
    "rca": "The root cause was identified as a bug related to special case handling optimizations, which led to incorrect terminations being sent.",
    "steps_taken": "A change was pushed to the codebase to address the issue, as referenced in the GitHub pull request: https://github.com/Rippling/rippling-main/pull/279259. The fix was confirmed to be effective in the subsequent dataset.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2621": {
    "key": "BENINTEG-2621",
    "issue": "Lisa is receiving emails from Rippling even though she is not listed as a third-party benefits administrator.",
    "issue_summary": "Lisa is receiving emails from Rippling despite not being listed as a third-party benefits administrator due to her email being added under the carrier transmission tab.",
    "rca": "The root cause of the issue was that Lisa's email was added under the carrier transmission tab, which led to her receiving notifications. This was identified as the reason for the emails being sent to her.",
    "steps_taken": "The email was removed from the carrier transmission tab after it moved to production on 26th October. It was confirmed that no emails should have been sent after this date, and the issue was resolved by ensuring the email was no longer listed.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2620": {
    "key": "BENINTEG-2620",
    "issue": "Group admin reported a missed Qualifying Life Event (QLE) for a newborn, which was not transmitted to Noyo. The newborn was born on 9/1 but was only added to Rippling on 9/30. An amendment for the QLE dated 9/24 needs to be pushed to Noyo.",
    "issue_summary": "Missed QLE for a newborn not transmitted to Noyo, requiring a retroactive amendment.",
    "rca": "The root cause analysis category is 'Noyo' with a subcategory of 'Visibility', indicating that the issue was related to the visibility or transmission of the QLE to Noyo.",
    "steps_taken": "The QLE was confirmed to have been sent on 2024-10-30, as verified by the comments in the ticket.",
    "data_models": "[]"
  },
  "BENINTEG-2619": {
    "key": "BENINTEG-2619",
    "issue": "Transmission error occurred while moving Kinetic UHC & Dosu, Inc. UHC Prime to production in Retool.",
    "issue_summary": "Transmission error was encountered for Kinetic UHC & Dosu, Inc. UHC Prime during production transmission in Retool, which had been running smoothly for two weeks prior.",
    "rca": "The groups were under Open Enrollment (OE), which prevented the files from being sent to the carrier.",
    "steps_taken": "Triggered new INGESTION files and marked them as accepted to resolve the error.",
    "data_models": "[]"
  },
  "BENINTEG-2618": {
    "key": "BENINTEG-2618",
    "issue": "756 transactions for the Guardian PEO were blocked due to incorrect classification code mapping, causing issues with plan mapping and blocking Open Enrollment (OE).",
    "issue_summary": "The issue involved 756 blocked transactions for the Guardian PEO due to incorrect classification code mapping, which led to errors in plan mapping and blocked Open Enrollment processes.",
    "rca": "The root cause of the issue was identified as incorrect plan mapping related to Noyo, specifically issues with classification code mapping that prevented transactions from being processed correctly.",
    "steps_taken": "The engineering team reviewed the blocked transactions and classification codes. They ran a script to address the classification issues by filtering and deleting incorrect entries. Manual intervention was required for some transactions, and forms were sent to reduce the number of blocked transactions. Continuous monitoring and manual resolution were applied to further reduce the number of blocked transactions.",
    "data_models": "[CarrierClassification, InsuranceCompanyCarrierLineInfo, NoyoCompanyPlanInfo]"
  },
  "BENINTEG-2617": {
    "key": "BENINTEG-2617",
    "issue": "The production file was not sending the medical enrollment for the spouse of an employee, Faraz Shaikh, after a Qualifying Life Event (QLE) on 10/03/2024. The file was only sending dental and vision enrollments, and the spouse's medical enrollment was missing. Additionally, the spouse's record was incorrectly placed at the end of the file instead of right after the employee's record.",
    "issue_summary": "The issue was that the medical enrollment for the spouse was not being included in the file sent to the carrier, and the spouse's record was incorrectly positioned in the file.",
    "rca": "The root cause analysis revealed that it was not clear why the pending action for the spouse's medical enrollment was not created initially. However, the issue was resolved by regenerating the pending action. It was also noted that the dependent's record was being added at the end of the file, which was fixed.",
    "steps_taken": "The issue was resolved by regenerating the pending action for the QLE, which correctly included the medical data for the spouse. It was suspected that someone might have manually altered the SubscriberLineInfo (SLI) entries, but this could not be confirmed due to the lack of old logs. The file was regenerated, and the spouse's medical record was correctly included and positioned.",
    "data_models": "[StediEdiPendingAction, SubscriberLineInfo]"
  },
  "BENINTEG-2616": {
    "key": "BENINTEG-2616",
    "issue": "Forms were being sent for member level transactions even though the Noyo EDI feed was in production for Hometap BCBS MA coverage.",
    "issue_summary": "Despite the Noyo EDI feed being in production, forms were sent for transactions, indicating a failure in disabling forms upon EDI activation.",
    "rca": "Outstanding plan mapping tasks were not resolved automatically, likely due to them being associated with older, unused plans. Marking these tasks as DONE resolved the issue for future transactions.",
    "steps_taken": "Completed troubleshooting steps to ensure the Noyo EDI feed was set up correctly. Verified with the carrier that the first production file was delivered successfully. Identified that marking outstanding plan mapping tasks as DONE resolved the issue.",
    "data_models": "No specific data models were mentioned in the ticket."
  },
  "BENINTEG-2615": {
    "key": "BENINTEG-2615",
    "issue": "The COBRA Cancellation form was not sent for a specific employee, Robert Smith, causing a significant financial impact as the carrier will not retroactively terminate the coverage.",
    "issue_summary": "The COBRA Cancellation form was not generated and sent when the event was completed, but it was generated when 'Regenerate Group Forms' was clicked. This issue caused financial implications as the coverage was not terminated timely.",
    "rca": "A bug in the system was identified and fixed in March 2024. The bug prevented COBRA updates from being generated and sent to carriers outside of the Open Enrollment window, which is necessary for timely processing by carriers.",
    "steps_taken": "The issue was resolved by regenerating the forms after the bug fix was applied. The relevant pull request that fixed the bug is: [https://github.com/Rippling/rippling-main/commit/be30a079b4d29ce107ae82ab457cf398bf544e14].",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2614": {
    "key": "BENINTEG-2614",
    "issue": "The user is unable to add an email to a client's form sending setup because the field is hidden due to the initiation of the carrier connection process. This is preventing the addition of a contact to be cc'd on Anthem forms for processing employee enrollments.",
    "issue_summary": "The issue is that the user cannot add an email to the form sending setup for a client because the field is hidden after starting the carrier connection process. This is a feature request to add a specific email to be cc'd on Anthem forms.",
    "rca": "The root cause of the issue is that the system does not allow adding non-role emails to the form sending setup once the carrier connection process has started. The email needs to be an admin in the company to be added.",
    "steps_taken": "The team discussed the issue and concluded that non-admin emails cannot be added to the form sending setup. The request was closed with no further action needed as the email must be an admin to be added.",
    "data_models": "[]"
  },
  "BENINTEG-2613": {
    "key": "BENINTEG-2613",
    "issue": "The forms for Ascend Healthcare are being sent to an incorrect email address (sf_service@metlifeservice.com) that does not process enrollment changes. The correct email address should be Phoenix_Service@metlifeservice.com. The group is unable to edit the email themselves as they are in the process of setting up their EDI connection.",
    "issue_summary": "Forms for Ascend Healthcare are being sent to the wrong email address, and the group cannot update it due to ongoing EDI setup.",
    "rca": "The root cause of the issue was that the email address for sending forms was not updated to the correct one (Phoenix_Service@metlifeservice.com) while the carrier connection was being set up.",
    "steps_taken": "The incorrect email entry was deleted and a new entry was created with the correct email address using the following code:\n\n```python\ncc = CustomCommunicationDetail.objects_including_deleted.filter(company=\"66b67cd553e9bdc2b3b53bb9\", id=\"6717f82d90eee910724e3e7d\")[0]\ncc.delete()\n\nreturn CustomEbnCommunicationWithCustomEmailDetail.objects.create(\n    company=cc.company,\n    carrier=cc.carrier,\n    emailAddress=\"Phoenix_Service@metlifeservice.com\"\n)\n```",
    "data_models": "[CustomCommunicationDetail, CustomEbnCommunicationWithCustomEmailDetail]"
  },
  "BENINTEG-2612": {
    "key": "BENINTEG-2612",
    "issue": "The forms for the group Cavnue are being sent to an incorrect email address (SBUPortal Support) that does not process enrollment changes. The admin was informed by CareFirst that the correct email should be Maya.Stone@carefirst.com. The group is unable to edit the email themselves due to the ongoing EDI connection setup.",
    "issue_summary": "Forms for the group Cavnue are being sent to the wrong email address, and the group cannot update it themselves due to EDI setup. The correct email should be Maya.Stone@carefirst.com.",
    "rca": "The root cause of the issue was a manual data entry error where the incorrect email address was set for sending forms to CareFirst.",
    "steps_taken": "The email address for the group was updated in the system to Maya.Stone@carefirst.com using the following code snippet:\n\n```python\ncarefirst = InsuranceCompanyCarrierLineInfo.objects.filter(company=\"66b65abda624aa963ae28205\", id=\"6717ec7d405f4f6282228280\")[0].carrier\nce = CustomCommunicationDetail.objects.get(\n    company=\"66b65abda624aa963ae28205\",\n    carrier=carefirst,\n)\nce.emailAddress = \"Maya.Stone@carefirst.com\"\nce.save()\nreturn ce\n```\n\nLater, the email was updated again to commercialenrollment@carefirst.com as per the broker's request.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CustomCommunicationDetail]"
  },
  "BENINTEG-2611": {
    "key": "BENINTEG-2611",
    "issue": "Admin reported that an employee is missing COBRA vision coverage due to a missed QLE prior to termination, preventing COBRA enrollment as there was no prior coverage. Unable to send amendment as it defaults to a termination date prior to the term date in the employee profile.",
    "issue_summary": "Employee is missing COBRA vision coverage due to a missed QLE prior to termination, and the system defaults to a termination date prior to the term date, preventing amendment.",
    "rca": "The system is working as expected. The QLE did not send a snapshot, resulting in no vision coverage. The group is not on snapshots yet, and the QLE was sent, but the employee is terminated and not in COBRA.",
    "steps_taken": "The request was to send a Noyo amendment for the employee and 3 dependents, showing QLE with reason 'dependent lost coverage' dated 10/9, effective 10/1/24. However, it was noted that the group is not on snapshots yet, and the QLE did get sent.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-2610": {
    "key": "BENINTEG-2610",
    "issue": "Noyo flagged a group for sending past year plan data on current year enrollments for United Healthcare, causing an error when reviewing an employee's snapshot.",
    "issue_summary": "Noyo flagged an issue where past year plan data was being sent for current year enrollments for United Healthcare. The error was due to a previous year plan being referenced, which was not in the plan mapper.",
    "rca": "CCLI was being picked and is no longer being picked as its expired now.",
    "steps_taken": "Snapshot is no longer picking up the previous plans, allowing the process to continue.",
    "data_models": "[InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-2609": {
    "key": "BENINTEG-2609",
    "issue": "Noyo flagged a group for sending past year plan data on current year enrollments for United Healthcare. The DG93 plan is missing in the Noyo plan mapper, even though it is listed in the renewal event for the group.",
    "issue_summary": "The DG93 plan is missing in the Noyo plan mapper, causing past year plan data to be sent for current year enrollments.",
    "rca": "The plan is present in the Noyo Plan Mapper (NPM), indicating that the system is working as expected and the issue might be due to a wrong expectation.",
    "steps_taken": "Reviewed the plan mappings and confirmed that the DG93 plan is present in the Noyo Plan Mapper.",
    "data_models": "[]"
  },
  "BENINTEG-2608": {
    "key": "BENINTEG-2608",
    "issue": "The issue involves aligning renewal files with Noyo for Aetna, specifically mapping the 2024-2025 Aetna plans to send updated census files to Aetna and Noyo. This is blocking Aetna enrollments due to incorrect or incomplete plan mappings.",
    "issue_summary": "The problem is related to the mapping of Aetna plans for the 2024-2025 renewal period, which is necessary for sending updated census files to Aetna and Noyo. The issue is causing a blockage in Aetna enrollments due to discrepancies in plan mappings.",
    "rca": "The root cause of the issue is related to the plan mapping with Noyo for Aetna PEO 2024. There were changes in plan codes and account identifiers that were not fully aligned between Rippling and Noyo, leading to discrepancies in the data being sent to Aetna.",
    "steps_taken": "The steps taken to resolve the issue included updating the plan mappings based on the structure workbook provided by Aetna, confirming the changes with Noyo, and preparing to send a full census on 11/8. A trial run of OE enrollments was suggested to catch any mapping issues early. The mappings were updated to include new plan codes and account identifiers, and the team confirmed that the mappings were correct and ready for sending enrollments.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2607": {
    "key": "BENINTEG-2607",
    "issue": "ClassDojo, Inc. is experiencing errors in the Noyo system due to a duplicate dependent causing an API error.",
    "issue_summary": "ClassDojo, Inc. faced an issue where Noyo requested an edited snapshot data due to a duplicate dependent causing an API error.",
    "rca": "The issue was caused by a duplicate dependent in the Noyo system, which led to the creation of an additional Noyo ID. Noyo periodically cleans up duplicates, and in this case, removed the dependent with the Noyo ID stored in the system, causing the API error.",
    "steps_taken": "A new snapshot request was sent without a dependent ID attached, as requested by Noyo, to resolve the issue.",
    "data_models": "[]"
  },
  "BENINTEG-2606": {
    "key": "BENINTEG-2606",
    "issue": "The group 'Wellthy, Inc' was onboarded with a test Transaction Setting Id, which cannot be changed by the user as the group has already moved to production. The request is to update the Transaction Setting Id to ensure that the next week's production files are sent to Cigna.",
    "issue_summary": "The group 'Wellthy, Inc' was onboarded with a test Transaction Setting Id, and it needs to be updated to a production Transaction Setting Id for sending files to Cigna.",
    "rca": "The issue was fixed using a webscript as the group had already moved to production, and the Transaction Setting Id could not be changed manually.",
    "steps_taken": "The Transaction Setting Id was updated from '005010X220A1-834-test' to '005010X220A1-834-prod' using a webscript to ensure that the production files are sent to Cigna.",
    "data_models": "[]"
  },
  "BENINTEG-2605": {
    "key": "BENINTEG-2605",
    "issue": "FACING TRANSMISSION ERROR WHILE TRIGGERING TEST FILE due to a terminated employee with a UK address causing validation errors.",
    "issue_summary": "Transmission error occurred because a terminated employee, Amber Kleinbort, had a UK address with a state code 'ENG' which exceeded the 2-character limit, causing validation errors.",
    "rca": "File was not generated because of wrong data of terminated employee which was expected behaviour. The terminated employee had a UK address, which should not have been included in the file, leading to the validation error.",
    "steps_taken": "The issue was identified as being caused by the inclusion of a terminated employee with an invalid address format. It was noted that files could be generated without this employee after December 1st. The ticket was closed after confirming that many files were already generated and sent successfully.",
    "data_models": "[Member]"
  },
  "BENINTEG-2604": {
    "key": "BENINTEG-2604",
    "issue": "Dependent COBRA issue where dependents are populating without a subscriber, causing errors in the Cigna system.",
    "issue_summary": "Dependents eligible for COBRA are populating without a subscriber to attach to, causing errors in the Cigna system. Cigna requires one of the dependents to be elevated to a subscriber.",
    "rca": "The issue was categorized as a product enhancement, indicating that a feature needed to be added to handle dependents of COBRA subscribers correctly. The dependents were populating individually without a subscriber, which was not supported by Cigna's system.",
    "steps_taken": "The issue was identified and linked to a related issue (BENINTEG-2112). A fix was deployed, and a controlled rollout was conducted. The fix was confirmed to be effective as all dependents were having a subscriber in the previous year's plan.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2602": {
    "key": "BENINTEG-2602",
    "issue": "Client was unable to proceed with the EDI carrier transmission setup as the 'continue' button was non-responsive.",
    "issue_summary": "The 'continue' button did not work during the EDI carrier transmission setup due to a data issue.",
    "rca": "The root cause of the issue was identified as incorrect data related to forms, which prevented the 'continue' button from functioning properly.",
    "steps_taken": "The issue was resolved by executing a database operation to delete certain entries related to the company ID '662167ba84c20ccce3b6ae58'. The code snippet used was: `return BaseCompanyCarrierTransmission.objects.filter(company=\"662167ba84c20ccce3b6ae58\").delete()`. After this operation, the client was able to proceed with the setup.",
    "data_models": "[BaseCompanyCarrierTransmission]"
  },
  "BENINTEG-2601": {
    "key": "BENINTEG-2601",
    "issue": "Employee Ryan Johnson from Gecko Robotics, Inc. did not have a New Hire Enrollment (NHE) transaction sent via Noyo, impacting coverage with Guardian.",
    "issue_summary": "The NHE transaction for employee Ryan Johnson was not sent via Noyo, potentially affecting his insurance coverage with Guardian.",
    "rca": "The Noyo API was initially giving a 404 error, which prevented the transaction from being sent. The issue was later resolved, but the root cause analysis was not completed as the admin decided to drop Guardian and no longer required it.",
    "steps_taken": "The issue was resolved by sending the transaction after the initial 404 error from the Noyo API was addressed. Further root cause analysis was deemed unnecessary as the admin dropped Guardian.",
    "data_models": "[]"
  },
  "BENINTEG-2600": {
    "key": "BENINTEG-2600",
    "issue": "At least 25 employees at Tive, Inc. entered their entire home address into the 'Address Line 1' field of their Rippling employee profiles. This issue is blocking the migration from Ideon to Noyo and requires a workaround to update the addresses in bulk without employee action.",
    "issue_summary": "Employees at Tive, Inc. incorrectly entered their home addresses, causing a block in the migration from Ideon to Noyo. The issue requires a method to update addresses in bulk without employee sign-off.",
    "rca": "No issue on the integration side; the system is working as expected. The problem arose from incorrect address entry by employees, which requires employee sign-off for updates.",
    "steps_taken": "The HRIS team attempted to change addresses using the EE debugger but lacked permissions. They explored bulk import options but found none. The issue was escalated to the Benefits Integrations team to confirm if updates can be made without employee sign-off. It was confirmed that demographic change events are created upon profile updates, but the event is not 'complete' until the employee signs off. Amendments can be used to sync discrepancies between Rippling and carrier systems.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-2598": {
    "key": "BENINTEG-2598",
    "issue": "The scheduled production file for Vestwell Holdings, Inc. needed to be stopped before the next scheduled run, and forms needed to be turned back on as the client requested manual enrollment submissions.",
    "issue_summary": "The client, Vestwell Holdings, Inc., requested to stop the automated production file scheduled for Cigna and to manually send enrollments instead. This required stopping the scheduled file and turning forms back on.",
    "rca": "A webscript was run to move VPC to ingestion and delete CCD, which was necessary to stop the scheduled production file and enable manual form submissions.",
    "steps_taken": "The scheduled production file was stopped, and forms were successfully turned on as confirmed by the comments in the ticket.",
    "data_models": "[]"
  },
  "BENINTEG-2597": {
    "key": "BENINTEG-2597",
    "issue": "Noyo Setup Tasks for 31south have re-opened, requiring engineering attention to address missing carrier configurations.",
    "issue_summary": "Noyo Setup Tasks for 31south have re-opened due to missing carrier configurations related to bill_group_id values.",
    "rca": "The issue was identified as a problem with plan mapping tasks under the Noyo category, specifically related to missing carrier configurations for bill_group_id values.",
    "steps_taken": "The tasks were acknowledged as a bug and temporarily deleted to prevent forms from being routed to email. A fix is expected to be implemented by Monday.",
    "data_models": "[]"
  },
  "BENINTEG-2596": {
    "key": "BENINTEG-2596",
    "issue": "The issue being faced is that during open enrollment, employees are seeing a pop-up message indicating they are waiving 'Group life coverage' instead of 'medical coverage', causing confusion.",
    "issue_summary": "Employees are confused during open enrollment as the pop-up message incorrectly states they are waiving 'Group life coverage' instead of 'medical coverage'. The admin wants to update the terminology to clarify that it pertains to medical coverage.",
    "rca": "The root cause analysis revealed that the terminology used in the pop-up message was intended to represent 'overall life/health related benefits', but it was misleading employees to think it was specifically about life insurance. The system was working as expected, but the language needed to be updated for clarity.",
    "steps_taken": "The issue was identified as a terminology update needed on the carrier configuration side. The integrations team was tasked with updating the copy to read 'group life/health' benefits. The update was completed by updating the new enrollment file for Anthem VA and uploading it to S3 using forms copier.",
    "data_models": "No specific data models were mentioned in the ticket for debugging or fixing the issue."
  },
  "BENINTEG-2595": {
    "key": "BENINTEG-2595",
    "issue": "Noyo Setup tasks for Ciberspring have re-opened, requiring engineering attention to address missing carrier configurations.",
    "issue_summary": "Noyo Setup tasks for Ciberspring have re-opened due to missing carrier configurations, specifically related to bill_group_id values.",
    "rca": "The issue was caused by a problem with plan mapping tasks, specifically related to special case handling for carrier configurations.",
    "steps_taken": "The steps involved spoofing and adding the missing carrier configurations with specific bill_group_id values: 92375325, 13020458, and 13020459. Noyo was contacted, and they confirmed that configurations should run through 92375325. A screenshot of the configurations was reviewed and appeared correct.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2594": {
    "key": "BENINTEG-2594",
    "issue": "Noyo Setup Tasks for Future Perfect Ventures LLC have re-opened, requiring engineering attention to add missing carrier configurations.",
    "issue_summary": "Noyo Setup Tasks for Future Perfect Ventures LLC have re-opened due to missing carrier configurations that need to be added.",
    "rca": "The issue was caused by a problem with plan mapping tasks, specifically related to missing carrier configurations that needed special case handling.",
    "steps_taken": "The steps involved spoofing and adding the missing carrier configuration with Type: bill_group_id and Values: 103899026 and 151049510.",
    "data_models": "[CompanyCarrierLineInfo]"
  },
  "BENINTEG-2593": {
    "key": "BENINTEG-2593",
    "issue": "Noyo Setup tasks for Carma Holdco have re-opened, requiring engineering attention to address missing carrier configurations.",
    "issue_summary": "Noyo Setup tasks for Carma Holdco have re-opened due to missing carrier configurations, specifically related to bill_group_id values.",
    "rca": "The issue was caused by a problem with plan mapping tasks, specifically related to special case handling for carrier configurations.",
    "steps_taken": "The steps involved spoofing and adding the missing carrier configuration with the specified bill_group_id values: 127007206 and 104041256.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2592": {
    "key": "BENINTEG-2592",
    "issue": "Noyo Setup Tasks have re-opened and require engineering attention to address missing carrier configurations.",
    "issue_summary": "Noyo Setup Tasks for Seed X have re-opened due to missing carrier configurations, specifically related to bill_group_id values.",
    "rca": "The issue was caused by a problem with plan mapping tasks, specifically related to special case handling for carrier configurations.",
    "steps_taken": "The steps involved spoofing and adding the missing carrier configuration with the specified bill_group_id values (115148523 and 140124884) to resolve the issue.",
    "data_models": "[CompanyCarrierLineInfo]"
  },
  "BENINTEG-2590": {
    "key": "BENINTEG-2590",
    "issue": "There are elections stuck on Rippling's side, preventing the sending of amendments due to incorrect mapping. This is affecting several employees who urgently need care with Guardian.",
    "issue_summary": "Elections are stuck due to incorrect mapping, preventing amendments from being sent to Guardian for several employees.",
    "rca": "The root cause of the issue was a manual data entry error where the company had a carrier classification set up with the wrong (non-PEO) carrier.",
    "steps_taken": "The incorrect carrier classification was identified and deleted using the following code snippet: `return CarrierClassification.objects.filter(company=pa.company, id=\"6406b9f2325986da6ec7f6dc\").delete()`. After this correction, the process was retried and confirmed to be good to go.",
    "data_models": "[CarrierClassification]"
  },
  "BENINTEG-2586": {
    "key": "BENINTEG-2586",
    "issue": "The system failed to send a COBRA election to Noyo, and the user was unable to send an amendment.",
    "issue_summary": "The COBRA election for an employee was not transmitted to Noyo due to a mapping issue, preventing the user from sending an amendment.",
    "rca": "The root cause was identified as a manual data entry error, specifically a carrier classification was incorrectly set up with a non-PEO carrier.",
    "steps_taken": "The issue was resolved by deleting the incorrect carrier classification entry using the following code snippet: `return CarrierClassification.objects.filter(company=pa.company, id=\"61a7becc31d76c9219e8e48e\").delete()`.",
    "data_models": "[CarrierClassification]"
  },
  "BENINTEG-2585": {
    "key": "BENINTEG-2585",
    "issue": "The group Rikai Inc. has been approved for production with UHC USP, and there is a need to set up the production transmission schedule.",
    "issue_summary": "The group Rikai Inc. has been approved for production with UHC USP, and the operations team needs to set up the production transmission schedule. However, it was identified that the operations team can handle this task independently.",
    "rca": "The root cause analysis indicates that the system is working as expected, and the operations team can now manage the task of setting up the production transmission schedule on their own.",
    "steps_taken": "The comment in the ticket suggests that the operations team has been informed that they can now perform this task independently, indicating that no further action is required from the development team.",
    "data_models": "[]"
  },
  "BENINTEG-2584": {
    "key": "BENINTEG-2584",
    "issue": "The group Unicoin (TRANSPARENT BUSINESS) with Carrier UHC PRIME was approved for production, but there was confusion regarding the frequency and timing of the production file transmission. Additionally, there was a need to stop the file from being sent again.",
    "issue_summary": "The group was approved for production with UHC PRIME, but there was confusion about the transmission schedule and a need to stop the file from being sent.",
    "rca": "The root cause was categorized as an Ops Issue with the subcategory 'Wrong Expectation - System working as expected'. It was noted that operations could handle the situation on their own.",
    "steps_taken": "The issue was resolved by the operations team without the need for further engineering intervention, as indicated by the final comment stating the issue was solved.",
    "data_models": "[]"
  },
  "BENINTEG-2572": {
    "key": "BENINTEG-2572",
    "issue": "Approximately 80 transactions for Bluetree Practice Services were blocked due to an error indicating that certain lines were not loaded in Noyo, despite being present. The error message also suggested a potential mismatch with the Carrier ID.",
    "issue_summary": "Transactions for Bluetree Practice Services were blocked due to a mismatch in Carrier ID and issues with Noyo plan mappings, particularly for the Principal PPO Dental plan.",
    "rca": "The root cause of the issue was related to the company carrier plan info (ccli) not being eligible for Noyo, which is a common issue when migrating groups from one vendor to another. The error message indicated that the plan mappings for the Rippling plan were not found, leading to blocked transactions.",
    "steps_taken": "The issue was resolved by reestablishing the Noyo connection, which initially replaced the error message but did not resolve the underlying issue. Eventually, the blocked transactions were auto-closed by a fix from the team.",
    "data_models": "[NoyoCompanyPlanInfo, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-2571": {
    "key": "BENINTEG-2571",
    "issue": "The automated schedules for production files for a list of clients need to be stopped before specific dates due to the clients starting their Open Enrollment (OE). There is also a need to confirm if forms will automatically restart once the production schedules are stopped.",
    "issue_summary": "Automated production file schedules need to be halted for specific clients as they have started their Open Enrollment, and confirmation is needed on whether forms will automatically resume.",
    "rca": "A webscript was run to move Vendor Partner Companies (VPCs) to ingestion and delete custom communication details, which was necessary to stop the automated production file schedules.",
    "steps_taken": "Automated production files scheduling was stopped for the specified clients. A webscript was used to move VPCs to ingestion and delete custom communication details. The script included functions to change the state of VPCs to 'INGESTING' and delete custom communication details. The script also checked if the groups would fall back to email communications.",
    "data_models": "[VendorPartnerCompany, CustomStediCommunicationDetail, CompanyInsuranceInfo]"
  },
  "BENINTEG-2570": {
    "key": "BENINTEG-2570",
    "issue": "The onboarding template was filled out correctly and loaded successfully, but a test file will not generate in the retool.",
    "issue_summary": "The test file was not generating due to a missing date of birth for an employee, which caused a validation error during the EDI transmission process.",
    "rca": "The root cause of the issue was a missing date of birth for an employee, which led to a validation error in the MemberDemographicsDMG model during the EDI transmission process. The error was due to the time data not matching the expected date format '%m/%d/%Y'.",
    "steps_taken": "The issue was identified by checking the 'Stedi Snapshot Generator' where all files had a status of 'INT'. Failure logs were found indicating a validation error for MemberDemographicsDMG due to a missing birth date. A query was run to identify the role without a date of birth, and it was requested to add the date of birth and try again. The issue was closed after this step, with a note to reopen if the issue persisted.",
    "data_models": "[MemberDemographicsDMG]"
  },
  "BENINTEG-2568": {
    "key": "BENINTEG-2568",
    "issue": "The dataset for MB C-Stores LLC is blocked and not being sent to OneKonnect since 10/22, affecting production files.",
    "issue_summary": "The dataset for MB C-Stores LLC is blocked due to missing enrollments, preventing transmission to OneKonnect.",
    "rca": "The root cause of the issue is identified as missing enrollments in the Company Enrollment event, which is preventing the dataset from being sent to OneKonnect.",
    "steps_taken": "The issue will be resolved once enrollments are added to the Company Enrollment event. It was confirmed that there are currently no enrollments, and the situation should be monitored to ensure support if enrollments occur.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [CompanyEnrollmentEvent]"
  },
  "BENINTEG-2567": {
    "key": "BENINTEG-2567",
    "issue": "Test file for Arizona State Urological Institute, LLC with FACETS Cigna was not generating due to an incorrect 'Mapping ID' in the onboarding template.",
    "issue_summary": "The test file was not generating because the initial onboarding template had an incorrect 'Mapping ID'.",
    "rca": "The issue was due to a manual data entry error where the Carrier ID (Column B) needed to be updated. Once corrected, the group was re-onboarded and the test file generated successfully.",
    "steps_taken": "The Carrier ID (Column B) was updated, the group was re-onboarded, and the test file was generated successfully.",
    "data_models": "[]"
  },
  "BENINTEG-2565": {
    "key": "BENINTEG-2565",
    "issue": "Admin reported that employee Brooke Beck's New Hire enrollments were not transmitted to Guardian and the employee is not found in the Noyo Command Center.",
    "issue_summary": "The New Hire enrollments for employee Brooke Beck were not sent to Guardian due to an error with Noyo plan mapping.",
    "rca": "The root cause of the issue was an error in the Noyo plan mapping information. The system was unable to find a matching Noyo plan mapping for the Rippling plan 'Guardian Vision' with the specified parameters.",
    "steps_taken": "The configurations were adjusted and a snapshot was sent to Noyo to resolve the issue.",
    "data_models": "[NoyoCompanyPlanInfo]"
  },
  "BENINTEG-2564": {
    "key": "BENINTEG-2564",
    "issue": "Unable to pull the test file after onboarding the group; the file is stuck in the queue.",
    "issue_summary": "The test file for the group is stuck in the INIT stage due to missing start dates for two employees, which is required for data aggregation.",
    "rca": "The data aggregation process is failing because two employees do not have a start date in Rippling. The start dates are required in the member_level_dates_DTP, causing the test files to be stuck in the INIT stage.",
    "steps_taken": "The issue was identified as missing start dates for two employees. The information was redirected to the client to have the data error corrected, allowing the test file to proceed.",
    "data_models": "[member_level_dates_DTP]"
  },
  "BENINTEG-2554": {
    "key": "BENINTEG-2554",
    "issue": "Aetna PEO Migration faced discrepancies with 65 'Dependent Implicit' errors due to recent QLEs not being sent to Noyo, risking termination of dependents if not corrected.",
    "issue_summary": "During the Aetna PEO Migration, 65 discrepancies with 'Dependent Implicit' errors were identified, caused by recent QLEs not being transmitted to Noyo, risking termination of dependents.",
    "rca": "The root cause of the issue was related to plan mapping with Noyo, where recent Qualifying Life Events (QLEs) were not sent to Noyo, leading to discrepancies in dependent enrollments.",
    "steps_taken": "Snapshots of the dependents were sent to Noyo to include their enrollments in the data sent to Aetna. Communication and coordination were done through Slack and Jira to resolve the discrepancies and ensure all dependents were correctly enrolled.",
    "data_models": "[]"
  },
  "BENINTEG-2553": {
    "key": "BENINTEG-2553",
    "issue": "The team received a large number of errors during the fourth round of testing for the Aetna PEO migration to Noyo, specifically categorized as '0153 - please provide term dates or advise of status'. This issue affects 1,060 out of 1,600 errors, causing a significant discrepancy between Noyo's data and Rippling's data, likely due to future effective dates from renewals.",
    "issue_summary": "During the Aetna PEO migration to Noyo, a significant number of errors were encountered due to discrepancies in term dates, affecting the majority of the test cases.",
    "rca": "The root cause of the issue is a data mismatch between Noyo and Rippling, particularly concerning future effective dates likely due to renewals being run. This mismatch results in errors categorized as '0153 - please provide term dates or advise of status'.",
    "steps_taken": "The engineering team was requested to send snapshots in bulk to address these errors and to maintain consistent formatting in outputs to facilitate easier matching of failed and successful cases. A script was previously used to search for SSN and push amendments, but matching was difficult due to format differences in names. The team is also looking into specific error types such as account identifier issues, missing SSNs, invalid salaries, and plan matching errors.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2552": {
    "key": "BENINTEG-2552",
    "issue": "When trying to open the new hire event for an employee, an error occurs stating 'Expected exactly one NoyoCompanyCarrier for company 619e6e51418f0eb88802f458, carrier 583fdf270971c5546929c88d and carrier_group_ids ['966528', '93972', '939752'], but found 3'. This prevents further investigation.",
    "issue_summary": "Error encountered when accessing the employee debugger due to multiple NoyoCompanyCarriers being found instead of one, blocking further investigation.",
    "rca": "The root cause was identified as an incorrect implementation where the code was not designed to handle multiple NoyoCompanyCarriers, which is a valid scenario.",
    "steps_taken": "A code fix was implemented to accommodate multiple NoyoCompanyCarriers as a valid case. The fix was tracked in a pull request: [https://github.com/Rippling/rippling-main/pull/281010]. The issue was resolved and the ticket was closed.",
    "data_models": "[NoyoCompanyCarrier]"
  },
  "BENINTEG-2551": {
    "key": "BENINTEG-2551",
    "issue": "There are approximately 700 transactions blocked with an AssertionError related to Noyo, specifically due to an issue with the number of group IDs being flagged.",
    "issue_summary": "An uptick in blocked transactions (~700) with an AssertionError due to incorrect handling of multiple NoyoCompanyCarrier (NCC) entries for a company, which is standard for Unum but was not handled correctly in the code.",
    "rca": "The code was incorrectly expecting to fetch a unique NoyoCompanyCarrier (NCC) for each company, but there can be multiple NCCs with the same Noyo ID. This incorrect expectation led to the AssertionError.",
    "steps_taken": "A code fix was implemented to correct the expectation of a unique NCC. The fix was deployed, and all blocked transactions with the error message disappeared. The code fix can be found in the pull request: https://github.com/Rippling/rippling-main/pull/281010.",
    "data_models": "[NoyoCompanyCarrier]"
  },
  "BENINTEG-2550": {
    "key": "BENINTEG-2550",
    "issue": "The end date of the role for an employee was updated from 2024-06-14 to 2024-10-14, requiring updates to termination events and insurance timelines.",
    "issue_summary": "The end date of an employee's role was updated, necessitating the creation of a 'Termination (end date correction)' event and updates to insurance timelines.",
    "rca": "No action needed as per the root cause analysis.",
    "steps_taken": "1. Verified that a 'Termination (end date correction)' event was created for the prior termination event. 2. Reviewed that the insurance timelines were updated by the Termination (end date correction) event. 3. Confirmed that the employee does not have COBRA coverage, so no further action was needed. 4. The ticket was handed over to the integration team, and after their review, it was closed as everything looked good.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2549": {
    "key": "BENINTEG-2549",
    "issue": "The new hire election for Sunny Ughareja was not sent over to Guardian due to a 422 error encountered during an amendment attempt. The issue was related to incorrect carrier classifications for the company.",
    "issue_summary": "The issue was caused by the presence of an unexpected non-PEO Guardian carrier classification for the company, which led to a 422 error when attempting to send new hire election data to Guardian.",
    "rca": "A non-PEO Guardian carrier classification was present for the company, which was unexpected and caused the error. This classification was likely a remnant from before the group was classified as PEO.",
    "steps_taken": "The non-PEO work location classification was identified as unnecessary and was deleted. After this deletion, the enrollment process was retried and completed successfully.",
    "data_models": "[]"
  },
  "BENINTEG-2548": {
    "key": "BENINTEG-2548",
    "issue": "The group 'Culture Biosciences Inc.' needs to be moved to production for the carrier CIGNA, but there is no functionality to schedule when a file goes to production.",
    "issue_summary": "The group 'Culture Biosciences Inc.' has been approved for production with CIGNA, but there is no existing functionality to schedule the production file transfer. The support tool needs to be used manually to move the group to production.",
    "rca": "The issue is not related to engineering as a support tool exists to handle the situation. The lack of scheduling functionality for file transfers to production requires manual intervention using the support tool.",
    "steps_taken": "The comment suggests using the 'Ideon cut over tool' a week before the scheduled production date of 11/5/2024 to manually move the group to production.",
    "data_models": "[]"
  },
  "BENINTEG-2547": {
    "key": "BENINTEG-2547",
    "issue": "Noyo Setup Tasks for Tability have re-opened and need engineering attention to assign correct classification values to specific Noyo plans.",
    "issue_summary": "Noyo Setup Tasks for Tability have re-opened due to incorrect classification values assigned to Noyo plans 66f2e924-9e27-459a-8d69-765f7cae965a and b209192f-3809-4874-8c7e-d2428aa27dbd.",
    "rca": "No action needed as per the root cause analysis. The issue was deferred.",
    "steps_taken": "The tasks were reviewed, and it was confirmed that there shouldn't be any more issues. The ticket was closed after more than 40 days as no further action was required.",
    "data_models": "[]"
  },
  "BENINTEG-2546": {
    "key": "BENINTEG-2546",
    "issue": "Noyo Setup tasks have re-opened for a group, requiring engineering review to add missing carrier configurations.",
    "issue_summary": "Noyo Setup tasks for a group have re-opened due to missing carrier configurations. The tasks involve adding configurations with specific bill_group_id values.",
    "rca": "The root cause analysis indicates that no action is needed, categorized as 'Deferred'.",
    "steps_taken": "The tasks were reviewed, and it was confirmed that there shouldn't be any more issues. The ticket was closed due to no updates.",
    "data_models": "[]"
  },
  "BENINTEG-2545": {
    "key": "BENINTEG-2545",
    "issue": "United Engine & Machine Company faced configuration issues with Noyo Setup tasks re-opening unexpectedly, causing a need for engineering review.",
    "issue_summary": "The Noyo Setup tasks for United Engine & Machine Company re-opened unexpectedly, requiring engineering intervention to address missing carrier configurations.",
    "rca": "The root cause analysis indicated that no action was needed as the issue was categorized as 'Deferred'.",
    "steps_taken": "The tasks that re-opened were closed out as there were no further issues reported. The ticket was eventually closed due to inactivity for over 45 days.",
    "data_models": "[]"
  },
  "BENINTEG-2543": {
    "key": "BENINTEG-2543",
    "issue": "Unable to generate the test file in onboarding tool due to transmission error for BGN segment for The MFO Group (Reliant Life Sciences) with UHC PRIME carrier.",
    "issue_summary": "The MFO Group (Reliant Life Sciences) faced a transmission error in the onboarding tool while generating a test file for UHC PRIME carrier, specifically related to the BGN segment.",
    "rca": "Added relevant missing builder context to UHC prime builders.",
    "steps_taken": "The missing builder context was added to the UHC prime builders, which resolved the transmission error. The test files were then able to pass successfully.",
    "data_models": "[]"
  },
  "BENINTEG-2539": {
    "key": "BENINTEG-2539",
    "issue": "Robotic Research's insurance renewal and open enrollment for 1/1/2025 led to unexpected plan terminations being sent to OneKonnect in the 10/22/2024 production file, causing potential high impact for upcoming renewals.",
    "issue_summary": "Plan terminations were incorrectly generated and sent to OneKonnect due to early completion of insurance renewal and open enrollment for 1/1/2025, leading to potential issues with upcoming renewals.",
    "rca": "A new business requirement related to upcoming Open Enrollments (OEs) was not correctly implemented, leading to incorrect termination dates being sent in the production file.",
    "steps_taken": "The team reviewed the logic for passing terminations and communicated with OneKonnect to align expectations. A temporary fix was deployed to stop sending termination dates, and a permanent solution was being worked on to handle future renewals. Code changes were pushed to address the issue: [https://github.com/Rippling/rippling-main/pull/279259] and [https://github.com/Rippling/rippling-main/pull/281870].",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2538": {
    "key": "BENINTEG-2538",
    "issue": "The enrollment form for a new hire was logged as submitted on 10/15/2024, but there was no record of the form actually being sent. This caused a delay in the enrollment process for the employee.",
    "issue_summary": "The system logged an enrollment form as sent when it was not actually submitted due to the EBN feed being in testing and not in 'Production' status.",
    "rca": "The root cause was identified as an operational issue where the system was working as expected, but there was a wrong expectation regarding the email records. The emails were sent, but the recipients did not receive them, possibly due to incorrect email tracking or delivery issues.",
    "steps_taken": "The emails were resent to the intended recipients after verifying the email records. Screenshots of the email records were attached to confirm the action. The ticket was closed after resending the emails.",
    "data_models": "[]"
  },
  "BENINTEG-2537": {
    "key": "BENINTEG-2537",
    "issue": "There are approximately 1,000 blocked transactions with a successful response code (200) returned as the blocker, causing confusion and potential delays in processing insurance enrollments.",
    "issue_summary": "Blocked transactions with response code 200 due to migration from member requests to snapshot API, causing confusion as the response code indicates success.",
    "rca": "This issue occurred for groups migrated from member requests to member snapshots. The blocked transactions were created when the member request's status was changed to 'cancelled' because the snapshot was successful, leading to a mismatch in transaction states.",
    "steps_taken": "The engineering team confirmed with Noyo that the response code 200 is for successful transactions. They manually sent snapshots for affected employees and archived blocked transactions. A script was created to update the state of pending actions from 'ACTIVE' or 'PENDING' to 'RESOLVED'.\n\n```python\nbts = BlockedTransaction.objects.filter(vendor=\"NOYO\",error_message__contains=\"response_code: 200\",state=\"BLOCKED\")\nfor bt in bts:\n    if bt.pending_action.state in [\"ACTIVE\",\"PENDING\"]:\n        bt.state=\"RESOLVED\"\n        bt.save()\n\nreturn \"DONE\"\n```",
    "data_models": "[BlockedTransaction, PendingAction]"
  },
  "BENINTEG-2534": {
    "key": "BENINTEG-2534",
    "issue": "MagicLinks, Inc.'s carrier classification page shows incorrect information, indicating that Kaiser enrollments are being sent via fax instead of the active API connection through Noyo.",
    "issue_summary": "The carrier classification page for MagicLinks, Inc. incorrectly displays that Kaiser enrollments are being sent via fax, despite the recent migration of their connection from Ideon to Noyo, which is active via API.",
    "rca": "The issue was due to an automatic update that had not yet reflected on the broker's view, leading them to notice the incorrect information before the update was completed.",
    "steps_taken": "The group's carrier transmissions tab was corrected to reflect the active API connection with Noyo for Kaiser enrollments.",
    "data_models": "[]"
  },
  "BENINTEG-2533": {
    "key": "BENINTEG-2533",
    "issue": "The carrier connections page for Humans, Inc. shows the EDI feed as inactive after migrating from Ideon to Noyo, causing confusion and concern for the broker partner Sequoia.",
    "issue_summary": "After migrating from Ideon to Noyo, the carrier connections page for Humans, Inc. incorrectly displayed the EDI feed as inactive, leading to confusion for the broker partner Sequoia.",
    "rca": "The issue was categorized as 'Deferred' with no immediate action needed, indicating that the inactive status was likely a temporary display issue post-migration.",
    "steps_taken": "The user was proxied, and it was confirmed that the carrier transmission tab now shows Carrier API as the communication method. The ticket was closed with a note to reopen if further concerns arise.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2532": {
    "key": "BENINTEG-2532",
    "issue": "Unable to generate the file with new plan year information due to a transmission error, specifically a validation error indicating that a field is shorter than 8 characters.",
    "issue_summary": "The issue was a transmission error when trying to generate a file for the new plan year starting 11/01/2024, due to a validation error in the plan coverage description field.",
    "rca": "The root cause of the issue was that the OE file was generated using a webscript, which led to a validation error in the plan coverage description field being shorter than 8 characters.",
    "steps_taken": "To resolve the issue, a test file was generated containing only the new plan year data with the effective date DTP*348 11/01/2024. The test file was sent to Stedi's TEST SFTP Server and not to carriers. Additionally, a script was used to generate a future OE file and send an ingestion file to Cigna's server.",
    "data_models": "[BaseCompanyCarrierLineInfo, StediPartnerCompanyGroupingPayloadData, StediDataAggregator, StediRequestMetaData, SubscriberLineInfo, EbnCompanyFileGenerator, EbnFileGenerator, StediGroupingConfigData, VendorDtoBuilderContext, StediDte, StediDtoBuilderHelpers]"
  },
  "BENINTEG-2531": {
    "key": "BENINTEG-2531",
    "issue": "The DTP 349 file for terminating Yvonne Cadena's Cobra enrollment was not sent to Cigna, resulting in Cigna still showing her as active. The file was supposed to be sent on 10/01 but was dropped from the production file.",
    "issue_summary": "The DTP 349 termination file for Yvonne Cadena was not sent to Cigna due to a misconfiguration, causing her to remain active in Cigna's records.",
    "rca": "The issue occurred because the accepted file sent to the carrier on 09/30 was marked as INGESTION and was accepted by the Ops team but was incorrectly sent to an internal test server due to a wrong transaction setting id configured by the Ops team.",
    "steps_taken": "The issue was identified as a configuration error where the transaction setting id was set to a test configuration. The Ops team was informed, and the configuration was corrected to ensure the file is sent to the correct server. The priority of the ticket was adjusted, and communication was made to ensure similar issues are prioritized correctly in the future.",
    "data_models": "[]"
  },
  "BENINTEG-2530": {
    "key": "BENINTEG-2530",
    "issue": "The issue involved a 1MM+ ARR multiple EIN client transitioning off of the PEO effective 11/01/2025, but 'Rippling managing forms' was turned off prematurely. This led to a high chance of missed enrollment events not being transmitted correctly via Ideon and Noyo, posing a churn risk as the customer had already churned from PEO.",
    "issue_summary": "The premature turning off of 'Rippling managing forms' for a client transitioning off PEO led to potential missed enrollment events not being transmitted correctly, risking customer churn.",
    "rca": "The root cause was identified as an automatic system change where the enrollment manager was switched from Rippling to Broker on 09/28, coinciding with the PEO cancellation event. This change was not manually done and led to the disruption in form sending and enrollment event transmission.",
    "steps_taken": "A script was run to send the enrollments for the affected groups. The script filtered pending actions for the company and performed actions where the reason was 'NOT_MANAGING_FORMS'. The bulk API push to Noyo and Guardian was verified to be successful, and enrollments were transmitted to Aetna/Kaiser. The script used was:\n\n```python\ncompany=\"65a9c9f2ebdcf8b3e2f95a12\"\npas = PendingAction.objects.filter(company=company, state=\"PROCESSED\").order_by(\"-createdAt\")\nfor pa in pas:\n  should, reason = pa.shouldPerformActionWithReason(True)\n  if reason == \"NOT_MANAGING_FORMS\":\n    try:\n      print(\"Performing - \",pa.id, pa.role.id , pa.role.user_cache.name.full)\n      pa.performAction(checkShouldPerformAction=False)\n    except Exception as e:\n      print(\"ERROR - \",pa.id, pa.role.id , pa.role.user_cache.name.full)\nreturn 0\n```",
    "data_models": "[PendingAction]"
  },
  "BENINTEG-2529": {
    "key": "BENINTEG-2529",
    "issue": "Noyo did not receive a Snapshot to move a member into a new Benefit Class when their Benefit Class changed on 07/18/2024.",
    "issue_summary": "Noyo is missing class code change data for Harrison Group General due to unhandled benefit class changes for non-medical plans.",
    "rca": "The root cause was identified as a lack of handling for benefit class changes for non-medical plans such as vision and dental. The existing logic only supported plan-dependent benefit class identifiers for medical plans, which led to errors when processing other lines of coverage.",
    "steps_taken": "To resolve the issue, the team turned off the feature flag 'noyo-config-per-coverage' to unblock the current situation. Additionally, a script was run to skip certain SubscriberLineInfo records that were causing issues due to mid-year plan changes. The team also coordinated with Noyo to ensure that benefit class identifiers were correctly mapped for all lines of coverage, including vision and dental. Further steps included turning on specific feature flags for certain employees and setting up new year carrier classifications correctly.",
    "data_models": "[SubscriberLineInfo, SkippedSLIRecord]"
  },
  "BENINTEG-2528": {
    "key": "BENINTEG-2528",
    "issue": "When attempting to map the Public Law Center group's Kaiser plans, no checkbox appears for the group's Kaiser platinum plan, blocking the Ideon to Noyo migration.",
    "issue_summary": "The migration of the Public Law Center group from Ideon to Noyo is blocked due to an unmappable Kaiser platinum plan, caused by an incorrect NoyoId configuration.",
    "rca": "The root cause of the issue was an incorrect NoyoId configured for the Kaiser plan in the NoyoCompanyCarrier object, which prevented the plan from being mappable.",
    "steps_taken": "The issue was resolved by identifying the incorrect NoyoId in the NoyoCompanyCarrier object and updating it to the correct ID using the Retool App. The incorrect ID was 'b8e70d30-5f41-4ca8-850e-84596c91d46d' and it was updated to '79e3fe33-9f43-4a86-8fdd-3ddf3adf6823'.",
    "data_models": "[NoyoCompanyCarrier]"
  },
  "BENINTEG-2527": {
    "key": "BENINTEG-2527",
    "issue": "Duplicate medical plans appeared due to incorrect Partner/Carrier ID during onboarding.",
    "issue_summary": "During onboarding, an incorrect Partner/Carrier ID was initially used, leading to duplicate medical plans. The correct ID was later used, but the duplicates remained.",
    "rca": "A webscript was executed to delete the wrong configuration associated with the incorrect Partner/Carrier ID.",
    "steps_taken": "A webscript was run to filter and delete entries associated with the incorrect Partner/Carrier ID '6601b7b342ef332d24c5a95b'. The script targeted models such as VendorPartnerCompany, BaseVendorPartnerGroupingConfig, StediPartnerCompanyGroupingPayloadData, and StediPartnerTransmissionConfig to remove the incorrect configurations.",
    "data_models": "[VendorPartnerCompany, BaseVendorPartnerGroupingConfig, StediPartnerCompanyGroupingPayloadData, StediPartnerTransmissionConfig]"
  },
  "BENINTEG-2526": {
    "key": "BENINTEG-2526",
    "issue": "The issue involves updating the effective date in the DTP*348 segment of the HD 2300 loop for an employee's dental plan when the network identifier changes due to a state move.",
    "issue_summary": "The DTP*348 segment in the HD 2300 loop is not updating to reflect the new effective date when an employee's network identifier changes due to a state move.",
    "rca": "The root cause is identified as a product enhancement need, where the logic to update the effective date in the DTP*348 segment when the network identifier changes is not implemented.",
    "steps_taken": "The issue is recognized as a feature request and is being tracked under a separate Jira ticket (BENINTEG-3323) for further grooming and solution development.",
    "data_models": "[]"
  },
  "BENINTEG-2524": {
    "key": "BENINTEG-2524",
    "issue": "The issue involves two groups in Rippling associated with the same group ID 736898, which are being migrated from Ideon to Noyo. The previous setup with Ideon allowed two separate CPs for each group connecting to one Kaiser group, but Noyo does not support this setup, requiring both groups to be attached to a single Noyo instance.",
    "issue_summary": "The migration of two groups from Ideon to Noyo is problematic because Noyo does not support the previous setup of having two separate CPs for each group connecting to one Kaiser group. Both groups need to be attached to a single Noyo instance, which is not currently supported.",
    "rca": "The root cause of the issue is the incompatibility of the previous setup with Noyo's product. The previous setup allowed two separate CPs for each group connecting to one Kaiser group, which Noyo does not support. Additionally, the groups have the same Kaiser ID, which is causing issues with Noyo.",
    "steps_taken": "The decision was made to keep the groups on Ideon until the multi-entity feature is live next year, as the current setup is not supported by Noyo. It was suggested to inform the group that during renewals in May 2025, different Kaiser group IDs would be required. The ticket was eventually closed after acknowledging the current limitations.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2523": {
    "key": "BENINTEG-2523",
    "issue": "The employee Sophie Kokernot doesn't have coverage even after being eligible. The admin reported that her current benefits are only set up for a limited period instead of the full plan year.",
    "issue_summary": "Sophie Kokernot, an eligible employee, lacks active coverage due to a termination event created for her. Despite being eligible, her profile doesn't show any active coverage.",
    "rca": "The issue was caused by multiple role transitions and undo changes made by the admin, which created an inverse Insurance Role Transition. This resulted in the employee losing coverage due to plan eligibility. There might be an issue in the logic calculating the availability for the inverse Insurance Role Transition.",
    "steps_taken": "The termination event was deleted, and the dates for coverage were refreshed. The admin was advised to communicate with the carrier to ensure continuous coverage for the employee. A ticket was issued to continue RCA on the logic for inverse Insurance Role Transition.",
    "data_models": "[InsuranceRoleTransition]"
  },
  "BENINTEG-2522": {
    "key": "BENINTEG-2522",
    "issue": "OneKonnect files failed in production on 10/22 because the datasets did not send successfully on the day of the production file. The datasets were showing in 'Ready' status instead of 'Submitted' in the Carrier Connections Dashboard.",
    "issue_summary": "OneKonnect files failed to send successfully on 10/22, causing datasets to remain in 'Ready' status instead of 'Submitted'.",
    "rca": "The issue was categorized under EBN with a subcategory of Visibility, and it was noted that no action was needed.",
    "steps_taken": "The errors in sending EBN datasets on 10/22 were resolved. The Carrier connection dashboard was checked, and it was confirmed that datasets were sent successfully after 10/22. The ticket was closed with a note to re-open if there are any concerns.",
    "data_models": "[]"
  },
  "BENINTEG-2521": {
    "key": "BENINTEG-2521",
    "issue": "Need to schedule a weekly EDI production file for MetaLend with UHC USP every Wednesday at 3 AM PST, effective from 10/29/2024.",
    "issue_summary": "The issue is about scheduling a weekly EDI production file for the group MetaLend with the carrier UHC USP, which needs to be done every Wednesday at 3 AM PST starting from 10/29/2024.",
    "rca": "The root cause analysis indicates that the support tool exists for this task, but it was deferred, possibly due to the need for manual intervention or scheduling.",
    "steps_taken": "The steps taken include using the cut over tool to move the group to production as suggested in the comments. The link to the tool was provided in the comments for reference.",
    "data_models": "[]"
  },
  "BENINTEG-2520": {
    "key": "BENINTEG-2520",
    "issue": "Members new hire enrollment was not emailed to the carrier for Omni Mgmt Group, LLC.",
    "issue_summary": "The new hire enrollment for Jessica Turner was not sent to the carrier because the system did not email the enrollment. The issue was due to the 'shouldSendForms' field being set to False, which prevented the forms from being sent.",
    "rca": "The root cause of the issue was that the 'shouldSendForms' field was not set to True for the NewHireWaitingPeriodCorrectionEvent. This occurred because the admin did not toggle the 'should regenerate form' field when updating the waiting period, resulting in the '_shouldSendForms' field being None. Consequently, the 'event.shouldSendForms' returned False, preventing the forms from being sent.",
    "steps_taken": "The issue was resolved by updating the event data to set '_shouldSendForms' to True for the pending actions related to the employee. This change allowed the 'event.shouldSendForms' to return True, enabling the forms to be sent automatically. The relevant code snippets used to debug and fix the issue included checking the 'shouldSendForms' function and updating the '_shouldSendForms' field in the event object.",
    "data_models": "[PendingAction, PendingActionGroup, EnrollmentEvent]"
  },
  "BENINTEG-2519": {
    "key": "BENINTEG-2519",
    "issue": "The system incorrectly shows the Dependent's COBRA effective date as 11/01/24, whereas it should be 10/01/24 due to the Dependent's birthdate being September 8th, 2024. This discrepancy prevents the employee from adding the aged-out dependent into COBRA coverage from the dashboard.",
    "issue_summary": "The COBRA effective date for a dependent was set incorrectly to 11/01/24 instead of the expected 10/01/24 due to the system's logic for setting effective dates.",
    "rca": "The issue was caused by the carrier logic which set the effective date to be one month after the event date. The function `getEffectiveDateForQLE` was adding one month to the event date for QLE events, which led to the incorrect effective date being set.",
    "steps_taken": "The effective date for the medical QLE was overridden to 10/01/2024. The data was corrected on the system, and the forms were regenerated to reflect the correct date. The function `getEffectiveDateForQLE` was identified as needing a change to align with the expected behavior for age-out dependents.",
    "data_models": "[SubscriberLineInfo, QLEEnrollmentEvent]"
  },
  "BENINTEG-2516": {
    "key": "BENINTEG-2516",
    "issue": "There are 8 groups that were onboarded with a test transaction setting ID, and since the analyst has already moved the group to production, it cannot be changed. This needs to be updated so that next week's production files can be sent to Cigna.",
    "issue_summary": "8 groups were onboarded with a test transaction setting ID instead of a production one, preventing the sending of production files to Cigna.",
    "rca": "The root cause of the issue was a manual data entry error where the wrong transaction setting ID was used during the onboarding process.",
    "steps_taken": "The state of all 9 connections of the given 8 groups was updated to 'INGESTING'. The TransactionSettingId was updated to '005010X220A1-834-prod' via the onboarding tool. Ingestion files were sent to the carrier via retool and marked as accepted. After the files were accepted by the carrier, the connection was moved back to retool.",
    "data_models": "[VendorPartnerCompany]"
  },
  "BENINTEG-2514": {
    "key": "BENINTEG-2514",
    "issue": "Enrollment tasks appeared on the dashboard without any enrollment forms attached for the carrier Guardian.",
    "issue_summary": "Enrollment tasks for the carrier Guardian appeared without any forms attached. The submit method on the tasks shows Noyo, and the issue needs investigation to regenerate the forms.",
    "rca": "The system behavior did not generate forms because there was no change for the Guardian carrier, which is why the tasks appeared without forms.",
    "steps_taken": "The issue was investigated, and it was determined that no forms were generated because there was no change for the Guardian carrier. The tasks were closed as there was no need for form generation.",
    "data_models": "[PendingActionLog, PendingAction]"
  },
  "BENINTEG-2513": {
    "key": "BENINTEG-2513",
    "issue": "The employee Jane Katz has an incorrect Aetna group ID in Rippling (169696) compared to what Aetna has (169697). This discrepancy is affecting the employee's enrollment for Open Enrollment, which is due soon.",
    "issue_summary": "The group ID for employee Jane Katz in Rippling is incorrect (169696) compared to Aetna's records (169697), potentially affecting her enrollment process.",
    "rca": "The system is working as expected. The group ID shown in Rippling is the plan-agnostic group ID for Rippling PEO with Aetna, which is not incorrect. Aetna deduces the correct group ID based on the plan selected by each employee.",
    "steps_taken": "The issue was reviewed, and it was confirmed that the group ID shown in Rippling is correct for all Aetna PEO groups. It was communicated that the group ID is not employee-specific but at the company level. The employee is correctly enrolled in their benefits.",
    "data_models": "[]"
  },
  "BENINTEG-2511": {
    "key": "BENINTEG-2511",
    "issue": "Unable to re-onboard the group 'ReUp Education' with Medical and Vision benefits due to an error in the FACET file.",
    "issue_summary": "The issue was that the Medical and Vision benefits for the group 'ReUp Education' were not being processed together in the FACET file due to a manual data entry error.",
    "rca": "The root cause of the issue was a manual data entry error where old configurations were not properly set up, leading to the benefits not being processed together in the FACET file.",
    "steps_taken": "The old configurations were deleted, and the group was re-onboarded with the correct settings so that Medical and Vision benefits would be processed together in a single file.",
    "data_models": "[]"
  },
  "BENINTEG-2508": {
    "key": "BENINTEG-2508",
    "issue": "Group left the PEO effective 9/1, but the system was still sending information to Aetna, and the amendment was not available.",
    "issue_summary": "The group left the PEO on 9/1, but the system continued to send information to Aetna, causing a discrepancy. However, the system was working as expected, and no vericred file feeds were sent after 08/16.",
    "rca": "The system was working as expected, and there was a misunderstanding. The vericred coverage period with Aetna had expired, and there were no active enrollments for the employees in question.",
    "steps_taken": "Reviewed the vericred file feeds and confirmed that no information was sent to Aetna after 08/16. Verified that the vericred amendment tab showed no active enrollments for the employees. The ticket was closed due to no update from Ops for 1.5 months.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2506": {
    "key": "BENINTEG-2506",
    "issue": "The effective date for Brendan Talarczyk's insurance coverage was incorrectly set to 7/1 instead of the expected 9/1 in the system payload.",
    "issue_summary": "The system showed an incorrect effective date of 7/1 for Brendan Talarczyk's insurance coverage, while it should have been 9/1 as per the changes in the Events Tab.",
    "rca": "The system was working as expected, and the discrepancy arose due to a misunderstanding of the expected effective date. The employee's medical coverage with Aetna had expired, and they chose a different plan (Kaiser) for the 9/1 Open Enrollment.",
    "steps_taken": "The ticket was closed as the system was functioning correctly, and there was no follow-up from Operations for 1.5 months.",
    "data_models": "[]"
  },
  "BENINTEG-2505": {
    "key": "BENINTEG-2505",
    "issue": "The effective date of 12/1/2024 is not being sent to Aetna for Ideon for the employee Todd Behrend.",
    "issue_summary": "The system is not sending the future effective date of 12/1/2024 to Aetna for Ideon, as part of the migration work for Todd Behrend. The issue is due to the absence of an amendment to trigger the future date.",
    "rca": "The system is working as expected. The employee has a new hire event effective 10/1, and the open enrollment (OE) effective from 12/1 has not been processed yet because the OE deadline of 10/25 has not passed. Therefore, no file feeds regarding this OE have been sent.",
    "steps_taken": "The ticket was closed as the system was functioning as expected and there was no follow-up from Operations for 1.5 months.",
    "data_models": "[]"
  },
  "BENINTEG-2502": {
    "key": "BENINTEG-2502",
    "issue": "Group left the PEO on 02/29/2024, and Tiasia O'Brien is a COBRA orphan. COBRA was cancelled on 9/1/24, but the file shows a COBRA end date of 11/30/24. The Vericred tab is showing an error and not sending the correct information to Aetna.",
    "issue_summary": "The issue involves a discrepancy in the COBRA end date for Tiasia O'Brien, where the system shows an end date of 11/30/24, but the COBRA was cancelled on 9/1/24. The Vericred tab is showing an error, but the system is working as expected.",
    "rca": "The root cause analysis indicates that the system is working as expected, and no action is needed. The discrepancy in the COBRA end date is not an error, as the employee only waived their Dental coverage and kept their medical coverage, which is valid until 11/30/24.",
    "steps_taken": "The ticket was reviewed, and it was confirmed that the system is working as expected. The issue was closed as no action was needed, and the ticket was considered stale after two months.",
    "data_models": "[]"
  },
  "BENINTEG-2499": {
    "key": "BENINTEG-2499",
    "issue": "Error prevents admin/broker from initiating carrier connections as expected when clicking on set up carrier connection button.",
    "issue_summary": "Admin/broker faced an error while trying to set up carrier connections due to a null pointer exception in the front-end code.",
    "rca": "The issue was caused by incorrect implementation in the front-end code, specifically a null pointer exception handling error.",
    "steps_taken": "The issue was fixed by addressing the null pointer exception in the front-end code. The fix was verified by proxying the customer and confirming that the error no longer appeared, unblocking the admin/broker from setting up carrier connections.",
    "data_models": "[]"
  },
  "BENINTEG-2498": {
    "key": "BENINTEG-2498",
    "issue": "The production files were not sending all enrollments, specifically missing the QLE enrollment for Noah Cyr and not terminating coverage for four other employees (Shane Wingard, Dustin Busby, Dawn Wilson, and Meghan Tuerff) in the Stedi - Cigna integration for Darwin Homes.",
    "issue_summary": "The issue was that the production files were not including Noah Cyr's QLE enrollment and were not terminating coverage for four employees due to missing DTP 349 records, causing discrepancies in the Stedi - Cigna integration.",
    "rca": "The root cause was identified as a missing pending action for cases where employees performed a QLE after waiving. This led to the absence of necessary DTP 349 records in the production files, which are required to terminate coverage.",
    "steps_taken": "The issue was fixed by creating the missing pending actions for the affected employees. It was recommended to reset the base snapshot for the group to prevent similar issues in the future. The scheduled production file sent to Cigna on 10/29 included the necessary DTP 349 records for the four members.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-2497": {
    "key": "BENINTEG-2497",
    "issue": "The team faced a plan mapping error while trying to push through a Noyo snapshot for an employee, resulting in a failure with a 422 status from Noyo. This was causing a delay in urgent access to care.",
    "issue_summary": "A Noyo snapshot submission failed due to a plan mapping error, specifically a 'Multiple benefit_class options' error for a dental coverage line with Aetna, causing urgent access to care issues.",
    "rca": "The root cause of the issue was a Salesforce case being closed, which likely led to the misconfiguration or lack of proper mapping for the benefit_class_identifier in the carrier configuration for the specified coverage.",
    "steps_taken": "A web script was executed to modify the carrier classifications for PEO carriers. The script included a patch to update the benefit_class_identifier for the Guardian carrier. The script was run successfully, allowing the snapshot to be sent for the employee. The code snippet used was:\n\n```python\nsubscriber = Subscriber.objects.get(role=\"6595c5522202381eecdb4712\")\nnoyo_group_id = NOYO_GROUP_ID_FOR_RIPPLING_PEO_NON_TECH2\n\ndef modified_get_additional_carrier_classifications_for_peo_carrier(*args):\n  carrier = args[0]\n  ret = _get_additional_carrier_classifications_for_peo_carrier(*args)\n  if carrier.displayName == \"Guardian\":\n    ret.update({\"benefit_class_identifier\": \"0013\"})\n  return ret\n\nSHOULD_SUBMIT = True\nwith (\n  patch(\"insurance.noyo_utils._get_additional_carrier_classifications_for_peo_carrier\", wraps=modified_get_additional_carrier_classifications_for_peo_carrier),\n):\n  if SHOULD_SUBMIT:\n    return NoyoMemberSnapshotController.submit_member_snapshot_adhoc(noyo_group_id, subscriber, noyo_census_request=None)\n  else:\n    return NoyoMemberSnapshotController.generate_member_snapshot_payload_string(noyo_group_id, subscriber, pending_action=None)\n```",
    "data_models": "[Subscriber, NoyoMemberSnapshotController]"
  },
  "BENINTEG-2496": {
    "key": "BENINTEG-2496",
    "issue": "Noyo Setup Tasks for Janus Health Technologies, Inc. have re-opened due to configuration assignment issues, causing conflicts in dental/vision plans.",
    "issue_summary": "The issue involves re-opened Noyo Setup Tasks for Janus Health Technologies, Inc. due to configuration assignment errors, specifically conflicts in dental/vision plans with incorrect classification values.",
    "rca": "The root cause of the issue was identified as a plan mapping error by operations, where incorrect steps or state errors led to conflicts in the classification values assigned to Noyo plans.",
    "steps_taken": "The tasks were initially resolved but regenerated, indicating a persistent issue. The resolution involved correctly mapping the 'billing_identifier' to differentiate between plans, and a document was sent on how to map these billing groups. The tasks were then resolved and closed.",
    "data_models": "[InsuranceCompanyInfo]"
  },
  "BENINTEG-2495": {
    "key": "BENINTEG-2495",
    "issue": "CoveredCA is not accepting the enrollment forms because the employee's name is missing on page 6, step 7, above the Signature of Employee.",
    "issue_summary": "The enrollment forms submitted to CoveredCA are being rejected due to a missing employee name on a specific section of the form.",
    "rca": "The root cause of the issue is identified as a form filler problem, which is not related to engineering but rather an operational issue with the form filling process.",
    "steps_taken": "The issue was identified as a form filling problem and was redirected to the Insurance operations team responsible for handling forms. A new Jira ticket (IO-2713) was created to address the form mapping request.",
    "data_models": "[]"
  },
  "BENINTEG-2493": {
    "key": "BENINTEG-2493",
    "issue": "The member's enrollment information is not transmitting correctly to Ideon, with a COBRA enrollment event causing the file to be dropped from the feed.",
    "issue_summary": "The COBRA enrollment event with a 5/31 end date and 6/1 start date is causing the member's enrollment information to not transmit correctly to Ideon, leading to the file being dropped from the feed.",
    "rca": "The issue was caused by posting a QLE using the retool, which resulted in the COBRA enrollment event being incorrectly reflected in the Vericred tab.",
    "steps_taken": "The COBRA coverage was removed from the file using the retool. A QLE event was posted with the following JSON: ```json\n{\n\t\"coverage_period_id\": \"2ee38254-1040-43ba-9377-fbac28153b86\",\n\t\"date\": \"2024-12-01\",\n\t\"eligibility_start_date\": \"2024-07-01\",\n\t\"enrollment_signature_date\": \"2024-10-07\",\n\t\"external_identifier\": \"66f71f7017f3661534f23315\",\n\t\"event\": \"open_enrollment\",\n\t\"id\": \"61bfc775-7e44-44f0-b2ff-63e040d3492d\",\n\t\"plan_elections\": {\n\t\t\"medical\": {\n\t\t\t\"type\": \"election\",\n\t\t\t\"coverages\": [\n\t\t\t\t{\n\t\t\t\t\t\"member_id\": \"445aa7c7-56dc-48ac-a8a8-0c40241ae69a\",\n\t\t\t\t\t\"start_date\": \"2024-07-01\",\n\t\t\t\t\t\"status\": \"employer_sponsored\",\n\t\t\t\t\t\"plan_id\": \"d4ba4459-bc8b-4ead-a383-cf2c54067ba4\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"member_id\": \"ad6f8126-0b89-49aa-b1b9-9c035e63ff1f\",\n\t\t\t\t\t\"start_date\": \"2024-07-01\",\n\t\t\t\t\t\"status\": \"employer_sponsored\",\n\t\t\t\t\t\"plan_id\": \"d4ba4459-bc8b-4ead-a383-cf2c54067ba4\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t},\n\t\"status\": \"pending\",\n\t\"created_at\": \"2024-10-19T20:57:37.185Z\"\n}\n```",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-2492": {
    "key": "BENINTEG-2492",
    "issue": "Unable to trigger a file for STYLITICS // Cigna due to an error code related to pattern matching.",
    "issue_summary": "The issue was caused by white spaces present in the file prefix, which did not match the required pattern.",
    "rca": "The transmission error occurred because the file prefix contained white spaces, which violated the pattern requirement of the system.",
    "steps_taken": "The Stedi team identified the issue with the file prefix containing spaces. The user was advised to use the onboarding tool to update the file prefix to remove spaces. After updating, the file was successfully run.",
    "data_models": "[]"
  },
  "BENINTEG-2491": {
    "key": "BENINTEG-2491",
    "issue": "The onboarding tool is not updating the file name for the group 'Catio' as per the new file name provided by Cigna.",
    "issue_summary": "The onboarding tool failed to update the file name for the group 'Catio' to the new file name provided by Cigna, causing a configuration issue.",
    "rca": "The root cause was identified as a configuration issue where the group had configurations for both UHC and Cigna, leading to a conflict. The onboarding tool had already updated the file prefix correctly, but the presence of multiple configurations caused confusion.",
    "steps_taken": "The group was offboarded completely to resolve the configuration issues. The following code snippet was used to delete existing configurations:\n\n```python\ncompanies = [\"64088c737ded3992666142f0\"]\nvpcs = VendorPartnerCompany.objects.filter(company__in=companies)\nconfigs = BaseVendorPartnerGroupingConfig.objects.filter(company__in=companies)\npds = StediPartnerCompanyGroupingPayloadData.objects.filter(company__in=companies)\ntcs = StediPartnerTransmissionConfig.objects.filter(company__in=companies)\ncscds = CustomStediCommunicationDetail.objects.filter(company__in=companies)\nbccts = BaseCompanyCarrierTransmission.objects.filter(company__in=companies, vendor=\"STEDI\")\nprint(len(vpcs), len(configs), len(pds), len(tcs), len(cscds), len(bccts))\nfor vpc in vpcs:\n  vpc.delete()\nfor config in configs:\n  config.delete()\nfor pd in pds:\n  pd.delete()\nfor tc in tcs:\n  tc.delete()  \nfor cscd in cscds:\n  cscd.delete()\nfor bcct in bccts:\n    bcct.delete()\n\nreturn \"DONE\"\n```\n\nThe group was then re-onboarded with the correct configurations.",
    "data_models": "[VendorPartnerCompany, BaseVendorPartnerGroupingConfig, StediPartnerCompanyGroupingPayloadData, StediPartnerTransmissionConfig, CustomStediCommunicationDetail, BaseCompanyCarrierTransmission]"
  },
  "BENINTEG-2487": {
    "key": "BENINTEG-2487",
    "issue": "EE Noyo amendment data is not picking up the Cobra QLE generated to remove an over age dependent, Chad Horton, from coverage.",
    "issue_summary": "The Noyo amendment data failed to capture the Cobra QLE event needed to remove an over age dependent from coverage due to an issue with oplan mappings.",
    "rca": "The root cause of the issue was identified as a bug in the oplan mappings within the Noyo component, which prevented the amendment data from reflecting the necessary changes.",
    "steps_taken": "The steps taken to resolve the issue involved updating the Noyo amendment details to correctly reflect the removal of the dependent, Chad Horton, from coverage. Additionally, it was noted that resolving a related issue in ticket BENINTEG-2431 was also necessary.",
    "data_models": "[]"
  },
  "BENINTEG-2486": {
    "key": "BENINTEG-2486",
    "issue": "Cannot push/view amendment tab for Aetna PEO discrepancies due to plan mapping error for Guardian Dental coverage.",
    "issue_summary": "The issue involves a plan mapping error for Guardian Dental coverage, preventing viewing or pushing amendments for Aetna PEO discrepancies.",
    "rca": "The root cause was related to the Guardian plan mapping incident where the PEO team updated the names for the plans, causing the plan mapping to break. This issue has been fixed.",
    "steps_taken": "The Noyo amendment is now visible for all the affected employees, and snapshots have been sent for the listed employees. The amendment tool is operational, and engineering can help resend snapshots in bulk if needed.",
    "data_models": "[InsuranceCompanyPlanInfo]"
  },
  "BENINTEG-2485": {
    "key": "BENINTEG-2485",
    "issue": "Cannot push/view amendment tab for Aetna PEO discrepancies due to plan mapping error for Guardian Vol Life coverage.",
    "issue_summary": "Plan mapping error for Guardian Vol Life coverage in Aetna PEO, causing inability to push/view amendment tab.",
    "rca": "This was related to the guardian plan mapping incident, where the PEO team had updated the names for the plans causing the plan mapping to break. This is now fixed.",
    "steps_taken": "Update the plan mapping, ensure no other members are affected by this error, and push amendments for affected members.",
    "data_models": "[CompanyInsuranceInfo]"
  },
  "BENINTEG-2484": {
    "key": "BENINTEG-2484",
    "issue": "Cannot push/view amendment tab for Aetna PEO discrepancies due to plan mapping error for Guardian STD coverage.",
    "issue_summary": "Plan mapping error for Guardian STD coverage causing issues with viewing and pushing amendments for Aetna PEO discrepancies.",
    "rca": "This issue was previously addressed in ticket BENINTEG-2431, and amendments have been resent to Noyo.",
    "steps_taken": "The issue was tracked and fixed as part of ticket BENINTEG-2431. Amendments for the related employees were resent to Noyo, and the ticket was closed.",
    "data_models": "[]"
  },
  "BENINTEG-2483": {
    "key": "BENINTEG-2483",
    "issue": "Aetna requires a gender of female or male to be listed on the file for nonbinary members, but the system currently sends an 'X'. This discrepancy needs to be resolved for affected members.",
    "issue_summary": "The system sends an 'X' for gender details of nonbinary members, which is not accepted by Aetna. The configuration needs to be updated to send 'female' or 'male' instead.",
    "rca": "The root cause of the issue is a bug in the Noyo integration where the system sends an 'X' for gender details of nonbinary members, which is not compliant with Aetna's requirements.",
    "steps_taken": "A fix was initially reviewed and expected to be resolved by the night. However, it was later identified that the issue persisted, and a discussion with Noyo was initiated to address the problem. Ultimately, it was decided that the issue would need to be handled manually.",
    "data_models": "[]"
  },
  "BENINTEG-2482": {
    "key": "BENINTEG-2482",
    "issue": "Test file is not generating within Stedi for Cigna WA plans Med, Den, Vis due to missing SSN for an employee.",
    "issue_summary": "The test file for Cigna WA plans is not generating within Stedi because an employee does not have an SSN entered into the system, causing a blank SSN which stops the file from successfully sending.",
    "rca": "Employee did not have a SSN entered into the system, creating a blank SSN which stops a file from successfully sending. Additionally, there was a missing termination date for an employee who was terminated as per HRIS but had no termination date, causing issues in data generation.",
    "steps_taken": "The termination date in the TerminationInfo model was updated to match the role's endDate using the following script:\n\n```python\nrole = RoleWithCompany.objects.get(id=\"66da2e441ae170b9a6e774f6\")\nprint(\"role.endDate\", role.endDate)\nterm_info = role.terminationInfo\n\nterm_info.endDate = role.endDate\nsave_legacy_role_models(term_info)\n\nterm_info.reload()\nreturn term_info\n```\n\nAdditionally, communication was made to update the missing SSN for the employee.",
    "data_models": "[RoleWithCompany, TerminationInfo]"
  },
  "BENINTEG-2481": {
    "key": "BENINTEG-2481",
    "issue": "The form for Hartford is missing a signature field, resulting in the absence of both the signature and completion date for certain employees.",
    "issue_summary": "The Hartford form is missing a signature field for some employees, causing the signature and completion date to not appear. This issue is specific to auto-enrolled events where the system does not capture employee signatures.",
    "rca": "Forms for auto-enrolled events are missing employee signatures, which is expected behavior as the system auto-enrolls or waives after the deadline without employee interaction. Therefore, no employee signature is captured.",
    "steps_taken": "The engineering team confirmed that the company signature is present but the SLIs (Subscriber Line Info) do not have a signature due to auto-enrollment. It was determined that the missing signature is expected behavior for auto-enrolled events. The team suggested that the fastest resolution would be for the admin to manually collect signatures from the affected employees and send them to the carrier.",
    "data_models": "[CompanyInsuranceInfo, PendingAction, SubscriberLineInfo]"
  },
  "BENINTEG-2479": {
    "key": "BENINTEG-2479",
    "issue": "The production file for United Healthcare (UHC) for WiserAI, Inc was not being sent automatically as the Ideon feed had expired. This required manual intervention to send the file and a need to schedule the production files to be sent every Wednesday starting 11/06.",
    "issue_summary": "The Ideon feed for WiserAI, Inc with United Healthcare had expired, necessitating manual sending of the production file and scheduling of future automatic transmissions.",
    "rca": "The process of sending the production file was handed over to operations, and the Ideon feed had expired, which led to the need for manual intervention and scheduling of the file transmission.",
    "steps_taken": "The production file was manually sent, and it was decided to schedule the production files to be sent every Wednesday starting 11/06. The process was handed over to operations, and the ticket was closed.",
    "data_models": "[]"
  },
  "BENINTEG-2478": {
    "key": "BENINTEG-2478",
    "issue": "The COBRA Cigna enrollment form for a member at Infinitus Systems Inc showed an error 'UNSUBMITTED_PRIOR_FORMS' because the member's Termination form was not submitted to the carrier.",
    "issue_summary": "The COBRA enrollment form for a member at Infinitus Systems Inc had an error due to the Termination form not being submitted to the carrier, although the system was working as expected with EDI transmissions.",
    "rca": "The root cause was identified as a misunderstanding of the system's operation. COBRA enrollments for Stedi participants on CIGNA are sent over EDI, and emails are not expected to be sent. The system was working as expected, but the error message was due to the Termination form not being submitted.",
    "steps_taken": "The team verified that the COBRA enrollment was sent via EDI by inspecting the EDI file. It was confirmed with Cigna that the member was active on COBRA in their system effective 10/1/2024. The issue was resolved by confirming the EDI transmission and the member's active status with Cigna.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2476": {
    "key": "BENINTEG-2476",
    "issue": "Dependent Karlin Erin is being sent in the file as an active dependent without a subscriber, with incorrect INS02 and INS05 values, while in the Rippling system, only the dependent spouse is enrolled for COBRA coverage.",
    "issue_summary": "The issue involves incorrect transmission of dependent data for COBRA coverage, where the dependent is being sent as active without a subscriber, and incorrect INS02 and INS05 values are being used.",
    "rca": "The root cause was identified as a missing business logic for handling dependents only enrolled in COBRA coverage, which required a change in the business logic to correctly classify and map the dependent's status.",
    "steps_taken": "The fix was deployed with a controlled rollout. However, it initially failed due to a carrier classification and mapping error. After further investigation and adjustments, the dependent was correctly included in the file as expected.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-2474": {
    "key": "BENINTEG-2474",
    "issue": "The client Tixr is facing an issue with the production file for Cigna where a QLE update made on 9/9 is not being sent correctly. The employee, Acacia Diaz, had a QLE change to add a dependent on the same plan effective 7/22/24. An offline change was made on 9/9 to switch from OAP HSA to OAP Buy Up, backdated to the same QLE effective date. However, the plan code did not update to reflect OAP Buy-Up, and the dependent is not being sent under the employee as expected.",
    "issue_summary": "The issue is that offline changes are not being communicated via pending actions, causing discrepancies in the plan code and dependent information being sent to the carrier. The plan code remains as 'MHDP0125' instead of updating to 'MOAP0041', and the dependent information is not formatted correctly.",
    "rca": "The root cause of the issue is that offline changes are not supported to be sent via pending actions, which is causing the plan code not to update and the dependent information to be incorrect. Offline changes are not communicated through any vendor except EBN, leading to conflicting enrollment information being sent.",
    "steps_taken": "To resolve the issue, a manual way to recreate these QLEs online was implemented as a quick fix to prevent invalid enrollment from being sent in the production file. Additionally, a case basis fix was done by resetting the snapshot, and a feature enhancement ticket is suggested to prevent future occurrences.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-2473": {
    "key": "BENINTEG-2473",
    "issue": "People Center, Inc. / BCBS CA dataset was not being sent to OneKonnect since 10/16, causing production files to consistently fail.",
    "issue_summary": "The dataset for People Center, Inc. with Blue Shield - CA was not being sent to OneKonnect, leading to consistent failures in production file transmissions.",
    "rca": "The root cause was identified as an optimization that was enabled, which affected the dataset transmission to OneKonnect.",
    "steps_taken": "The issue was resolved by turning back on a flag that was mistakenly turned off. Monitoring was suggested to prevent future occurrences. The Blue Shield file was generated and set to be sent in the next cron job. Timeout issues were identified and addressed as part of another ongoing ticket.",
    "data_models": "[]"
  },
  "BENINTEG-2472": {
    "key": "BENINTEG-2472",
    "issue": "The production status for BCBS CA was not updated in the customer user interface, and forms were not stopped as expected. The retool query used to update the production status returned no results, likely due to restrictions for the specific group.",
    "issue_summary": "BCBS CA production status was not updated due to retool query returning no results, likely because of restrictions for the specific group.",
    "rca": "The issue was caused by the use of a webscript to move the connection to production and provide connection state information. There were also findings related to other carrier connections via EBN and other vendors.",
    "steps_taken": "The EBN Company Carrier connection was moved to production from the backend. The Kaiser carrier object was also reviewed to ensure it was correctly routed to Ideon instead of OneKonnect.",
    "data_models": "[]"
  },
  "BENINTEG-2471": {
    "key": "BENINTEG-2471",
    "issue": "Stonecode Capital is facing a plan mapping error with Aetna PEO while trying to push a Noyo snapshot, resulting in urgent access to care issues.",
    "issue_summary": "The issue involves a plan mapping error with Aetna PEO when attempting to push a Noyo snapshot for Stonecode Capital, due to missing Noyo plan mapping information for the Rippling plan: Aetna PPO $300, line type: medical.",
    "rca": "The root cause of the issue was identified as a special case handling bug where the system failed to handle multiple benefit_class options for the group, requiring a specific benefit_class_identifier in the carrier_config for coverage.",
    "steps_taken": "To resolve the issue, a webscript was used to mock new plans and push the snapshot across. A patch was added to include the benefit class identifier for Guardian CA, which allowed the snapshot to be successfully sent to Noyo. The code snippets used included mocking functions and patching methods to handle the special case.",
    "data_models": "[Subscriber, NoyoMemberSnapshotController, NoyoMemberSnapshotPayloadGenerator]"
  },
  "BENINTEG-2468": {
    "key": "BENINTEG-2468",
    "issue": "Lightmatter, Inc. was onboarded, but there was a transmission error when attempting to generate a file due to a validation error related to the city name length exceeding 30 characters.",
    "issue_summary": "Transmission error occurred for Lightmatter, Inc. due to a city name exceeding the maximum allowed length of 30 characters in the data being transmitted.",
    "rca": "The root cause of the issue was a manual data entry error where the city name 'Lincoln, Massachusetts, United States' exceeded the maximum length constraint of 30 characters, causing a validation error during transmission.",
    "steps_taken": "The issue was identified as a city name length validation error. The team increased the maximum length in the guide temporarily to identify the dependent causing the error. After identifying the dependent, the maximum length was reverted back to 30. The client and broker were requested to correct the city name in Rippling. Once corrected, the file was generated successfully, and the ticket was closed.",
    "data_models": "[]"
  },
  "BENINTEG-2464": {
    "key": "BENINTEG-2464",
    "issue": "The user faced an error while trying to re-onboard a group by adding a benefit to the group 'Port Discovery Children's Museum' with United Healthcare as the carrier.",
    "issue_summary": "The issue occurred because adding benefits at a later time led to errors due to non-unique fetch results for configured parameters.",
    "rca": "The root cause of the issue was identified as a bug related to special case handling. Specifically, errors occur if benefits are added at a later time, resulting in a non-unique fetch for any of the configured parameters.",
    "steps_taken": "To resolve the issue, the team decided to remove any onboarding configuration on their side, allowing the user to re-onboard the group with all the benefits. This involved running a script to delete existing configurations and payload data for the company. The script used was:\n\n```python\nif True:\n    vpcs = VendorPartnerCompany.objects.filter(company=\"644a8ee09179aa55272c8ffe\")\n    configs = BaseVendorPartnerGroupingConfig.objects.filter(company=\"644a8ee09179aa55272c8ffe\")\n    pds = StediPartnerCompanyGroupingPayloadData.objects.filter(company=\"644a8ee09179aa55272c8ffe\")\n    tcs = StediPartnerTransmissionConfig.objects.filter(company=\"644a8ee09179aa55272c8ffe\")\n    for vpc in vpcs:\n        print(\"deleting vpc\", str(vpc.id))\n        vpc.delete()\n    for config in configs:\n        print(\"deleting config\", str(config.id))\n        config.delete()\n    for pd in pds:\n        print(\"deleting pd\", str(pd.id))\n        pd.delete()\n    for tc in tcs:\n        print(\"deleting tc\", str(tc.id))\n        tc.delete()\n    return\n```\n\nThe output confirmed the deletion of the configurations, and the user was able to re-onboard the group successfully.",
    "data_models": "[VendorPartnerCompany, BaseVendorPartnerGroupingConfig, StediPartnerCompanyGroupingPayloadData, StediPartnerTransmissionConfig]"
  },
  "BENINTEG-2459": {
    "key": "BENINTEG-2459",
    "issue": "Super admin not able to proceed with the Carrier Transmission set-up. When they click 'Continue' it does not proceed to the next page.",
    "issue_summary": "Super admin unable to proceed with Carrier Transmission set-up due to a conflict between existing Vericred CCTs and new EBN CCTs.",
    "rca": "For incomplete flows in carrier connection setup, the vendor CCT impedes the creation of a new vendor CCT if the default priority has changed in between. Specifically, Vericred CCTs already existed, and the migration to EBN was not done correctly, causing the upsert to fail.",
    "steps_taken": "The solution was to remove the invalid Vericred CCTs. The following code was used to delete the old VCCT objects:\n\n```python\nif True:\n    old_vccts = BaseCompanyCarrierTransmission.objects.filter(company=\"635bde33eaa959b8916f5fe8\", carrier__in=[\"5b9863bbd2a5f82056fe9278\", \"5a656521d2a5f85842cb4844\"])\n    for old_vcct in old_vccts:\n      print(\"Deleting vcct\", old_vcct.id)\n      old_vcct.delete()\n    return None\n```\n\nAfter execution, the following code was used to verify deletion:\n\n```python\nreturn [x.id for x in BaseCompanyCarrierTransmission.objects_including_deleted.filter(company=\"635bde33eaa959b8916f5fe8\", carrier__in=[\"5b9863bbd2a5f82056fe9278\", \"5a656521d2a5f85842cb4844\"])]\n```\n\nThis returned the IDs of the deleted objects, confirming the resolution.",
    "data_models": "[BaseCompanyCarrierTransmission]"
  },
  "BENINTEG-2458": {
    "key": "BENINTEG-2458",
    "issue": "Aetna is blocking the file from going live due to ~400 errors related to CSA discrepancies during the PEO migration process. Aetna requires confirmation on the CSA changes before approving the file for production.",
    "issue_summary": "Aetna PEO Migration faced blocking issues due to CSA discrepancies between the data in Aetna's system and the data being passed from Rippling/Noyo, requiring urgent resolution to proceed with production.",
    "rca": "The discrepancies were primarily due to plan mapping issues and potentially faulty data sent by Vericred. It was confirmed that the new plans and CSAs were correct, but the discrepancies persisted, likely due to bad Ideon data from the 12/1/23 renewal.",
    "steps_taken": "The team confirmed with PEO teams that the new plans and CSAs were correct. They monitored the situation as the number of discrepancies slightly increased with the latest test file. An updated impact report was created to track the ongoing issues.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2457": {
    "key": "BENINTEG-2457",
    "issue": "Cigna is requesting an update to the effective dates for employees who had life events that changed their coverage tier, but the system does not automatically update these dates. This is blocking the group from being placed into production.",
    "issue_summary": "The system does not automatically update effective dates when a coverage tier changes due to life events, causing a request from Cigna to manually update these dates for specific employees.",
    "rca": "This is a feature request that is part of an ongoing EPIC. The current system limitations prevent automatic updates of effective dates when coverage tiers change due to life events. This issue cannot be resolved within the scope of the support ticket and requires prioritization in the product roadmap.",
    "steps_taken": "Confirmed that the group's Cigna connection is via Ideon. Attempted to push information to Ideon, but it did not update the effective dates. The issue is recognized as a feature request and is being tracked in an EPIC for future resolution.",
    "data_models": "[PendingAction]"
  },
  "BENINTEG-2456": {
    "key": "BENINTEG-2456",
    "issue": "Noyo Setup Tasks for Transcend Privacy Inc. are not clearing from the Insurance Tasks Dashboard despite being set up correctly.",
    "issue_summary": "Noyo Setup Tasks are not clearing due to incorrect mapping of billing groups to multiple plans, causing overlapping plan mappings.",
    "rca": "A billing group was incorrectly mapped to multiple plans, leading to overlapping Noyo plans being mapped to Rippling plans. Additionally, discontinued plans at Noyo's side were still mapped, causing conflicts with new Noyo plans. These discontinued plans were then cleared from the system, resolving the issue.",
    "steps_taken": "1. Verified plan mappings in the Noyo Plan Mapper page. 2. Pushed an amendment for an employee enrolling in a plan and confirmed no errors. 3. Identified that fields 'eligible_classification_values' and 'eligible_carrier_classifications' were blank for NCPs. 4. Cleared mappings for discontinued Noyo plans using the following code snippet:\n\n```python\ndced_plans = [x for x in NoyoAPI.get_group_plans(\"c1076e50-8801-470f-a078-9899fc9422ca\") if x[\"status\"] == \"discontinued\"]\nfor dced_plan in dced_plans:\n    print(\"Deleting mappings for discontinued plan\", dced_plan[\"id\"])\n    ncpis = NoyoCompanyPlanInfo.objects.filter(company=company, noyo_plan_id=dced_plan[\"id\"])\n    print(\" Found\", len(ncpis), \"NoyoCompanyPlanInfos\")\n    print(\"  IDs\", [str(x.id) for x in ncpis])\n    print(\"Lines\", [str(x.noyo_line_type) for x in ncpis])\n    if False:\n        ncpis.delete()\nreturn None\n```\n5. Unmapped affected Noyo plans from billing group '0000'. 6. Re-triggered 'check_for_noyo_transaction_prerequisites' and confirmed tasks did not reopen.",
    "data_models": "[NoyoCompanyPlanInfo, InsuranceCompanyInfo]"
  },
  "BENINTEG-2455": {
    "key": "BENINTEG-2455",
    "issue": "The demographic change form for Equitable was incorrectly marked as 'Waive' for the enrollment tier, causing issues with employee enrollments.",
    "issue_summary": "The demographic change form for Equitable was incorrectly marked as 'Waive' for the enrollment tier due to a mapping issue, affecting employee enrollments.",
    "rca": "There was a mapping issue with the forms for Equitable, where the 'waive' checkbox was incorrectly mapped. This was due to recent changes in the form mapping for this carrier, which led to the issue being observed now.",
    "steps_taken": "The form mapping was corrected, and forms were resynced into S3 from the box. Forms for affected employees were regenerated to ensure the issue was resolved. A script was run to identify impacted employees, and forms were regenerated for them.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-2454": {
    "key": "BENINTEG-2454",
    "issue": "Noyo flagged an issue with the snapshot data sent for an employee, Cathy Andresen, on September 5th. The data contained contradictory dates in the Event Reason Block and Employee Block, leading to an incorrect event reason being sent to Noyo.",
    "issue_summary": "The issue was that the snapshot data sent to Noyo for an employee contained contradictory dates, resulting in an incorrect event reason being sent. The event was incorrectly categorized as 'new_hire' instead of 'change_to_full_time' or 'eligibility_change' QLE.",
    "rca": "The root cause of the issue is that the current system does not handle 'insuranceRoleChange' for a QLE, which does not allow for granular event reporting to Noyo. This is a product enhancement that needs prioritization.",
    "steps_taken": "A product ticket (BENINTEG-2793) was created to track the feature enhancement needed to handle 'insuranceRoleChange' for QLEs. The issue was marked as resolved in this ticket, and the progress will be tracked in the new product ticket.",
    "data_models": "[noyo_member_snapshot_payload_generator.py]"
  },
  "BENINTEG-2453": {
    "key": "BENINTEG-2453",
    "issue": "OneKonnect needs verification of the values sent in the 'cobraqualifyingevent' field for the integration with Sovrn Holdings, Inc.",
    "issue_summary": "OneKonnect requested verification of the values transmitted in the 'cobraqualifyingevent' field, which was previously mapped but required clarification.",
    "rca": "The issue arose due to a need for documentation on the values being transmitted to the external vendor OneKonnect, specifically for the 'cobraqualifyingevent' field.",
    "steps_taken": "The team provided a list of values that are populated in the 'cobraqualifyingevent' field: TERMINATION, CHANGE_EMPLOYMENT_STATUS, DIVORCE, DEATH, MEDICARE, LOSS_OF_DEPENDENT_CHILD_STATUS. This resolved the query from OneKonnect.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2452": {
    "key": "BENINTEG-2452",
    "issue": "Aviatrix Systems, Inc. had an incorrect Convention EDI value in their onboarding template, which needed to be updated for the connection to work correctly.",
    "issue_summary": "The onboarding template for Aviatrix Systems, Inc. had an incorrect Convention EDI value, causing issues with the connection.",
    "rca": "The issue was caused by a manual data entry error where the wrong Convention EDI value was entered. The correct value was updated as supplied by operations.",
    "steps_taken": "The Convention EDI value was checked and found to be incorrect. It was updated to the correct value ending in '1' instead of '2'. After the update, the connection was confirmed to be working, and the ticket was marked as resolved.",
    "data_models": "[StediPartnerCompanyGroupingPayloadData]"
  },
  "BENINTEG-2451": {
    "key": "BENINTEG-2451",
    "issue": "Term Labs Inc faced a transmission error with United Healthcare-PRIME due to a file generation issue. The error message indicated a pattern mismatch in the file name.",
    "issue_summary": "The issue was caused by a space in the file name, which did not match the required pattern for file generation, leading to a transmission error.",
    "rca": "The root cause of the issue was identified as a manual data entry error where a space was included in the file name, causing it to not match the required pattern for transmission.",
    "steps_taken": "To resolve the issue, it was suggested to redo the setup of the group with a file name that does not contain spaces. Additionally, a fix was rolled out to remove space characters before transmission.",
    "data_models": "[]"
  },
  "BENINTEG-2448": {
    "key": "BENINTEG-2448",
    "issue": "Eko Health Inc faced an issue where Guardian required a DTP 337 or DTP 357 to be submitted for members moving from full-time/part-time to contractor and enrolling in Cobra coverage. Ideon confirmed that the 'employment end date' must be submitted by Rippling on every transmission with the member's Cobra coverage.",
    "issue_summary": "The issue was that the system did not support submitting the 'employment end date' for Cobra enrollees, which was required by Guardian and Ideon to include DTP 337 or 357 in the file for Cobra coverage.",
    "rca": "The root cause was identified as a missing feature in the system to include the 'employment end date' for Cobra enrollees in the transmissions to Ideon, which was necessary for compliance with Guardian's requirements.",
    "steps_taken": "The issue was recognized as a product enhancement need. A new feature request was created under ticket BENINTEG-3319 to address this requirement. Additionally, a conversation with Ideon was initiated to clarify the requirements from an API contract point of view, as there was no employment end date related schema found in their documentation.",
    "data_models": "[]"
  },
  "BENINTEG-2447": {
    "key": "BENINTEG-2447",
    "issue": "The updated plan mapping in Rippling with new plan codes for the 11/1 PY was not reflecting in the generated test file, which was still pulling current year plan dates and termination dates. The carrier was expecting the OE file with NPY enrollment urgently.",
    "issue_summary": "The issue was that the updated plan mapping for the new plan year was not being reflected in the generated test file, causing delays in sending the required OE file to the carrier.",
    "rca": "The root cause was identified as the need to regenerate the production file to reflect the updated plan mapping for the new plan year.",
    "steps_taken": "The steps taken included manually generating the OE file and sending it to the test SFTP server for validation. A test file with NPY enrollment was generated and sent to the test server. It was confirmed that the production file was sent accidentally with CPY and terms for all members, but it wasn't processed, so there were no repercussions. The client moved to USP for the new plan year, and Ideon continued sending the prime file for the remainder of the CPY.",
    "data_models": "[]"
  },
  "BENINTEG-2441": {
    "key": "BENINTEG-2441",
    "issue": "Old broker is still receiving Care First form emails after the customer changed brokers.",
    "issue_summary": "The issue is that the old broker's email (lhamilton@onedigital.com) is still receiving Care First form emails even after the customer changed brokers. This is happening while the EDI file feed is in testing with OneKonnect, and there is no tool or User Interface for Ops to remove the email.",
    "rca": "The root cause of the issue was the presence of a custom communication detail for the company/carrier that was not updated or removed when the broker changed.",
    "steps_taken": "The custom communication detail for the company/carrier was removed to resolve the issue. The email was successfully removed, and confirmation was received from the concerned parties.",
    "data_models": "[]"
  },
  "BENINTEG-2440": {
    "key": "BENINTEG-2440",
    "issue": "Employee Natalie Bergstrasser encountered an error when attempting a snapshot due to a Noyo response with status 422, indicating multiple benefit_class options for the group and requiring a different benefit_class_identifier in the carrier_config for dental coverage.",
    "issue_summary": "The issue was related to Guardian PEO mappings not populating correctly, causing a Noyo error with status 422 due to multiple benefit_class options for the group.",
    "rca": "The root cause was identified as an intermittent issue with the Noyo integration, specifically related to the benefit_class options for the group.",
    "steps_taken": "The issue was assigned to a team member for investigation and resolution. It was later confirmed to be resolved, and the ticket was marked for closure.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2438": {
    "key": "BENINTEG-2438",
    "issue": "The issue was to set up a weekly EDI production file for Sphere Semi with United Healthcare, scheduled every Wednesday at 3 AM PST starting from 23/10/2024.",
    "issue_summary": "The task was to move the EDI file for Sphere Semi to production and schedule it to run weekly on Wednesdays at 3 AM PST.",
    "rca": "The root cause analysis indicates that the task was related to moving the EDI file to production using a support tool.",
    "steps_taken": "The steps involved setting up the EDI file to move to production and scheduling it as per the specified frequency. A self-service tool was introduced for the cut-over process, and instructions were provided via a document link for performing the cut-over.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2436": {
    "key": "BENINTEG-2436",
    "issue": "Unable to resend a cancelled transaction for a terminated Rippling employee's guardian via Noyo.",
    "issue_summary": "A transaction for a Rippling employee's guardian was cancelled in error by Noyo, and the transaction could not be resent initially.",
    "rca": "Noyo accidentally cancelled a transaction and had to reinstate it via a manual call.",
    "steps_taken": "The issue was resolved by retriggering the snapshot for the employee from WebScript, bypassing sensitive company checks as it was an internal employee. The following code was used to resend the snapshot:\n\n```python\nif True:\n    sub = Subscriber.objects.get(role=\"667f06ad4ed80df86d91dca4\")\n    from insurance.controller.carrier_connection.noyo_member_snapshot_controller import NoyoMemberSnapshotController\n    NoyoMemberSnapshotController._create_and_send_member_snapshot(\n            \"f08f2c94-1f5e-4b78-8272-69884d77bac5\",\n            sub,\n            None,\n            None\n          )\n    return None\n```\nThe snapshot was successfully resent and reflected on the Noyo dashboard.",
    "data_models": "[Subscriber]"
  },
  "BENINTEG-2435": {
    "key": "BENINTEG-2435",
    "issue": "The Cutover tool is only reflecting medical coverage, causing issues as the Retool shows Medical, Dental, and Vision. The production file was not being sent to the carrier, leading to a delay in processing.",
    "issue_summary": "The issue was due to conflicting configurations where one configuration was only for Medical and another for Medical, Dental, and Vision. This led to the production file not being sent to the carrier.",
    "rca": "The root cause was a 'VendorPartnerCompany not found' error, which was due to conflicting configurations for the insurance coverage. The error was identified in the logs as 'No vendor partner company found for company 6424663ec8e20b65289b1b71'.",
    "steps_taken": "The conflicting configuration for solo Medical was deleted, and the VendorPartnerCompany was updated to include Medical, Dental, and Vision. The error was fixed, allowing the production file to be triggered and sent successfully.",
    "data_models": "[VendorPartnerCompany]"
  },
  "BENINTEG-2434": {
    "key": "BENINTEG-2434",
    "issue": "Active EDI status not shown as active in Carrier Transmissions for North Park Transportation, causing escalations.",
    "issue_summary": "The EDI status for North Park Transportation with Cigna was expected to be active but was showing as inactive, impacting all BOB customers with active inhouse EDI connections.",
    "rca": "The system was working as expected, and the issue was due to a wrong expectation rather than a system malfunction.",
    "steps_taken": "The issue was discussed in an Eng/Ops call and tracked via Jira for cross-functional team visibility. It was later clarified that the issue was different and related to editing email details, not the EDI status.",
    "data_models": "[]"
  },
  "BENINTEG-2433": {
    "key": "BENINTEG-2433",
    "issue": "The system failed to send a QLE transaction to Noyo for adding a dependent, resulting in an error due to missing Noyo plan mapping information for the Guardian-VSP Vision Plan C (Choice).",
    "issue_summary": "The issue was caused by missing Noyo plan mapping information for the Guardian-VSP Vision Plan C (Choice), preventing the system from sending a QLE transaction to Noyo.",
    "rca": "The root cause was related to a Guardian PEO plan mapping incident, which was not correctly set up, leading to the inability to find a matching Noyo plan mapping information.",
    "steps_taken": "The engineering team was notified to correct the mapping. Once the mappings were updated, the transactions were successfully sent to Noyo for the affected employees.",
    "data_models": "[InsuranceCompanyPlanInfo]"
  },
  "BENINTEG-2432": {
    "key": "BENINTEG-2432",
    "issue": "The client, Ignition GTM, Inc, needs to have their insurance data file moved to production for United Healthcare with a set frequency of every Wednesday at 3am PST. The first production file is scheduled to be sent on 10/16/2024.",
    "issue_summary": "The issue involves moving Ignition GTM, Inc's insurance data file to production for United Healthcare using the Ideon cut over tool, with a scheduled frequency for data transmission.",
    "rca": "The root cause analysis indicates that the Ideon cut over tool was used to facilitate the transition of the client's data to production.",
    "steps_taken": "The team is transitioning to a self-serve tool for cutting over from Ideon and moving groups to production. A document was provided for guidance, and a session was conducted to assist with the tool's usage.",
    "data_models": "[]"
  },
  "BENINTEG-2431": {
    "key": "BENINTEG-2431",
    "issue": "Unable to push an amendment for Aetna PEO coverage due to a plan mapping error with Noyo, resulting in failure to find a matching Noyo plan mapping information.",
    "issue_summary": "The issue was a plan mapping error for Aetna PEO coverage, where the system was unable to find a matching Noyo plan mapping information due to changes in plan names by the PEO team.",
    "rca": "The root cause of the issue was related to the guardian plan mapping incident, where the PEO team had updated the names for the plans, causing the plan mapping to break. This was identified as a bug in the Noyo integration.",
    "steps_taken": "The engineering team worked on fixing the plan mapping issues by verifying the new functionality and ensuring it unblocks the process. They used a Python function to fetch and verify Noyo plans from Rippling plan names. The function `_get_noyo_plan_from_rippling_plan_name` was used to recursively find the Noyo plans. The team also coordinated with the PEO team to ensure the new plan mappings were added and tracked the progress in an incident channel. Once the fixes were merged, they re-triggered the plan mappings and sent amendments for the affected employees.",
    "data_models": "[InsuranceCompanyPlanInfo, CompanyCarrierLineInfo]"
  },
  "BENINTEG-2430": {
    "key": "BENINTEG-2430",
    "issue": "The group Crstl Technologies, Inc. needed to be moved to production for their insurance carrier UHC/USP.",
    "issue_summary": "The group Crstl Technologies, Inc. was approved for production with UHC/USP, and the Ideon cut over tool was used to schedule this transition.",
    "rca": "The issue was addressed by using the Ideon cut over tool to schedule the group's transition to production.",
    "steps_taken": "The Ideon cut over tool was utilized to schedule the production transition for the group. A self-serve tool is now being used for cutting over from Ideon and moving groups to production, as referenced in the provided document link.",
    "data_models": "[]"
  },
  "BENINTEG-2429": {
    "key": "BENINTEG-2429",
    "issue": "The group Cable Tech, INC. needed to be moved to production using the Ideon cut over tool.",
    "issue_summary": "The group Cable Tech, INC. was approved for production and needed to be transitioned using the Ideon cut over tool to schedule production with UHC/USP.",
    "rca": "The Ideon cut over tool was used to schedule the production for the group Cable Tech, INC. with the carrier UHC/USP.",
    "steps_taken": "The Ideon cut over tool was utilized to schedule the production for the group. A self-serve tool for cutting over from Ideon and moving groups to production was referenced in the comments.",
    "data_models": "[]"
  },
  "BENINTEG-2428": {
    "key": "BENINTEG-2428",
    "issue": "Multiple files were sent for different Cigna clients, causing confusion for Cigna as they were unsure which file to process for each client.",
    "issue_summary": "Multiple scheduled production files were sent to Cigna for different clients due to an error in the daily job that sends EDI files, leading to confusion about which files to process.",
    "rca": "The issue was caused by an error in the daily job responsible for sending EDI files. This error led to multiple retries, even in the case of a successful transmission, resulting in multiple files being sent. The error occurred due to a major migration that missed a few entries, causing the job to be retried unnecessarily.",
    "steps_taken": "The error in the daily job was identified and fixed. The issue was resolved by ensuring that the job did not error out in subsequent runs, and files were sent as expected without any issues. Cigna was advised to use the latest files for the affected groups.",
    "data_models": "[]"
  },
  "BENINTEG-2427": {
    "key": "BENINTEG-2427",
    "issue": "The EDI file feed for the group 'The Alliance for Longevity Initiatives' with carrier UHC USP needs to be set up for production to run weekly on Wednesdays.",
    "issue_summary": "The EDI file feed for 'The Alliance for Longevity Initiatives' with carrier UHC USP needs to be moved to production using a self-serve tool, transitioning from Ideon to an in-house connection.",
    "rca": "The issue required using a new self-serve tool to transition the EDI file feed from Ideon to an in-house connection for production setup.",
    "steps_taken": "The in-house production tool was used to send the file to production, as confirmed in the comments.",
    "data_models": "[]"
  },
  "BENINTEG-2426": {
    "key": "BENINTEG-2426",
    "issue": "Aetna PEO Migration - member not eligible for product error for Craig Tueller during migration to Noyo.",
    "issue_summary": "Craig Tueller encountered an eligibility error during the Aetna PEO migration to Noyo, likely due to plan mapping or availability issues.",
    "rca": "The issue was caused by incorrect plan mapping handling, which is a special case that needed to be addressed.",
    "steps_taken": "The issue was identified as a race condition and a known problem. A ticket was registered to resolve it by sending an amendment for the new role. The correct amendment was sent to address the issue.",
    "data_models": "[]"
  },
  "BENINTEG-2425": {
    "key": "BENINTEG-2425",
    "issue": "Aetna PEO migration to Noyo encountered errors, specifically '0153 - please provide term dates or advise of status', affecting 583 out of 697 cases. This issue is due to data mismatches between Noyo and Rippling, requiring bulk updates via Amendments.",
    "issue_summary": "During the Aetna PEO migration to Noyo, a significant number of errors were encountered due to data mismatches, specifically related to term dates, necessitating bulk updates to resolve.",
    "rca": "The root cause of the issue was identified as a data mismatch between Noyo and Rippling, where future-dated enrollments were not received by Noyo. This discrepancy led to errors categorized as '0153 - please provide term dates or advise of status'.",
    "steps_taken": "The engineering team was requested to perform bulk updates to resolve the errors by passing Amendments to update the Snapshots. A script was previously used to search for SSN and push the amendment, but matching failed snapshots was challenging due to format differences in names. Efforts were made to align the formats for easier tracking of successful and failed updates. The issue was also blocked by another ticket, BENINTEG-2431, which was being worked on concurrently.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-2422": {
    "key": "BENINTEG-2422",
    "issue": "EE's dental enrollment was not sent to the carrier following a QLE event due to 'Form Not Sent Reason: UNSUBMITTED_PRIOR_FORMS'. This was blocking the employee from accessing care.",
    "issue_summary": "The dental enrollment for an employee at ForAllSecure, Inc was not sent to the carrier due to a pending action marked as 'UNSUBMITTED_PRIOR_FORMS'. This was because there were blocked enrollment events for the carrier and employee finalized before the target enrollment event.",
    "rca": "Older pending actions (PAs) were marked as processed when Rippling was not managing forms, and these PAs had all their CCLIs inactive. This caused the forms not to be sent to the carrier.",
    "steps_taken": "Older pending actions with inactive CCLIs were marked as failed, allowing the forms to be processed. A script was used to force-perform the pending action for the impacted employee and mark PAs with inactive CCLIs as failed. The script for force-performing PA: `if True: return PendingAction.objects.get(id=\"6682105dcfcff6c1e79d8924\").performAction()`. The script for marking PAs as failed: `if True: carrier_pa_map = {}; pas = [x.pending_action for x in PendingActionLog.objects.filter(company=\"5f84c8725a808b03d194f5fd\", reason_for_not_performing=\"UNSUBMITTED_PRIOR_FORMS\")]; for pa in pas: if (str(pa.carrier.id), str(pa.role.id)) not in carrier_pa_map: pas = list(PendingAction.objects.filter(state=\"PROCESSED\", role=pa.role, company=pa.company, carrier=pa.carrier)); pas.sort(key=lambda x: x.createdAt); carrier_pa_map[str(pa.carrier.id), str(pa.role.id)] = pas; for cr in carrier_pa_map: if len(carrier_pa_map[cr]) == 0: continue; print(\"Carrier\", cr[0], \"Role\", cr[1]); for rpa in carrier_pa_map[cr]: pal = PendingActionLog.objects.get(pending_action=rpa); all_cclis_inactive = all([x.ccli.expirationDate < pst_today() for x in rpa.getAllLineInfos() if x and x.ccli]); if all_cclis_inactive: print(\"PA marked as failed, all CCLIs were inactive\", rpa.id, \"role\", rpa.role.id); rpa.update(state=\"FAILED\"); return None`.",
    "data_models": "[PendingAction, PendingActionLog, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-2421": {
    "key": "BENINTEG-2421",
    "issue": "Emails for insurance enrollments are shown as sent in the debugger but are not present in Groups or being received by the carrier.",
    "issue_summary": "Emails related to insurance enrollments appear as sent in the system debugger but are not being received by the intended recipients, including the carrier, raising concerns about the reliability of email transmissions.",
    "rca": "The root cause analysis revealed that while emails were sent using the Mandrill API, they were not appearing in the insurance-broker-ops inbox due to the method of sending. The emails were sent through Mandrill, which does not update the Gmail 'Sent' folder, leading to a lack of visibility and confirmation of email delivery. Additionally, there was a rejection from the insurance-broker-ops email, and the emails were not sent to all intended recipients.",
    "steps_taken": "The engineering team retriggered the emails for the affected individuals, Dave Jetton and Cheryl Hammond, to ensure delivery. They also checked the Mandrill event logs for tracking IDs and confirmed that the emails were opened by some recipients. The team is considering moving to a different notification system to ensure emails appear in the 'Sent' folder and are reliably tracked. Exception letters were offered to the carrier to honor the enrollments.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-2420": {
    "key": "BENINTEG-2420",
    "issue": "Admin reported that two enrollments were not being sent to Guardian and had to be manually retro-enrolled with the broker. The employees in question were not appearing in Noyo, and there was no record of sending snapshots/enrollments.",
    "issue_summary": "Enrollments for two employees were not being sent to Guardian via Noyo, and there was no record of these enrollments in the Noyo system.",
    "rca": "The issue was due to the fact that the two employees were being sent via Vericred instead of Noyo, which is why there were no Noyo snapshots. It was unclear why Vericred had not sent the information to the carrier.",
    "steps_taken": "It was recommended to send a census snapshot to Noyo to ensure there were no discrepancies. A snapshot was marked as sent in the migration tracker, but it appeared to have been missed or an error occurred. A decision was made to send a census for the group to resolve the issue.",
    "data_models": "[]"
  },
  "BENINTEG-2419": {
    "key": "BENINTEG-2419",
    "issue": "The issue faced was the presence of two vendor partner configurations for Churchly Inc (Tabella) with United Healthcare, one for Florida and one for California, causing confusion in the cutover process.",
    "issue_summary": "The issue was caused by the creation of two overlapping configurations for United Healthcare, one for Florida and one for California, which needed to be resolved to proceed with the cutover.",
    "rca": "The root cause of the issue was identified as the creation of two configurations with overlapping benefits for the same group, leading to confusion in the cutover process.",
    "steps_taken": "The steps taken to resolve the issue included confirming the correct configuration (Florida), removing the incorrect configuration (California), and ensuring the Vericred connection was marked as inactive before proceeding with the cutover using the cutover tool.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2418": {
    "key": "BENINTEG-2418",
    "issue": "Cradle Accounting Inc group needs to be transitioned to a production file with United Healthcare-USP, and the existing Vericred feed needs to be expired.",
    "issue_summary": "The Cradle Accounting Inc group has been approved for production with United Healthcare-USP, and there is a need to schedule the production file while ensuring the existing Vericred feed is expired.",
    "rca": "The issue was related to the transition process using the Ideon cut-over tool, which is necessary to switch the group from the existing Vericred feed to the new production file with United Healthcare-USP.",
    "steps_taken": "The steps involved marking the ticket as open, expiring the Vericred feed, and then cutting over the group from Ideon. Once the Vericred feed was confirmed to be expired, the scheduling of the production file was proceeded with.",
    "data_models": "[]"
  },
  "BENINTEG-2417": {
    "key": "BENINTEG-2417",
    "issue": "The group Goodwater Capital LLC needed approval for production with the carrier Cigna.",
    "issue_summary": "Goodwater Capital LLC was approved for production with Cigna, but there was a need to move the group to Stedi production.",
    "rca": "The issue was related to the use of the Ideon cut-over tool.",
    "steps_taken": "The group was moved over to Stedi production as indicated in the comments.",
    "data_models": "[]"
  },
  "BENINTEG-2416": {
    "key": "BENINTEG-2416",
    "issue": "The group Perkins & Co needed approval for production with the carrier Cigna, and there was a need to move the group to Stedi production.",
    "issue_summary": "Perkins & Co was approved for production with Cigna, and the group needed to be moved to Stedi production using the Ideon cut-over tool.",
    "rca": "The issue was related to the use of the Ideon cut-over tool for transitioning the group to production.",
    "steps_taken": "The group was successfully moved over to Stedi production as confirmed by the comment from the user.",
    "data_models": "[]"
  },
  "BENINTEG-2415": {
    "key": "BENINTEG-2415",
    "issue": "EE Ian Chan was incorrectly shown as 'Active' on the 10/09 prod file instead of 'C' for Cobra, and was dropped from the file when a manual file was run on 10/14. Ian Chan should have been on the file with active Cobra enrollments but was not.",
    "issue_summary": "Ian Chan was incorrectly marked as 'Active' instead of 'C' for Cobra on the 10/09 file and was dropped from the file on 10/14. The system was expected to send a DTP 349 with a 09/30/2024 term date but did not.",
    "rca": "The system worked as expected. COBRA enrollments are not sent on UHC prime via EDI, so the employee being dropped on COBRA coverage is expected.",
    "steps_taken": "Confirmed that PRIME files do not support Cobra. No further action was needed as the system was working as expected.",
    "data_models": "[]"
  },
  "BENINTEG-2414": {
    "key": "BENINTEG-2414",
    "issue": "Choozle Inc's insurance data transmission to Cigna Facet needs to be scheduled for production.",
    "issue_summary": "Choozle Inc's insurance data transmission to Cigna Facet was approved for production, requiring scheduling of the production file. The transition was from Ideon to Stedi.",
    "rca": "The cut-over tool was used to move the group to production on Stedi, transitioning from Ideon.",
    "steps_taken": "The connection for Choozle Inc with Cigna Facet was moved to production using the cut-over tool.",
    "data_models": "[]"
  },
  "BENINTEG-2413": {
    "key": "BENINTEG-2413",
    "issue": "The Modern Meadow/Cigna group needs to have their production file scheduled, but the Ideon field is not yet marked inactive, preventing immediate cut-over.",
    "issue_summary": "The production file for Modern Meadow/Cigna group needs to be scheduled, but the Ideon field is still active, blocking the cut-over process.",
    "rca": "The issue was caused by the Ideon cut-over tool, as the Ideon field was not marked inactive, preventing the transition to the new production file.",
    "steps_taken": "The Ideon field was confirmed expired, and the company was cut-over from Ideon in production, allowing the production file to be set for October 22, 2024.",
    "data_models": "[]"
  },
  "BENINTEG-2411": {
    "key": "BENINTEG-2411",
    "issue": "The group's medical carrier is UHC NJ, but forms are being incorrectly routed from Oxford NJ, causing the wrong forms to be pulled.",
    "issue_summary": "The issue was that the forms for the group were being pulled from Oxford NJ instead of UHC NJ due to incorrect carrier settings.",
    "rca": "The root cause of the issue was an incorrect implementation where the Noyo name for United NJ was not fixed, leading to the wrong carrier path being set as Oxford.",
    "steps_taken": "The issue was identified and a fix was pushed to correct the carrier path. The fix was merged, and forms were regenerated to verify that they are now being picked from the correct folder. The fix did not resend the new forms via emails.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2410": {
    "key": "BENINTEG-2410",
    "issue": "Member's new hire enrollment did not get submitted via Noyo and had to be pushed via an amendment.",
    "issue_summary": "The new hire enrollment for Neehaar Gandhi at Fifth Wall Ventures Management, LLC was not automatically submitted through the Noyo API and required manual intervention.",
    "rca": "The root cause analysis category is 'Salesforce case closed', but no specific description is provided. It seems the issue might be related to a processing delay or error in the Noyo system, as indicated by the comment about the Noyo snapshot still processing.",
    "steps_taken": "A thread was started with Noyo to investigate the processing issue. The ticket was flagged as the associated support case was closed to keep the backlog clean.",
    "data_models": "No specific data models were mentioned in the ticket."
  },
  "BENINTEG-2409": {
    "key": "BENINTEG-2409",
    "issue": "The migration of SCiFi Foods from Anthem to Noyo is blocked because the Noyo plan mapper does not populate any plans.",
    "issue_summary": "The migration process for SCiFi Foods from Anthem to Noyo is blocked due to the Noyo plan mapper not displaying any plans. This issue arose because the company does not have an active company enrollment event or any active or soon-to-be-active CCLIs, leading to a false identification for migration.",
    "rca": "The root cause of the issue is that the company, SCiFi Foods, does not have an active company enrollment event or any active or soon-to-be-active CompanyCarrierLineInfo (CCLI). This led to a false identification for migration, as they still have an active feed with Kaiser.",
    "steps_taken": "The migration was canceled for the group after confirming the false identification. The ticket was then closed.",
    "data_models": "[CompanyCarrierLineInfo]"
  },
  "BENINTEG-2405": {
    "key": "BENINTEG-2405",
    "issue": "Unable to generate files in Retool, receiving 'Submit Failed. Unable to process a request.' error for multiple groups.",
    "issue_summary": "Retool is failing to generate files for multiple groups, displaying a 'Submit Failed. Unable to process a request.' error.",
    "rca": "The root cause analysis category is marked as 'Deferred' with no specific issue described.",
    "steps_taken": "No specific steps were documented in the ticket to resolve the issue.",
    "data_models": "[]"
  },
  "BENINTEG-2404": {
    "key": "BENINTEG-2404",
    "issue": "The group 'Seven Sages Digital, LLC' needed to be moved to production for United Healthcare-PRIME, and there was a push to ensure the first production file was sent by 10/16, Wednesday.",
    "issue_summary": "The group 'Seven Sages Digital, LLC' was approved for production with United Healthcare-PRIME, and there was a need to ensure the first production file was sent by the specified date using the Ideon cut-over tool.",
    "rca": "The issue was related to the use of the Ideon cut-over tool to move the group to production for United Healthcare-PRIME.",
    "steps_taken": "The group was successfully moved to production for UHC as confirmed by the comments.",
    "data_models": "[]"
  },
  "BENINTEG-2403": {
    "key": "BENINTEG-2403",
    "issue": "The group needed to be re-onboarded due to a file name update, but encountered an error stating that the Vendor Partner Company already exists for the company with a non-init state.",
    "issue_summary": "The issue was that the group could not be re-onboarded because the Vendor Partner Company (VPC) was already in a non-init state, preventing further edits.",
    "rca": "The root cause was identified as the VPC state being set in a way that did not allow for edits, which was a business logic issue in the backend.",
    "steps_taken": "The state of the VPC was updated in the backend to allow the necessary configuration changes and enable the re-onboarding of the company. This was a temporary fix, and further internal discussions are planned to address the issue long-term.",
    "data_models": "[VendorPartnerCompany]"
  },
  "BENINTEG-2402": {
    "key": "BENINTEG-2402",
    "issue": "Onboarding the group Crusoe Energy with Cigna resulted in a mapping error without any details, blocking the onboarding process.",
    "issue_summary": "The onboarding of Crusoe Energy with Cigna encountered a mapping error due to the snapshot size exceeding 5MB, which requires switching to fragments.",
    "rca": "The issue was caused by the snapshot size for the company being greater than 5MB, necessitating a switch to fragments. The current system does not support handling such large data sizes without fragmenting, leading to the mapping error.",
    "steps_taken": "The team attempted to reproduce the issue using the provided onboarding template and found that the group was successfully onboarded, indicating a transient error. Further investigation revealed the need to switch to fragments due to the large snapshot size. The team decided to prioritize adding support for fragments for Cigna and suggested temporarily moving the group to Ideon until the support is built.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2401": {
    "key": "BENINTEG-2401",
    "issue": "Employer signature is not showing on the Harvard insurance forms for new hire enrollment.",
    "issue_summary": "The employer signature is missing on the Harvard forms due to the company signatory not completing the setup tasks for the signature.",
    "rca": "The company signatory had not completed the setup tasks required to input the signature into the system. This resulted in the signature URL being returned as None, causing the signature to be missing from the forms.",
    "steps_taken": "The engineering team checked the code responsible for populating the company signature details and found that the signature URL was coming as None. They identified that the company signatory was in a pending signature state. The admin was asked to complete the signature setup using a provided link. Once the admin completed the task, the signatory status was updated to READY, and the forms were regenerated, successfully populating the signature.",
    "data_models": "[CompanyInsuranceInfo, RoleWithCompany, CompanySignatoryAssignment]"
  },
  "BENINTEG-2400": {
    "key": "BENINTEG-2400",
    "issue": "The onboarding process for Garnix with United Healthcare encountered an error due to a mapping ID discrepancy in the original onboarding template, preventing successful onboarding.",
    "issue_summary": "The onboarding error was caused by a mapping ID being one letter off in the original template, leading to a validation error during the onboarding process with United Healthcare.",
    "rca": "The root cause of the issue was the use of the onboarding tool with an incorrect 'Convention EDI' value, which was set to '005010X220A2' instead of the correct '005010X220A1'. This discrepancy led to a validation error when attempting to generate a file.",
    "steps_taken": "The state of the VPC was updated to allow changes to the configuration for onboarding. The 'Convention EDI' value was corrected to '005010X220A1', which resolved the validation error and allowed the file to be generated successfully.",
    "data_models": "[]"
  },
  "BENINTEG-2376": {
    "key": "BENINTEG-2376",
    "issue": "The issue is related to the DTP 356 element where there was a class code change from 002 to 001 due to an address change from MA to NY, effective 10/01/2024. However, the file DTP 356 still shows the date as 05/01/2024, causing a retro error.",
    "issue_summary": "The DTP 356 element is not updating the effective date automatically when there is a class code change due to an address change, leading to a retro error.",
    "rca": "The root cause of the issue is a product enhancement requirement where the effective date should automatically update when there is a class code change due to an address change. This feature is currently under development and needs grooming.",
    "steps_taken": "The ticket was linked to an ongoing feature implementation for effective date class code changes. It was marked as deferred since it is a feature request actively being worked on. A stop-gap solution was considered before the effective date pipeline is created.",
    "data_models": "[]"
  },
  "BENINTEG-2374": {
    "key": "BENINTEG-2374",
    "issue": "There are 38 employees who made plan changes, but only 19 change forms were generated. The broker requires all 38 change forms, and the system is unable to generate these automatically.",
    "issue_summary": "The issue is that the system did not generate change forms for all employees who made plan changes because the system recognized some plans as equivalent, thus not triggering form generation.",
    "rca": "The root cause of the issue is that the system maps certain plans as equivalent due to their listing in the 'previousEquivalentCompanyPlanInfos', which leads the system to not recognize them as changes, hence not generating the required change forms.",
    "steps_taken": "The engineering team identified that the 'pending action.fileUrlsChangesOnly' was not populated for the affected employees. They suggested that the system logic should be updated to recognize plan name changes as actual changes, even if the plans are mapped as equivalent. A workaround proposed was to update the plans by removing unnecessary mappings and regenerating the carrier packet.",
    "data_models": "[InsuranceCompanyPlanInfo]"
  },
  "BENINTEG-2373": {
    "key": "BENINTEG-2373",
    "issue": "When attempting to add Carrier Classifications for Kaiser for the Ideon to Noyo migration, no class code types populate, blocking the migration process.",
    "issue_summary": "The migration process for Sketchy Group LLC from Ideon to Noyo is blocked due to the absence of class code types populating when attempting to add Carrier Classifications for Kaiser.",
    "rca": "The issue was caused by the presence of a plan with a deleted CompanyCarrierLineInfo (CCLI), which prevented the class code types from populating.",
    "steps_taken": "The issue was resolved by identifying and deleting the InsuranceCompanyPlanInfo entries associated with the deleted CCLI. The following code snippet was used to identify and delete the problematic entries:\n\n```python\nfor icp in InsuranceCompanyPlanInfo.objects.filter(company=\"5eab2d9ffa9c4e6883c7fb1a\"):\n    if icp.companyCarrierLineInfo.isDeleted:\n      icp.delete()\n```\n\nThis fix was successfully applied to the affected groups, including Kajabi LLC and Pathstream, Inc.",
    "data_models": "[InsuranceCompanyPlanInfo, CompanyCarrierLineInfo]"
  },
  "BENINTEG-2371": {
    "key": "BENINTEG-2371",
    "issue": "Request for a report on clients with renewal dates of 12/01 and 01/01, including their open enrollment start and end dates.",
    "issue_summary": "The request was for a report detailing clients' open enrollment periods to aid in planning the mapping of new plans in the system. The issue was identified as a duplicate of another ongoing ticket.",
    "rca": "The issue was categorized as a product enhancement request but was marked as a duplicate because a similar ticket (BENINTEG-2576) was already being worked on, which would address the same requirement.",
    "steps_taken": "The ticket was discussed among team members, and it was decided to close it as a duplicate since another ticket was already addressing the same issue. The team member responsible for the similar ticket confirmed that it would solve the problem.",
    "data_models": "[]"
  },
  "BENINTEG-2370": {
    "key": "BENINTEG-2370",
    "issue": "The user faced an error related to Noyo amendment tab while trying to push through new snapshots for Sei Labs Inc. The error indicated an inability to find a matching Noyo plan mapping information for the Rippling plan: Aetna PPO $300, line type: medical.",
    "issue_summary": "The issue was caused by a change in plan names for PEO plans, which disrupted the integration with Noyo, leading to an error in finding matching plan mapping information.",
    "rca": "The root cause of the issue was an incorrect implementation where the plan names for PEO plans were changed, breaking the integration with Noyo. This caused the system to be unable to find matching plan mapping information.",
    "steps_taken": "The plan name issue was fixed, and snapshots were sent. Additionally, the amendment for the employee was sent using the Debugger, which unblocked the process.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2369": {
    "key": "BENINTEG-2369",
    "issue": "Unable to find a matching Noyo plan mapping information for the Ripping plan: Aetna PPO $300, line type: medical, which is blocking the processing of new snapshots.",
    "issue_summary": "The issue was caused by a change in plan names for PEO plans, which broke the plan mapping on the integrations side as mappings were based on plan names.",
    "rca": "The plan names were changed for PEO plans, which broke the integrations side of things. The mapping was based on plan names, and the change led to a failure in finding the correct mapping.",
    "steps_taken": "The plan name issue was fixed, and the snapshots were sent. The Aetna plan mapping was unblocked, and the ticket was closed.",
    "data_models": "[SubscriberLineInfo, InsuranceCompanyPlanInfo]"
  },
  "BENINTEG-2368": {
    "key": "BENINTEG-2368",
    "issue": "Rippling is not passing a suffix field in the Noyo snapshot payloads, causing data discrepancies and blocking the Noyo EDI feed for TrovaTrip.",
    "issue_summary": "The suffix field is not being mapped in the Noyo snapshot payloads, leading to data discrepancies and blocking the EDI feed setup for TrovaTrip.",
    "rca": "The root cause is a missing feature in the current system where the suffix field is not exposed on the front end, causing employees to add their suffix in the last name field. This discrepancy blocks the Noyo EDI feed setup.",
    "steps_taken": "A script was used to manually update the suffix field for the affected employee. The code snippet used was: ``` role = RoleWithCompany.objects.get(id=\"65a6b56e8c9af49c7f946174\") s = Subscriber.objects.filter(role=role)[0] s.name.suffix = \"III\" s.name.last = \"Coffin\" s.save() ```",
    "data_models": "[RoleWithCompany, Subscriber]"
  },
  "BENINTEG-2367": {
    "key": "BENINTEG-2367",
    "issue": "The COBRA coverage end date for employee Sangeeth Peruri needs to be removed to prevent his enrollment from being dropped from the Ideon file feed. The team is unable to amend this on their own and requires assistance to push through the updated information before the next file delivery.",
    "issue_summary": "Employee Sangeeth Peruri's COBRA coverage end date needs removal to prevent enrollment drop from Ideon file feed, requiring team intervention.",
    "rca": "The issue was resolved without intervention, indicating it might have been a temporary glitch or automatically corrected by the system.",
    "steps_taken": "The ticket was flagged as the associated support case was closed, indicating no manual intervention was needed. The team was informed to keep the customer task backlog clean.",
    "data_models": "[]"
  },
  "BENINTEG-2366": {
    "key": "BENINTEG-2366",
    "issue": "Cigna reported that special characters in 834 file data fields were causing file failures, blocking the enrollment process for groups like Senn\u00e9 and Grow Care, Inc.",
    "issue_summary": "Special characters in 834 file fields such as names, phone numbers, and addresses were causing file failures at Cigna, blocking enrollments.",
    "rca": "The issue was due to special characters in the 834 file fields, which Cigna could not process. The problem was fixed by making changes on STEDI to remove these characters.",
    "steps_taken": "The team updated the logic on STEDI to remove special characters from the specified 834 file fields. They focused on removing characters like '+', ',', and others from fields such as phone numbers and addresses. The fix was rolled out, and the issue was resolved for the affected groups.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-2365": {
    "key": "BENINTEG-2365",
    "issue": "Need to schedule a weekly EDI production file for Folio (Gudwork, Inc) with UHC USP every Wednesday at 3 AM PST effective from 10/16/2024.",
    "issue_summary": "The issue was to set up a weekly EDI production file schedule for the group Folio (Gudwork, Inc) with the carrier UHC USP, effective from 10/16/2024.",
    "rca": "The root cause was related to the Ideon cut over ticket, which required scheduling the EDI production file.",
    "steps_taken": "The group was moved to production for UHC USP, as confirmed in the comments.",
    "data_models": "[]"
  },
  "BENINTEG-2364": {
    "key": "BENINTEG-2364",
    "issue": "The RIS team did not receive a task for processing Andrew Jenn-Tyng Chang's COBRA enrollment under the Pace Groups profile, even though he enrolled in COBRA.",
    "issue_summary": "The issue was that a task was not generated for the RIS team to process Andrew Jenn-Tyng Chang's COBRA enrollment under the Pace Groups profile. The root cause was that the event was a COBRA transfer, which does not require communication to the carrier, hence no task was needed.",
    "rca": "The root cause analysis revealed that the event in question was a COBRA transfer, which does not require sending information to the carriers. Therefore, no task was needed for the RIS team to process. The expectation of a task was based on a misunderstanding of the system's requirements for COBRA transfers.",
    "steps_taken": "Clarification was provided that the COBRA transfer does not require a task to be generated for the RIS team. An email was sent to HMSA to clarify that it was just a COBRA transfer. The date issue showing 01/01/1970 was identified as a rendering bug.",
    "data_models": "[]"
  },
  "BENINTEG-2363": {
    "key": "BENINTEG-2363",
    "issue": "The issue involves the group Vial (Vial Health Technology, Inc.) with Group ID 07L7777 and Company ID 60d109dd51b1496d3786a64a, which is associated with the carrier United Healthcare (UHC). The problem is related to the integration or transmission of data to UHC, scheduled to occur every Wednesday at 3am PST.",
    "issue_summary": "The issue is related to the integration of Vial (Vial Health Technology, Inc.) with United Healthcare using the Stedi component, and the problem arose due to the use of the Ideon cut over retool.",
    "rca": "The root cause of the issue was identified as the use of the Ideon cut over retool, which affected the integration process with United Healthcare.",
    "steps_taken": "The group has been moved to production for UHC, indicating that the issue was resolved by transitioning the group to a production environment.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2352": {
    "key": "BENINTEG-2352",
    "issue": "The group Nooroot with Group ID 1660840 was approved for production, but the first production file scheduled to be sent on October 16, 2024, at 3 AM PST was still in the 'Init' status and not sent.",
    "issue_summary": "The production file for the group Nooroot was not sent as scheduled due to it being stuck in the 'Init' status, despite the group being approved for production.",
    "rca": "The issue was due to the need to use the Ideon cut over tool to schedule the production, which was not initially done, causing the file to remain in 'Init' status.",
    "steps_taken": "The Ideon cut over tool was used to schedule the production, allowing the automation of sending the production files.",
    "data_models": "[]"
  },
  "BENINTEG-2351": {
    "key": "BENINTEG-2351",
    "issue": "Upon submitting snapshots for the group using the Noyo Census Request tool, 422 errors were encountered for certain employees. The error message indicated that 'Coverage must specify group_identifier'. This issue was blocking the transition from Ideon to Noyo for the group.",
    "issue_summary": "The issue was caused by missing 'group_identifier' in the carrier configuration for new plans after the group's renewal. This resulted in 422 errors when submitting snapshots via the Noyo Census Request tool.",
    "rca": "The root cause of the issue was that the group recently went through its renewals, and the 'group_identifier' was not populated in the carrier configuration for the new plans. The 'group_identifier' was present for the older company plans but not the new ones, leading to the 422 errors.",
    "steps_taken": "The steps taken to resolve the issue included checking the carrier configuration for the presence of 'group_identifier' for new plans. A script was used to verify the current and all plan IDs associated with the carrier. It was determined that new carrier classifications needed to be created for the new plans. Once the classifications were updated and the 'group_identifier' was added, the snapshots were successfully submitted without errors.",
    "data_models": "[RoleWithCompany, CarrierClassification, InsuranceCompanyPlanInfo, Subscriber, NoyoMemberSnapshotPayloadGenerator]"
  },
  "BENINTEG-2350": {
    "key": "BENINTEG-2350",
    "issue": "The workaround for duplicate Line of Coverage (LOC) from BENINTEG-2021 is not working for Verantos, Inc. The error 'Please choose a unique value: caf55470-2918-484e-95a1-6c81ef01dc76' is encountered when mapping the Gold PPO HSA/H 1700/3200/3400 15% PrevRx plan, blocking a customer ticket and the group's Ideon to Noyo migration.",
    "issue_summary": "The issue is due to an older plan mapping with type 'all' that was not deleted as expected, causing a mismatch in the system and preventing the mapping of the new plan.",
    "rca": "The root cause of the issue was a manual data entry error where an older plan mapping with type 'all' was not deleted before attempting to fix the anthem plan issue. This oversight resulted in a mismatch in the system, causing the error during plan mapping.",
    "steps_taken": "The older plan mappings for the insurance plan were deleted, allowing the plan to be successfully mapped. The engineering notes indicated that the API 'get_noyo_plans_for_mapping' did not check for existing mapped Noyo plans for a particular Insurance Company Plan (ICP).",
    "data_models": "[InsuranceCompanyPlanInfo]"
  },
  "BENINTEG-2349": {
    "key": "BENINTEG-2349",
    "issue": "Skillest, Inc. has been approved for production with United Healthcare-PRIME, but there is a need to cut over using a webscript.",
    "issue_summary": "Skillest, Inc. was approved for production with UHC PRIME, but the cut over process required the use of a webscript.",
    "rca": "The root cause analysis indicates that the cut over process was executed using a webscript.",
    "steps_taken": "The issue was resolved by executing the cut over using the specified webscript.",
    "data_models": "[]"
  },
  "BENINTEG-2348": {
    "key": "BENINTEG-2348",
    "issue": "Unable to generate NPY enrollment for Open Enrollment (OE) for Cigna due to system logic constraints, causing a gap between the last CPY file and the OE file, which could lead to errors.",
    "issue_summary": "The system logic prevents generating an OE file until a week prior to renewal, causing a gap after the last CPY file, which includes a DTP 349 (term date) for all records. This gap could lead to errors as Cigna requires the OE file to be sent earlier to issue ID cards on time.",
    "rca": "The root cause was identified as a system logic constraint that only allows OE files to be generated a week before the renewal date. This constraint led to a gap between the last CPY file and the OE file, causing potential errors in enrollment processing.",
    "steps_taken": "The team decided to manually generate the OE file to unblock the process. A code snippet was provided to generate future OE files by relaxing the condition that restricted OE file generation to a week before the renewal date. The code involved fetching company and carrier information, generating employee data, and preparing the file for transmission. The issue with the company connection config was fixed, allowing the test file to be generated and marked as ready for cutover.",
    "data_models": "[BaseCompanyCarrierLineInfo, StediPartnerCompanyGroupingPayloadData, StediRequestMetaData, SubscriberLineInfo, StediDataAggregator, EbnCompanyFileGenerator, EbnFileGenerator, StediGroupingConfigData, VendorDtoBuilderContext, StediDte, StediDtoBuilderHelpers]"
  },
  "BENINTEG-2347": {
    "key": "BENINTEG-2347",
    "issue": "Admin reported that the Kaiser feed is not showing as live in the Rippling app for Transcend Privacy Inc.",
    "issue_summary": "The Kaiser feed for Transcend Privacy Inc. was not appearing as live in the Rippling app, despite being active in the Noyo dashboard. This discrepancy was due to a potential issue with the retool process not being completed or missed.",
    "rca": "The root cause was identified as a potential issue with the retool process, which might have been missed or not executed properly in earlier attempts. This resulted in the Kaiser feed not being visible on the carrier connection page in Rippling.",
    "steps_taken": "The retool was re-run to ensure the Kaiser feed was properly reflected as live on the carrier connection page. This action resolved the issue, and the feed is now visible.",
    "data_models": "[]"
  },
  "BENINTEG-2346": {
    "key": "BENINTEG-2346",
    "issue": "When setting up the group's mappings and configurations, there were two different population IDs encountered: one for calendar year and one for contract year. There was no custom field set up in their configurations for these population IDs, and both plans only showed the Calendar year.",
    "issue_summary": "The issue was related to the setup of population IDs for a group, where two different IDs were encountered but only one was configured, leading to confusion in mapping.",
    "rca": "The issue was categorized as 'Deferred' and was an intermediate issue that was fixed automatically.",
    "steps_taken": "The setup for UHC was completed for the group, and it was confirmed that there were no blockers remaining, allowing the ticket to be closed.",
    "data_models": "[]"
  },
  "BENINTEG-2345": {
    "key": "BENINTEG-2345",
    "issue": "The incorrect effective date is being input on certain cover letters to carriers, specifically for the employee Shikha Chaudhary at Arch Systems, LLC. The cover letter sent to the Life Insurance carrier incorrectly states the effective date as 11/1 instead of the correct date 12/1.",
    "issue_summary": "The issue involves incorrect effective dates being pulled onto cover letters for carriers, potentially due to logic errors in generating these letters, affecting the employee Shikha Chaudhary at Arch Systems, LLC.",
    "rca": "The root cause analysis indicates that the issue was a one-off problem for this particular employee. The life line was invalidated in both the new hire event and the new hire change date correct event, which was done when the employee was terminated. The effective dates for life insurance were invalidated for the older events.",
    "steps_taken": "Engineering reviewed the logic for generating carrier cover letters and identified that the life line was invalidated in the relevant events. The issue was identified as a one-off problem, and the root cause was communicated to the relevant stakeholders.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-2344": {
    "key": "BENINTEG-2344",
    "issue": "The EDI feed approval is blocked due to discrepancies in salary redetermination logic between Ideon and OneKonnect, affecting the migration of customers from Ideon to OneKonnect.",
    "issue_summary": "The salary redetermination logic differs between Ideon and OneKonnect, causing discrepancies in salary data for employee Alexis Villegas, which is blocking the EDI feed approval.",
    "rca": "The issue seems to have been autoresolved, indicating that the problem with the salary redetermination logic was identified and corrected automatically or through some intervention.",
    "steps_taken": "Worked with several Rippling experts to identify that the salary redetermination logic was not functioning correctly for OneKonnect. The issue was eventually unblocked, as indicated by the comments.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2342": {
    "key": "BENINTEG-2342",
    "issue": "The group Screenlake, INC has been approved for production with United Healthcare-PRIME, but there is a need to cut over using a support tool.",
    "issue_summary": "Screenlake, INC has been approved for production with UHC Prime, but requires a cut over using the retool support tool.",
    "rca": "The issue was caused by the need to use the retool support tool for the cut over process.",
    "steps_taken": "The steps to resolve the issue involved using the retool support tool to facilitate the cut over process.",
    "data_models": "[]"
  },
  "BENINTEG-2341": {
    "key": "BENINTEG-2341",
    "issue": "ReUp Education (601373f28a88580084e48431) is facing an error when attempting to set up Carrier Connections, preventing the admin/broker from initiating carrier connections as expected.",
    "issue_summary": "ReUp Education is unable to initiate carrier connections due to an error encountered when clicking the setup button. The issue is related to the Cigna carrier where the contact information is null, causing the method getCurrentConnectionType to break.",
    "rca": "The root cause of the issue was identified in the engineering notes. For the Cigna carrier, the ccSupported flag was true, but the canCC flag was false. The carrier.contact was null, which caused the method getCurrentConnectionType to break. The customCarrierDetails fetched from VericredCompanyCoveragePeriodInfo did not have preferredCommunicationDetails, leading to a null contact and breaking the flow.",
    "steps_taken": "The engineering team identified that the issue was due to missing preferredCommunicationDetails in the customCarrierDetails fetched from VericredCompanyCoveragePeriodInfo. The issue seemed to resolve itself as the admin was later able to initiate the feed without any changes being explicitly mentioned.",
    "data_models": "[VericredCompanyCoveragePeriodInfo]"
  },
  "BENINTEG-2340": {
    "key": "BENINTEG-2340",
    "issue": "The group 'The Ideas Project' needs to ensure that no more production files are sent for the current plan year and that the first production file is sent on 11/6, with subsequent files sent every Wednesday.",
    "issue_summary": "The group 'The Ideas Project' requires a halt on current production file transmissions and a scheduled start for new transmissions beginning 11/6, with weekly transmissions thereafter.",
    "rca": "No action needed as the support tool was used to manage the transition of production file transmissions.",
    "steps_taken": "Confirmed that production files are not currently being sent. Provided a tool link and instructions to move the connection to production after the week of 10/30, ensuring production files start on 11/6.",
    "data_models": "[]"
  },
  "BENINTEG-2338": {
    "key": "BENINTEG-2338",
    "issue": "The group Versa Solutions, Inc was approved for production with United Healthcare-PRIME, but there was a need to cut over using a webscript.",
    "issue_summary": "Versa Solutions, Inc was approved for production with United Healthcare-PRIME, but the cut over process required the use of a webscript.",
    "rca": "The root cause was identified as the need to use a webscript for the cut over process.",
    "steps_taken": "The issue was resolved by executing the cut over using the specified webscript.",
    "data_models": "[]"
  },
  "BENINTEG-2337": {
    "key": "BENINTEG-2337",
    "issue": "Need to schedule a weekly EDI production file for Mitra Future Technologies, Inc with United Healthcare-PRIME every Wednesday at 3 AM PST, effective from 10/16/2024.",
    "issue_summary": "The issue is about scheduling a weekly EDI production file for Mitra Future Technologies, Inc with United Healthcare-PRIME at a specified time.",
    "rca": "The root cause analysis indicates that the cut over was done using a webscript.",
    "steps_taken": "The steps to resolve the issue would involve setting up the EDI schedule as per the specified frequency and time using the appropriate tools or scripts.",
    "data_models": "[]"
  },
  "BENINTEG-2336": {
    "key": "BENINTEG-2336",
    "issue": "The production file for i4DM LLC with Cigna did not go out as scheduled on October 8th, and there was no option to manually push the file in the Benefit drop-down.",
    "issue_summary": "The scheduled production file for i4DM LLC with Cigna failed to send on October 8th, and manual intervention was not possible due to missing options in the Benefit drop-down.",
    "rca": "The root cause of the issue was related to the support tool used, specifically a misconfiguration or incorrect onboarding in the system, which led to the inability to send the production file as expected.",
    "steps_taken": "The team investigated the issue, considering the possibility of incorrect onboarding on the cut-over tool. Discussions were held to determine whether to re-onboard the client or create a new SFTP partnership on Stedi. Ultimately, it was confirmed that the client wanted to switch to forms, and no further action was needed from the engineering side.",
    "data_models": "[]"
  },
  "BENINTEG-2334": {
    "key": "BENINTEG-2334",
    "issue": "The EDI file feed for the group Zenni with the carrier Cigna FACET needs to be set up for production to run weekly on Tuesdays.",
    "issue_summary": "The EDI file feed for Zenni with Cigna FACET has been approved for production, but the production setup needs to be configured to run weekly on Tuesdays.",
    "rca": "The cut over to production was done using a webscript.",
    "steps_taken": "The production setup for the EDI file feed was configured to run weekly on Tuesdays at 3am PST.",
    "data_models": "[]"
  },
  "BENINTEG-2332": {
    "key": "BENINTEG-2332",
    "issue": "The end date of the role with ID 63517554161f8be3fc21f8d1 was updated from 2024-10-01 to 2024-12-03. Actions needed include creating a 'Termination (end date correction)' event, reviewing insurance timelines, and updating the end date with carriers.",
    "issue_summary": "The end date for a role was updated, requiring a 'Termination (end date correction)' event and updates to insurance timelines and carrier records.",
    "rca": "The issue arose from a standard termination end date change flow, as documented in the company's procedures.",
    "steps_taken": "The EE pre-termination coverage was updated to end on 12/31/2024. The ticket was rerouted to the Integrations team for form validation. It was confirmed that there was no need to involve the COBRA team as there was no COBRA coverage for this employee. Pending actions were verified and performed by the Integrations team.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2331": {
    "key": "BENINTEG-2331",
    "issue": "End date of the role 66106e8b7f4edda969ba3a5b was updated from 2024-09-11 to 2024-10-11 for VIP Hospitality LLC // Levon Arabian, requiring updates to termination events and insurance timelines.",
    "issue_summary": "The end date of an employee's role was updated, necessitating the creation of a 'Termination (end date correction)' event and ensuring that insurance timelines are updated accordingly. The ticket also required checking if forms were submitted to carriers with the correct dates.",
    "rca": "Standard end date change ticket. The transmission looks good from the Integrations side, and forms have been sent to the carrier with the correct dates.",
    "steps_taken": "1. Verified that a 'Termination (end date correction)' event was created for the prior termination event. 2. Reviewed that the insurance timelines were updated by the Termination (end date correction) event. 3. Confirmed that forms were sent to the carrier with the correct dates. 4. Closed the ticket as the transmission was correct.",
    "data_models": "[]"
  },
  "BENINTEG-2330": {
    "key": "BENINTEG-2330",
    "issue": "Termination forms for employee AJ Ortillo were not sent to carriers for Medical, Dental, and Vision lines after termination on 7/9.",
    "issue_summary": "Termination forms were not sent to carriers for a BOB group where Rippling manages forms. The issue was due to unsubmitted prior forms from a new hire event in February 2023.",
    "rca": "The termination forms were not sent because there were unsubmitted prior forms from February 2023. The forms from the employee's new hire event back in 2023 were not sent from the system, which blocked the sending of termination forms.",
    "steps_taken": "The issue was identified by checking the EE debugger, which revealed that the forms from the new hire event in 2023 were not sent. It was suggested to confirm with the carrier/broker if they have the information about the prior new hire and open enrollments for the employee.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-2329": {
    "key": "BENINTEG-2329",
    "issue": "The issue was that a COBRA cancellation event was incorrectly flagged in a snapshot payload, with COBRA ENROLLED set to TRUE, which was not expected by Anthem as there were no COBRA suffix IDs provided.",
    "issue_summary": "A snapshot payload incorrectly included COBRA details for an Anthem line of coverage, causing processing issues.",
    "rca": "The snapshot was not a production snapshot but was sent as part of the census while migrating the group. This was confirmed by the event reason 'rate_changed', which is used for audit/census snapshots.",
    "steps_taken": "The issue was identified as a false alarm and the ticket was closed after confirming that the snapshot was part of a census migration and not a production issue.",
    "data_models": "No specific data models were mentioned in the ticket."
  },
  "BENINTEG-2328": {
    "key": "BENINTEG-2328",
    "issue": "Kaiser reported dependents on file with no employee above record, specifically for COBRA dependents. The issue was identified with the way COBRA dependents were being reported, where the dependent's SSN was not being correctly placed in the transaction file.",
    "issue_summary": "Kaiser identified a discrepancy in the COBRA dependents' transaction files where the dependent's SSN was not correctly reported, leading to dependents being listed without an associated subscriber.",
    "rca": "The root cause of the issue was the lack of support for dependent-only COBRA scenarios in the Kaiser PEO transaction files. The system was not correctly formatting the transaction files to include the dependent's SSN in the REF*0F field, as required by Kaiser.",
    "steps_taken": "The scenario was added as per Kaiser's request, and a new file was sent to address the issue. The changes were validated in the file available at the provided Stedi link. Code changes related to this fix were attached to the ticket BENINTEG-2271.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2327": {
    "key": "BENINTEG-2327",
    "issue": "The Open Enrollment (OE) correction for an employee at Cam Collective did not generate correctly on the form, and the Noyo payload did not update to reflect the changes made, specifically missing the dental enrollment.",
    "issue_summary": "The OE correction for an employee's dental enrollment did not update the Noyo payload because Noyo does not support the Metlife carrier, which was the carrier for the employee's dental coverage.",
    "rca": "The root cause of the issue was that the Noyo system does not support the Metlife carrier, which was the carrier for the employee's dental coverage. As a result, the Noyo payload did not include the dental coverage information. The forms for Metlife were sent via email instead.",
    "steps_taken": "The issue was identified as being due to the lack of Noyo support for the Metlife carrier. The dental coverage information was sent to Metlife via email. It was clarified that Noyo only populates amendments for carriers with a visible Noyo connection, which in this case were Guardian and United, not Metlife.",
    "data_models": "[]"
  },
  "BENINTEG-2326": {
    "key": "BENINTEG-2326",
    "issue": "Group ICP Worldwide, Inc. has been approved for production with Cigna, but there is a need to cut over using a webscript.",
    "issue_summary": "The group ICP Worldwide, Inc. was approved for production with Cigna, but the transition required the use of a webscript, which was not initially planned.",
    "rca": "The root cause of the issue was the need to use a webscript for the cut over process, which falls under the category of 'Support Tool Used'.",
    "steps_taken": "The issue was resolved by executing the cut over using a webscript as per the requirement.",
    "data_models": "[]"
  },
  "BENINTEG-2325": {
    "key": "BENINTEG-2325",
    "issue": "The group 'Online Education Platform, LLC (Avenues Online)' was approved for production with Cigna, but there was a concern about generating the first production file due to an error encountered during a test generation. This issue was escalated because an employee, Lloyd Nathan, enrolled on 10/2, but the Ideon file expired on 10/7, causing a gap in enrollment with Cigna.",
    "issue_summary": "The issue was that the first production file for the group 'Online Education Platform, LLC (Avenues Online)' with Cigna could not be generated due to an error during test generation. This was critical as an employee's enrollment was missed due to a gap caused by the Ideon file expiration.",
    "rca": "The root cause was identified as an incorrect implementation during the migration to VPC, which led to the missing enrollment of Lloyd Nathan. The migration ticket was not handled correctly, causing the gap in enrollment.",
    "steps_taken": "To resolve the issue, a pending action was created for the specific case of Lloyd Nathan. Additionally, a script was run to handle similar cases by auditing missing Stedi pending actions. The script involved checking for new VPC companies, filtering non-PEO clients, and comparing old and new enrollment event IDs to identify discrepancies.",
    "data_models": "[VendorPartnerCompany, EnrollmentEvent, StediRequestMetaData, StediEDIPendingAction, PendingAction, PendingActionGroup]"
  },
  "BENINTEG-2324": {
    "key": "BENINTEG-2324",
    "issue": "The group 'Tomorrow Agency, LLC (Domaine)' has been approved for production with Cigna, but there is a need to cut over using a webscript.",
    "issue_summary": "The group 'Tomorrow Agency, LLC (Domaine)' with Group ID 00650506 and Company ID 65aff0c8dbbdb973fe571e04 has been approved for production with Cigna, but requires a cut over using a webscript.",
    "rca": "The issue was caused by the need to use a webscript for the cut over process.",
    "steps_taken": "The steps to resolve the issue involved using a webscript to perform the cut over for the group with Cigna.",
    "data_models": "[]"
  },
  "BENINTEG-2323": {
    "key": "BENINTEG-2323",
    "issue": "The group 'UseMagik, Inc.' has been approved for production with United Healthcare-PRIME, but there is a need to cut over using a webscript.",
    "issue_summary": "The group 'UseMagik, Inc.' was approved for production with United Healthcare-PRIME, but the cut over process required the use of a webscript.",
    "rca": "The root cause was identified as the need to use a webscript for the cut over process.",
    "steps_taken": "The issue was resolved by executing the cut over using a webscript.",
    "data_models": "[]"
  },
  "BENINTEG-2322": {
    "key": "BENINTEG-2322",
    "issue": "Collective Health identified discrepancies in the test file, specifically regarding the REF*ZZ (client ID) requirement for 2025 and the PER (communication) segment for children.",
    "issue_summary": "Discrepancies in the test file from Collective Health were identified, including a missing REF*ZZ (client ID) requirement for 2025 and incorrect PER (communication) segment data for children.",
    "rca": "New requirements from Collective Health were incorporated, which included the need for a REF*ZZ (client ID) for 2025 and specific conditions for sending PER (communication) segments for children.",
    "steps_taken": "Follow-up questions were sent to Collective Health for clarification. The REF*ZZ (client ID) requirement was confirmed to be present in Rippling and will be added to the next file. Adjustments will be made to ensure the PER segment for children is only sent if it differs from the employee's data.",
    "data_models": "[]"
  },
  "BENINTEG-2303": {
    "key": "BENINTEG-2303",
    "issue": "Need to schedule a weekly EDI production file for VitaHustle, LLC with UHC USP every Wednesday at 3 AM PST effective from 10/16/2024.",
    "issue_summary": "The issue is about scheduling a weekly EDI production file for VitaHustle, LLC with UHC USP, which needs to be set up to run every Wednesday at 3 AM PST starting from 10/16/2024.",
    "rca": "The root cause analysis indicates that the cut over was done using a webscript.",
    "steps_taken": "The steps to resolve the issue would involve setting up the EDI schedule in the system to ensure the file is generated and sent at the specified time. However, specific steps or code snippets are not provided in the ticket.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2302": {
    "key": "BENINTEG-2302",
    "issue": "The issue involves setting up a weekly EDI production file for ClassDojo, Inc. with Cigna, scheduled for every Tuesday at 3 AM PST starting from 10/15/2024.",
    "issue_summary": "The task is to set up a weekly EDI production file for ClassDojo, Inc. with Cigna, scheduled for every Tuesday at 3 AM PST starting from 10/15/2024. The issue is related to the use of a support tool for the cutover process.",
    "rca": "The root cause analysis indicates that the issue was related to the cutover process using a webscript.",
    "steps_taken": "The steps involved setting up the schedule for the EDI production file to be sent weekly on Tuesdays at 3 AM PST starting from 10/15/2024.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2301": {
    "key": "BENINTEG-2301",
    "issue": "The EDI production file for Heritage Bank of Commerce with Cigna was not being transmitted as expected due to a transmission error.",
    "issue_summary": "The EDI production file for Heritage Bank of Commerce with Cigna was not being transmitted due to a validation error where the 'plan_coverage_description_04' field was shorter than 8 characters.",
    "rca": "The ingestion file was not marked as accepted, leading to a transmission error. Specifically, there was a validation error indicating that the 'plan_coverage_description_04' field was shorter than 8 characters.",
    "steps_taken": "A snapshot was marked as accepted, and the production file was triggered manually via retool. The issue was tested with a test transaction setting ID to ensure the file could be generated without errors.",
    "data_models": "[]"
  },
  "BENINTEG-2300": {
    "key": "BENINTEG-2300",
    "issue": "The issue involves setting up a weekly EDI production file for Nursa, Inc. with Cigna, scheduled for every Tuesday at 3 AM PST starting from 10/15/2024.",
    "issue_summary": "The task is to set up a weekly EDI production file for Nursa, Inc. with Cigna, scheduled for every Tuesday at 3 AM PST starting from 10/15/2024. The issue is related to the scheduling and setup of this file.",
    "rca": "The root cause analysis indicates that the cut over was done using a webscript, which is categorized under 'Support Tool Used'.",
    "steps_taken": "The steps involved scheduling a weekly EDI production file on every Tuesday at 3 AM PST starting from 10/15/2024. The setup was approved to move to production.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: []"
  },
  "BENINTEG-2295": {
    "key": "BENINTEG-2295",
    "issue": "Prod files are not sending all enrollments, specifically for EE Matthew Peterson's QLE enrollment for medical (Cigna) effective 10/1/24, which is missing from the production feed.",
    "issue_summary": "The production files are not sending all enrollments, particularly missing the QLE enrollment for medical (Cigna) for EE Matthew Peterson, effective 10/1/24. This issue is related to a bug in the pending action generation.",
    "rca": "There was a bug in the pending action generation that needed a fix in the context builder for new pending action generation.",
    "steps_taken": "A fix was implemented in the context builder for pending action generation. The fix was pushed, and the production file was retriggered to resolve the issue.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-2294": {
    "key": "BENINTEG-2294",
    "issue": "Groups terminating from the PEO with COBRA orphans are not being sent over on files to Ideon, causing COBRA elections not to be transmitted.",
    "issue_summary": "When a group terminates from the PEO and there are COBRA Orphans, Ideon isn't sending the COBRA elections over. This is due to the need to send the profile under Rippling PEO 1, Inc to the expired feed for the group.",
    "rca": "Vericred had pre-emptively terminated a few of the coverage periods, resulting in COBRA orphan profiles missing their coverages. Collaboration with Vericred was necessary to reinstate these coverages.",
    "steps_taken": "A script was used to generate a report of all groups that terminated from the PEO from 5/1/24 onward with COBRA orphans. The script filtered and collected necessary data such as first name, last name, EE ID for ex PEO, EE ID for COBRA orphan, company name, coverage effective date, and medical plan name. The data was then compiled into a CSV format for further analysis and action.",
    "data_models": "[PeoCobraOrphanCompanyMapping, PeoOrphanCompanyEmployeeMapping, SubscriberLineInfo]"
  },
  "BENINTEG-2293": {
    "key": "BENINTEG-2293",
    "issue": "The file for the July 1 - 15 period, with a check date of 7/31, was not uploaded timely to Vanguard due to a 'transient error' on Vanguard's end. Rippling did not send a notification about the failure, leading to a delay in addressing the issue until 8/15 when the admin reached out. As a result, the client is requesting reimbursement for lost earnings of $344.29.",
    "issue_summary": "The file for the July 1 - 15 period was not uploaded to Vanguard on time due to a 'transient error' on Vanguard's end, and Rippling failed to notify the client about the issue, resulting in a request for reimbursement for lost earnings.",
    "rca": "The issue was closed after discussing with Mike, indicating that the root cause was deferred and not explicitly detailed in the ticket.",
    "steps_taken": "Per Slack discussions, Rippling decided to credit the client since Rippling did not notify them of the failure.",
    "data_models": "[]"
  },
  "BENINTEG-2292": {
    "key": "BENINTEG-2292",
    "issue": "The scheduled production file sent to the carrier only included 15 records instead of all enrollments, causing enrollment errors. Manual intervention was required to send the complete file with all member enrollments.",
    "issue_summary": "Scheduled production files are not pulling all enrollments due to missing plan mappings for new plans, leading to incomplete files being sent to the carrier.",
    "rca": "The issue occurred because pending actions were not generated for Open Enrollment (OE) events as plan mappings were not added for new plans. The CarrierClassifications and account structure were added after the OE event was finalized, causing the scheduled files to miss some enrollments.",
    "steps_taken": "To resolve the issue, it was suggested to reset the base snapshot from Retool for all companies undergoing renewal or whenever new carrier classifications are added. A script was provided to fetch impacted companies and check if the Stedi EDI transmission feature flag is enabled. The script also filters InsuranceCompanyCarrierLineInfo objects to identify affected configurations.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, StediPartnerCompanyGroupingPayloadData]"
  },
  "BENINTEG-2290": {
    "key": "BENINTEG-2290",
    "issue": "Cigna production is not sending on Tuesdays.",
    "issue_summary": "Cigna production is not sending on Tuesdays due to a cut over using webscript.",
    "rca": "The root cause of the issue was identified as a cut over using webscript.",
    "steps_taken": "The ticket does not provide specific steps taken to resolve the issue.",
    "data_models": "[]"
  },
  "BENINTEG-2289": {
    "key": "BENINTEG-2289",
    "issue": "BCBS is flagging address fields that exceed 25 characters, causing issues with OneKonnect's processing. The problem arises when address field 1 contains the entire address and address field 2 is blank, which OneKonnect can handle, but not when both fields are populated.",
    "issue_summary": "BCBS requires address fields to be within 25 characters, causing issues with OneKonnect's logic when both address fields are populated.",
    "rca": "The root cause is the character limit imposed by BCBS on address fields, which OneKonnect's logic cannot handle if both address fields are populated. The issue is exacerbated by the lack of abbreviation in address entries, leading to frequent errors.",
    "steps_taken": "The team decided to implement a fix where the full address is sent in address line 1, allowing OneKonnect to process it correctly. A product fix ticket was created, and a pull request was prepared to address the issue.",
    "data_models": "[]"
  },
  "BENINTEG-2283": {
    "key": "BENINTEG-2283",
    "issue": "Unauthorized signatory is populating on COBRA forms for Novellus Living LLC, and there is no way to edit this in the Benefits Admin tool.",
    "issue_summary": "An unauthorized signatory, Chris Coulter, is appearing on COBRA forms for Novellus Living LLC, and there is no option to edit this in the Benefits Admin tool. The expected signatory should be Keya Pomerantz.",
    "rca": "The root cause of the issue was that the right signatory was not set in the Benefits Admin tool. The system was fetching the signatory from the first BOR letter, which was outdated, instead of the most recent one.",
    "steps_taken": "The engineering team updated the method `get_company_signatory_and_signature_url` to return the signatory from the most recent BOR letter. A pull request was created and merged to correct this behavior. Additionally, it was suggested that the admin update the signatory in the Documents App under the Settings tab.",
    "data_models": "[CompanyInsuranceInfo, BrokerOfRecordChangeLetter, CompanySignatoryAssignment]"
  },
  "BENINTEG-2280": {
    "key": "BENINTEG-2280",
    "issue": "The Emmet Family Charitable Foundation group has been approved for production with UHC/USP, but there is a need to cut over using a web script.",
    "issue_summary": "The Emmet Family Charitable Foundation group, identified by Group ID 1616263 and Company ID 651716c4c7e90a61563d2154, has been approved for production with the carrier UHC/USP. However, there is a requirement to cut over using a web script, which is causing a delay in the process.",
    "rca": "The root cause of the issue is related to the use of a support tool, specifically a web script, for the cut over process.",
    "steps_taken": "The steps to resolve the issue would involve executing the cut over using the specified web script at the preferred frequency and time (Wednesday, 3a PT).",
    "data_models": "[]"
  },
  "BENINTEG-2279": {
    "key": "BENINTEG-2279",
    "issue": "The group Fortunafi has been approved for production with UHC/USP, but there is a need to cut over using a webscript.",
    "issue_summary": "The group Fortunafi, associated with UHC/USP, has been approved for production, but requires a cut over using a webscript.",
    "rca": "The issue required the use of a support tool, specifically a webscript, to facilitate the cut over process.",
    "steps_taken": "The steps involved using a webscript to perform the cut over for the group Fortunafi with UHC/USP.",
    "data_models": "[]"
  },
  "BENINTEG-2278": {
    "key": "BENINTEG-2278",
    "issue": "EE enrollments and terminations are not being sent to Principal due to a missing carrier contact email.",
    "issue_summary": "The issue is that enrollments and terminations for employees are not being sent to Principal because the carrier contact email is missing. This affects anyone who enrolled or terminated after 08/01.",
    "rca": "Principal does not accept forms by email, only by file feed or direct changes in the portal by a broker/admin. The group mistakenly added an admin's email address, but forms will not be submitted to Principal this way. They need to set up EDI/API for submissions.",
    "steps_taken": "The issue was identified as a misunderstanding of Principal's submission process. It was clarified that Principal does not accept email submissions, and the group was advised to set up EDI/API for enrollments.",
    "data_models": "[CompanyInsuranceInfo]"
  },
  "BENINTEG-2276": {
    "key": "BENINTEG-2276",
    "issue": "Admin Jessica added the Gold 80 HDHP HMO 1750/15% + Child Dental Alt plan for the 2/1/2024 renewal, but it was not included in the renewal packet sent to Kaiser, causing a mismatch in plans and blocking the Noyo API migration.",
    "issue_summary": "The Gold 80 HDHP HMO 1750/15% + Child Dental Alt plan was not included in the renewal packet sent to Kaiser because no employees were enrolled in it, leading to a mismatch in plans and blocking the Noyo API migration.",
    "rca": "The root cause was identified as a bug in the system where the Company Enrollment Event (CEE) was not correctly reset. The task for submitting the group enrollment packet was not set back to TODO after the CEE was reopened, leading to the carrier packet not being resent with the updated plan.",
    "steps_taken": "The issue was investigated by checking the enrollment events and tasks. It was found that the task state was not reset correctly. The code responsible for resetting the task state was identified, and a fix was proposed to ensure the task is set back to TODO when the CEE is reopened. The relevant code snippets were reviewed to confirm the logic.",
    "data_models": "[BaseCompanyCarrierLineInfo, InsuranceCompanyPlanInfo, SubscriberLineInfo, CompanyEnrollmentEvent]"
  },
  "BENINTEG-2275": {
    "key": "BENINTEG-2275",
    "issue": "Multiple snapshots with different payloads and custom_individual_id are being sent for an employee during the migration of Aetna PEO from Ideon to Noyo.",
    "issue_summary": "During the migration of Aetna PEO from Ideon to Noyo, multiple snapshots with different payloads and custom_individual_id were sent for some employees, affecting around 400 employees.",
    "rca": "Rehires are causing different payloads to be sent for Aetna PEO to Noyo. This behavior is expected as rehires should ideally have the same identifier (Subscriber) in Rippling, but that is not the case currently.",
    "steps_taken": "The issue was identified as expected behavior due to rehires. No specific steps were taken to resolve it as it was deemed to be functioning as designed.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2274": {
    "key": "BENINTEG-2274",
    "issue": "Assembly Software LLC is facing an issue with the UHC Prime carrier integration, specifically related to the frequency of data transmission scheduled for Wednesday at 3AM PST.",
    "issue_summary": "The issue is related to the integration with UHC Prime for Assembly Software LLC, where there is a problem with the scheduled data transmission using Stedi.",
    "rca": "The root cause of the issue was identified as a cutover using a webscript, which falls under the category of 'Support Tool Used'.",
    "steps_taken": "The ticket does not provide specific steps taken to resolve the issue.",
    "data_models": "[]"
  },
  "BENINTEG-2273": {
    "key": "BENINTEG-2273",
    "issue": "The employee's spouse's vision coverage start date is incorrectly reflected as 12/01/2023 in the system, despite the spouse not enrolling at that time. The correct start date should be 09/01/2024.",
    "issue_summary": "The system is showing an incorrect start date of 12/01/2023 for the spouse's vision coverage, which should actually be 09/01/2024. This discrepancy needs to be corrected and the reason for the incorrect date needs to be identified.",
    "rca": "The root cause analysis category is 'Salesforce case closed', but no specific description is provided. The issue seems to be related to a discrepancy between the dates sent to Noyo and what is reflected in the system.",
    "steps_taken": "The team checked the last snapshot sent to Noyo, which showed the correct effective date for the spouse as 09/01/2024. They are advised to work with Noyo to confirm why different dates are being reflected.",
    "data_models": "[]"
  },
  "BENINTEG-2268": {
    "key": "BENINTEG-2268",
    "issue": "The client 'Getaway (SUCASA TECHNOLOGIES, INC)' needed their insurance data file to be moved to production and scheduled for regular transmission to United Healthcare, with the first file to be sent on October 16, 2024.",
    "issue_summary": "The issue was related to scheduling the production file for 'Getaway (SUCASA TECHNOLOGIES, INC)' with United Healthcare using the Ideon cut over tool, ensuring the first file is sent on the specified date.",
    "rca": "The root cause was the need to use the Ideon cut over tool to schedule the production file transmission for the client. The tool was used to ensure the file was scheduled correctly for the first production run.",
    "steps_taken": "The Ideon cut over tool was used to schedule the production files. The team was reminded to monitor the first production file transmission and ensure subsequent files are sent as scheduled.",
    "data_models": "[]"
  },
  "BENINTEG-2267": {
    "key": "BENINTEG-2267",
    "issue": "The issue involves the company StackCommerce with Company ID 65b0365924202411eacf9a22, which is facing a problem related to the transmission of insurance benefits to the carrier Cigna Facets. The transmission frequency is set to weekly on Tuesday at 3 AM PT, and the first production file is scheduled for 10/08/2024.",
    "issue_summary": "The issue is related to the cut over process using a webscript for the company StackCommerce with Cigna Facets as the carrier, scheduled for weekly transmission starting on 10/08/2024.",
    "rca": "The root cause of the issue is identified as the cut over process using a webscript.",
    "steps_taken": "The ticket does not provide specific steps taken to resolve the issue.",
    "data_models": "[]"
  },
  "BENINTEG-2265": {
    "key": "BENINTEG-2265",
    "issue": "The BlueShield CA carrier rejected the new hire forms for the Capital Provisions LAX LLC group because the incorrect large group form was submitted instead of the small group form, preventing the enrollment of member Rufino Zapata Jr.",
    "issue_summary": "The issue was caused by submitting the incorrect large group form to BlueShield CA for a small group, due to an incorrect large group flag set by the admin.",
    "rca": "The root cause of the issue was an incorrect large group flag entered by the admin, which led to the generation and submission of the wrong form type to the carrier.",
    "steps_taken": "The issue was resolved by manually updating the isLargeGroup flag to false using a WebScript. The following code snippet was used: ```python\nccli = InsuranceCompanyCarrierLineInfo.objects.get(company=\"61ddc83c669d5ebd8ae37754\", id=\"656b6d395df8daa38e0f99a5\")\nccli.isLargeGroup = False\nreturn ccli.save()\n```. After updating the flag, the forms were regenerated to reflect the correct small group status.",
    "data_models": "[InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-2263": {
    "key": "BENINTEG-2263",
    "issue": "The scheduled file feed with Cigna for AcuityMD needed to be ended as they moved to forms and no longer wanted files sent to Cigna. Confirmation was also needed that forms were being sent to Cigna.",
    "issue_summary": "AcuityMD required the termination of the scheduled file feed with Cigna in Stedi as they transitioned to using forms. There was also a need to confirm that forms were being sent to Cigna.",
    "rca": "The root cause was identified as the presence of a custom Stedi communication object that needed to be removed to stop the file feed.",
    "steps_taken": "The feature flag was removed to prevent the file from being sent. A configuration change was made to ensure forms were sent. The custom email communication detail was deleted and a new one was created to ensure proper email communication. Code snippets used:\n\n```python\nreturn CustomEmailCommunicationDetail.objects_including_deleted.filter(company=company, carrier=carrier)\n```\n\n```python\nCustomEmailCommunicationDetail.objects.create(carrier=carrier, company=company, emailAddress=\"[teamnaranjo@libertycompany.com|mailto:teamnaranjo@libertycompany.com]\")\n```",
    "data_models": "[CustomEmailCommunicationDetail]"
  },
  "BENINTEG-2262": {
    "key": "BENINTEG-2262",
    "issue": "STAG International Group Inc faced an issue with duplicate medical configurations for the same company with different partners, causing confusion in the onboarding process.",
    "issue_summary": "The issue involved duplicate entries for medical configurations for STAG International Group Inc with different partners, leading to complications in the onboarding process.",
    "rca": "The root cause was identified as incorrect configurations and the need to migrate them. The group was onboarded before receiving the file prefix from the carrier, and re-onboarding with the same company ID, carrier ID, and mapping ID led to duplication of benefits.",
    "steps_taken": "The wrong configuration was fixed, but Vericred coverage remained in production until it expired. An Ideon ticket was created to expire the coverage period on 10/14. The company feed was then moved to production, resolving the issue.",
    "data_models": "[]"
  },
  "BENINTEG-2261": {
    "key": "BENINTEG-2261",
    "issue": "AMBIVIEW CAPITAL LLC is facing an issue with the UHC carrier transmission scheduled for Wednesday at 3 AM PST.",
    "issue_summary": "The issue involves a problem with the transmission of insurance data to the UHC carrier for AMBIVIEW CAPITAL LLC, potentially due to a cut over using a webscript.",
    "rca": "The root cause of the issue was identified as a cut over using a webscript, which falls under the category of 'Support Tool Used'.",
    "steps_taken": "The steps taken to resolve the issue are not detailed in the provided data.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2253": {
    "key": "BENINTEG-2253",
    "issue": "The issue is the need to schedule a weekly EDI production file for Discover Night LLC with UHC USP, to be sent every Wednesday at 3 AM PST, effective from 10/09/2024.",
    "issue_summary": "The issue involves scheduling a weekly EDI production file for Discover Night LLC with UHC USP, with a specific frequency and timing requirement.",
    "rca": "The root cause analysis indicates that the cut over was done using a webscript.",
    "steps_taken": "The steps to resolve the issue would involve setting up the EDI schedule as per the specified frequency and timing. However, specific steps or code snippets are not provided in the ticket.",
    "data_models": "[]"
  },
  "BENINTEG-2251": {
    "key": "BENINTEG-2251",
    "issue": "The issue involves setting up a weekly EDI production file for Footprint (ONE FOOTPRINT INC.) with United Healthcare-PRIME, scheduled for every Wednesday at 3 AM PST starting from 09/10/2024.",
    "issue_summary": "The task is to configure a weekly EDI production file for Footprint with UHC Prime, scheduled for Wednesdays at 3 AM PST, starting from 09/10/2024.",
    "rca": "The root cause analysis indicates that the cutover was performed using a webscript.",
    "steps_taken": "The steps involved setting up the schedule for the EDI production file to run weekly on Wednesdays at 3 AM PST starting from 09/10/2024.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2250": {
    "key": "BENINTEG-2250",
    "issue": "The issue involves setting up a weekly EDI production file for Funraise Inc. with United Healthcare-PRIME, scheduled for every Wednesday at 3 AM PST starting from 09/10/2024.",
    "issue_summary": "The task is to configure a weekly EDI production file for Funraise Inc. with United Healthcare-PRIME, to be executed every Wednesday at 3 AM PST starting from 09/10/2024.",
    "rca": "The root cause analysis indicates that the cut over was done using a webscript.",
    "steps_taken": "The steps involved scheduling a weekly EDI production file to run every Wednesday at 3 AM PST starting from 09/10/2024.",
    "data_models": "[]"
  },
  "BENINTEG-2249": {
    "key": "BENINTEG-2249",
    "issue": "The issue involves setting up a weekly EDI production file for the group Keyri with United Healthcare-PRIME, scheduled for every Wednesday at 3 AM PST starting from 09/10/2024.",
    "issue_summary": "The task is to set up a weekly EDI production file for the group Keyri with United Healthcare-PRIME, scheduled for every Wednesday at 3 AM PST starting from 09/10/2024. The cutover is to be done using a webscript.",
    "rca": "The root cause analysis indicates that the cutover to production was done using a webscript.",
    "steps_taken": "The steps involved setting up the weekly EDI production file as per the specified schedule. The file was approved to move to production, and the necessary scheduling was done using a webscript.",
    "data_models": "[]"
  },
  "BENINTEG-2248": {
    "key": "BENINTEG-2248",
    "issue": "The COBRA expiration forms were not sent to the carrier Care First, despite the admin signing off on the expiration task. The forms were marked as 'unsubmitted prior forms', causing a blockage in processing further actions.",
    "issue_summary": "COBRA expiration forms were not sent to Care First due to 'unsubmitted prior forms' status, blocking further processing.",
    "rca": "Marked all out-of-coverage pending actions as failed so that pending actions in active coverage can process and send out emails. The issue was due to older pending actions being marked as PROCESSED, which caused new forms to not process as it considered the older pending actions as resubmitted.",
    "steps_taken": "The forms for the employee in question were fixed and submitted. A script was executed to mark all previous pending actions as 'FAILED' where CCLIs were inactive, allowing pending forms to automatically reprocess and future forms to trigger correctly. The script iterated over pending actions, checking if all CCLIs were inactive and updating the state to 'FAILED'.\n\n```python\nif True:\n    carrier_pa_map = {}\n    pas = [x.pending_action for x in PendingActionLog.objects.filter(company=\"605d07be3c4e583f4978b43e\", reason_for_not_performing=\"UNSUBMITTED_PRIOR_FORMS\")]\n    for pa in pas:\n      if (str(pa.carrier.id), str(pa.role.id)) not in carrier_pa_map:\n        pas = list(PendingAction.objects.filter(state=\"PROCESSED\", role=pa.role, company=pa.company, carrier=pa.carrier))\n        pas.sort(key=lambda x: x.createdAt)\n        carrier_pa_map[str(pa.carrier.id), str(pa.role.id)] = pas\n    \n    for cr in carrier_pa_map:\n      print(\"Carrier\", cr[0], \"Role\", cr[1])\n      for rpa in carrier_pa_map[cr]:\n        pal = PendingActionLog.objects.get(pending_action=rpa)\n        all_cclis_inactive = all([x.ccli.expirationDate < pst_today() for x in rpa.getAllLineInfos() if x and x.ccli])\n        if all_cclis_inactive:\n          rpa.update(state=\"FAILED\")\n        print(\"   PA\", all_cclis_inactive, rpa.createdAt, rpa.id, pal.reason_for_not_performing)\n    return None\n```",
    "data_models": "[PendingAction, PendingActionLog, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-2245": {
    "key": "BENINTEG-2245",
    "issue": "Admins are not receiving email notifications about employees' enrollment events after 08/15, only receiving COBRA emails.",
    "issue_summary": "Admins stopped receiving enrollment notifications after 08/15, only receiving COBRA notifications. The issue is related to the email notifications not being sent for enrollment events.",
    "rca": "The root cause was identified as a missing PDF form file in the S3 storage, which was required for generating the forms associated with the enrollment events. This missing file caused the form generation process to fail, preventing the subsequent email notifications from being sent.",
    "steps_taken": "The engineering team investigated the issue by checking the PendingActionGroup and PendingAction logs. They found that the form generation failed due to a missing PDF file in S3. The file was re-added to S3, and the form generation process was retried, which resolved the issue. The team also checked the logic for sending emails and confirmed that once the form generation was successful, the emails were sent as expected.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-2244": {
    "key": "BENINTEG-2244",
    "issue": "Missing configuration codes for terminated or non-benefit-eligible employees on COBRA, causing OneKonnect file feed failures.",
    "issue_summary": "The issue involves missing class codes for terminated or non-benefit-eligible employees who are on COBRA, leading to OneKonnect file feed failures. This primarily affects employees transitioning from full-time to part-time or contractor roles.",
    "rca": "The root cause of the issue is related to the support tool used for managing carrier classifications, specifically the handling of class codes (cc codes) for employees who are not benefit-eligible.",
    "steps_taken": "The issue was initially addressed by forcing the class codes back using a retool application. Subsequent investigation confirmed that the issue was resolved even without the retool intervention.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2243": {
    "key": "BENINTEG-2243",
    "issue": "The Boring Company faced a transmission error with Cigna due to a missing SSN for a member, causing a validation error.",
    "issue_summary": "The issue was a transmission error with Cigna for The Boring Company due to a missing SSN for a member, which caused a validation error.",
    "rca": "The root cause of the issue was a manual data entry error where a member's SSN was missing, leading to a validation error during the transmission process.",
    "steps_taken": "The missing SSN for the member was added in Rippling on 10/21, which cleared the error.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-2240": {
    "key": "BENINTEG-2240",
    "issue": "The issue involves a Stedi EDI file for Muir X with Cigna that needs to be removed from production status to allow re-onboarding and name change.",
    "issue_summary": "The Stedi EDI file for Muir X with Cigna is in production status, preventing re-onboarding and name change. The file needs to be removed from production.",
    "rca": "The root cause analysis category is 'Support Tool Used', but no detailed description is provided. The issue seems to be related to the inability to modify a file in production status.",
    "steps_taken": "The ticket was closed as the action was no longer on engineering, and Ops has a self-serve tool for this. However, the file removal request was not resolved, leading to further follow-ups.",
    "data_models": "No specific data models are mentioned in the ticket."
  },
  "BENINTEG-2238": {
    "key": "BENINTEG-2238",
    "issue": "The issue was the need to set up a weekly EDI production file for Bellwether Asset Management, Inc. with Cigna, scheduled for every Tuesday at 3 AM PST starting from 08/10/2024.",
    "issue_summary": "The ticket was about setting up a weekly EDI production file for Bellwether Asset Management, Inc. with Cigna, but there were delays and confusion regarding the setup and confirmation of the production file being sent.",
    "rca": "The root cause was related to the cut over using a webscript, which required configuration adjustments to ensure the production files were set up and sent correctly.",
    "steps_taken": "The configurations were fixed and moved to the production feed, as confirmed by the comment from pimittal@rippling.com, which resolved the issue.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2237": {
    "key": "BENINTEG-2237",
    "issue": "Rippling PCI employees were still showing as active on Aetna via Ideon after moving out of Rippling PEO and subscribing to BCBS via OneKonnect. The group was termed within Rippling PEO but remained active on Ideon, causing a delay in employee terminations.",
    "issue_summary": "Rippling PCI employees were not terminated on Ideon after moving from Aetna(PEO) to BCBS via OneKonnect due to a 5-day delay logic in group cancellation events.",
    "rca": "The system has a check that prevents sending group cancellation events unless it is 5 days before the effective date. This delay logic caused a bulk of transactions to be processed only after the 5-day window, leaving some employee terminations blocked.",
    "steps_taken": "Engineers ran scripts to check pending action states and identified that many pending actions were in a PROCESSED state but not ready to perform actions. They retried sending pending actions, which were successful for most. For blocked transactions, they identified data errors and worked on resolving them. They also re-triggered pending actions using a web script and verified that all blocked transactions were resolved using a Python script.",
    "data_models": "[GroupCoverageCancellationEvent, PendingActionGroup, PendingAction, BlockedTransaction]"
  },
  "BENINTEG-2225": {
    "key": "BENINTEG-2225",
    "issue": "The issue is the need to set up a weekly EDI production file for Elio with United Healthcare-PRIME, scheduled for every Wednesday at 3 AM PST starting from 09/10/2024.",
    "issue_summary": "The task involves setting up a weekly EDI production file for Elio with United Healthcare-PRIME, but there is uncertainty about the standard operating procedure (SOP) or tool to accomplish this.",
    "rca": "The root cause analysis indicates that the cutover was done using a webscript, which implies that there might be a lack of a standardized process or tool for setting up such EDI files.",
    "steps_taken": "The steps taken include assigning the task to a team member who volunteered to handle it, as indicated by the comment 'assign these to me'.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2224": {
    "key": "BENINTEG-2224",
    "issue": "The issue is the need to set up weekly production files for DropletPharma Corp. with United Healthcare-PRIME, specifically scheduling a Weekly EDI production file every Wednesday at 3 AM PST starting from 09/10/2024.",
    "issue_summary": "The issue involves setting up a scheduled weekly EDI production file for DropletPharma Corp. with United Healthcare-PRIME, which needs to be executed every Wednesday at 3 AM PST starting from 09/10/2024.",
    "rca": "The root cause analysis indicates that the cut over to production was done using a webscript, which is categorized under 'Support Tool Used'.",
    "steps_taken": "The steps taken involve scheduling the Weekly EDI production file to run every Wednesday at 3 AM PST starting from 09/10/2024.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2223": {
    "key": "BENINTEG-2223",
    "issue": "The issue was the need to set up weekly production files for Dosu, Inc. with United Healthcare-PRIME, scheduled for every Wednesday at 3 AM PST starting from 15/10/2024.",
    "issue_summary": "The issue was related to setting up a weekly EDI production file for Dosu, Inc. with United Healthcare-PRIME, with the first production file scheduled for 15/10/2024.",
    "rca": "The root cause analysis indicated that the cut over was done using a webscript, and there was a need to transition from Vericred to the new setup.",
    "steps_taken": "The steps involved scheduling the weekly EDI production file to start on 15/10/2024, ensuring that the Vericred file was expired and the new setup was ready for the first production file.",
    "data_models": "[]"
  },
  "BENINTEG-2222": {
    "key": "BENINTEG-2222",
    "issue": "The issue involves setting up weekly production files for Kinetic with United Healthcare-PRIME, which was approved to move to production. The task is to schedule these files to be sent every Wednesday at 3 AM PST starting from 16/10/2024.",
    "issue_summary": "The task is to transition the production file setup for Kinetic with United Healthcare-PRIME to a weekly schedule, starting from 16/10/2024, as the Vericred feed is now expired.",
    "rca": "The root cause analysis indicates that the transition to production was facilitated using a webscript, and the Vericred feed previously in use has expired, necessitating the setup of a new weekly EDI production file.",
    "steps_taken": "The steps involved scheduling a weekly EDI production file to be sent every Wednesday at 3 AM PST, starting from 16/10/2024. The Vericred feed was confirmed to be expired, and the first production file was scheduled for 10/16/2024.",
    "data_models": "[]"
  },
  "BENINTEG-2221": {
    "key": "BENINTEG-2221",
    "issue": "The EDI implementation for Pearl Certification with UHC Prime needed to be completed and the first production file was scheduled to be sent on 10/09/2024.",
    "issue_summary": "The EDI implementation for Pearl Certification with UHC Prime was pending completion, and there was urgency to send the first production file by the scheduled date.",
    "rca": "The issue was related to the cut over using a webscript as part of the support tool used.",
    "steps_taken": "The comment indicates a request for confirmation of completion, suggesting that the necessary steps were being taken to ensure the file was sent on time.",
    "data_models": "[]"
  },
  "BENINTEG-2220": {
    "key": "BENINTEG-2220",
    "issue": "Pearl Certification - UHC Prime - EDI Implementation was scheduled, but a duplicate ticket was created.",
    "issue_summary": "A duplicate ticket (BENINTEG-2221) was created for the EDI implementation of Pearl Certification with UHC Prime.",
    "rca": "The issue was caused by the creation of a duplicate ticket (BENINTEG-2221) for the same EDI implementation task.",
    "steps_taken": "The ticket was identified as a duplicate, and no further action was required as the original task was already being tracked.",
    "data_models": "[]"
  },
  "BENINTEG-2219": {
    "key": "BENINTEG-2219",
    "issue": "The group CareAcademy.co, Inc. has been approved for production, and there is a need to automate the sending of production files to Cigna effective from October 8th, 2024.",
    "issue_summary": "CareAcademy.co, Inc. needs to have their production files sent to Cigna automatically starting from October 8th, 2024, with a weekly schedule on Wednesdays at 3 AM PST.",
    "rca": "The issue requires a cut over using a webscript to automate the sending of production files.",
    "steps_taken": "The steps involve setting up an automation process using a webscript to ensure that the production files are sent to Cigna starting from the specified date and time.",
    "data_models": "[]"
  },
  "BENINTEG-2218": {
    "key": "BENINTEG-2218",
    "issue": "The group CareAcademy.co, Inc. has been approved for production, and there is a request to automate sending production files to Cigna effective 8th of October 2024. However, a duplicate ticket was created due to a tech glitch.",
    "issue_summary": "A duplicate ticket was created due to a tech glitch for automating the sending of production files for CareAcademy.co, Inc. to Cigna.",
    "rca": "The issue was caused by a tech glitch that resulted in the creation of a duplicate ticket.",
    "steps_taken": "The ticket was identified as a duplicate and was not triaged by support. It was requested to be moved from Triage to Open.",
    "data_models": "[]"
  },
  "BENINTEG-2217": {
    "key": "BENINTEG-2217",
    "issue": "The group Brightside Medical of Michigan, P.C. has been approved for production, and there is a need to automate sending the production files to Cigna effective from 8th October 2024. However, the ticket is identified as a duplicate due to a technical glitch.",
    "issue_summary": "The ticket was created to automate the sending of production files for Brightside Medical of Michigan, P.C. to Cigna starting 8th October 2024, but it was identified as a duplicate due to a technical glitch.",
    "rca": "The issue was caused by a technical glitch that resulted in the creation of a duplicate ticket.",
    "steps_taken": "The ticket was identified as a duplicate and was likely closed or merged with the original ticket to avoid redundancy.",
    "data_models": "[]"
  },
  "BENINTEG-2216": {
    "key": "BENINTEG-2216",
    "issue": "The production files for Brightside Medical of Michigan, P.C. with Cigna were not being sent as scheduled. The automation for sending these files was not set up correctly, causing delays and manual intervention.",
    "issue_summary": "The issue was due to a wrong configuration setup during vendor partner onboarding, which led to the failure in automating the sending of production files for the group Brightside Medical of Michigan, P.C. with Cigna.",
    "rca": "The root cause of the issue was identified as a manual data entry error during the configuration setup for vendor partner onboarding. This resulted in multiple configurations being created for the group, which blocked the automation process.",
    "steps_taken": "The issue was resolved by identifying and fixing the incorrect configurations. The configurations were corrected, and the process was moved to production. A manual file was sent, and the automation was set to start from the following Tuesday.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-2215": {
    "key": "BENINTEG-2215",
    "issue": "The issue involves the company Vestwell with a specific group number and carrier, Cigna Facets, related to the production file frequency and timing.",
    "issue_summary": "The issue pertains to the setup or configuration of the production file for Vestwell with Cigna Facets, which is scheduled to run weekly at 3AM PST.",
    "rca": "The root cause analysis indicates that the issue was related to the cut over using a webscript.",
    "steps_taken": "The description and comments do not provide specific steps taken to resolve the issue.",
    "data_models": "[]"
  },
  "BENINTEG-2214": {
    "key": "BENINTEG-2214",
    "issue": "TrustCloud Corporation is facing an issue with the first production file run scheduled with Cigna Facets.",
    "issue_summary": "The issue involves the first production file run for TrustCloud Corporation with Cigna Facets, scheduled for 10/08/2024, which is to occur weekly on Tuesdays at 3AM PST. The root cause is related to the cut over using a webscript.",
    "rca": "The root cause of the issue was identified as a cut over using a webscript, which falls under the category of 'Support Tool Used'.",
    "steps_taken": "The steps taken to resolve the issue are not detailed in the provided data.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: []"
  },
  "BENINTEG-2212": {
    "key": "BENINTEG-2212",
    "issue": "The file feeds for Cigna on 09/26 and 10/01 were missing the Class ID A008 for the REF ZZ field, which is required for Texas employees. Instead, Class ID A001 was being sent, and in some cases, the REF DX and REF ZZ fields were missing entirely.",
    "issue_summary": "The issue was that the file feeds for Cigna were not correctly including the Class ID A008 in the REF ZZ field for Texas employees, leading to incorrect or missing data being sent.",
    "rca": "The root cause was that the new classification A008 was added on 09/30, but the base snapshot marked as accepted was from 09/23, before A008 was in the system. This caused the file to not pull A008 into the REF ZZ field.",
    "steps_taken": "The base snapshot was reset using retool to create a new snapshot that includes the A008 classification. It was advised to always reset the base snapshot by sending a new fresh file without using 'Use Last Snapshot Sent' and to mark it as accepted.",
    "data_models": "[]"
  },
  "BENINTEG-2209": {
    "key": "BENINTEG-2209",
    "issue": "The group Secureframe with Group ID 00651585 has been approved for production with Cigna as the carrier, but there is a need to ensure the correct setup for data transmission using Stedi.",
    "issue_summary": "The issue involves setting up the Secureframe group for production with Cigna, ensuring the correct data transmission schedule and method using Stedi.",
    "rca": "The root cause analysis indicates that the cut over to production was done using a webscript, which is a support tool used for such transitions.",
    "steps_taken": "The steps involved ensuring the group was approved for production and setting up the data transmission schedule using Stedi, with a preference for Tuesdays at 3am PST.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2208": {
    "key": "BENINTEG-2208",
    "issue": "Need to schedule a weekly EDI production file for Groove Technology Solutions with Cigna every Tuesday at 3 AM PST, effective from 10/08/2024.",
    "issue_summary": "The issue is about scheduling a weekly EDI production file for Groove Technology Solutions with Cigna, to be sent every Tuesday at 3 AM PST starting from 10/08/2024.",
    "rca": "The root cause analysis indicates that the cut over was done using a webscript.",
    "steps_taken": "The steps to resolve the issue would involve setting up the EDI schedule in the system to ensure the file is sent at the specified time and day. However, specific steps or code snippets are not provided in the ticket.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2207": {
    "key": "BENINTEG-2207",
    "issue": "The COBRA medical cancellation for employee Khoa Nguyen was not sent to UHC, resulting in a missed termination.",
    "issue_summary": "The COBRA medical cancellation for employee Khoa Nguyen was not sent to UHC due to the Coverage Period ID not being moved to production status, which prevented the transaction from being sent via enrollment form.",
    "rca": "The issue was a duplicate of another ticket (BENINTEG-544) and was caused by the Coverage Period ID not being moved to production status, which led to the form not being generated and sent.",
    "steps_taken": "The issue was identified as a duplicate of BENINTEG-544 and was closed. Debugging notes indicated that the form was not generated due to improper setup of coverages in Rippling, which was later corrected manually.",
    "data_models": "[PendingAction]"
  },
  "BENINTEG-2205": {
    "key": "BENINTEG-2205",
    "issue": "BCBS of MA requested that Dental coverage be removed for an employee due to an incorrectly approved QLE, which resulted in incorrect coverage dates being sent to the carrier.",
    "issue_summary": "An invalid QLE was processed for Jesse Connolly, leading to incorrect Dental and Vision coverage dates being sent to BCBS of MA. The carrier requested that the coverage be shown as waived instead of sending a termination date before the start date.",
    "rca": "The root cause analysis indicates that there was no issue from the operations side, as they hadn't responded in a couple of months, leading to the ticket being closed.",
    "steps_taken": "The issue was not resolved through the ticket as operations did not respond, and the ticket was eventually closed without further action.",
    "data_models": "[]"
  },
  "BENINTEG-2204": {
    "key": "BENINTEG-2204",
    "issue": "Podium Education Inc group has been approved for production with Cigna, but there is a need to cut over using a webscript.",
    "issue_summary": "The issue involves transitioning the Podium Education Inc group to production with Cigna using a webscript.",
    "rca": "The root cause analysis indicates that the cut over process was executed using a webscript.",
    "steps_taken": "The steps taken to resolve the issue involved using a webscript to facilitate the cut over process for the group.",
    "data_models": "[]"
  },
  "BENINTEG-2203": {
    "key": "BENINTEG-2203",
    "issue": "When trying to map the group's plans and set up carrier configurations through proxy, the user encountered a blocker where the dropdown field for 'How does the carrier refer to this class code?' did not populate with any options, preventing further progress.",
    "issue_summary": "The dropdown field for selecting carrier class code options did not populate when setting up carrier configurations for United Healthcare (SC) in the proxy, blocking the setup process.",
    "rca": "The issue was categorized as 'Deferred' and marked as 'Unable to reproduce'. It was suggested that the problem might have been due to a transient system issue or a bug that has since been fixed.",
    "steps_taken": "The issue was tested again in the proxy, and the options loaded correctly, indicating that the problem might have been temporary or already resolved.",
    "data_models": "[]"
  },
  "BENINTEG-2200": {
    "key": "BENINTEG-2200",
    "issue": "The Eye Med termination form for an employee was not sent as expected. The form did not show a submission date in the debugger, was not found in the outbox, and was not received by the admin/broker.",
    "issue_summary": "The Eye Med termination form for an employee was not sent due to a bug that caused the submit task to remain open, leading to confusion. The form was confirmed to be sent to Paubox, but the admin/broker did not receive it, and the Paubox logs could not be queried due to being older than 45 days.",
    "rca": "Form was confirmed to be sent to Paubox, but the admin/broker claimed not to have received it. The Paubox logs/message receipt information couldn't be queried due to being more than 45 days old. A bug also caused the submit task to remain open, causing confusion for Ops. The bug had been fixed in another ticket.",
    "steps_taken": "The task for the employee was manually closed, and a backfill script was run to close the remaining tasks across companies. A WebScript was executed to set the 'submittedAt' field for pending actions with missing submission dates.",
    "data_models": "[PendingAction, PendingActionGroup, EnrollmentEvent]"
  },
  "BENINTEG-2199": {
    "key": "BENINTEG-2199",
    "issue": "The group 'Unearthly Materials' has been approved for production with United Healthcare, but there is a need to cut over using a webscript.",
    "issue_summary": "The group 'Unearthly Materials' needs to be transitioned to production with United Healthcare using a webscript.",
    "rca": "The issue arose because the cut over to production was done using a webscript.",
    "steps_taken": "The steps to resolve the issue would involve executing the webscript to ensure the group is correctly transitioned to production with United Healthcare.",
    "data_models": "[]"
  },
  "BENINTEG-2198": {
    "key": "BENINTEG-2198",
    "issue": "The group TryNow Inc has been approved for production with United Healthcare, but there is a need to cut over using a webscript.",
    "issue_summary": "The group TryNow Inc has been approved for production with United Healthcare, and the cut over process needs to be executed using a webscript.",
    "rca": "The cut over process for the group was executed using a webscript as part of the support tool used.",
    "steps_taken": "The cut over process was executed using a webscript as part of the support tool used.",
    "data_models": "[]"
  },
  "BENINTEG-2197": {
    "key": "BENINTEG-2197",
    "issue": "When migrating from Ideon to OneKonnect, only one of the orders for multiple carrier objects with the same carrier name but different state codes/group IDs is able to be sent, resulting in a failure.",
    "issue_summary": "The migration from Ideon to OneKonnect fails for multiple carrier objects under the same carrier name due to a 'Carrier name already exist' error.",
    "rca": "The root cause of the issue is a limitation in the current implementation where the system does not handle multiple carrier objects with the same carrier name but different state codes/group IDs. This results in a failure when attempting to send more than one order to OneKonnect, as the system returns an error indicating that the 'Carrier name already exist'.",
    "steps_taken": "The team engaged with OneKonnect to understand how to handle these situations and considered implementing a naming convention that includes state-specific differentiators. A manual workaround was suggested but deemed not feasible. Logs were reviewed to provide OneKonnect with the necessary payload information. The issue was escalated and a product enhancement was made to address the limitation.",
    "data_models": "[VendorRequest]"
  },
  "BENINTEG-2192": {
    "key": "BENINTEG-2192",
    "issue": "Coverage Period IDs for Kaiser plans were not generated for People Center Inc (PCI) after the group ID numbers were added, blocking the setup of EDI or API feeds with Ideon.",
    "issue_summary": "Coverage Period IDs for Kaiser plans were not generated due to incomplete carrier connection setup, preventing EDI/API feed setup with Ideon.",
    "rca": "Coverage Periods (CPs) were not created because the Carrier Connection (CC) setup hadn't been finalized. The setup was completed later, allowing the CPs to be generated.",
    "steps_taken": "1. Verified group ID numbers were added to Kaiser plans. 2. Checked that the Open Enrollment period had ended. 3. Confirmed no Coverage Period IDs were listed on Vericred's 'Ingest' page or received by Ideon. 4. Verified 'EDI/API - Ideon (Vericred)' setting was enabled. 5. Investigated using code to check for uninjected carriers and confirmed CPs were created after finalizing the CC setup. 6. Triggered Kaiser CA ingestion on Vericred again, successfully creating the coverage period.",
    "data_models": "[Company, InsuranceCompanyCarrierLineInfo, VericredCompanyCoveragePeriodInfo, BaseCompanyCarrierTransmission]"
  },
  "BENINTEG-2185": {
    "key": "BENINTEG-2185",
    "issue": "When cobra orphan accounts are being created, the system is not pulling over salary information, causing errors on the file feed for Noyo submissions.",
    "issue_summary": "Cobra orphan accounts were missing salary information, which is required for Noyo submissions, leading to errors in the file feed.",
    "rca": "The salary fetching launchDarkly flag needed to be enabled for all the groups, and the snapshots also needed to be sent for these.",
    "steps_taken": "Filtered orphaned roles using a script to identify affected accounts. Ran a script to submit member snapshots for the identified cobra orphan profiles. Updated the process to ensure salary details are included for future cobra orphan enrollments. Confirmed no errors were present after the update.",
    "data_models": "[PeoOrphanCompanyEmployeeMapping, RoleWithCompany, Subscriber]"
  },
  "BENINTEG-2183": {
    "key": "BENINTEG-2183",
    "issue": "Aetna flagged 75 errors related to QLEs that were not updated in the Noyo system after the initial snapshot, causing dependent information to not update and potentially drop from the file.",
    "issue_summary": "Errors flagged by Aetna due to QLEs not updating in Noyo after the initial snapshot, risking dependent information being dropped.",
    "rca": "The root cause was identified as the census being sent using a webscript, which did not account for updates after the initial snapshot.",
    "steps_taken": "The team decided to trigger a full census send to update the information in Noyo. The process involved using the `send_group_census_for_peo` function to send the census. The execution of ETAs was monitored, and a report of individual snapshots was created. The webscript code was used to generate and verify the Noyo member snapshots, ensuring all data was correctly updated.",
    "data_models": "[NoyoPeoCensusRequest, NoyoCensusRequest, NoyoMemberSnapshot, Subscriber, InsuranceCompanyCarrierLineInfo, SubscriberLineInfo]"
  },
  "BENINTEG-2182": {
    "key": "BENINTEG-2182",
    "issue": "The COBRA enrollment data for two employees from Dinara Financial Technology was not transmitted to Ideon. The enrollment status showed 'errors', indicating that the information did not reach Ideon, causing a risk of coverage lapse.",
    "issue_summary": "COBRA enrollment data for employees from Dinara Financial Technology was not transmitted to Ideon due to errors in the transmission status, leading to potential coverage lapses.",
    "rca": "The issue was caused by an incident on Vericred's side, which has since been resolved. The transmission status initially showed 'errors', preventing the enrollment from being sent to Ideon.",
    "steps_taken": "Reviewed available Vericred tabs for push or amendment capability. Surfaced the employee to Ideon, but no record of transmission was found. The Vericred request was eventually sent, and the enrollment information was confirmed to be accurate on the carrier's side. The issue was resolved by ensuring the COBRA enrollment data was pushed through to Ideon.",
    "data_models": "[PendingAction, VendorRequest]"
  },
  "BENINTEG-2180": {
    "key": "BENINTEG-2180",
    "issue": "The UHC Order to OneKonnect failed due to an error indicating 'Invalid order data' with specific messages about 'Customer Code already exist' and 'Customer Federal Tax ID is not valid'. This blocked the UHC migration to OneKonnect.",
    "issue_summary": "The UHC Order to OneKonnect failed due to incorrect order data, specifically issues with the Customer Code and Federal Tax ID, blocking the migration process.",
    "rca": "There was a bug in the implementation related to looking up the federal tax ID from previous EBN EDI orders. This bug caused the system to send incorrect or duplicate data, leading to the failure of the order.",
    "steps_taken": "The team identified a bug in the implementation that caused the issue. A fix was developed and deployed. After the fix, the request was retried, and the onboarding to EBN was successful.",
    "data_models": "[VendorRequest]"
  },
  "BENINTEG-2178": {
    "key": "BENINTEG-2178",
    "issue": "Blocked transactions due to groups having multiple connections with Noyo involving both sync and send carriers, which is blocking their Open Enrollment (OE) for PFG.",
    "issue_summary": "Transactions are blocked for groups with multiple Noyo connections due to a gap in understanding of tooling for creating NCCs, leading to issues with carriers not fully set up.",
    "rca": "There was a gap in understanding between the Engineering and Operations teams regarding the tooling for creating NCCs. NCCs were created before the plans were available on Noyo, which should have been done the other way around.",
    "steps_taken": "The team discussed with Noyo to understand that each carrier track can proceed individually. It was identified that NCCs should only be created if the plans are loaded in Noyo and can be mapped. The documentation was updated to reflect this process. Additionally, the NCCs for groups not actively in testing were removed to allow transactions to pass through.",
    "data_models": "[InsuranceCompanyPlanInfo]"
  },
  "BENINTEG-2176": {
    "key": "BENINTEG-2176",
    "issue": "Snapshot Errors causing 8 blocked transactions due to unavailable plan for benefit class.",
    "issue_summary": "Snapshot transactions were blocked due to a plan not being available for a specific benefit class, causing errors in processing.",
    "rca": "Transactions were unblocked, resolving the issue, hence the ticket was closed.",
    "steps_taken": "The issue was part of a Snapshot migration initiative, and the transactions were eventually unblocked, leading to the closure of the ticket.",
    "data_models": "[]"
  },
  "BENINTEG-2175": {
    "key": "BENINTEG-2175",
    "issue": "OneKonnect is reporting that they are receiving blank first and last names from Rippling, causing potential mass errors.",
    "issue_summary": "OneKonnect reported missing first and last names in the data received from Rippling, likely due to a recent update causing connection/mapping issues.",
    "rca": "The issue was identified as a bug on the vendor's side (OneKonnect). The code for filling in names in the payload on Rippling's side had not changed since 2023, and no differences were found in the format of the employee/dependent names in the generated files for different dates.",
    "steps_taken": "The generated files for Red Rhino were compared for three different dates (2024-08-15, 2024-09-28, 2024-10-01) and no differences were found in the format for the employee/dependent names. The code for filling in the names in the payload was also reviewed and confirmed to have not changed since 2023. The issue was raised to OneKonnect's lead, Esraa, and continued monitoring was planned.",
    "data_models": "[]"
  },
  "BENINTEG-2174": {
    "key": "BENINTEG-2174",
    "issue": "Rhodium Group, LLC is facing an issue with the transmission of insurance benefits to United Healthcare-PRIME.",
    "issue_summary": "The issue involves the setup for transmitting insurance benefits for Rhodium Group, LLC to United Healthcare-PRIME, with the first production file scheduled to be sent on 10/09/2024.",
    "rca": "The root cause of the issue was identified as a cut over using a webscript.",
    "steps_taken": "The steps to resolve the issue are not detailed in the ticket.",
    "data_models": "[]"
  },
  "BENINTEG-2173": {
    "key": "BENINTEG-2173",
    "issue": "The UHC prime EDI file feed for Werba Rubin Papier Wealth Management needs to be set up for production to run weekly on Wednesdays.",
    "issue_summary": "The UHC prime EDI file feed for Werba Rubin Papier Wealth Management has been approved for production, and the setup needs to be configured to run weekly on Wednesdays.",
    "rca": "The cut over to production was done using a webscript.",
    "steps_taken": "The production setup for the UHC prime EDI file feed was configured to run on a weekly schedule every Wednesday at 3am PST.",
    "data_models": "[]"
  },
  "BENINTEG-2159": {
    "key": "BENINTEG-2159",
    "issue": "Vaire Computing's benefits were canceled on August 30, 2024, despite the PEO termination date being updated to September 30, 2024. This led to a discrepancy in the benefits coverage and PEO access fee subscription.",
    "issue_summary": "The benefits for Vaire Computing were canceled on August 30, 2024, even though the PEO termination date was updated to September 30, 2024. This discrepancy was due to the PEO needing to kick off a renewal for September.",
    "rca": "The root cause of the issue was that the PEO needed to initiate a renewal for the month of September. The benefits were canceled on August 30, 2024, because the system did not reflect the updated termination date of September 30, 2024, in the individual employee enrollment timelines.",
    "steps_taken": "1. Investigated the termination date discrepancy and confirmed that the benefits expired on August 31, 2024, and the expiration was updated on September 4, 2024, to September 30, 2024.\n2. Moved the cancellation event to INIT state using the following code:\n```python\n  event = CompanyEnrollmentEvent.get_or_none(id='669ac77919e31c9cd633dfe8')\n  event.status = 'INIT'\n  event.save()\n  return\n```\n3. Created a new cancellation effective October 1, 2024, using the following code:\n```python\n  company = Company.get_or_none(id='6548daee2b9e6cc104781f57')\n  reference_date = date(2024,9,30)\n  cancel_all_coverages_task(company, reference_date)\n  return\n```\n4. Ran a script to mock the `should_include_end_date` to include the end date of September 30, 2024, for the affected employees:\n```python\n  ees_to_amend = [\"668eca94dbba8277db93dcb5\",\"65afd5bd1375b6ea28d0a93a\",\"657afce63dba1f38ee90fb40\",\"65df3cbb5caf27a3acb7cc96\"]\n  with patch(\"insurance.internal_lib.noyo_snapshot.noyo_member_snapshot_payload_generator.should_include_end_date_for_noyo_member_snapshots\",return_value=True):\n      for role_id in ees_to_amend:\n        try:\n          print(NoyoMemberSnapshotController.submit_member_snapshot_adhoc(\"164174a1-8878-4b37-9469-05c53be3fec0\",Subscriber.objects.get(role=role_id),None))\n          print(f\"Successfully send amendment for ee {role_id}\")\n        except Exception as e:\n          print(f\"Error {e} while sending snapshot amendment for the role {role_id}\")\n  return \"Done\"\n```\n5. Sent the amendment for all affected employees and confirmed that the benefits are now active.",
    "data_models": "[CompanyEnrollmentEvent, EnrollmentEvent, PendingActionGroup, PendingAction, Subscriber]"
  },
  "BENINTEG-2155": {
    "key": "BENINTEG-2155",
    "issue": "Carrier is rejecting forms due to incorrect legal name being used for Dearborn, while BCBS uses the correct updated name.",
    "issue_summary": "The Dearborn form is pulling an old company legal name, causing carrier rejection, while BCBS pulls the correct updated name.",
    "rca": "The issue was caused by the group having two different names listed within the lines of coverage, and the forms were pulling the name associated with the line of coverage for Dearborn.",
    "steps_taken": "Regenerated forms to see if the issue would resolve, confirmed field details displaying old group name for Dearborn but not BCBS. Suggested editing the Company name in the Enrollment details section and regenerating forms if needed.",
    "data_models": "[]"
  },
  "BENINTEG-2154": {
    "key": "BENINTEG-2154",
    "issue": "OneKonnect is receiving all datasets at 5am instead of the expected 1am-2am time, causing mass failures in production files.",
    "issue_summary": "The datasets for OneKonnect are being sent at a different time than historically scheduled, leading to failures in production files.",
    "rca": "The timing for sending the EBN file feeds was recently changed, which caused failures on the EBN side. The time was changed back to the original schedule.",
    "steps_taken": "The time for sending the EBN snapshots was reverted to the original schedule after it was identified that the change caused failures. Confirmation was sought from OneKonnect to ensure the issue was resolved.",
    "data_models": "[]"
  },
  "BENINTEG-2152": {
    "key": "BENINTEG-2152",
    "issue": "Tigerlily Foundation's COBRA enrollments were not processed due to a Noyo salary issue, resulting in members not having their Guardian benefits.",
    "issue_summary": "The COBRA enrollments for Tigerlily Foundation were not processed because the salary object sent to Noyo was incomplete, causing a 422 error.",
    "rca": "The member-snapshots were rejected by Noyo because the salary object sent in the member-snapshot was missing required parameters. Noyo requires the salary object to be fully populated or not sent at all. A recent change was made to address this issue.",
    "steps_taken": "Reviewed error logs on Noyo and Rippling ends, attempted snapshot, coordinated with the Carrier Connections team. A change was made to ensure the salary object is sent fully or not at all. Verified that snapshots were sent successfully for affected employees.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-2151": {
    "key": "BENINTEG-2151",
    "issue": "Need to schedule a weekly EDI production file for MyFBAPrep with United Healthcare-PRIME every Wednesday at 3 AM PST, effective from 10/02/2024.",
    "issue_summary": "The issue is about scheduling a weekly EDI production file for MyFBAPrep with United Healthcare-PRIME, which needs to be set up to run every Wednesday at 3 AM PST starting from 10/02/2024.",
    "rca": "The root cause analysis indicates that the cutover process is using a webscript.",
    "steps_taken": "The steps to resolve the issue would involve setting up the EDI schedule using the appropriate tools and ensuring the webscript is correctly configured to handle the cutover.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2150": {
    "key": "BENINTEG-2150",
    "issue": "Need to schedule a weekly EDI production file for Monarch Nascent Inc with United Healthcare-PRIME every Wednesday at 3 AM PST, effective from 10/02/2024.",
    "issue_summary": "The issue is about scheduling a weekly EDI production file for Monarch Nascent Inc with United Healthcare-PRIME, which needs to be set up to run every Wednesday at 3 AM PST starting from 10/02/2024.",
    "rca": "The root cause analysis indicates that the cut over was done using a webscript.",
    "steps_taken": "The steps to resolve the issue would involve setting up the EDI schedule using the appropriate tools and ensuring that the webscript is correctly configured to handle the cut over.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2149": {
    "key": "BENINTEG-2149",
    "issue": "Need to schedule a weekly EDI production file for Modern Foot & Ankle with United Healthcare-PRIME every Wednesday at 3 AM PST effective from 10/02/2024.",
    "issue_summary": "The issue involves scheduling a weekly EDI production file for Modern Foot & Ankle with United Healthcare-PRIME, which was initially thought to require engineering intervention but was later determined to be manageable by operations.",
    "rca": "The root cause analysis indicates that the support team can now use a tool called 'retool' to manage the scheduling, eliminating the need for engineering involvement.",
    "steps_taken": "The ticket was initially held off from completion as per a comment by Antionette Gilliard. Later, Akarat closed the ticket, stating that it was not for engineering as operations could now handle the task.",
    "data_models": "[]"
  },
  "BENINTEG-2148": {
    "key": "BENINTEG-2148",
    "issue": "The scheduled production file for North Park Transportation Company with Cigna was not being transmitted as expected, causing a delay in the transmission process.",
    "issue_summary": "The issue was caused by overlapping benefit lines in the configuration for North Park Transportation Company, which led to the failure of the transmission to Cigna.",
    "rca": "The root cause of the issue was identified as overlapping benefit lines in the configuration for the carrier/company, specifically having two configurations: one on the MEDICAL line and another with MEDICAL, DENTAL, VISION line. This overlap caused the transmission to fail as configurations need to have non-overlapping benefits.",
    "steps_taken": "The steps taken to resolve the issue included identifying the correct configuration (MEDICAL, DENTAL, VISION), updating the Vendor Partner Company (VPC) with the correct benefits, and manually pushing the production file to ensure successful transmission.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2147": {
    "key": "BENINTEG-2147",
    "issue": "Need to schedule a weekly EDI production file for Ten Squared Capital LLC with UHC USP every Wednesday at 3 AM PST, effective from 10/02/2024.",
    "issue_summary": "The issue is about scheduling a weekly EDI production file for Ten Squared Capital LLC with UHC USP, which needs to be set up to run every Wednesday at 3 AM PST starting from 10/02/2024.",
    "rca": "The root cause analysis indicates that the cut over was done using a webscript.",
    "steps_taken": "The steps to resolve the issue would involve setting up the EDI schedule using the appropriate tools or scripts to ensure the file is generated and sent at the specified time.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2146": {
    "key": "BENINTEG-2146",
    "issue": "The group 'Fuse Energy Technologies Corp' was approved for production with UHC - USP, but there were issues with the Vericred feed still being active and the Ideon file feed expiring.",
    "issue_summary": "The group 'Fuse Energy Technologies Corp' was approved for production with UHC - USP, but there were issues with the Vericred feed still being active and the Ideon file feed expiring.",
    "rca": "The root cause was related to the support tool used, specifically a cut over using a webscript, which led to the Ideon file feed expiring while the Vericred feed remained active.",
    "steps_taken": "The steps taken included contacting Ideon to address the expired file feed issue.",
    "data_models": "[]"
  },
  "BENINTEG-2142": {
    "key": "BENINTEG-2142",
    "issue": "The Atmosphere Events Group has been approved for production, and there is a need to automate the sending of production files to UHC USP starting from October 2, 2024.",
    "issue_summary": "The Atmosphere Events Group requires automation to send production files to UHC USP starting from October 2, 2024, on a weekly schedule.",
    "rca": "The issue was related to the cut over using a webscript as part of the support tool used.",
    "steps_taken": "The steps to resolve the issue would involve setting up an automated process to send the production files to UHC USP on the specified schedule. However, specific steps or code snippets are not provided in the ticket.",
    "data_models": "[]"
  },
  "BENINTEG-2141": {
    "key": "BENINTEG-2141",
    "issue": "Aetna PEO Migration encountered 2,079 errors with the message '9418 - transaction received modified the information previously entered online'. This error indicates discrepancies between the data in Rippling and Aetna's portal, such as missing start dates, phone numbers, or addresses.",
    "issue_summary": "During the migration to Noyo for Aetna PEO, 2,079 errors were flagged due to discrepancies in employee data between Rippling and Aetna's portal. These discrepancies include missing start dates, phone numbers, or addresses.",
    "rca": "Rippling data is assumed to be the source of truth. A new census snapshot was sent to ensure the data is current and correct. Any further discrepancies will be addressed in separate tickets.",
    "steps_taken": "The team decided to resend amendments to ensure the complete set of information is passed to Noyo and Aetna. A new census snapshot was sent to update the data, and it was agreed that discrepancies are expected until the Noyo connection becomes primary. Noyo will push Aetna to make necessary changes.",
    "data_models": "[]"
  },
  "BENINTEG-2140": {
    "key": "BENINTEG-2140",
    "issue": "The production file for Staircase Inc with UHC was not scheduled as expected, causing delays and SLA breaches.",
    "issue_summary": "The production file for Staircase Inc with UHC was not scheduled on the intended date, leading to a delay and SLA violation.",
    "rca": "The Ideon cut over tool was used, which may have contributed to the scheduling issue.",
    "steps_taken": "The group was moved to production, and it was communicated that the file feed should be sent by the next day at 3 PM.",
    "data_models": "[]"
  },
  "BENINTEG-2139": {
    "key": "BENINTEG-2139",
    "issue": "The group 'Hands On Learning / Skillable' has been approved for production with Cigna, but there is an issue with the Vericred connection still being in production.",
    "issue_summary": "The group 'Hands On Learning / Skillable' approved for production with Cigna has an issue with the Vericred connection still being active in production.",
    "rca": "The root cause of the issue was identified as a cut over using a webscript, which likely did not update the connection status properly.",
    "steps_taken": "The issue was identified through a comment noting that the Vericred connection is still in production. The resolution would involve ensuring the connection is properly cut over using the correct tools or scripts.",
    "data_models": "[]"
  },
  "BENINTEG-2138": {
    "key": "BENINTEG-2138",
    "issue": "Noyo transactions are not being sent due to an expired Line of Coverage (LOC), resulting in 42 blocked transactions.",
    "issue_summary": "The issue is that transactions are attempting to send an expired Line of Coverage (LOC) to Noyo, causing 42 transactions to be blocked.",
    "rca": "The root cause of the issue is that the plan with ID 647790fcb6ee1d54c212e525, which is associated with Noyo plans ee6d85b6-ad40-4c12-9034-30cad8730a54 and 071a60c3-9f99-4f46-b376-03ff1f06341b, has been discontinued on Noyo. This discontinuation makes the plan unavailable for mapping, leading to the transaction blockage.",
    "steps_taken": "A debugging script was used to identify the issue. The script retrieved the group plans from Noyo using the group ID ad07df31-b215-49d5-96fc-45647c7feccd and checked various conditions such as carrier match, line of coverage, and plan status. The script printed out the relevant information to help diagnose the problem. A resolution pull request (PR) was attached to Beninteg-1349 to address the issue.",
    "data_models": "[InsuranceCompanyPlanInfo, CompanyCarrierLineInfo]"
  },
  "BENINTEG-2137": {
    "key": "BENINTEG-2137",
    "issue": "The group CultureScience, Inc. has been approved for production with UHC-USP, but there is a need to cut over using a webscript.",
    "issue_summary": "CultureScience, Inc. was approved for production with UHC-USP, but the cut over process required the use of a webscript.",
    "rca": "The issue was related to the need for a cut over using a webscript, as indicated in the root cause analysis.",
    "steps_taken": "The ticket does not provide specific steps taken to resolve the issue, but it mentions the use of a webscript for the cut over process.",
    "data_models": "[]"
  },
  "BENINTEG-2136": {
    "key": "BENINTEG-2136",
    "issue": "The issue involved migrating a new assignment for Skillable (Hands On Learning) with Cigna, where there was a problem with creating a file in Retool due to validation errors related to zip codes being longer than 5 characters.",
    "issue_summary": "The migration of a new assignment for Skillable with Cigna faced issues due to validation errors in Retool, specifically with zip codes exceeding the 5-character limit, and handling of international addresses.",
    "rca": "The root cause of the issue was the use of a webscript for cut over, which led to validation errors in Retool due to zip codes being longer than 5 characters. Additionally, there was confusion regarding the handling of international addresses, as Cigna's file feed only accepts addresses located in the United States.",
    "steps_taken": "The steps taken to resolve the issue included verifying plans and mapping, completing the TPA form, creating an SFTP connection, correcting the zip code error, and addressing the issue of multiple class IDs. Communication with Cigna clarified that only US addresses are accepted, and manual updates are required for international addresses. A test file was sent to Cigna and approved for production, after which the Ideon file feed was requested to be canceled.",
    "data_models": "No specific data models were mentioned in the ticket."
  },
  "BENINTEG-2135": {
    "key": "BENINTEG-2135",
    "issue": "Transmission Error is blocking the generation of files due to a validation error where a communication number exceeds the maximum length of 10 characters.",
    "issue_summary": "The issue was a transmission error caused by a validation error where a communication number exceeded the maximum length of 10 characters, blocking file generation.",
    "rca": "The root cause of the issue was a validation error in the transmission process, where a communication number was longer than the allowed 10 characters, causing the transmission to fail.",
    "steps_taken": "The issue was resolved by deploying a fix that addressed the validation error, allowing the transmission to proceed without errors. The fix was confirmed to be effective after running a new file.",
    "data_models": "[]"
  },
  "BENINTEG-2134": {
    "key": "BENINTEG-2134",
    "issue": "Transmission error blocking the generation of files due to a validation error related to a missing phone number for one of the employees.",
    "issue_summary": "A transmission error occurred because one of the employees in the group did not have a phone number in the system, causing a validation error in the Stedi guide which required the PER segment.",
    "rca": "The root cause of the issue was a manual data entry error where a phone number was missing for one of the employees. The Stedi guide initially required the PER segment, which included the phone number, leading to a validation error when the phone number was not present.",
    "steps_taken": "The team confirmed with the carrier that the PER segment was not required and updated the guide to make it optional. However, the mapping still required the phone number due to the initial guide version. The engineering team was asked to remove the PER03 and PER04 segments if the phone number was not present. The mapping was republished, and the missing phone number was added to resolve the issue.",
    "data_models": "[CompanyInsuranceInfo, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-2133": {
    "key": "BENINTEG-2133",
    "issue": "The issue involves moving the file feed for New View Wellness LLC with United Healthcare to production.",
    "issue_summary": "The file feed for New View Wellness LLC with United Healthcare needs to be moved to production, with the first file scheduled to be sent on 10/02/2024.",
    "rca": "The root cause analysis indicates that the cut over to production was done using a webscript.",
    "steps_taken": "The group was approved for production, and the file feed was scheduled to be sent every Wednesday at 3am PT, starting from 10/02/2024.",
    "data_models": "[]"
  },
  "BENINTEG-2132": {
    "key": "BENINTEG-2132",
    "issue": "The group Hummingbird (Hummingbird RegTech Inc) has been approved for production with Cigna, but there is a need to set up the transmission frequency and preferred day and time for data exchange.",
    "issue_summary": "The group Hummingbird has been approved for production with Cigna, and the transmission frequency and preferred day and time need to be set up.",
    "rca": "The setup was done via a webscript, indicating that the support tool used was a web-based script to configure the transmission settings.",
    "steps_taken": "The setup for the group was completed using a webscript to configure the transmission frequency and preferred day and time.",
    "data_models": "[]"
  },
  "BENINTEG-2129": {
    "key": "BENINTEG-2129",
    "issue": "The UHC prime EDI file feed for the CUDDLY group needs to be set up for production to run weekly on Wednesdays.",
    "issue_summary": "The UHC prime EDI file feed for the CUDDLY group has been approved for production, but the production setup needs to be completed to ensure the file runs weekly on Wednesdays.",
    "rca": "The cut over to production was done using a webscript, which is a support tool used for such transitions.",
    "steps_taken": "The production environment setup was requested to be completed for the group to ensure the first production file is sent out as scheduled.",
    "data_models": "[]"
  },
  "BENINTEG-2128": {
    "key": "BENINTEG-2128",
    "issue": "The UHC prime EDI file feed for ContactLoop Inc needs to be set up for production to run weekly on Wednesdays.",
    "issue_summary": "The EDI file feed for United Healthcare-PRIME for ContactLoop Inc needs to be set up in the production environment to run on a weekly schedule.",
    "rca": "The cut over to production was done using a webscript.",
    "steps_taken": "The production environment was set up for the UHC prime EDI file feed to run weekly on Wednesdays as requested.",
    "data_models": "[]"
  },
  "BENINTEG-2127": {
    "key": "BENINTEG-2127",
    "issue": "The UHC prime EDI file feed for Combined Selection Group LLC needs to be set up for production to run weekly on Wednesdays.",
    "issue_summary": "The EDI file feed for United Healthcare-PRIME for Combined Selection Group LLC needs to be set up in the production environment to run on a weekly schedule.",
    "rca": "The issue was related to the cut over using a webscript for setting up the production environment.",
    "steps_taken": "The production setup for the EDI file feed was completed to ensure it runs weekly on Wednesdays as requested.",
    "data_models": "[]"
  },
  "BENINTEG-2126": {
    "key": "BENINTEG-2126",
    "issue": "The UHC prime EDI file feed for Clara Labs needs to be set up for production to run weekly on Wednesdays.",
    "issue_summary": "The UHC prime EDI file feed for Clara Labs has been approved for production, but the production setup needs to be completed to ensure the file runs weekly on Wednesdays.",
    "rca": "The issue was due to the need to cut over using a webscript for the UHC prime EDI file feed.",
    "steps_taken": "The production environment for the UHC prime EDI file feed was set up to ensure the file runs weekly on Wednesdays.",
    "data_models": "[]"
  },
  "BENINTEG-2125": {
    "key": "BENINTEG-2125",
    "issue": "The UHC prime EDI file feed for Bus.com US LLC needs to be set up for production to run weekly on Wednesdays.",
    "issue_summary": "The UHC prime EDI file feed for Bus.com US LLC has been approved for production, but the production setup needs to be configured to run weekly on Wednesdays.",
    "rca": "The issue was due to the need to cut over using a webscript for the UHC prime EDI file feed.",
    "steps_taken": "The production environment was set up for the group to ensure the first production file would be sent out as scheduled.",
    "data_models": "[]"
  },
  "BENINTEG-2124": {
    "key": "BENINTEG-2124",
    "issue": "The issue involves setting up a new group, DoControl Inc, with the carrier UHC Prime for weekly file transmissions every Wednesday at 3 AM PT, starting from 10/02/2024.",
    "issue_summary": "The setup for DoControl Inc with UHC Prime for weekly file transmissions was not completed due to a cutover process using a webscript.",
    "rca": "The root cause of the issue was identified as a cutover process using a webscript, which likely led to the incomplete setup for the file transmissions.",
    "steps_taken": "The steps to resolve the issue would involve ensuring the webscript is correctly configured and tested to handle the cutover process for the new group setup with UHC Prime.",
    "data_models": "[]"
  },
  "BENINTEG-2123": {
    "key": "BENINTEG-2123",
    "issue": "The UHC prime EDI file feed for Brainboard, Inc. needs to be set up for production to run weekly on Wednesdays.",
    "issue_summary": "The UHC prime EDI file feed for Brainboard, Inc. has been approved for production, and the setup needs to be configured to run on a weekly schedule.",
    "rca": "The cut over to production was done using a webscript.",
    "steps_taken": "The production setup for the UHC prime EDI file feed was configured to run on a weekly schedule every Wednesday at 3am PST.",
    "data_models": "[]"
  },
  "BENINTEG-2122": {
    "key": "BENINTEG-2122",
    "issue": "The issue involves multiple entries for Stedi configuration for the group 'Scrut Automation' with UHC USP as the carrier, leading to confusion and potential errors in transmission configurations.",
    "issue_summary": "Multiple entries for Stedi configuration were created for the group 'Scrut Automation' with UHC USP as the carrier, due to a manual data entry error.",
    "rca": "The root cause of the issue was identified as a manual data entry error, where multiple entries were created for the Stedi configuration.",
    "steps_taken": "The team identified the presence of multiple transmission configurations and discussed the need for cutting over the correct configuration. They also addressed the onboarding of another carrier, Scott and White Health Plan, which was identified as an error.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2118": {
    "key": "BENINTEG-2118",
    "issue": "The first production EDI file for Mylo LLC with Cigna did not push automatically as scheduled.",
    "issue_summary": "The scheduled EDI file for Mylo LLC with Cigna did not push automatically due to a configuration oversight.",
    "rca": "The root cause was identified as the last snapshot not being marked as accepted, which was a mistake during the setup process.",
    "steps_taken": "The issue was resolved by manually sending the file and ensuring the snapshot was marked as accepted. Future files should now push automatically as expected.",
    "data_models": "[]"
  },
  "BENINTEG-2115": {
    "key": "BENINTEG-2115",
    "issue": "The member's Principal coverage was incorrectly showing as terminated due to a 12/31/9999 end date being transmitted to the carrier.",
    "issue_summary": "The issue was that the member's Principal coverage was incorrectly terminated because an incorrect end date of 12/31/9999 was sent to the carrier.",
    "rca": "The issue has been resolved, and the termination date on the form is now correct. The COBRA start date also appears to be correct, indicating that there is no longer an issue.",
    "steps_taken": "The termination date on the form was corrected to reflect no end date, and the COBRA start date was verified to be correct. The issue was then closed as resolved.",
    "data_models": "[]"
  },
  "BENINTEG-2114": {
    "key": "BENINTEG-2114",
    "issue": "Nicholas put in his new hire enrollments effective 9/1/24 and a QLE effective 9/1/24 into Rippling on 8/1/24. The Guardian election is waived in the NH and enrolled in the QLE. The snapshot to Noyo isn't sending anything over, causing a delay in enrollment needed for an upcoming dentist appointment.",
    "issue_summary": "The snapshot to Noyo is not including coverage for Nicholas's new hire and QLE enrollments, potentially due to an incorrect group setup in Rippling, which is blocking the enrollment process.",
    "rca": "The group was pointed to the wrong Noyo ID due to an incorrect setup in Rippling PEO tech 2. The group ID changed last year and was not moved to a different group, which was not noticed until the snapshot logic was introduced.",
    "steps_taken": "The team considered changing the group ID back to the original one but decided against it due to potential unknown consequences. Instead, they sent an amendment and reviewed it with Noyo and the carrier. A workaround was merged and deployed, which resolved the issue as the snapshot in Noyo now has plans.",
    "data_models": "[InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-2113": {
    "key": "BENINTEG-2113",
    "issue": "Aetna PEO migration to Noyo encountered errors with enrollee plan numbers not being valid for the control-suffix-account, causing discrepancies in plan mapping.",
    "issue_summary": "During the migration of Aetna PEO to Noyo, errors were encountered due to invalid enrollee plan numbers for the control-suffix-account, likely tied to plan mapping logic.",
    "rca": "The issue was caused by a bug on Noyo's end, which has since been fixed.",
    "steps_taken": "The team reviewed the plan mapping logic and identified discrepancies in the plan numbers. Corrected snapshots with the right plan values were sent to Noyo, but the old values were still being sent. Communication with Noyo was initiated to resolve the issue, and a new census file was sent.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2112": {
    "key": "BENINTEG-2112",
    "issue": "The EDI feed was incorrectly sending Traci Godwin, the spouse of employee David Godwin, as a dependent under David's COBRA coverage instead of as a new subscriber with COBRA active coverage.",
    "issue_summary": "Traci Godwin was incorrectly reported in the EDI feed as a dependent under David Godwin's COBRA coverage instead of being reported as a new subscriber with COBRA active coverage due to a Qualifying Life Event (QLE).",
    "rca": "The root cause was identified as a business logic issue in handling dependents who transition to COBRA coverage. The system did not account for dependents becoming new subscribers under COBRA after a QLE, leading to incorrect EDI feed generation.",
    "steps_taken": "The issue required a change in the business logic to correctly handle dependents transitioning to COBRA as new subscribers. The team planned to address this in the next sprint as part of the integration stabilization effort. The fix was eventually deployed, and a test file was sent to the carrier for feedback.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-2111": {
    "key": "BENINTEG-2111",
    "issue": "Aetna PEO Migration encountered errors due to invalid network IDs based on subscriber zip codes, affecting 9 employees.",
    "issue_summary": "During the migration to Noyo for Aetna PEO, errors were reported with the message '4017 - assigned network id is based on subscriber zip code but is invalid for medical', impacting 9 employees. This issue seems related to the PEO plan availability and mapping.",
    "rca": "The root cause of the issue was identified as non-blocking errors related to the network ID assignment based on subscriber zip codes, which were invalid for medical plans. The network ID was not recognized as one of the known identifiers, and further clarification was needed from Aetna.",
    "steps_taken": "The team added a new tab in the Google Sheet to map EE IDs to SSNs and requested Ops to review member snapshots for discrepancies. Discussions were held with Noyo to clarify the network ID issue, and it was determined that further input from Aetna was required. The issue was suggested to be addressed as part of the normal workflow once the vendor transition was complete.",
    "data_models": "No specific data models were mentioned in the ticket."
  },
  "BENINTEG-2110": {
    "key": "BENINTEG-2110",
    "issue": "Rippling EEs faced errors during the migration to Noyo with Aetna PEO. There were two types of errors: 0153 errors requiring term dates or status updates, and 9418 errors indicating data discrepancies, mostly in addresses and phone numbers. Ops team lacked access to resolve these issues.",
    "issue_summary": "During the migration to Noyo with Aetna PEO, Rippling EEs encountered errors due to missing term dates and data discrepancies in addresses and phone numbers, which Ops couldn't resolve due to access restrictions.",
    "rca": "The root cause was identified as the need for updated census snapshots to be sent to Noyo to align data, as there were discrepancies in the information sent compared to what Aetna had on file.",
    "steps_taken": "A WebScript was used to fetch Rippling data with 'Bypass sensitive company check' enabled. The script involved fetching SSNs, filtering carrier data, and generating member snapshot payloads using the NoyoMemberSnapshotController. The data was then sorted and converted to CSV for further analysis and resolution.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, Member, NoyoMemberSnapshotController]"
  },
  "BENINTEG-2109": {
    "key": "BENINTEG-2109",
    "issue": "The team received a large number of errors from Aetna PEO during the migration to Noyo, specifically categorized as '0153 - please provide term dates or advise of status', which accounted for 40% of the errors. This required bulk updates and amendments to be sent to Noyo to resolve the discrepancies.",
    "issue_summary": "During the migration to Noyo, discrepancies were found between the data held by Noyo and Rippling, resulting in a significant number of errors categorized as '0153 - please provide term dates or advise of status'. This required bulk amendments to update the Snapshot data.",
    "rca": "The root cause of the issue was discrepancies between the data held by Noyo and Rippling, which led to errors during the migration process. Most of these discrepancies have been resolved, but they required bulk amendments to update the Snapshot data.",
    "steps_taken": "To resolve the issue, a WebScript was used to find Employee IDs from SSNs, and another script was used to send out member snapshots to Noyo. The scripts processed role IDs and generated member snapshot payloads, which were then submitted to Noyo. Errors were triaged, and successful amendments were marked as resolved. Specific errors like missing salary and invalid phone numbers were identified and addressed separately.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, Member, RoleWithCompany, Subscriber]"
  },
  "BENINTEG-2107": {
    "key": "BENINTEG-2107",
    "issue": "Gorjana is unable to edit the group size rule at the plan level for dental and vision plans, which is causing incorrect forms to be populated and risking carrier rejection.",
    "issue_summary": "The client Gorjana has Anthem for all lines of coverage, but they are classified as a small group for medical and a large group for dental and vision. The system currently only allows group size classification changes at the carrier level, not at the plan level, leading to incorrect form generation.",
    "rca": "The system is designed to handle group size classification at the carrier level, primarily for medical plans. The concept of 'large group' is not applied to dental and vision plans, which leads to the inability to override the group size rule at the plan level for these lines of coverage. This limitation results in incorrect form generation as the system defaults to the medical plan's classification.",
    "steps_taken": "A script was run to change the 'isLargeGroup' attribute to True for dental and vision plans at the CCLI level. However, it was determined that the system generates only one form per carrier, and if any line is marked as a large group, the large group form is used. The code snippet used was:\n\n```python\nfor ccli in InsuranceCompanyCarrierLineInfo.objects.filter(company=\"65b83946c5d3b27de6e3b954\", expirationDate__gte=pst_today(), lineType__in=[\"DENTAL\", \"VISION\"]):\n  ccli.isLargeGroup = True\n  ccli.save()\nreturn\n```\n\nIt was confirmed that Ideon can support Anthem small and large group for a single client, and the group is auditing their enrollment data to ensure accuracy before enabling form sending and beginning the EDI process.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, PendingAction]"
  },
  "BENINTEG-2106": {
    "key": "BENINTEG-2106",
    "issue": "Files scheduled for Cigna and UHC production groups were not sent to the correct production transaction setting ID, causing delays in file delivery.",
    "issue_summary": "Files for Cigna and UHC groups were incorrectly sent due to a misconfiguration in the 'Transaction Setting ID', which included '-test' instead of '-prod'.",
    "rca": "The root cause was identified as the 'Transaction Setting ID' having a '-test' suffix instead of '-prod'. This misconfiguration led to files being sent to the test environment instead of the production environment. The retool was supposed to automatically switch between '-test' and '-prod' based on the environment, but the initial setup for new groups was incorrect.",
    "steps_taken": "The issue was resolved by bulk changing all affected configurations to have the correct '-prod' setting. Additionally, the onboarding SOP was updated to ensure the correct setting ID is used in the future. The engineering team committed to reviewing all groups before the next scheduled transmissions.",
    "data_models": "[]"
  },
  "BENINTEG-2105": {
    "key": "BENINTEG-2105",
    "issue": "The carrier, Cigna Facets, required a change in the EDI file feed for a dependent, Ashley Lee, to correct her relationship code from 19 (dependent) to 18 (self) as she is a breakaway Cobra member. This change was necessary before moving the file into production.",
    "issue_summary": "The issue was that the EDI file feed for dependent Ashley Lee had an incorrect relationship code, which needed to be corrected from 19 (dependent) to 18 (self) for her Cobra enrollment.",
    "rca": "The root cause of the issue was a business logic error where the relationship code for a dependent enrolled in Cobra benefits without their employee was not set correctly to 18 (self).",
    "steps_taken": "The necessary changes were made in the mapping to correct the relationship code for the dependent. The feature request was deployed to production, and the team was asked to validate the changes for the group and close the ticket.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2104": {
    "key": "BENINTEG-2104",
    "issue": "The production file for Samepage, Inc with United Healthcare-PRIME was not scheduled correctly, causing delays in going live. The Vericred connection was still active when it should have been expired, and there was confusion about the company ID and name not matching.",
    "issue_summary": "The production file for Samepage, Inc with UHC Prime was not scheduled as expected due to mismatched company ID and name, and an active Vericred connection that should have been expired.",
    "rca": "The root cause of the issue was the cut over using a webscript, which led to the Vericred connection remaining active when it should have been expired, causing delays in scheduling the production file.",
    "steps_taken": "The issue was resolved by processing the group that was not cut-over, as mentioned in the final comment by rprabhu@rippling.com.",
    "data_models": "[]"
  },
  "BENINTEG-2103": {
    "key": "BENINTEG-2103",
    "issue": "Mable Inc/UHC group needs to have their production file scheduled for transmission via Stedi.",
    "issue_summary": "The Mable Inc/UHC group has been approved for production, and there is a need to schedule the production file transmission via Stedi. The expectation is for the Rippling file to be live by the coming Wednesday.",
    "rca": "The issue was related to the cut over using a webscript as part of the support tool used.",
    "steps_taken": "The production file for Mable Inc/UHC group was scheduled to be transmitted via Stedi at the specified frequency and time.",
    "data_models": "[]"
  },
  "BENINTEG-2102": {
    "key": "BENINTEG-2102",
    "issue": "Lunch Money Group Inc/UHC group has been approved for production, but the production file needs to be scheduled as per the specified details.",
    "issue_summary": "The Lunch Money Group Inc/UHC group requires the production file to be scheduled for transmission, but it has not been set up yet.",
    "rca": "The issue was due to the need for a cut over using a webscript, as indicated in the root cause analysis.",
    "steps_taken": "The production file for Lunch Money Group Inc/UHC group needs to be scheduled for transmission on Wednesday at 3AM PT. The Ideaon ticket to expire the feed has already been logged, and the Rippling file is expected to be live on the coming Wednesday.",
    "data_models": "[]"
  },
  "BENINTEG-2101": {
    "key": "BENINTEG-2101",
    "issue": "The Love Without Boundaries/UHC group needs to have their production file scheduled for transmission to UHC Prime, with the expectation that the Rippling file will be live by the coming Wednesday.",
    "issue_summary": "The Love Without Boundaries/UHC group has been approved for production, and there is a need to schedule the production file transmission to UHC Prime, with the expectation that it will be live by the coming Wednesday.",
    "rca": "The cut over to production was done using a webscript.",
    "steps_taken": "The production file for the Love Without Boundaries/UHC group was scheduled as per the details provided, with the expectation that the Rippling file would be live by the specified date.",
    "data_models": "[]"
  },
  "BENINTEG-2099": {
    "key": "BENINTEG-2099",
    "issue": "The issue was related to scheduling a production file for Lashify Inc with United Healthcare Prime. There was confusion regarding the company ID, which was initially incorrect.",
    "issue_summary": "The ticket was about scheduling a production file for Lashify Inc with UHC Prime, but there was an error with the company ID initially provided, which was incorrect and belonged to another company.",
    "rca": "The root cause of the issue was the incorrect company ID being used initially, which was identified as belonging to Sound Agriculture Company instead of Lashify Inc. This was due to a mistake in the information provided in the ticket.",
    "steps_taken": "The issue was resolved by updating the ticket with the correct company ID for Lashify Inc. The correct ID was confirmed and updated in the ticket, allowing the process to proceed as planned.",
    "data_models": "[]"
  },
  "BENINTEG-2098": {
    "key": "BENINTEG-2098",
    "issue": "The UHC prime EDI file feed for Retrium Inc needs to be set up for production to run weekly on Wednesdays.",
    "issue_summary": "The UHC prime EDI file feed for Retrium Inc has been approved for production, and the setup needs to be configured to run weekly on Wednesdays.",
    "rca": "The cut over to production was done using a webscript.",
    "steps_taken": "The production setup for the UHC prime EDI file feed was configured to run weekly on Wednesdays at 3am PST.",
    "data_models": "[]"
  },
  "BENINTEG-2097": {
    "key": "BENINTEG-2097",
    "issue": "Lambda, Inc./Cigna group needs their production file scheduled for transmission via Stedi, with a live date set for October 01, 2024.",
    "issue_summary": "The Lambda, Inc./Cigna group has been approved for production, and there is a need to schedule the production file transmission via Stedi, with the expectation that the Rippling file will be live by the upcoming Tuesday.",
    "rca": "The issue was related to the cut over using a webscript as part of the support tool used.",
    "steps_taken": "The production file for the Lambda, Inc./Cigna group was scheduled to go live on October 01, 2024, and it was moved to the production-ready queue as per the comment by the creator.",
    "data_models": "[CompanyInsuranceInfo]"
  },
  "BENINTEG-2096": {
    "key": "BENINTEG-2096",
    "issue": "The client, Guru Technologies, has been approved for production with Cigna Facet and requires a production run to be scheduled for 10/01/2024.",
    "issue_summary": "Guru Technologies needs their insurance feed with Cigna Facet to go live on 10/01/2024, and the production run needs to be scheduled accordingly.",
    "rca": "The cut over to production is to be done using a webscript as part of the support tool used.",
    "steps_taken": "The feed is scheduled to go live on October 01, 2024, and it will be moved to the production-ready queue before that date.",
    "data_models": "[]"
  },
  "BENINTEG-2095": {
    "key": "BENINTEG-2095",
    "issue": "The issue involves the EDI implementation for M9 Solutions, LLC with Cigna Facets, where the client is approved for production, and the file needs to be moved to production with a set frequency of Tuesday 3am PT. The first production file is scheduled to be sent on 10/01/2024.",
    "issue_summary": "The EDI implementation for M9 Solutions, LLC with Cigna Facets requires moving the file to production and setting the frequency for file transmission. The first production file is scheduled for 10/01/2024.",
    "rca": "The root cause analysis indicates that the cut over to production was done using a webscript.",
    "steps_taken": "The steps involved moving the file to production and setting the transmission frequency as per the client's approval. The comment indicates a follow-up to ensure the file is sent on time.",
    "data_models": "[]"
  },
  "BENINTEG-2094": {
    "key": "BENINTEG-2094",
    "issue": "The issue involves the EDI implementation for Antenna Group Inc with Cigna Facets. The client is approved for production, but the production feed with Vericred is still active, preventing the move to Stedi.",
    "issue_summary": "Antenna Group Inc's EDI implementation with Cigna Facets is blocked because the production feed with Vericred is still active, preventing the transition to Stedi.",
    "rca": "The root cause of the issue is that the production feed with Vericred is still active, and Ideon has not expired the coverage period because the dental and vision file feed is not ready to move in-house. This is preventing the transition to Stedi.",
    "steps_taken": "The steps taken include logging a ticket with Vericred to discontinue the feed, confirming the expiration of the file feed on Vericred's end, and discussions with Cigna to have all lines of coverages moved at the same time. The Jira ticket is on pause until the group is ready to be moved.",
    "data_models": "[]"
  },
  "BENINTEG-2090": {
    "key": "BENINTEG-2090",
    "issue": "The employee requested to cancel their medical COBRA coverage effective 05/01/2024 while keeping the dental and vision COBRA coverage active. However, the COBRA cancellation request resulted in coverage end dates being populated for dental and vision coverage in the .JSON payload sent to Ideon, causing continuous termination of the employee's coverage on the file feed.",
    "issue_summary": "The COBRA cancellation request for medical coverage led to unintended coverage end dates for dental and vision in the JSON payload sent to Ideon, causing continuous termination issues.",
    "rca": "Manual ENG action needed since the feature request to update Rippling system logic to only pass coverage termination dates to Ideon if it is within 90 days of the current date has not been completed.",
    "steps_taken": "The engineering team manually removed the 12/31/2024 coverage end dates from the employee's dental and vision coverage information being sent to Ideon in the .JSON payload.",
    "data_models": "[]"
  },
  "BENINTEG-2087": {
    "key": "BENINTEG-2087",
    "issue": "There were about 90 dependents with gender errors on the Aetna PEO file with Noyo. The dependents' genders were being sent to Noyo with a 'U' for unknown gender, even though the genders were correct in Rippling's system.",
    "issue_summary": "Dependents' gender information was being incorrectly sent to Noyo with a 'U' for unknown gender, despite being correct in Rippling's system. This was due to the 'legalSex' field being null for some members, and the fallback to 'gender' not functioning as expected.",
    "rca": "The root cause was identified as the 'legalSex' field being null for some members. Although a fallback to 'gender' was implemented, it was not functioning correctly for these members. The issue was traced back to members being added before a code update in 2022 that synced 'legalSex' and 'gender'.",
    "steps_taken": "The code was updated to fall back to 'gender' in case 'legalSex' is not present. A workaround was implemented to unblock the feed, and a sprint task was planned to migrate older members to have 'legalSex' populated. The relevant code pointers were shared for context.",
    "data_models": "[employee_enrollment_event_models]"
  },
  "BENINTEG-2084": {
    "key": "BENINTEG-2084",
    "issue": "The issue faced was that all employees of Boyce Corporation had their Guardian enrollments wiped out when transitioning from one instance of the company to another due to a Rippling-Noyo/Guardian incompatibility issue. This particularly affected PEO employees transitioning between multiple EIN affiliates on the same date, causing a lapse in coverage.",
    "issue_summary": "The issue was caused by a Rippling-Noyo/Guardian incompatibility that resulted in the wiping out of Guardian enrollments for employees transitioning between company instances, particularly affecting PEO employees moving between multiple EIN affiliates on the same date.",
    "rca": "The root cause of the issue was identified as a Rippling-Noyo/Guardian incompatibility. When employees transitioned from one instance of the company to another, the system treated them as different employees, leading to the wiping out of their Guardian enrollments. The system did not support combining coverages for these employees, and multi-entity transitions were not well-supported. This resulted in a lapse in coverage as the original effective date was overwritten by the new effective date.",
    "steps_taken": "To resolve the issue, a manual script was run to replace the start date with the original effective date for Ana-Sofia Cielo. The script created a Noyo member snapshot with the corrected effective date and sent it to Noyo. However, this was acknowledged as a non-scalable solution, and further discussions were planned to find a long-term fix.",
    "data_models": "[NoyoMemberSnapshot, NoyoMemberSnapshotController, NoyoApi, NoyoMember]"
  },
  "BENINTEG-2082": {
    "key": "BENINTEG-2082",
    "issue": "The production file for the group 'Gradual' with Group ID '06Q8983' and Carrier 'UHC Prime' was not scheduled as expected, causing a delay in the transmission of insurance benefits.",
    "issue_summary": "The production file for the group 'Gradual' was not scheduled due to a discrepancy in the carrier transition, requiring manual intervention to send the first production file.",
    "rca": "The root cause of the issue was related to the use of a support tool, specifically a cut over using a webscript, which led to the production state not being updated correctly, resulting in the need for manual intervention.",
    "steps_taken": "The first production file was manually sent, and it was confirmed that the previous state had expired. The scheduling of the production file was planned to begin on 10/16 after manual intervention.",
    "data_models": "[]"
  },
  "BENINTEG-2081": {
    "key": "BENINTEG-2081",
    "issue": "Two employees had incorrect COBRA end dates in their file feed, which could not be removed via amendment in debuggers.",
    "issue_summary": "Incorrect COBRA end dates for two employees needed removal from Ideon data, impacting multiple employees from a group with recurring COBRA issues.",
    "rca": "The issue was due to a business logic change that required a temporary fix. The end dates were removed directly in Vericred, but the endDate still existed at Rippling's end, causing amendments to be generated.",
    "steps_taken": "The end dates were removed directly from Vericred. It was advised not to perform any amendments as it would bring back the endDate in the payload. A product task was created to handle this correctly in the future.",
    "data_models": "[]"
  },
  "BENINTEG-2080": {
    "key": "BENINTEG-2080",
    "issue": "Need to schedule a weekly EDI production file for Koala Health, Inc. with Cigna every Tuesday at 3 AM PST effective from 10/01/2024.",
    "issue_summary": "The issue was to set up a weekly EDI production file schedule for Koala Health, Inc. with Cigna, which required tooling to be done.",
    "rca": "The root cause was identified as the need for tooling to schedule the EDI production file.",
    "steps_taken": "The issue was addressed and resolved, as indicated by the comment stating 'This is done, closing this'.",
    "data_models": "[]"
  },
  "BENINTEG-2079": {
    "key": "BENINTEG-2079",
    "issue": "Groups moving to PEO using snapshot aren't going to Noyo correctly, causing missed enrollments and escalations.",
    "issue_summary": "Groups transitioning to PEO are not being processed correctly by Noyo as the snapshots are being sent as 'rate change' instead of 'open enrollment', leading to missed enrollments.",
    "rca": "This was most likely a false alarm from Guardian's side. They had flagged that the PEO groups were not going to Guardian, but it was confirmed with Noyo that they have been going as usual.",
    "steps_taken": "The issue was investigated by communicating with Noyo and Guardian. It was confirmed that the groups were being processed correctly by Noyo. A script was run to identify companies that joined PEO on specific dates to ensure all were processed. The issue was monitored and spot-checked to confirm resolution.",
    "data_models": "[PeoClientTransition, PeoEntityInstance]"
  },
  "BENINTEG-2078": {
    "key": "BENINTEG-2078",
    "issue": "The group 'Rearc' has been approved for production with Cigna, but there is a need to cut over using a webscript.",
    "issue_summary": "The group 'Rearc' has been approved for production with Cigna, and the cut over process needs to be executed using a webscript.",
    "rca": "The issue was related to the cut over process which required the use of a webscript as part of the support tool.",
    "steps_taken": "The steps involved executing the cut over process using a webscript as specified in the RCA.",
    "data_models": "[]"
  },
  "BENINTEG-2076": {
    "key": "BENINTEG-2076",
    "issue": "The issue involves compound planning for a company with ID 61df898255858f9aeb16317c using the UHC Prime carrier, with a frequency set for weekly on Wednesday at 3AM PST.",
    "issue_summary": "The issue is related to setting up compound planning for a company using UHC Prime carrier, requiring a new support tool to be created for the process.",
    "rca": "The root cause analysis indicates that a new support tool needs to be created to handle the compound planning process for the UHC Prime carrier.",
    "steps_taken": "A new support tool was created to address the issue, and it was requested to validate the changes on the next Tuesday file.",
    "data_models": "[]"
  },
  "BENINTEG-2075": {
    "key": "BENINTEG-2075",
    "issue": "The Sound Agriculture Company/Cigna group needs to have their production file scheduled for transmission, but there is a need for a tool to facilitate this process.",
    "issue_summary": "The Sound Agriculture Company/Cigna group has been approved for production, and there is a need to schedule the production file transmission. However, there is a requirement for a tool to manage this process effectively.",
    "rca": "The root cause of the issue is the absence of a tool to manage the scheduling and transmission of production files for the Sound Agriculture Company/Cigna group.",
    "steps_taken": "The ticket was moved from Triage to Open by the support team, and the necessary actions were taken to complete the task, after which the ticket was closed.",
    "data_models": "[]"
  },
  "BENINTEG-2074": {
    "key": "BENINTEG-2074",
    "issue": "The EDI implementation for Summersalt, Inc. with Cigna Facets is pending due to an existing production connection with Cigna Vericred that cannot be cut over yet.",
    "issue_summary": "The EDI implementation for Summersalt, Inc. with Cigna Facets is delayed because the existing connection with Cigna Vericred is still in production and cannot be transitioned yet.",
    "rca": "The root cause of the delay is the existing production connection with Cigna Vericred, which is still active and cannot be cut over to the new Cigna Facets connection. Additionally, the Vericred connection has expired, which needs to be addressed before proceeding.",
    "steps_taken": "The team is monitoring the situation and plans to check the status of the Cigna Vericred connection to determine when it can be cut over. They are also awaiting confirmation on the completion of the transition to ensure the file is sent on time.",
    "data_models": "[]"
  },
  "BENINTEG-2073": {
    "key": "BENINTEG-2073",
    "issue": "Quartzy, Inc. needed to move their EDI file for Cigna Facets to production and set the frequency for file transmission, but the existing Cigna Vericred connection was still in production, blocking the cutover.",
    "issue_summary": "Quartzy, Inc. required the EDI file for Cigna Facets to be moved to production with a set frequency, but the existing Cigna Vericred connection in production was preventing the cutover.",
    "rca": "The issue was caused by the existing Cigna Vericred connection still being in production, which blocked the cutover to the new EDI implementation using a webscript.",
    "steps_taken": "The team planned to check the status of the Cigna Vericred connection and ensure it was discontinued before proceeding with the cutover. They communicated the need to discontinue the file feed in the Vericred system and awaited confirmation of completion to proceed with sending the file.",
    "data_models": "[]"
  },
  "BENINTEG-2071": {
    "key": "BENINTEG-2071",
    "issue": "The file submission in Retool for Perkins & Co / Cigna is stuck in 'INIT' status, and no file is being generated despite multiple attempts.",
    "issue_summary": "The file submission process in Retool is not generating files due to an issue with employee HRIS role missing a startDate, causing the process to be stuck in 'INIT' status.",
    "rca": "The root cause of the issue was identified as the absence of a startDate in the employee HRIS role, which is necessary for the file generation process. Additionally, the issue was related to excluding old SLIs.",
    "steps_taken": "The issue was investigated, and it was identified that the missing startDate for the employee HRIS role was causing the problem. A pull request was raised to address this issue, and once the changes were deployed, the problem was resolved.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-2070": {
    "key": "BENINTEG-2070",
    "issue": "Several employees completed New Hire events in Rippling, but no forms were generated for the carrier 90 Degree Benefits. The status showed 'awaiting selection' and the Insurance EE debugger indicated that employees made selections, but forms were not generated.",
    "issue_summary": "Forms were not generated for 90 Degree Benefits after employees completed New Hire events, due to the forms copier not being used after the forms were updated.",
    "rca": "The root cause of the issue was that the forms copier wasn't used after the forms were updated, making them unavailable in Rippling.",
    "steps_taken": "The forms for NC were copied, and Isaiah's form was generated successfully. The forms were then regenerated for the indicated employees, and they were generated successfully. However, the debugger did not indicate that the forms were emailed to the carrier. It was suggested to submit the forms manually via the Benefits Admin app > Upcoming events tab.",
    "data_models": "[]"
  },
  "BENINTEG-2069": {
    "key": "BENINTEG-2069",
    "issue": "Missing SSN for Naveen Karthikeyan and missing benefit plan termination dates for multiple employees causing data validation errors with OneKonnect, preventing submission of the mapping form.",
    "issue_summary": "The issue was caused by missing SSN for Naveen Karthikeyan and missing benefit plan termination dates for several employees, leading to data validation errors with OneKonnect and blocking the submission of the mapping form.",
    "rca": "The root cause was identified as missing SSN for Naveen Karthikeyan and missing benefit plan termination dates for several employees. The termination SLI (SubscriberLineInfo) was not created in time before sending datasets to EBN, resulting in sending a termination date without a benefit termination date. This was due to the termination SLI being created from an asynchronous job, which sometimes did not complete in time.",
    "steps_taken": "To resolve the issue, a fix was implemented and merged to ensure that the termination SLI is created in time before sending datasets to EBN. The fix was deployed to production, and the issue was monitored to ensure resolution. The fix PR link is: https://github.com/Rippling/rippling-main/pull/274890.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-2068": {
    "key": "BENINTEG-2068",
    "issue": "The termination form for employee Jesse Han McMillin was sent late to BCBS (TX), resulting in the carrier not accepting the termination as of 12/30/2023. Consequently, the company was charged an extra month of premium for the employee.",
    "issue_summary": "The BCBS (TX) termination form for employee Jesse Han McMillin was sent 8 days late, causing the carrier to not accept the termination as of 12/30/2023, leading to an extra month of premium being charged.",
    "rca": "The delay in submission of the BCBS (TX) termination form was due to a company-wide incident during that period, which caused forms not to be sent on time. Although the form was generated on 12/29/2023, it was not submitted until 01/08/2024.",
    "steps_taken": "The team confirmed the employee's termination details and checked the object history for the BCBS task, which showed the form was generated on 12/29/2023 but submitted late due to an incident. The incident was identified as the cause of the delay, and the team discussed compensating the client for the extra premium paid.",
    "data_models": "[PendingAction]"
  },
  "BENINTEG-2065": {
    "key": "BENINTEG-2065",
    "issue": "The Ideon cleanup step for Cloudbakers LLC's Blue Cross Blue Shield connection is failing, resulting in the connection not reflecting as in production for the customer.",
    "issue_summary": "The Ideon cleanup step is failing due to a bug where the system returns two BaseCompanyCarrierTransmission objects instead of one, causing a bad request error.",
    "rca": "The root cause of the issue was identified as the presence of multiple BaseCompanyCarrierTransmission objects for the same company and carrier, which should not happen. This was due to a special case handling bug.",
    "steps_taken": "The issue was resolved by identifying the duplicate BaseCompanyCarrierTransmission objects and ensuring that only one object is returned for the given company and carrier. The code snippet used to debug was:\n\n```python\ntransmission = BaseCompanyCarrierTransmission.get_or_none(company=company, carrier=carrier)\n```\n\nThis was returning two objects instead of one. The fix involved ensuring that the query returns only one object:\n\n```python\ncarrier = \"5a656522d2a5f85842cb4887\"\ncompany = \"612562cc5b0fa40dfde52fc8\"\nreturn BaseCompanyCarrierTransmission.objects.filter(company=company, carrier=carrier)\n```",
    "data_models": "[BaseCompanyCarrierTransmission]"
  },
  "BENINTEG-2064": {
    "key": "BENINTEG-2064",
    "issue": "Hazel Health, Inc was onboarded but encountered a transmission error when attempting to generate a file due to a validation error related to plan coverage description length.",
    "issue_summary": "Hazel Health, Inc faced a transmission error due to a validation error where the plan coverage description was shorter than 8 characters. Additionally, only 3 out of 6 Cigna plans were mapped, causing the error.",
    "rca": "The root cause of the issue was that the company is a Multi EIN company, and currently, the system does not support Multi EIN files or integration. Additionally, the client did not want the remaining plans included in the file feed as they were for a subdivision of the company under another policy number.",
    "steps_taken": "The issue was identified as related to the account structure where only 3 out of 6 plans were mapped. It was noted that the remaining plans were not to be included as they were for a different subdivision. The status was reverted to 'in progress' due to the client's request. It was also highlighted that Multi EIN groups should not be migrated as the system does not support them. The task was assigned for a production enhancement.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2056": {
    "key": "BENINTEG-2056",
    "issue": "The EDI file for Prefect Technologies, Inc. with Cigna Facets needs to be moved to production and set to the specified frequency, but there is a concern about the discontinuation of the file feed in the Vericred system.",
    "issue_summary": "The EDI implementation for Prefect Technologies, Inc. with Cigna Facets needs to be moved to production, but there is an issue with the file feed being discontinued in the Vericred system.",
    "rca": "The root cause of the issue is related to the cut over using a webscript, which led to the discontinuation of the file feed in the Vericred system.",
    "steps_taken": "The steps involve moving the EDI file to production and setting the frequency as specified. Additionally, there is a need to address the discontinuation of the file feed in the Vericred system.",
    "data_models": "[]"
  },
  "BENINTEG-2055": {
    "key": "BENINTEG-2055",
    "issue": "The group set up their insurance enrollment using an incorrect address in Illinois instead of California, leading to incorrect forms being generated for the wrong state.",
    "issue_summary": "The insurance enrollment was set up with an incorrect address in Illinois instead of California, causing forms to be generated for the wrong state.",
    "rca": "The root cause was the use of an incorrect address during the setup of the insurance enrollment, which was not updated in time due to the group being in the middle of enrollment. This led to forms being generated for the wrong state.",
    "steps_taken": "The address was updated for all active lines of coverage using a script. The script updated the address in the InsuranceCompanyCarrierLineInfo model and regenerated forms for the affected EnrollmentEvents. Additional scripts were run to update the carrier references and regenerate forms for all EnrollmentEvents. The process involved multiple iterations to ensure all pending actions and forms were correctly updated.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyEnrollmentEvent, EnrollmentEvent, USBenefitsCarrier, InsuranceCompanyPlanInfo, PendingAction]"
  },
  "BENINTEG-2048": {
    "key": "BENINTEG-2048",
    "issue": "EE's termination date is not aligning with the benefits termination date, causing a 1-day coverage discrepancy. The system is triggering the benefits termination on 9/24 even though Medical is being termed on 9/23.",
    "issue_summary": "The termination date for an employee's benefits is not aligning with the expected termination date, resulting in an incorrect 1-day coverage. The termination policy should align with the termination date for all lines of coverage.",
    "rca": "The issue was caused by a manual data entry error with the SubscriberLineInfo (SLI) date for the termination event. The system treated the employee as if they worked on the termination date, making them eligible for benefits through that day, and the termination event for their insurance was effective starting the following day.",
    "steps_taken": "The effective date of the termination event was updated to 9/23 to successfully terminate the coverage for that day. The PendingAction for UHC was performed ahead of time using the following code snippet:\n\n```python\npa = PendingAction.objects.filter(id=\"66ed38a676c4901b5d6cbde7\")[0]\nreturn pa.performAction(checkShouldPerformAction=False)\n```\nThe integrations team was tasked with handling carrier communications to ensure that the employee will not have any valid coverage on 9/23.",
    "data_models": "[SubscriberLineInfo, PendingAction]"
  },
  "BENINTEG-2045": {
    "key": "BENINTEG-2045",
    "issue": "The Ideon connection for ATHENAPSYCH LLC with Cigna needs to be cancelled by 9/24, but the Vericred feed is still in production, preventing the cutover.",
    "issue_summary": "The Ideon connection for ATHENAPSYCH LLC with Cigna was supposed to be cancelled by 9/24, but the Vericred feed was still in production, causing a delay.",
    "rca": "The delay in cancelling the Ideon connection was due to the Vericred feed still being in production. Additionally, a follow-up question from Ideon was missed due to the responsible person being out of office (OOO).",
    "steps_taken": "Feedback was provided to Ideon after the missed follow-up question was addressed. Ideon confirmed the cancellation on their side. The operations team was then informed that they could proceed with the cutover, marking the task as not requiring further engineering input.",
    "data_models": "[]"
  },
  "BENINTEG-2044": {
    "key": "BENINTEG-2044",
    "issue": "Rippling is transitioning from PEO and needs to establish an API feed to manage Guardian benefits via Noyo. The process involves sending terminations for existing employees, terminating old PEO feeds, pulling in new Rippling group data from Noyo, building carrier configurations, and sending a snapshot census to ensure data accuracy.",
    "issue_summary": "Rippling is leaving the PEO and needs to implement a new Noyo API setup to manage Guardian benefits, requiring terminations to be sent before new enrollments to prevent duplicate enrollments.",
    "rca": "The task is to implement a new Noyo setup for Rippling as they transition from PEO, requiring visibility and coordination to ensure accurate data transmission and prevent duplicate enrollments.",
    "steps_taken": "1. Sent terminations for existing employees with the existing NCC.\n2. Deleted the NCC for Rippling.\n3. Set up basic NCC and plan mappings for the new group.\n4. Sent new enrollments with the new NCCs.\n5. Used the following code snippet for plan mapping:\n```python\nmapping = {\n    \"Guardian Voluntary Life\": [\"1ce53409-29b8-45ee-a9e0-df7b7361082c\",\n                                \"5911a33f-a244-4a7a-805c-3b3cf28fa543\",\n                                \"983d4143-dbef-4a7b-bec8-06027304eb8c\",\n                                \"7661e291-b382-4deb-b118-aef5cd39b593\",\n                                \"afd73e89-acfc-4304-9aac-7c17e20a1c47\",\n                                \"f3623159-3792-47c3-bc71-67d18a425273\"],\n    \"Guardian Long-Term Disability\": [\"100bce52-c386-46fd-add3-0be30a941f99\"],\n    \"Guardian Basic Life/AD&D\": [\n      \"bbd54206-92e0-4a59-aa76-314566dddf75\",\n      \"bf31f2b0-fcdd-462a-ab6a-fb016b140734\"\n    ],\n    \"Guardian Short-Term Disability (CA only)\": [\"9aad6a2a-3ebf-47c1-8227-b5c7a7adf22d\"],\n    \"Guardian Short-Term Disability (All Others)\": [\"9aad6a2a-3ebf-47c1-8227-b5c7a7adf22d\"],\n    \"Guardian Vision\": [\"1d9d0d38-be15-4efe-aa69-ea910517b323\", \"babf102e-8566-4728-8745-03382cfca057\"],\n    \"Guardian Dental PPO Base (All Others)\": [\"823481b9-d4e1-4147-939e-4723f6569857\"],\n    \"Guardian Dental PPO Base (TX Only)\": [\"7bd345fc-d9e6-4d26-bd7e-82aec6ba67a9\"],\n    \"Guardian Dental PPO Buy Up (All Others)\": [\"419f8eb2-43f9-4daa-a9e8-dab1a798f80f\"],\n    \"Guardian Dental PPO Buy Up (TX Only)\": [\"859face8-b069-43ae-a13d-6489bda3773c\"]\n  }\n```",
    "data_models": "[InsuranceCompanyCarrierLineInfo, NoyoCompanyPlanInfo, PendingAction]"
  },
  "BENINTEG-2043": {
    "key": "BENINTEG-2043",
    "issue": "Employee selected a plan change with his QLE, but the plan change was not mapped on the form, causing the plan change to be missed during processing.",
    "issue_summary": "The plan change selected by the employee during a QLE was not reflected in the form due to a race condition between form generation and SubscriberLineInfo (SLI) changes.",
    "rca": "The root cause of the issue was identified as a race condition where the forms were generated two minutes before the employee actually changed plans. This led to the plan change not being captured in the form.",
    "steps_taken": "The issue was identified by reviewing the PendingAction and SubscriberLineInfo history. It was suggested to either prevent plan changes if forms are already generated or to regenerate forms if plans are changed. The RCA was to be registered and moved to the benadmin employee team for further action.",
    "data_models": "[PendingAction, SubscriberLineInfo]"
  },
  "BENINTEG-2042": {
    "key": "BENINTEG-2042",
    "issue": "The production file for Getaround Operations inc with Cigna FACET was stuck with the 'INIT' status and needed to be sent out on the same day.",
    "issue_summary": "The production file for Getaround Operations inc with Cigna FACET was not delivered as it was stuck in 'INIT' status due to a missed step in accepting the last ingestion file.",
    "rca": "The root cause of the issue was a missed step in accepting the last ingestion file during the switch over, which led to the failure of the production file delivery.",
    "steps_taken": "A new file was sent and the switch over was completed, resolving the issue. The ticket was closed as no further action was needed from the engineering team.",
    "data_models": "[]"
  },
  "BENINTEG-2039": {
    "key": "BENINTEG-2039",
    "issue": "The transaction via Noyo for employee Michele Rager failed due to a mapping error related to benefit class, resulting in a 422 status from Noyo. The Ops carrier connections team is unable to edit the mapping for the PEO, requiring engineering intervention.",
    "issue_summary": "A mapping error occurred during a Noyo transaction for employee Michele Rager, resulting in a 422 status due to multiple benefit_class options for the group, necessitating an engineering fix.",
    "rca": "The issue was caused by a manual data entry error where carrier classifications were set up with multiple values, one of which was not in SLIs, causing the benefit class identifier to be empty. The carrier classifications were created two years ago, and the reason for their setup is unclear.",
    "steps_taken": "The duplicate carrier classification was identified and deleted using the following code snippet:\n\n```python\ncc = CarrierClassification.objects.get(id=\"61b22efe300c9dc9c0be7e45\")\nreturn cc.delete()\n```\n\nThis resolved the issue.",
    "data_models": "[CarrierClassification]"
  },
  "BENINTEG-2037": {
    "key": "BENINTEG-2037",
    "issue": "The eligibility file structure sent from Rippling PEO to SpringHealth via Noyo is missing the Employer name for each member, causing issues in loading members automatically and affecting timely and accurate reporting.",
    "issue_summary": "The eligibility file sent from Rippling PEO to SpringHealth via Noyo lacks the Employer name, causing issues in member loading and reporting.",
    "rca": "The eligibility file structure currently uses a unique group code/identifier instead of the Employer name, which is required by SpringHealth for efficient processing. The file is managed by Guardian, and Rippling needs to update the file format to include the Employer name.",
    "steps_taken": "The issue was escalated to the Benefits Carrier Connections team. It was identified that the file is managed by Guardian, and discussions were held with Noyo and Guardian to determine the best way to include the Employer name in the file. It was decided that Noyo would take the lead in supplying the file, and Rippling would work on updating the file format to include the Employer name.",
    "data_models": "[]"
  },
  "BENINTEG-2036": {
    "key": "BENINTEG-2036",
    "issue": "The group Effectiv (Abra Innovation, Inc) needs to have their file feed moved to production for the carrier UHC USP.",
    "issue_summary": "The group Effectiv (Abra Innovation, Inc) has been approved for production, and the file feed needs to be moved to production for the carrier UHC USP. The first file is scheduled to be sent on 9/25/2024.",
    "rca": "The cut over to production was done using a webscript as part of the support tool used.",
    "steps_taken": "The group was approved for production, and the necessary steps were taken to schedule the file feed to be sent on the specified date and time.",
    "data_models": "[]"
  },
  "BENINTEG-2035": {
    "key": "BENINTEG-2035",
    "issue": "The group 'Turquoise Health Co.' has been approved for production with Cigna, but there is a need to add the company ID '6565359a3f5359a2e705c2e7' to the system for processing.",
    "issue_summary": "Turquoise Health Co. has been approved for production with Cigna, but the company ID needs to be added to the system for processing.",
    "rca": "The root cause of the issue is that the company ID '6565359a3f5359a2e705c2e7' for Turquoise Health Co. was not added to the system, which is necessary for processing with the carrier Cigna.",
    "steps_taken": "The necessary step is to add the company ID '6565359a3f5359a2e705c2e7' for Turquoise Health Co. to the system to ensure proper processing with Cigna.",
    "data_models": "[]"
  },
  "BENINTEG-2034": {
    "key": "BENINTEG-2034",
    "issue": "The group 'Be Chipper Inc.' needs to be moved to a file feed production with United Healthcare.",
    "issue_summary": "The group 'Be Chipper Inc.' has been approved for production with United Healthcare and needs to be moved to a file feed production, with the first file scheduled to be sent on 9/25/2024.",
    "rca": "The cut over to production was done using a webscript.",
    "steps_taken": "The group was approved for production and scheduled to send the first file on 9/25/2024 at the specified frequency and time.",
    "data_models": "[]"
  },
  "BENINTEG-2032": {
    "key": "BENINTEG-2032",
    "issue": "Guardian reported not receiving new PEO client data via API since 8/13. Specific groups were either not initiated under PEO or not initiated at all.",
    "issue_summary": "Guardian has not received new PEO client data since 8/13 due to some groups not being initiated correctly under PEO or not initiated at all.",
    "rca": "The system was working as expected, but there was a misunderstanding or wrong expectation regarding the initiation of groups under PEO.",
    "steps_taken": "The issue was identified as a duplicate and related to another ticket (PT-17280). The ticket was closed due to lack of activity.",
    "data_models": "[]"
  },
  "BENINTEG-2031": {
    "key": "BENINTEG-2031",
    "issue": "The dataset for People Center Inc. with BCBS CA was not being sent to OneKonnect since 9/11, causing unreliable test files and larger issues in production due to the lack of nightly data refresh.",
    "issue_summary": "The dataset for People Center Inc. with BCBS CA was not being sent to OneKonnect since 9/11 due to optimizations for EBN snapshot generation, causing issues in production.",
    "rca": "The root cause was identified as optimizations for EBN snapshot generation that were incorrectly implemented, leading to the dataset not being sent.",
    "steps_taken": "The issue was investigated by reviewing logs and PRs. It was initially suspected that a recent PR might have caused the issue, but further investigation revealed that the errors started before the PR was deployed. It was then identified that the issue was related to the renewal process due on October 1st, 2024. The last snapshot was sent successfully, and the RCA was fixed, leading to the closure of the ticket.",
    "data_models": "[]"
  },
  "BENINTEG-2030": {
    "key": "BENINTEG-2030",
    "issue": "Employee does not have a cancellation event for PEO coverage, preventing the Noyo amendment from being pushed. The member also lacks a Noyo ID.",
    "issue_summary": "The employee was enrolled in coverage effective 05/01/2024 but did not have a cancellation event for PEO coverage, which is necessary for processing the Noyo amendment. Additionally, the member did not have a Noyo ID.",
    "rca": "The root cause was identified as the use of the Vericred retool to send a manual amendment, which did not automatically generate a cancellation event for the group PEO when it was terminated.",
    "steps_taken": "A custom Vericred QLE was submitted, and the end date was sent over to resolve the issue. The JSON payload used was: \n```json\n{\n\t\"coverage_period_id\": \"e079bcbc-78f0-4318-b30c-0da694dd88e5\",\n\t\"date\": \"2024-04-22\",\n\t\"eligibility_start_date\": \"2024-05-01\",\n\t\"enrollment_received_date\": \"2024-04-25\",\n\t\"enrollment_signature_date\": \"2024-04-22\",\n\t\"event\": \"new_hire\",\n\t\"external_identifier\": \"66181e2f46f71af0855d14e8\",\n\t\"plan_elections\": {\n\t\t\"medical\": {\n\t\t\t\"coverages\": [\n\t\t\t\t{\n\t\t\t\t\t\"member_id\": \"d4e28e0e-2ed7-4862-89a8-1d1e8ecf0982\",\n\t\t\t\t\t\"plan_id\": \"8fcb0ee8-0328-45a9-9bd1-f59fee6429ee\",\n\t\t\t\t\t\"start_date\": \"2024-05-01\",\n                                                \"end_date\":\"2024-05-31\",\n\t\t\t\t\t\"status\": \"employer_sponsored\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"type\": \"election\"\n\t\t}\n\t}\n}\n```",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-2021": {
    "key": "BENINTEG-2021",
    "issue": "Duplicate lines of coverage (LOC) for HSA plans were being reported, causing issues with plan mapping and integration with Noyo.",
    "issue_summary": "The issue involved duplicate HSA plan lines due to missing start dates and salary information for employees, which was resolved by enabling a feature flag and sending amendments.",
    "rca": "The root cause was identified as missing start dates and salary information for employees, which was resolved by enabling the feature flag `benefits-integration-noyo-snapshot-salary-all-or-none`. Additionally, there was an issue with older entities causing duplicate HSA plans.",
    "steps_taken": "The steps taken to resolve the issue included enabling the feature flag to address missing salary information, setting up Noyo connections for specific companies, unmapping existing HSA plan mappings, implementing fixes from Noyo's end, and remapping plans. A census snapshot was sent to verify the solution.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2020": {
    "key": "BENINTEG-2020",
    "issue": "An employee at Yieldstreet Inc. has two active profiles with conflicting benefits information, causing daily amendments in the 'Vericred Amendment' tab of the EE debugger page. The system does not know which profile should be the source of truth, and the profiles are not showing up in the 'Duplicate Profiles From Vericred' retool for resolution.",
    "issue_summary": "Duplicate employee profiles with conflicting benefits information are not flagged by the retool, causing daily amendments and confusion about the source of truth for benefits.",
    "rca": "The root cause analysis indicates that the system is working as expected, but there was a wrong expectation from the operations team regarding the visibility of duplicate profiles in the retool.",
    "steps_taken": "The audit item resolved itself without intervention, and the issue was closed. If the problem reoccurs and cannot be resolved without engineering help, the Jira will be reopened.",
    "data_models": "[]"
  },
  "BENINTEG-2019": {
    "key": "BENINTEG-2019",
    "issue": "The issue involves the company GPI USA with ID 5ebf201b503fc75e62736f25 and the carrier Cigna, with a frequency set for Tuesdays at 3am PST.",
    "issue_summary": "The issue is related to the integration process for GPI USA with Cigna, specifically involving the Stedi component, and the need to cut over using a webscript.",
    "rca": "The root cause analysis indicates that the issue was due to the need to cut over using a webscript, which falls under the category of 'Support Tool Used'.",
    "steps_taken": "The ticket was initially not triaged by Support as it was created by Ops. A request was made to move the ticket from 'Triage' to 'Open'.",
    "data_models": "[]"
  },
  "BENINTEG-2018": {
    "key": "BENINTEG-2018",
    "issue": "The start date for a terminated Cobra member, Alina Tulman, needs to be added to her profile to send enrollment details to Noyo. The admin cannot complete this task.",
    "issue_summary": "The start date for the terminated Cobra member Alina Tulman was missing, preventing the transmission of enrollment details to Noyo.",
    "rca": "The start date was missing for the employee, which was added by the EE team. Additionally, the salary was missing for this employee, which was fixed by enabling the feature flag `benefits-integration-noyo-snapshot-salary-all-or-none`. An amendment was sent for the employee as well.",
    "steps_taken": "The engineering team used a script to update the start date for the employee. The script involved fetching the role using `RoleWithCompany.objects.get(id=\"65ce6b4da54628f39f85ed9a\")`, asserting the start date was None, setting the start date to December 15, 2021, and updating the role using `direct_update_role_and_friends`. The end date was corrected, and a snapshot was sent to Noyo.",
    "data_models": "[RoleWithCompany]"
  },
  "BENINTEG-2017": {
    "key": "BENINTEG-2017",
    "issue": "The group Redjack LLC has been approved for production with Cigna, but there seems to be a procedural issue with the triaging of the Jira ticket.",
    "issue_summary": "The group Redjack LLC has been approved for production with Cigna, but there was a procedural issue where the support team did not triage the Ops-created Jira ticket as expected.",
    "rca": "The root cause of the issue was the use of a support tool, specifically a cut over using a webscript, which may have led to the procedural oversight.",
    "steps_taken": "The issue was addressed by notifying the responsible party to move the ticket status from 'Triage' to 'Open'.",
    "data_models": "[]"
  },
  "BENINTEG-2016": {
    "key": "BENINTEG-2016",
    "issue": "The issue involves scheduling a weekly EDI production file for the group Ammortal with UHC, to be sent every Wednesday at 3 AM PST starting from September 25, 2024.",
    "issue_summary": "The task is to set up a weekly EDI file transmission for Ammortal with UHC, scheduled for Wednesdays at 3 AM PST, using the Stedi component.",
    "rca": "The root cause analysis indicates that the cut over was done using a webscript, which is related to the support tool used.",
    "steps_taken": "The steps involved scheduling the EDI production file to be sent weekly on Wednesdays at 3 AM PST, starting from September 25, 2024.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2015": {
    "key": "BENINTEG-2015",
    "issue": "The start date for a terminated Cobra member needs to be added to their profile to send enrollment details to Noyo. The admin cannot complete this action.",
    "issue_summary": "The start date for a terminated Cobra member was missing, preventing the transmission of enrollment details to Noyo.",
    "rca": "The start date was missing for the employee, which was added by the employee team. Additionally, the salary was missing for this employee, which was fixed by enabling the feature flag `benefits-integration-noyo-snapshot-salary-all-or-none`. An amendment was sent for the employee as well.",
    "steps_taken": "The start date was updated using a script to directly update the role and friends. The script used was:\n\n```python\nfrom hris.services.role import direct_update_role_and_friends\nrole = RoleWithCompany.objects.get(id=\"6344c210aa8c8018e2e35d32\")\nstartDate = date(2018, 6, 11)\ndirect_update_role_and_friends(role.id, role.company.id, role_updates={\"startDate\": startDate})\nreturn role\n```\n\nThe start date was successfully updated, and an amendment was sent to Noyo.",
    "data_models": "[RoleWithCompany]"
  },
  "BENINTEG-2014": {
    "key": "BENINTEG-2014",
    "issue": "The issue involves the group Fishermen Labs LLC with Carrier UHC, where there seems to be a problem related to the cut over process using a webscript.",
    "issue_summary": "The issue is related to the cut over process for Fishermen Labs LLC with Carrier UHC, which was executed using a webscript.",
    "rca": "The root cause of the issue was identified as the use of a webscript for the cut over process.",
    "steps_taken": "The ticket does not provide specific steps taken to resolve the issue.",
    "data_models": "[]"
  },
  "BENINTEG-2011": {
    "key": "BENINTEG-2011",
    "issue": "OneKonnect notified that they did not receive the dataset, causing the 09/18/2024 Production file to fail to send for Personify Inc. with BCBS.",
    "issue_summary": "The dataset for Personify Inc. with BCBS failed to send via OneKonnect since 9/17/2024 due to missing broker information, causing a high business impact.",
    "rca": "The root cause was identified as the broker information being set to None, which is required for EBN snapshots to be sent successfully. Once the broker info was reset, the file transmission resumed.",
    "steps_taken": "The issue was resolved by resetting the broker information to a valid state, allowing the EBN snapshots to be sent successfully. The object history of CompanyInsuranceInfo was checked to confirm the changes.",
    "data_models": "[CompanyInsuranceInfo]"
  },
  "BENINTEG-2008": {
    "key": "BENINTEG-2008",
    "issue": "Employee Chelsea Grayson's coverage cannot be sent due to a plan mapping error with Noyo. The error message indicates a failure to find a matching Noyo plan mapping for the Rippling plan: PPO 250, line type: medical.",
    "issue_summary": "Plan mapping error with Noyo preventing the transmission of employee coverage for the PPO 250 medical plan.",
    "rca": "The issue was caused by older invalidated plans not being properly mapped in the Noyo system, leading to a failure in finding a matching plan mapping for the employee's coverage.",
    "steps_taken": "The issue was resolved by executing a script to delete the SubscriberLineInfo associated with the problematic InsuranceCompanyPlanInfo, allowing the amendment to be sent successfully. The script used was:\n\n```python\nicp = InsuranceCompanyPlanInfo.objects.get(id=\"669ff33542ea96b0aeb851b7\")\nsli = SubscriberLineInfo.objects.filter(company=icp.company, companyPlan=icp)\nreturn sli.delete()\n```",
    "data_models": "[InsuranceCompanyPlanInfo, SubscriberLineInfo]"
  },
  "BENINTEG-2007": {
    "key": "BENINTEG-2007",
    "issue": "The issue involves pushing a member's COBRA termination to Noyo for a PEO company, but the member lacks a Noyo ID. Additionally, there was a failure in submitting a snapshot due to a 422 error from Noyo related to invalid salary details.",
    "issue_summary": "The problem is related to handling an orphan PEO company where a COBRA termination needs to be pushed to Noyo, but the member does not have a Noyo ID. The submission failed due to a 422 error from Noyo regarding salary details.",
    "rca": "The root cause of the issue was the handling of an orphan PEO company that was not set up correctly. This led to a failure in submitting the snapshot to Noyo due to missing or invalid salary details.",
    "steps_taken": "The orphan company was set up using a webscript. However, while submitting the snapshot, a 422 error was encountered due to invalid salary details. The issue was then taken up by another team member, and the snapshot was successfully sent, resolving the issue.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-2003": {
    "key": "BENINTEG-2003",
    "issue": "Employee Erik Eppel's coverage cannot be sent due to an error in Beam plan mapping, despite having PEO coverage which does not include Beam plans.",
    "issue_summary": "The issue is that the employee's coverage cannot be transmitted due to a mismatch in Noyo plan mapping for the Beam SmartPremium Plus 2000-2000 dental plan, which is not applicable for the employee's PEO coverage.",
    "rca": "The root cause of the issue was that the amendment process was broken for operations, and it had to be sent manually.",
    "steps_taken": "The amendment was sent manually to resolve the issue. A snapshot was sent for the employee to assist in resolving the issue.",
    "data_models": "[InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-2002": {
    "key": "BENINTEG-2002",
    "issue": "The employee Tanveer Gill's salary information was not mapped to the PEO orphan account, causing a Noyo file feed connection error with a status of 422. This prevented the submission of the employee's coverage elections.",
    "issue_summary": "The issue was that the employee's salary information was not correctly mapped to the PEO orphan account, resulting in a Noyo file feed connection error due to incomplete salary details.",
    "rca": "The root cause was that Noyo did not accept the partial salary block, and there was a separate issue with the account identifier for COBRA orphan companies. Both issues were fixed, allowing the amendment to go through.",
    "steps_taken": "The PEO team confirmed that they do not populate the salary for all PEO orphan companies. A fix was implemented to handle PEO-orphan companies having no renewal trackers, and the changes were merged. The amendment was retried and successfully went through.",
    "data_models": "[CompanyInsuranceInfo, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-2000": {
    "key": "BENINTEG-2000",
    "issue": "OneKonnect notified that the dataset for RepEquity LLC was not received, causing the 09/17/2024 production file to fail to send. The dataset has been blocked since 9/11/2024.",
    "issue_summary": "The dataset for RepEquity LLC was not received by OneKonnect, causing a production file failure. The issue has persisted since 9/11/2024 due to a dataset blocker.",
    "rca": "The root cause was identified as a need for optimizations in handling EBN snapshots, which led to the dataset not being sent.",
    "steps_taken": "A fix was enabled for the company, and the last file was successfully sent on 20th September. The issue was resolved after the fix was applied, and the ticket was closed.",
    "data_models": "[]"
  },
  "BENINTEG-1999": {
    "key": "BENINTEG-1999",
    "issue": "OneKonnect notified that they did not receive the dataset, causing the 09/17/2024 production file for Nexamp Inc. with Delta Dental to fail. The error message 'The provided token has expired' was observed, leading to a high business impact as it is causing an increasing number of weekly production file failures.",
    "issue_summary": "The production file for Nexamp Inc. with Delta Dental failed to send on 09/17/2024 due to an expired token error, causing OneKonnect not to receive the dataset.",
    "rca": "The root cause of the issue was identified as a bug related to special case handling, where the token used for transmitting the dataset to OneKonnect was expired, leading to the failure of the production file transmission.",
    "steps_taken": "The issue was investigated by checking the carrier connections dashboard, where the expired token error was identified. The team confirmed that submissions for Delta Dental and other carriers were not missed. The error was intermittent, occurring randomly on certain days, particularly on scheduled production file days. The issue was linked to a bug tracked in another Jira ticket (BENINTEG-2525) for further investigation and resolution.",
    "data_models": "No specific data models were mentioned in the ticket or comments."
  },
  "BENINTEG-1998": {
    "key": "BENINTEG-1998",
    "issue": "OneKonnect did not receive the dataset for Scout Motors' Cigna production file on 09/17/2024, causing a failure in sending the production file.",
    "issue_summary": "The production file for Scout Motors with Cigna failed to send on 09/17/2024 because OneKonnect did not receive the dataset, and the carrier connections dashboard showed a 'The provided token has expired' error.",
    "rca": "The root cause of the issue was related to a token expiration error, which prevented the dataset from being sent to OneKonnect, resulting in the production file failure.",
    "steps_taken": "The issue was investigated by checking the carrier connections dashboard, which showed a token expiration error. Communication with OneKonnect was initiated to send the file as an off-cycle. Further investigation was requested to understand why the error keeps recurring.",
    "data_models": "[]"
  },
  "BENINTEG-1996": {
    "key": "BENINTEG-1996",
    "issue": "The issue involves a request to push an offline change for the dental coverage effective date to 06/01/2024 for Osso VR Inc with UnitedHealth Group. Attempts to push an amendment or re-ingest information to Ideon did not trigger any updates or changes.",
    "issue_summary": "The system was working as expected, but there was a request to change the dental coverage effective date to 06/01/2024, which was not being updated through the usual amendment or re-ingestion processes.",
    "rca": "The root cause analysis indicates that the system was working as expected. The system clubs effective dates if the plan is the same and the coverage is continuous or consecutive. The original coverage date was correct, and there was no system error.",
    "steps_taken": "Attempts were made to push an amendment and re-ingest information to Ideon, but these did not trigger any updates or changes. The admin completed an offline change to update the effective date to 06/01/2024.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-1994": {
    "key": "BENINTEG-1994",
    "issue": "Members being migrated to Aetna PEO are not connected due to the error: '2302 - enrollee plan number is not valid for this control-suffix-account.' Amendments cannot be pushed for these members.",
    "issue_summary": "Members migrating to Aetna PEO faced connection issues due to invalid enrollee plan numbers, blocking amendments.",
    "rca": "The issue was caused by an error in the Noyo plan number generation for Aetna, where the latest SubscriberLineInfo (SLI) being picked was invalidated, leading to incorrect plan numbers being used.",
    "steps_taken": "The debugging process involved verifying the correct plan numbers using the Aetna account structure sheet. It was found that the latest SLI being picked was invalid. The code was adjusted to prefer valid SLIs first. The method 'peo.peo_insurance.impl.us.peo_aetna.PeoAetna.getAdditionalCarrierClassificationsForNoyo' was identified as needing a fix to use the correct SLI. A fix was implemented and a pull request was made to ensure valid SLIs are preferred.",
    "data_models": "[SubscriberLineInfo, NoyoMemberSnapshotPayloadGenerator, Subscriber]"
  },
  "BENINTEG-1993": {
    "key": "BENINTEG-1993",
    "issue": "AgentSync Cigna Medical benefits are under California and the dental and vision plans are under Colorado. The file is only pulling the Medical benefits because it was onboarded with California Carrier ID. All benefits need to be sent on one file feed.",
    "issue_summary": "The issue is that the AgentSync Cigna Medical benefits are under California, while the dental and vision plans are under Colorado. The current system only pulls the Medical benefits due to the California Carrier ID, and there is a need to send coverages from multiple carrier IDs for one group in a single file feed.",
    "rca": "The root cause of the issue is a limitation in the current system that does not support sending coverages from multiple carrier IDs for one group in a single file feed. This requires a product enhancement to merge different carrier data into one file, especially when dealing with different line types.",
    "steps_taken": "The issue was assigned to a team member for a product enhancement to support merging different carrier data into one file. A feature ticket was requested to be created and linked to address this enhancement.",
    "data_models": "[]"
  },
  "BENINTEG-1992": {
    "key": "BENINTEG-1992",
    "issue": "The member's Qualifying Life Event (QLE) on 09/03/2024 to add his spouse was not processed by the carrier, and the necessary EDI and API information was not transmitted to Aetna and Guardian respectively. This was urgent as medication was needed that week.",
    "issue_summary": "The issue was that the member's QLE to add a spouse was not processed by the carrier due to pending actions not being sent during Open Enrollment, causing a delay in transmitting necessary EDI and API information to Aetna and Guardian.",
    "rca": "The root cause of the issue was identified as pending actions not being sent during Open Enrollment, which is a special case handling bug.",
    "steps_taken": "The steps taken to resolve the issue included filtering pending actions for the specific role and carrier, checking the state and event details, and performing the action to communicate the enrollment information to the carrier. Code snippets were used to filter and perform actions on pending actions for both Aetna and Guardian carriers.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-1991": {
    "key": "BENINTEG-1991",
    "issue": "The transmission for the group STODGE, INC. DBA POSTSCRIPT with Cigna was failing due to an error in getting the grouping strategy for the partner and company.",
    "issue_summary": "The issue was caused by a missing Stedi grouping configuration for the company and partner, leading to transmission failures.",
    "rca": "The root cause of the issue was a manual data entry error where the configuration was not created correctly via the tool. This was identified as an Ops Issue under the subcategory of Manual Data Entry Error.",
    "steps_taken": "The missing VendorPartnerPendingActionGroupingStrategy was created, which resolved the issue. Pending actions were then created successfully, and the files were sent on production without further issues.",
    "data_models": "[VendorPartnerPendingActionGroupingStrategy]"
  },
  "BENINTEG-1990": {
    "key": "BENINTEG-1990",
    "issue": "The issue is the need to set up weekly production files for Rabot Inc. with UHC Prime, scheduled for every Wednesday at 3 AM PST starting from 25/09/2024.",
    "issue_summary": "The ticket requires setting up a weekly EDI production file for Rabot Inc. with UHC Prime, but lacks clear instructions for the engineering team on what is required.",
    "rca": "The root cause analysis indicates that the cut over was done using a webscript, but the ticket lacks detailed information on what is required from the engineering team.",
    "steps_taken": "The steps taken include clarifying the requirement to schedule a weekly EDI production file on every Wednesday at 3 AM PST starting from 25/09/2024.",
    "data_models": "[]"
  },
  "BENINTEG-1989": {
    "key": "BENINTEG-1989",
    "issue": "The issue is the need to set up weekly production files for Product School Inc. with UHC Prime, scheduled for every Wednesday at 3 AM PST starting from 25/09/2024.",
    "issue_summary": "The ticket requires setting up a weekly EDI production file for Product School Inc. with UHC Prime, but lacks detailed information on what is required from engineering.",
    "rca": "The root cause analysis indicates that the cut over was done using a webscript, but the ticket lacks specific details on the engineering requirements for setting up the EDI file.",
    "steps_taken": "The steps taken include clarifying the requirement to schedule a weekly EDI production file on every Wednesday at 3 AM PST starting from 25/09/2024.",
    "data_models": "[]"
  },
  "BENINTEG-1988": {
    "key": "BENINTEG-1988",
    "issue": "The issue is the need to set up weekly production files for ORCHESTRA BIO, INC with UHC Prime, scheduled for every Wednesday at 3 AM PST starting from 25/09/2024.",
    "issue_summary": "The ticket involves setting up a weekly EDI production file for ORCHESTRA BIO, INC with UHC Prime, which needs to be scheduled to run every Wednesday at 3 AM PST starting from 25/09/2024.",
    "rca": "The root cause analysis indicates that the cut over was done using a webscript.",
    "steps_taken": "The steps involved scheduling a weekly EDI production file to be sent every Wednesday at 3 AM PST starting from 25/09/2024.",
    "data_models": "[]"
  },
  "BENINTEG-1987": {
    "key": "BENINTEG-1987",
    "issue": "The issue involves setting up weekly production files for NOVELLIA, INC. with UHC Prime, scheduled for every Wednesday at 3 AM PST starting from 25/09/2024.",
    "issue_summary": "The ticket is about setting up a weekly EDI production file for NOVELLIA, INC. with UHC Prime, scheduled to start on 25/09/2024.",
    "rca": "The root cause analysis indicates that the cut over was done using a webscript.",
    "steps_taken": "The steps involved moving the Jira ticket to 'Open' status and scheduling the weekly EDI production file as per the specified details.",
    "data_models": "[]"
  },
  "BENINTEG-1986": {
    "key": "BENINTEG-1986",
    "issue": "The issue is the need to set up weekly production files for Partially, Inc. with UHC Prime, scheduled for every Wednesday at 3 AM PST starting from 25/09/2024.",
    "issue_summary": "The ticket involves setting up a weekly EDI production file for Partially, Inc. with UHC Prime, scheduled for Wednesdays at 3 AM PST, starting from 25/09/2024. The process involves using a webscript for cut over.",
    "rca": "The root cause analysis indicates that the cut over process is to be executed using a webscript.",
    "steps_taken": "The steps involve scheduling a weekly EDI production file on every Wednesday at 3 AM PST starting from 25/09/2024.",
    "data_models": "[]"
  },
  "BENINTEG-1985": {
    "key": "BENINTEG-1985",
    "issue": "The issue is the need to set up weekly production files for Limelight Steel Inc. with UHC Prime, scheduled for every Wednesday at 3 AM PST starting from 25/09/2024.",
    "issue_summary": "Limelight Steel Inc. requires the setup of weekly EDI production files with UHC Prime, scheduled for Wednesdays at 3 AM PST, starting from 25/09/2024.",
    "rca": "The root cause analysis indicates that the cut over was done using a webscript.",
    "steps_taken": "The steps involved scheduling a weekly EDI production file to be sent every Wednesday at 3 AM PST starting from 25/09/2024.",
    "data_models": "[]"
  },
  "BENINTEG-1984": {
    "key": "BENINTEG-1984",
    "issue": "The issue is the need to set up weekly production files for LeadIQ, Inc with UHC Prime, scheduled for every Wednesday at 3 AM PST.",
    "issue_summary": "The ticket involves setting up a weekly production file transfer for LeadIQ, Inc with UHC Prime, which needs to be scheduled for Wednesdays at 3 AM PST. The process involves using a webscript for the cutover.",
    "rca": "The root cause analysis indicates that the cutover process is to be executed using a webscript, which is a support tool used for this purpose.",
    "steps_taken": "The steps involve scheduling the file transfer to occur every Wednesday at 3 AM PST starting from the next Wednesday, 25/09/2024.",
    "data_models": "[]"
  },
  "BENINTEG-1982": {
    "key": "BENINTEG-1982",
    "issue": "The issue was that the PEO benefits were set up for a group and then removed, but the Rippling PEO file feed was not expired, causing invalidated coverages to be sent to Noyo, resulting in errors.",
    "issue_summary": "The PEO benefits were incorrectly set up and removed for a group, but the PEO file feed was not expired, leading to invalidated coverages being sent to Noyo and causing errors.",
    "rca": "The root cause of the issue was that Vericred was not sending PEO terminations, which led to invalidated coverages being sent to Noyo. This was compounded by the fact that the PEO file feed was not expired after the benefits were removed.",
    "steps_taken": "The steps taken to resolve the issue included deleting the NoyoCompanyCarrier (NCC) entries for the company using the Carrier Connection Tools. This action was confirmed to resolve the issue. Additionally, it was noted that manual deletion of NCCs would be required during PEO offboarding in the future.",
    "data_models": "[NoyoCompanyCarrier]"
  },
  "BENINTEG-1981": {
    "key": "BENINTEG-1981",
    "issue": "Members enrolled in Aetna PEO coverage do not have Noyo IDs, preventing the pushing of amendments. This includes Cobra orphans who are not listed under the Noyo tab.",
    "issue_summary": "Members enrolled in Aetna PEO coverage lack Noyo IDs due to incorrect setup of PEO orphan companies, preventing amendments from being pushed.",
    "rca": "NCCs and Plan mappings were not set up due to PEO orphan companies being not set up correctly, leading to the absence of Noyo IDs for members.",
    "steps_taken": "The issue was resolved by migrating the orphan companies and pushing snapshots for the employees. A script was used to create or update NoyoCompanyCarrier and NoyoCompanyPlanInfo for the orphan companies. The script involved fetching the orphan company, identifying the carrier, and updating the Noyo IDs and statuses.",
    "data_models": "[Company, InsuranceCompanyPlanInfo, NoyoCompanyCarrier, NoyoCompanyPlanInfo]"
  },
  "BENINTEG-1980": {
    "key": "BENINTEG-1980",
    "issue": "Rippling employees (EEs) appeared on the Aetna PEO error form, and their profiles were not viewable. There was a need to confirm if these members were expected to be enrolled in Aetna PEO coverage and to push the enrollment over to Noyo.",
    "issue_summary": "Rippling EEs were flagged on the Aetna PEO error form due to visibility issues, requiring confirmation of their enrollment status and transmission to Noyo.",
    "rca": "The issue was caused by a visibility problem where Rippling EEs were part of a different company in the same PEO, leading to two snapshots being sent. The older (terminated) coverage replaced the active one, causing discrepancies.",
    "steps_taken": "The engineering team ran a script to confirm the effective end dates for the EEs and checked for invalidated coverage. They identified that some EEs had valid coverage terminating on 09/30, while others had invalidated coverage that should be skipped. For EEs with no snapshot found, further investigation was required. The team also resent updated snapshots for EEs with active coverage using the following code snippet:\n\n```python\nee_ids = [\"6669153f3be6dd61c6b89dc2\", \"6594270494b3e6ef1fa7dfc1\", \"5d5c92ae3ca04e6bd03173e4\", \"612ecdc75cf7c83e13ddec34\", \"662c1fb530b73defe30327f8\", \"6627fcdfb7eeaf626abff372\", \"64e3d42d52907bbeaa208931\", \"5f655b9a5d092801e1d54ef4\", \"6494b1dce1c56972d8f7c6d9\"]\nfor ee_id in ee_ids:\n    try:\n        snapshot = NoyoMemberSnapshotController.submit_member_snapshot_adhoc(aetna_peo_group_id, Subscriber.objects.get(role=ee_id), noyo_census_request=None)\n        print(f\"Successfully Sent snapshot for the employee {ee_id}\")\n    except Exception as e:\n        print(f\"Error {e} while sending snapshots for the employee {ee_id}\")\nreturn \"Done\"\n```",
    "data_models": "[Subscriber, NoyoMemberSnapshotPayloadGenerator, NoyoMemberSnapshotController]"
  },
  "BENINTEG-1979": {
    "key": "BENINTEG-1979",
    "issue": "Members being migrated to Aetna PEO are not connected due to a Noyo error: 'Coverage must specify plan_number_identifier'. Amendments cannot be pushed for these members.",
    "issue_summary": "The issue arises from a missing 'plan_number_identifier' in the Noyo file feed connections for Aetna PEO, preventing member amendments from being processed.",
    "rca": "The root cause of the issue was identified as missing plan numbers in the database for specific plans and effective dates, leading to the Noyo error.",
    "steps_taken": "The plan numbers were updated using a script to correct the mappings. The script involved updating the 'PriceCalculationDicts' model with the correct plan numbers and saving the changes. The updated plan numbers were then verified to ensure no unmapped plans remained. Additionally, a manual process was suggested for handling cases where employees moved out of the US.",
    "data_models": "[PriceCalculationDicts, InsurancePlan, NoyoCompanyPlanInfo]"
  },
  "BENINTEG-1978": {
    "key": "BENINTEG-1978",
    "issue": "The QLE to remove a dependent did not generate the necessary forms, preventing the update from being transmitted to the carrier.",
    "issue_summary": "The issue was that a QLE to remove a dependent did not generate the expected forms, blocking the transmission of updates to the carrier. The root cause was related to payroll models not owned by the benefits team.",
    "rca": "The form generation for this account was failing due to issues with payroll-related models, specifically the 'num_hours_per_week = job.getWeeklyHours()' function, which is not owned by the benefits team.",
    "steps_taken": "The forms were re-run manually, which resolved the immediate issue of form generation. The RCA was identified as a problem with payroll models, and it was noted that further investigation would need to involve the payroll team.",
    "data_models": "[job]"
  },
  "BENINTEG-1977": {
    "key": "BENINTEG-1977",
    "issue": "Dependent's gender information was being sent incorrectly to Noyo for Aetna PEO, with about 90 dependents showing gender errors. The gender was being sent as 'U' (unknown) despite being correct in Rippling's system.",
    "issue_summary": "Gender information for dependents was incorrectly sent as 'U' to Noyo due to a missing legalSex value, defaulting to 'U' instead of using the available gender data.",
    "rca": "The root cause was identified as an error on the Ben Admin Employee side, where the member.legalSex was coming as None for some members. This led to the gender being defaulted to 'U' (unknown) when transmitted to Noyo.",
    "steps_taken": "A fix was implemented to default to member.gender when member.legalSex is None. A script was run to verify the fix by checking dependents' gender data and resending the corrected data to Noyo. The script used was:\n\n```python\n#BENINTG-1977\n  ee_ids = [\"5888350ad2a5f807b5cdf18e\",\n   \"58acb1a77ee766255902cef4\",\n   \"607df9df52c3d1540c01afed\",\n   \"5b5379f3da32c80b9442143d\",\n   \"6260125bc77e3f78dc90a92d\",\n   \"5dd93230b0974e4495f0d4a1\",\n   \"5dd869adfa9c4e0bf3cf08b4\",\n   \"5dd92e968a9f4e5fc723ff2d\",\n   \"6241cc040a369692cf7d3ccd\",\n   \"5dd93e2b8a9f4e74f5c2dc3e\",\n   \"5dd928a8fa9c4e7855176b3d\",\n   \"5ee9132503c16b16e307474e\",\n   \"62067d1b98852e1f8783749b\",\n   \"66ba968b5c33e59ab7114f7f\",\n   \"5fed02e5ce3e1400c4bfdeef\",\n   \"5ff8bebefd13b300bf4a6124\",\n   \"5e391ba3dbc86b61137c5b71\",\n   \"60425cd3b7e117db041bfe4c\",\n   \"60a6f2703564fabf5e3ca08a\",\n   \"6067941e2af448b5a7dd0fd4\",\n   \"608317c81bc998fa6e8c4711\",\n   \"61535c547753d155c3dc8e9f\",\n   \"61492427618ba8054e1d0e20\",\n   \"60e73a50d316b6d3245a40e0\",\n   \"60ef6df38aa4e5cd750619d0\",\n   \"60ef6df61b8c733050696a1d\",\n   \"60ef6df5705771bd4afcc526\",\n   \"613a75ad7191ae155499b2bd\",\n   \"6168e0bb62d77d920cc41a9d\",\n   \"617aeaa410d93faac00c143a\",\n   \"61a6edc2b842ef625274c333\",\n   \"61c0df3ae2967b44fafc3537\",\n   \"61eed7001197e06b55a6b1e5\",\n   \"622a6e125d4d2e28f7dc6cd4\",\n   \"62260140a4d1d82e9cb1440e\",\n   \"65c714af78588b4a5062acab\",\n   \"66ba442a806bb3f37eeb1163\",\n   \"667e48d39ea5f77ae6dd0c56\",\n   \"65cfee0f4bccf1064fde2976\",\n   \"65771807eb71a8b9ab1de8b2\",\n   \"65f9d2cef230cf963e3e7842\"]\n  \n  aetna_peo_group_id = \"05edcfe2-f9c1-40d5-b5b1-e3505fd66266\"  \n  for ee_id in ee_ids:  \n    try:\n      NoyoMemberSnapshotController.submit_member_snapshot_adhoc(aetna_peo_group_id,Subscriber.objects.get(role=ee_id),noyo_census_request=None)\n      print(f\"Successfully resent the snapshot for employee {ee_id}\")\n    except Exception as e:\n      print(f\"Failed to resent the snapshot for employee {ee_id} with error {e}\")\n  return \"Done\"\n```",
    "data_models": "[Subscriber, NoyoMemberSnapshotPayloadGenerator]"
  },
  "BENINTEG-1970": {
    "key": "BENINTEG-1970",
    "issue": "Request to update the effective date of a QLE event for employee Ella Jernigan from 9/6/24 to 7/14/24 was not processed due to a system error, resulting in a 'sad cloud' error when attempting to update the date.",
    "issue_summary": "The issue involved updating the effective date of a QLE event for an employee, which was blocked by a system error ('sad cloud' error) and a conflict with Noyo's employee ID system due to a mass migration of medical carriers.",
    "rca": "The root cause was identified as a system working as expected, but the issue arose from a conflict in Noyo's system where multiple employee IDs were found due to a mass migration of medical carriers. This required a manual intervention to generate and push the API payload to Noyo.",
    "steps_taken": "The issue was initially attempted to be resolved by submitting an ENR Request ticket, but it resulted in a 'sad cloud' error. It was later identified that the error was due to multiple employee IDs in Noyo's system. The engineering team was requested to force through an amendment by generating the necessary API payload and pushing it to Noyo. The amendment functionality was eventually fixed, and the issue was resolved.",
    "data_models": "[EnrollmentEvent, PendingActionGroup, PendingAction]"
  },
  "BENINTEG-1969": {
    "key": "BENINTEG-1969",
    "issue": "Customer is receiving Manual Enrollment forms for Aetna after their renewal was completed and the feed is in production with forms turned off.",
    "issue_summary": "Despite the renewal being completed on 9/1 and forms being turned off, Manual Enrollment forms for Aetna are still being sent as of 9/6 due to a business logic that forces form sending during the OE grace period.",
    "rca": "The root cause of the issue is a business logic in the system that forces form sending during the Open Enrollment (OE) grace period. If there is a future OE from when a pending action was created, the system force sends the emails. In this case, the company had an OE event starting from September 9, so any pending actions/events created before September 1 would have force sent the emails.",
    "steps_taken": "The issue was identified as being caused by the business logic 'Force form sending in OE grace period'. It was noted that any new pending action should not trigger the emails. The team discussed whether to change this behavior.",
    "data_models": "[PendingAction, EnrollmentEvent]"
  },
  "BENINTEG-1968": {
    "key": "BENINTEG-1968",
    "issue": "The employees of the group 'ASSOCIATION OF ASIAN PACIFIC COMMUNITY HEALTH ORGANIZATIONS' were not terminated from their previous PEO insurance plans despite leaving the PEO effective 08/01/2024. All employees still appear active on their PEO plans.",
    "issue_summary": "Employees were not terminated from their PEO insurance plans after the group left the PEO, due to a bug when PEO company terminates ahead of time before even starting and enrollments have been sent.",
    "rca": "The root cause was identified as a bug in the system where the PEO company terminates ahead of time before even starting, and enrollments have already been sent. This led to the employees still appearing active on their PEO plans.",
    "steps_taken": "The team verified that a cancellation event was created effective 8/1 and that employee events were created with PendingActions marked as ACTIVE and submitted. Amendments were sent to address the issue temporarily while further investigation into the root cause was conducted. It was confirmed that the employees had terminated coverages on the carrier.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-1967": {
    "key": "BENINTEG-1967",
    "issue": "NexHealth was onboarded but faced a transmission error when attempting to generate a file due to a validation error related to the plan coverage description being shorter than 8 characters.",
    "issue_summary": "NexHealth faced a transmission error due to incorrect plan mapping, specifically the Cigna PPO Gold plan was not mapped, causing file generation to fail.",
    "rca": "The root cause of the issue was a manual data entry error where the plan mapping was not done correctly, leading to the Cigna PPO Gold plan not being mapped.",
    "steps_taken": "The steps taken to resolve the issue included updating the carrier classification with all plans mapped, specifically ensuring the Cigna PPO Gold plan was correctly mapped. Once this was done, a test file was successfully generated, and the error was resolved.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-1965": {
    "key": "BENINTEG-1965",
    "issue": "Heritage Bank was onboarded but encountered a transmission error when attempting to generate a file. The error message indicated a validation error due to a plan coverage description being shorter than 8 characters.",
    "issue_summary": "Heritage Bank faced a transmission error due to a validation issue where the plan coverage description was shorter than the required 8 characters.",
    "rca": "The root cause of the issue was identified as a need for adding carrier classification matching for invalidated SLIs (Subscriber Line Information).",
    "steps_taken": "The issue was addressed by working on a fix that involved adding carrier classification matching for the invalidated SLIs. The fix was implemented, and the file was successfully generated, resolving the issue.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-1963": {
    "key": "BENINTEG-1963",
    "issue": "The issue was related to the transition of Dioxycle, Inc's insurance data transmission from Vericred to Stedi for the carrier UHC Prime. The transition was blocked because the Vericred connection needed to be expired before proceeding.",
    "issue_summary": "The transition of Dioxycle, Inc's insurance data transmission from Vericred to Stedi was blocked due to the need to expire the existing Vericred connection.",
    "rca": "The root cause of the issue was the need to cut over using a web script, which required the existing Vericred connection to be expired before the transition to Stedi could proceed.",
    "steps_taken": "The Vericred connection was expired, as confirmed by a comment from Lloyd Fernandes, allowing the transition to proceed.",
    "data_models": "[]"
  },
  "BENINTEG-1962": {
    "key": "BENINTEG-1962",
    "issue": "The group 'coverbase' with Group ID '04V9315' and Company ID '6568e47314ef486ae10118af' was facing an issue with an active Vericred connection that needed to be expired before proceeding with the cut over to UHC Prime using Stedi.",
    "issue_summary": "The issue was that the group 'coverbase' still had an active Vericred connection which needed to be expired before the cut over to UHC Prime could be completed using Stedi.",
    "rca": "The root cause of the issue was that the cut over process was being blocked due to an active Vericred connection. The cut over was supposed to be done using a webscript, but it couldn't proceed until the existing connection was expired.",
    "steps_taken": "The steps taken to resolve the issue included expiring the active Vericred connection, as confirmed by a comment from Lloyd Fernandes stating that the connection has now been expired and the cut over can proceed.",
    "data_models": "[]"
  },
  "BENINTEG-1961": {
    "key": "BENINTEG-1961",
    "issue": "The Vericred connection for the group Chima Inc with UHC Prime is still active and needs to be expired.",
    "issue_summary": "The Vericred connection for Chima Inc's UHC Prime plan is still active, causing issues with the transition process.",
    "rca": "The root cause of the issue was the cut over using a webscript, which did not properly deactivate the Vericred connection for the group.",
    "steps_taken": "The team was notified to expire the Vericred connection. Confirmation was received that Ideon had completed their side, allowing the process to proceed.",
    "data_models": "[]"
  },
  "BENINTEG-1950": {
    "key": "BENINTEG-1950",
    "issue": "Request to set up the production environment and scheduler for sending the EDI file feed weekly on Wednesday for S Wave International Corp with UHC Prime.",
    "issue_summary": "The issue involves setting up the production environment and scheduler to send EDI file feeds weekly for S Wave International Corp with UHC Prime. The top-level reason for the issue is the need to cut over using a webscript.",
    "rca": "The root cause analysis indicates that the issue was related to the need to cut over using a webscript.",
    "steps_taken": "The steps taken to resolve the issue involved setting up the production environment and scheduler to send the EDI file feed weekly on Wednesday at 3am PST.",
    "data_models": "[]"
  },
  "BENINTEG-1949": {
    "key": "BENINTEG-1949",
    "issue": "Request to set up the production environment scheduler to start sending the file feed weekly on Wednesday for the group Synthesis with Carrier UHC PRIME.",
    "issue_summary": "The issue involves setting up a scheduler in the production environment to send file feeds weekly for the group Synthesis with Carrier UHC PRIME. The top-level reason for the issue is the need to cut over using a webscript.",
    "rca": "The root cause of the issue was identified as the need to cut over using a webscript, which falls under the category of 'Support Tool Used'.",
    "steps_taken": "The steps to resolve the issue would involve setting up the production environment scheduler to send the file feed weekly on Wednesday at 3am PST. The specific steps or code snippets used to achieve this were not provided in the ticket.",
    "data_models": "[]"
  },
  "BENINTEG-1948": {
    "key": "BENINTEG-1948",
    "issue": "Encountered a 422 error when sending a transaction via Noyo for employee Emma Lindsay, requiring a benefit class specification.",
    "issue_summary": "A 422 error occurred during a Noyo transaction for employee Emma Lindsay due to missing benefit class specification, caused by a mapping error with multiple benefit_class options for the group.",
    "rca": "The issue arose because the group already had a carrier classification with the Non PEO guardian, and the method get_rp_carrier_classifications_groupby_noyo_carrier_id uses the noyo_carrier_id as a unique key, which is the same for both PEO and Non PEO guardian, leading to unpopulated guardian keys.",
    "steps_taken": "To resolve the issue, a script was run to delete the non PEO guardian's carrier classification. The script involved fetching the subscriber and carrier classification, ensuring the carrier is not a PEO carrier, filtering active CCLIs with old non PEO carriers, and marking the carrier classification as deleted. The amendment was then sent to Noyo.",
    "data_models": "[Subscriber, CarrierClassification, BaseCompanyCarrierLineInfo]"
  },
  "BENINTEG-1934": {
    "key": "BENINTEG-1934",
    "issue": "The issue being faced is the need to schedule a weekly EDI production file for BAYSIDE RECOVERY AND WELLNESS with UHC, to be sent every Wednesday at 3 AM PST.",
    "issue_summary": "The problem is the requirement to set up a weekly EDI file transmission for the group BAYSIDE RECOVERY AND WELLNESS with the carrier UHC, which needs to be scheduled for a specific time.",
    "rca": "The root cause analysis indicates that the issue is related to the use of a support tool, specifically a cut over using a webscript.",
    "steps_taken": "The steps taken involve scheduling the EDI production file to be sent weekly on Wednesdays at 3 AM PST.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: []"
  },
  "BENINTEG-1933": {
    "key": "BENINTEG-1933",
    "issue": "The issue being faced is the need to schedule a weekly EDI production file for AUDIO MEDIA GRADING, INC. with the carrier UHC, to be sent every Wednesday at 3 AM PST.",
    "issue_summary": "The problem is the requirement to set up a weekly EDI file transmission for AUDIO MEDIA GRADING, INC. with UHC, which needs to be scheduled for Wednesdays at 3 AM PST. The top-level reason for the issue is the need to cut over using a webscript.",
    "rca": "The root cause of the issue is identified as the need to cut over using a webscript, which is categorized under 'Support Tool Used'.",
    "steps_taken": "The steps taken to resolve the issue involve scheduling the EDI production file to be sent weekly on Wednesdays at 3 AM PST.",
    "data_models": "[]"
  },
  "BENINTEG-1932": {
    "key": "BENINTEG-1932",
    "issue": "The production setup for the Argyle group with UHC carrier was failing because there was no outbound connection established for the group, preventing the scheduling of a weekly EDI production file.",
    "issue_summary": "The issue was due to a missing outbound connection for the Argyle group with UHC, which caused the failure of the production setup and prevented the scheduling of the weekly EDI production file.",
    "rca": "The root cause of the issue was a manual data entry error where the outbound connection was not added for the Argyle group in the partnership settings, which is necessary for triggering the production file.",
    "steps_taken": "The necessary outbound connection was added to the partnership settings for the Argyle group, and the production file was triggered from the retool. The ticket was then closed after confirming the setup with relevant team members.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-1931": {
    "key": "BENINTEG-1931",
    "issue": "The issue being faced is the need to schedule a weekly EDI production file for Arcadia Capital Holdings, LLC with UHC, to be sent every Wednesday at 3 AM PST.",
    "issue_summary": "The problem is the requirement to set up a weekly EDI file transmission for Arcadia Capital Holdings, LLC with UHC, scheduled for Wednesdays at 3 AM PST, and the top-level reason is the need to cut over using a webscript.",
    "rca": "The root cause analysis indicates that the issue arose due to the need to cut over using a webscript.",
    "steps_taken": "The steps taken to resolve the issue involved scheduling the EDI production file to be sent weekly on Wednesdays at 3 AM PST.",
    "data_models": "[]"
  },
  "BENINTEG-1930": {
    "key": "BENINTEG-1930",
    "issue": "The issue was related to scheduling a weekly EDI production file transmission for Atlantic Healthcare Products with UHC, which was supposed to occur every Wednesday at 3 AM PST. There was a concern about whether the automatic file transmission would occur as scheduled or if it needed to be sent manually.",
    "issue_summary": "The scheduled weekly EDI production file for Atlantic Healthcare Products with UHC was not confirmed to be sent automatically as planned, raising concerns about the need for manual transmission.",
    "rca": "The root cause analysis indicated that the issue was related to the cut over using a webscript, which might have affected the automatic scheduling of the EDI file transmission.",
    "steps_taken": "The responsible team member assured that all related tickets would be closed within the next 2 hours and the file would be sent automatically, negating the need for manual transmission. The ticket would be closed after confirming the file was sent.",
    "data_models": "[]"
  },
  "BENINTEG-1929": {
    "key": "BENINTEG-1929",
    "issue": "The issue is the need to schedule a weekly EDI production file for Caliza Financial Technologies, Inc with UHC, to be sent every Wednesday at 3 AM PST.",
    "issue_summary": "The issue is related to scheduling a weekly EDI production file for Caliza Financial Technologies, Inc with UHC, using the Stedi component.",
    "rca": "The root cause analysis indicates that the issue was due to the cut over using a webscript.",
    "steps_taken": "The steps taken involved scheduling the EDI production file to be sent weekly on Wednesdays at 3 AM PST.",
    "data_models": "[]"
  },
  "BENINTEG-1928": {
    "key": "BENINTEG-1928",
    "issue": "The issue is the need to schedule a Weekly EDI production file for CAREERPUCK, INC. with UHC every Wednesday at 3 AM PST.",
    "issue_summary": "CAREERPUCK, INC. requires a scheduled Weekly EDI production file with UHC, but it has not been set up yet.",
    "rca": "The root cause analysis indicates that the cut over using a webscript was necessary, suggesting that the scheduling was not initially set up or was set up incorrectly.",
    "steps_taken": "The steps taken involve scheduling the Weekly EDI production file to run every Wednesday at 3 AM PST.",
    "data_models": "[]"
  },
  "BENINTEG-1927": {
    "key": "BENINTEG-1927",
    "issue": "The user is unable to select an answer to the question 'How does the carrier refer to this class code?' on the 'Manage Carrier Classifications' page under the 'Settings' tab of the 'My Benefits' app. The dropdown menu returns no results, blocking the client from building required classifications for file feed setup.",
    "issue_summary": "The dropdown menu for selecting carrier class code options is not displaying any results, preventing the client from setting up necessary classifications for their file feed.",
    "rca": "The issue was caused by null handling in the system, which led to no options being displayed in the dropdown menu for carrier class code selection.",
    "steps_taken": "The issue was moved to the marketplace/integrations side for resolution. It was identified that the page/carrier-class code structure isn't managed by ERx, even though it exists in Benefits Admin. The fix was expected to be deployed by the end of the day, and the user was advised to check after 4 hours once the changes were deployed.",
    "data_models": "No specific data models were mentioned in the ticket."
  },
  "BENINTEG-1926": {
    "key": "BENINTEG-1926",
    "issue": "Enrollment forms are not generating in Rippling for HyperProof, specifically for David Brennan's recent QLE for 9/1. The forms are pending and not generating as expected.",
    "issue_summary": "Enrollment forms for HyperProof are not generating during the QLE processing for David Brennan due to a missing template.",
    "rca": "The root cause of the issue was identified as a missing template required for generating the enrollment forms. Specifically, the template 'Premera BlueCross_WA_Qualifying Life Event Add.pdf' was not available, which prevented the forms from being generated.",
    "steps_taken": "The missing template 'Premera BlueCross_WA_Qualifying Life Event Add.pdf' was uploaded to the system. After uploading, an attempt was made to regenerate the forms, but it was unsuccessful initially. Finally, the forms were forcefully generated using the following code snippet:\n\n```python\npa = PendingAction.objects.get(id=\"66cf9b4c77a3767157cf6235\")\ncreateEtaTaskPdfs(pa, True, True)\nreturn\n```",
    "data_models": "[PendingAction]"
  },
  "BENINTEG-1923": {
    "key": "BENINTEG-1923",
    "issue": "Davenport Construction is facing an issue with Select Health regarding the lack of support for HSA Enrollments on EDI file feeds.",
    "issue_summary": "Davenport Construction's carrier, Select Health, is inquiring why Rippling does not support HSA Enrollments on EDI file feeds and is seeking a conversation to understand the current limitations and future plans.",
    "rca": "The root cause of the issue is identified as a product enhancement need, where the current system does not support HSA Enrollments on EDI file feeds. This is categorized under product enhancement, indicating that the feature is not yet developed or implemented.",
    "steps_taken": "The team is considering whether the Operations or Product team should handle the conversation with the carrier. A feature request is being created to track the potential future support for HSA enrollments on EDI files.",
    "data_models": "[]"
  },
  "BENINTEG-1921": {
    "key": "BENINTEG-1921",
    "issue": "Starwood Equine Veterinary Services, Inc is facing an issue where the Ideon coverage period is showing as 'initial' instead of 'expired', preventing the initiation of the group's Ideon to Noyo migration for their Kaiser coverage.",
    "issue_summary": "The Ideon coverage period for Starwood Equine Veterinary Services, Inc is incorrectly showing as 'initial' in the Vericred Company Info, blocking the migration process to Noyo for Kaiser coverage.",
    "rca": "The root cause of the issue was identified as a very old Vericred coverage period information that needed to be changed to 'expired'.",
    "steps_taken": "The coverage period was manually set to 'expired' using a webscript. The script retrieved the VericredCompanyCoveragePeriodInfo object by ID and updated its state to 'expired'.\n\n```python\nfrom insurance.models.vericred_models import VericredCompanyCoveragePeriodInfo\n\nvcpi = VericredCompanyCoveragePeriodInfo.objects.get(id=\"604354aff4aa5c5ed7a8d60b\")\nvcpi.state='expired'\nvcpi.stateOnVericred='expired'\nvcpi.save()\n```",
    "data_models": "[VericredCompanyCoveragePeriodInfo]"
  },
  "BENINTEG-1918": {
    "key": "BENINTEG-1918",
    "issue": "Rippling employee Adrianne Rene Baskett is being informed by their Insurance Carriers, including Aetna, that they do not have coverage. The Benefits Integration team needs to ensure that the employee's coverage is communicated to the insurance carriers and that they are enrolled.",
    "issue_summary": "Employee Adrianne Rene Baskett is not recognized as having coverage by their insurance carriers, including Aetna, due to a Vericred error.",
    "rca": "The root cause of the issue was identified as a Vericred error, which affected the communication of the employee's coverage to the insurance carriers.",
    "steps_taken": "The issue was escalated to the Benefits Integration team to ensure the coverage is communicated to the carrier. It was confirmed that the Aetna connection is still on Ideon and not live with Noyo, which is in testing. The issue was eventually resolved, and the ticket was closed.",
    "data_models": "[]"
  },
  "BENINTEG-1915": {
    "key": "BENINTEG-1915",
    "issue": "Catch Labs Inc. is facing an issue with COBRA cancellation events where certain members' COBRA enrollments are being omitted from the group's feed, preventing several employees from accessing care.",
    "issue_summary": "The issue is related to COBRA coverage end dates being incorrectly handled in Ideon data, causing omissions in the group's feed and preventing employees from accessing care. This needs to be corrected before the next Aetna file feed transmission.",
    "rca": "There is an ongoing issue with Ideon COBRA coverage where future termination dates are being sent, causing Ideon to assume cancellations prematurely. This is a known bug that needs to be fixed on the product end to prevent sending future terminations.",
    "steps_taken": "The engineering team was requested to remove the COBRA coverage end dates from the affected members' Ideon data and push the updates through. The issue was temporarily fixed by pushing the corrected payloads via retool. Future date handling, which is carrier-specific, will need to be addressed at the Ideon layer.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-1914": {
    "key": "BENINTEG-1914",
    "issue": "Group admin reported that an employee's address update was not being transmitted to the carrier via Noyo, requiring manual intervention.",
    "issue_summary": "The employee's address update was not included in the Noyo snapshot, preventing it from being sent to the carrier.",
    "rca": "The root cause analysis was deferred, and no specific reason was documented in the ticket.",
    "steps_taken": "The ticket was closed due to no response from operations for two months, and no specific steps were documented in the ticket.",
    "data_models": "[]"
  },
  "BENINTEG-1912": {
    "key": "BENINTEG-1912",
    "issue": "Noyo Plan mapping Error causing 'sad cloud error' for authorized UHC groups during Ideon to Noyo migration.",
    "issue_summary": "Noyo Plan mapping error encountered during the migration process from Ideon to Noyo for UHC groups, resulting in 'sad cloud error' for several authorized groups.",
    "rca": "The issue was due to an incorrect implementation in the Noyo Plan mapping process, which has already been fixed.",
    "steps_taken": "The issue was identified as an incorrect implementation and has been fixed. No specific steps or code snippets were provided in the ticket.",
    "data_models": "[]"
  },
  "BENINTEG-1911": {
    "key": "BENINTEG-1911",
    "issue": "Production file transmission failure for the Mothership file, which went unnoticed for two weeks until the carrier requested the missing files.",
    "issue_summary": "The Stedi Snapshot Generator failed to send a notification when a production file transmission failed, leading to unawareness of the issue until the carrier requested the missing files.",
    "rca": "The root cause was related to the support tool used, specifically the configurations that needed fixing.",
    "steps_taken": "The issue for the specific group was resolved, and a larger issue is being addressed in a separate ticket (BENINTEG-2826).",
    "data_models": "[]"
  },
  "BENINTEG-1905": {
    "key": "BENINTEG-1905",
    "issue": "The issue involves the EverydaySpy (SKB Communications, LLC) group with Group ID 05V3800 and Company ID 6568ecb2a3b657ce27c79139, where there is a problem related to the carrier UHC and the frequency of data transmission scheduled for Wednesday at 3AM PST.",
    "issue_summary": "The issue pertains to a problem with the data transmission for the EverydaySpy group with UHC, scheduled for Wednesdays at 3AM PST, due to a cut over using a webscript.",
    "rca": "The root cause of the issue was identified as a cut over using a webscript, which falls under the category of 'Support Tool Used'.",
    "steps_taken": "The ticket does not provide specific steps taken to resolve the issue.",
    "data_models": "[]"
  },
  "BENINTEG-1904": {
    "key": "BENINTEG-1904",
    "issue": "The issue involves the group GGMS LLC with Carrier UHC, where there seems to be a problem related to the frequency of some operation or transmission scheduled for Wednesday at 3AM PST.",
    "issue_summary": "The issue is related to the group GGMS LLC with Carrier UHC, involving a cut over using a webscript, possibly affecting scheduled operations.",
    "rca": "The root cause analysis indicates that the issue was due to a cut over using a webscript.",
    "steps_taken": "The ticket does not provide specific steps taken to resolve the issue.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-1903": {
    "key": "BENINTEG-1903",
    "issue": "The Vericred connection for Folio Services Inc with UHC was still active, preventing the enablement of the EDI feed.",
    "issue_summary": "The issue was that the Vericred connection for Folio Services Inc was still active, which needed to be expired before enabling the EDI feed with UHC.",
    "rca": "The root cause of the issue was that the cut over was done using a webscript, and the Vericred connection was not expired as expected, which blocked the transition to the EDI feed.",
    "steps_taken": "The team communicated with Ideon to confirm the expiration of the Vericred connection. Once Ideon confirmed the expiration, the team proceeded with enabling the EDI feed.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-1902": {
    "key": "BENINTEG-1902",
    "issue": "The issue involves the group Flipturn Inc with Carrier UHC, where there seems to be a problem related to the frequency of some operation scheduled for Wednesday at 3AM PST.",
    "issue_summary": "The issue pertains to Flipturn Inc's integration with UHC, specifically involving a scheduled operation that is managed by the Stedi component.",
    "rca": "The root cause analysis indicates that the issue was related to a cut over using a webscript, which falls under the category of 'Support Tool Used'.",
    "steps_taken": "The ticket does not provide specific steps taken to resolve the issue.",
    "data_models": "[]"
  },
  "BENINTEG-1901": {
    "key": "BENINTEG-1901",
    "issue": "The issue is related to the group Duet Inc with Carrier UHC, where there seems to be a problem with the scheduled transmission of data using Stedi.",
    "issue_summary": "The issue involves Duet Inc's data transmission to UHC via Stedi, potentially due to a problem with the webscript used for the cut over.",
    "rca": "The root cause of the issue was identified as a problem with the 'cut over webscript' used in the support tool.",
    "steps_taken": "The steps to resolve the issue would involve reviewing and potentially fixing the 'cut over webscript' to ensure proper data transmission.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-1898": {
    "key": "BENINTEG-1898",
    "issue": "Termination form not getting sent to the Guardian (Carrier) for employee Avishek Neupane. Error encountered when trying to force-send the form.",
    "issue_summary": "The termination form for employee Avishek Neupane was not sent to the Guardian carrier due to a missing Date of Birth (DOB) in Rippling, which caused an error when attempting to force-send the form.",
    "rca": "The root cause of the issue was the missing Date of Birth (DOB) for the employee Avishek Neupane in Rippling. The DOB was removed on 07/15/2024, which led to the termination form not being sent to the carrier.",
    "steps_taken": "The issue was identified as the missing DOB for the employee. It was suggested to add the DOB back into Rippling. Once the DOB is updated, the termination form should be sent automatically by the daily job.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [Employee]"
  },
  "BENINTEG-1897": {
    "key": "BENINTEG-1897",
    "issue": "Arbor Biotechnologies and other companies faced issues with incorrect group_identifier values being passed on Noyo snapshots, resulting in 422 errors and blocking the migration from Ideon to Noyo.",
    "issue_summary": "The issue was caused by Rippling passing incorrect group_identifier values that did not match the configured values in the 'Manage Carrier Classifications' page of the 'Benefits Admin' app, leading to 422 errors during Noyo snapshot submissions.",
    "rca": "The root cause of the issue was identified as a bug in the system where incorrect group_identifier values were being passed to Noyo, which did not align with the values configured in the 'Manage Carrier Classifications' page. This was categorized under 'Bug Fix' and 'Special Case Handling'.",
    "steps_taken": "The engineering team was engaged to debug the error messages. The fix was implemented and initially enabled for Arbor Biotechnologies, which resolved the issue for them. Subsequently, the fix was enabled for other affected companies, including Hometap Equity Partners LLC, University of Massachusetts Amherst Foundation Inc, and Forward Financing. After the fix was live, the snapshots were retried and were successful.",
    "data_models": "[CompanyInsuranceInfo, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-1896": {
    "key": "BENINTEG-1896",
    "issue": "Noyo team reported receiving fewer snapshots than the number of members enrolling in coverage for BCBS MA groups, causing a blocker in the migration from Ideon to Noyo.",
    "issue_summary": "Noyo is not receiving the expected number of census snapshots for BCBS MA groups, despite successful submission messages, due to plan mapping issues and carrier classification limitations.",
    "rca": "The issue was due to plan mapping problems and limitations with carrier classifications. Specifically, the plan-based carrier classification was picking the latest valid SubscriberLineInfo, which was incorrect for older coverages, leading to wrong values being sent.",
    "steps_taken": "1. Confirmed Noyo plan mapping tasks were completed. 2. Verified classifications were built using Group Identifier value. 3. Debugged error messages for Forward Financing, LLC. 4. Used webscripts to map previous year plans. 5. Deleted unnecessary carrier classifications for group_identifier. 6. Corrected Noyo group ID entry. 7. Resubmitted census/snapshots and confirmed with Noyo for any remaining issues.",
    "data_models": "[NoyoCompanyCarrier, RoleWithCompany, Subscriber, InsuranceCompanyPlanInfo, SubscriberLineInfo, NoyoCompanyPlanInfo]"
  },
  "BENINTEG-1895": {
    "key": "BENINTEG-1895",
    "issue": "Analyst encountered a validation error when generating a file for Turquoise Health Co with Cigna due to the zip code length exceeding 5 characters.",
    "issue_summary": "The issue was a validation error caused by the zip code length exceeding the maximum allowed length of 5 characters as per Cigna's guidelines.",
    "rca": "The root cause of the issue was a change in business logic on Stedi, which did not account for the zip code length restriction, leading to the inclusion of a 4-digit extension in the zip code.",
    "steps_taken": "The issue was resolved by modifying the logic to strip the 4-digit extension from the zip code, ensuring only the first five characters are sent.",
    "data_models": "[]"
  },
  "BENINTEG-1891": {
    "key": "BENINTEG-1891",
    "issue": "The issue involves the group 'Third Way Health, Inc.' with company ID '630f7c08d740a1acea706fd1' and the carrier 'UHC PRIME'. The frequency of the issue is noted as Wednesday at 3am PST. The ticket was initially in the 'Triage' state and needed to be moved to 'Open'.",
    "issue_summary": "The issue pertains to the group 'Third Way Health, Inc.' with UHC PRIME carrier, requiring a transition from 'Triage' to 'Open' status in the Jira workflow.",
    "rca": "The root cause analysis indicates that the issue was related to a 'cut over using webscipt' under the category 'Support Tool Used'.",
    "steps_taken": "The ticket was moved from 'Triage' to 'Open' by the support team as requested in the comments.",
    "data_models": "[]"
  },
  "BENINTEG-1890": {
    "key": "BENINTEG-1890",
    "issue": "The issue involves the group Sudorandom Labs Inc. with company ID 637298ed1cbaf632953e9380 and the carrier UHC PRIME, where there is a need to cut over using a support tool at a specified frequency.",
    "issue_summary": "The issue is related to the group Sudorandom Labs Inc. and the carrier UHC PRIME, requiring a cut over using a support tool, specifically Retool, at a scheduled frequency.",
    "rca": "The root cause analysis indicates that the issue was due to the need to cut over using the support tool Retool.",
    "steps_taken": "The ticket was moved from Triage to Open by the support team as part of the resolution process.",
    "data_models": "[]"
  },
  "BENINTEG-1888": {
    "key": "BENINTEG-1888",
    "issue": "The issue involves a group named Stan with company ID 64b03617c98d8d9eca0584ec and carrier UHC PRIME, where there is a need to cut over using a webscript.",
    "issue_summary": "The issue is related to the group Stan with carrier UHC PRIME, requiring a cut over using a webscript, and involves the Stedi component.",
    "rca": "The root cause analysis indicates that the issue is related to the use of a support tool, specifically a cut over using a webscript.",
    "steps_taken": "The ticket was moved from Triage to Open by support, and there was a request for further elaboration on what engineering needs to do.",
    "data_models": "[]"
  },
  "BENINTEG-1885": {
    "key": "BENINTEG-1885",
    "issue": "The file feed for Neon Inc with United Healthcare Prime was not moved to production as expected, causing the file not to send on the scheduled day.",
    "issue_summary": "The file feed for Neon Inc with United Healthcare Prime was not moved to production, resulting in a missed file transmission on the scheduled Wednesday.",
    "rca": "The issue was caused by the cut over process using a webscript, which was not completed in time for the scheduled file transmission.",
    "steps_taken": "The team needs to ensure the cut over using the webscript is completed to move the file feed to production and adhere to the Wednesday weekly schedule.",
    "data_models": "[]"
  },
  "BENINTEG-1884": {
    "key": "BENINTEG-1884",
    "issue": "The file feed for Sprinto Inc. with United Healthcare Prime was not moved to production as expected, causing the file not to be sent on the scheduled Wednesday.",
    "issue_summary": "The scheduled file feed for Sprinto Inc. with United Healthcare Prime was not sent as expected due to the file feed not being moved to production.",
    "rca": "The issue was caused by the need to cut over using a webscript, which was not completed in time for the scheduled file feed.",
    "steps_taken": "The responsible team member was notified to finish the setup and ensure the file is sent over as planned.",
    "data_models": "[]"
  },
  "BENINTEG-1882": {
    "key": "BENINTEG-1882",
    "issue": "Production file scheduled for 9/10 did not run, causing a delay in sending the insurance data to the carrier.",
    "issue_summary": "The production file for the insurance data scheduled for 9/10 did not run due to plans not being mapped for renewed plans of workweek.",
    "rca": "The root cause of the issue was that the plans were not mapped for the renewed plans of workweek, which resulted in the production file not being sent.",
    "steps_taken": "The issue was identified as similar to a previous Jira ticket (BENINTEG-1759). It was noted that the group had never had a cut over, which is why the weekly file was not sent. A switch over was performed again. The production file was manually pushed, and it was set to start sending again on Tuesday 10/15. It was confirmed that the issue was due to missing renewed plans mapping, and since the first production file was sent successfully, there should be no problem in the weekly transmission file.",
    "data_models": "[]"
  },
  "BENINTEG-1880": {
    "key": "BENINTEG-1880",
    "issue": "The issue was that an internal employee's Qualifying Life Event (QLE) enrollment information was not processed automatically, and there was a need to manually push the enrollment data to Aetna and Guardian.",
    "issue_summary": "An internal employee's QLE enrollment was missed due to a manual data entry error, requiring manual intervention to push the data to Aetna and Guardian.",
    "rca": "The root cause of the issue was identified as a manual data entry error, which led to the employee's QLE information not being processed automatically. This required backfilling the user's QLE information to two vendors, Aetna and Guardian.",
    "steps_taken": "The steps taken to resolve the issue included manually pushing the Vericred amendment to Aetna with a specific coveragePeriodId and sending a Noyo amendment for Guardian with a requestId. Coordination with the carriers was required to ensure the amendments were processed.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-1879": {
    "key": "BENINTEG-1879",
    "issue": "Group MedTech Momentum was approved to move to production with UHC Prime, but there was a need to cut over using a webscript.",
    "issue_summary": "The group MedTech Momentum needed to transition to production with UHC Prime, and the transition was facilitated using a webscript.",
    "rca": "The transition to production for the group MedTech Momentum with UHC Prime was executed using a webscript as part of the support tool.",
    "steps_taken": "The group was moved to production using a webscript as part of the support tool.",
    "data_models": "[]"
  },
  "BENINTEG-1878": {
    "key": "BENINTEG-1878",
    "issue": "Even after successfully setting up File Feed, the client is receiving emails to manually submit forms.",
    "issue_summary": "The client, RoadRunner Recycling, Inc., is receiving emails to manually submit forms despite having successfully set up their carrier transmission. The group is marked as in production, so these emails should not be sent.",
    "rca": "The root cause analysis indicates an operational issue where the system continued to send manual form submission emails even after the carrier transmission was set up and marked as in production.",
    "steps_taken": "The issue was investigated by checking the email logs and confirming that no emails were sent in the past month. The problem was resolved by ensuring the group was correctly marked as in production, which stopped the emails. The resolution was confirmed by checking the role and email logs.",
    "data_models": "[CompanyInsuranceInfo, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-1877": {
    "key": "BENINTEG-1877",
    "issue": "The company North Park Transportation Company Inc is facing validation errors related to marital status codes in the Stedi system for Cigna ACE. The system only accepts 'M' for Married and 'S' for Single, but an invalid code 'B' was encountered.",
    "issue_summary": "Validation errors occurred due to the presence of an unsupported marital status code 'B' in the Stedi system for Cigna ACE, which only accepts 'M' and 'S'.",
    "rca": "The business logic in the Stedi system was changed, which led to the validation error. The system was not accommodating the 'B' code, which stands for 'registered domestic partner'.",
    "steps_taken": "The code 'B' was translated to 'M' to resolve the validation error, allowing the system to process the data correctly.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-1873": {
    "key": "BENINTEG-1873",
    "issue": "Diffuse Bio is facing an issue with the transmission of enrollments for the Bronze PPO 6700/0% w/HSA PrevRx plan due to a plan mapping problem with Ideon and Anthem, resulting in missed enrollments.",
    "issue_summary": "Due to a plan mapping issue between Ideon and Anthem, Ideon is unable to transmit information for the Bronze PPO 6700/0% w/HSA PrevRx plan enrollments, causing multiple missed enrollments.",
    "rca": "The root cause of the issue is a plan mapping problem between Ideon and Anthem, which is expected behavior according to the documentation.",
    "steps_taken": "The engineering team was requested to set the form at the default submission method for all Bronze PPO 6700/0% w/HSA PrevRx plan enrollments. Discussions were held to sort out an alternative with Ideon, and Ideon communicated that they can move forward, resolving the issue.",
    "data_models": "[]"
  },
  "BENINTEG-1872": {
    "key": "BENINTEG-1872",
    "issue": "The Domestic Partner dependent (J. Scheer) of employee 62675757dc637ac6a505729d has not been sent on the Anthem <> Ideon file feed since 02/12/2024. The dependent has a 12/31/2024 coverage end date in the .JSON payload, but there are no COBRA cancellation events on file, and no indicator that the coverage should be terminated.",
    "issue_summary": "Dependent COBRA coverage for J. Scheer was incorrectly terminated in the JSON payload sent to Ideon, causing coverage access issues. The coverage end date was sent prematurely due to a missing feature logic that delays end date population until 90 days before coverage ends.",
    "rca": "The issue was caused by the absence of logic in Rippling that prevents coverage termination dates from appearing in JSON payloads until the current date is within 90 days of the last day of coverage. This logic is not currently applied in Rippling, and a feature request to implement it has been deprioritized.",
    "steps_taken": "The engineering team researched the issue and confirmed the absence of COBRA cancellation events. They pushed an amendment to remove the 12/31/2024 coverage end date from the JSON payload, allowing active coverage to be sent to Ideon as expected.",
    "data_models": "[]"
  },
  "BENINTEG-1871": {
    "key": "BENINTEG-1871",
    "issue": "The COBRA enrollment forms for an employee were mistakenly sent to an incorrect email address instead of being sent via Fax as per the carrier transmission setup.",
    "issue_summary": "The COBRA enrollment forms were sent via email instead of Fax due to a misconfiguration in the carrier connection details for COBRA events, which were set to use email communication.",
    "rca": "The root cause of the issue was that for COBRA events, the carrier connection details were set to use email communication instead of Fax. This configuration led to the forms being sent via email.",
    "steps_taken": "The issue was investigated, and it was confirmed that the communication method for COBRA events was set to email. The email address used for COBRA communications was 'amt@kp.org'. The team confirmed the configuration and marked the issue as resolved.",
    "data_models": "[]"
  },
  "BENINTEG-1870": {
    "key": "BENINTEG-1870",
    "issue": "The issue involves a discrepancy in the scheduled transmission of insurance data for Handle.com, where the ticket mentions Cigna as the carrier with a frequency of Tuesdays at 3am PST, but there is confusion about whether it should be UHC on Wednesdays.",
    "issue_summary": "The ticket initially indicates that the carrier is Cigna with a transmission schedule on Tuesdays, but a comment suggests it might actually be UHC on Wednesdays, leading to confusion about the correct carrier and schedule.",
    "rca": "The root cause analysis indicates that there was a cut over using a webscript, which might have led to the confusion in the carrier and schedule details.",
    "steps_taken": "The comment suggests verifying the carrier and schedule details, and reopening the ticket if the assumption about UHC on Wednesdays is incorrect.",
    "data_models": "[]"
  },
  "BENINTEG-1869": {
    "key": "BENINTEG-1869",
    "issue": "Employee Ivan Eugene Huynh is not showing on the payload to Ideon despite being enrolled in Kaiser with an effective date of 9/1. The payload only contains demographic information, and attempts to push the data over have failed.",
    "issue_summary": "Employee Ivan Eugene Huynh's enrollment in Kaiser is not being transmitted to Ideon due to an issue with the payload, which only contains demographic information. The current year CP appears to be expired, affecting internal operations tools.",
    "rca": "The root cause of the issue was identified as the expiration of the current year CP, which prevented internal operations tools from updating the information and transmitting the complete payload to Ideon.",
    "steps_taken": "The team investigated the expiration of the current year CP and collaborated with Ideon to resolve the issue. With Ideon's assistance, the problem was resolved, and the information was successfully transmitted.",
    "data_models": "[]"
  },
  "BENINTEG-1868": {
    "key": "BENINTEG-1868",
    "issue": "Dependent's effective date is set prior to their date of birth, causing a carrier discrepancy.",
    "issue_summary": "The effective date for the dependent Mica is set to 20231101, which is before her date of birth 20240318, leading to a carrier discrepancy. This issue was previously addressed but has reoccurred.",
    "rca": "The issue was a bug that was previously fixed in another ticket (BENINTEG-1634), but the date has reverted back, causing the discrepancy again.",
    "steps_taken": "The issue was identified as already fixed in a previous ticket, and a screenshot from the production file sent on September 17th confirmed the fix.",
    "data_models": "[]"
  },
  "BENINTEG-1867": {
    "key": "BENINTEG-1867",
    "issue": "OneKonnect notified that the dataset for Scout Motors Delta Dental was not received. The dataset status was 'READY' instead of 'SUBMITTED'.",
    "issue_summary": "The dataset for Scout Motors Delta Dental was not sent to OneKonnect as expected. The status was 'READY' instead of 'SUBMITTED' due to an ETA timeout issue.",
    "rca": "ETA failures spiked in the previous iteration, causing the dataset to not be sent. This was due to an ETA timeout issue during the previous run.",
    "steps_taken": "The issue was monitored, and the dataset was resubmitted successfully in the next scheduled run at 2:00 AM PST. The files were confirmed to be submitted, and the issue was marked as closed.",
    "data_models": "[]"
  },
  "BENINTEG-1866": {
    "key": "BENINTEG-1866",
    "issue": "OneKonnect notified that they did not receive the dataset due to a 'token expired' error, causing a high business impact and blocking the process.",
    "issue_summary": "The dataset was not received by OneKonnect due to a 'token expired' error in the carrier connections dashboard, leading to a high-impact blocker.",
    "rca": "ETA failures spiked in the previous iteration, which caused the 'token expired' error and prevented the dataset from being sent.",
    "steps_taken": "The issue was monitored, and it was noted that there was an ETA timeout issue during the previous run. The process was set to run again at 2:00 AM PST, and the files were successfully sent the next day, resolving the issue.",
    "data_models": "[]"
  },
  "BENINTEG-1865": {
    "key": "BENINTEG-1865",
    "issue": "OneKonnect notified that the dataset for AppliedVR, INC with SunLife was not sent since 9/3, causing a high business impact.",
    "issue_summary": "The dataset for AppliedVR, INC was not sent to OneKonnect due to RipplingManagedForms being set to false for the company, which is expected behavior.",
    "rca": "The root cause of the issue was that the RipplingManagedForms setting was false for the company, which prevented the dataset from being generated and sent. This was expected behavior as per the system configuration.",
    "steps_taken": "The issue was identified as being due to the RipplingManagedForms setting being false. The recommendation was to turn this setting on to enable file generation and sending. Monitoring was done to ensure the process runs correctly at the scheduled time.",
    "data_models": "[CompanyInsuranceInfo]"
  },
  "BENINTEG-1864": {
    "key": "BENINTEG-1864",
    "issue": "OneKonnect notified that the dataset for Active Wellness, LLC was not received. The last dataset was sent on 8/14, and the group had open enrollment for 9/1 renewal. The dataset did not send, and the group has passed their 9/1 renewal date, causing a high business impact.",
    "issue_summary": "The dataset for Active Wellness, LLC was not sent to OneKonnect, causing a high business impact as the group has passed their 9/1 renewal date.",
    "rca": "This issue was identified as a deferred bug fix. There was an ETA timeout issue during the previous run, which prevented the dataset from being sent.",
    "steps_taken": "The issue was monitored, and the dataset was scheduled to run again at 2:00 AM PST. The issue was resolved, and the latest files were checked to ensure everything was as expected.",
    "data_models": "[]"
  },
  "BENINTEG-1857": {
    "key": "BENINTEG-1857",
    "issue": "EE Stephanie Tan added baby Taylor Wu to coverage with an effective date of the child's DOB (2/5/2024). However, the transfer completed with an effective date of 1/1/2024, causing an error during EDI testing.",
    "issue_summary": "The effective date for the dependent's coverage was set before the dependent's date of birth, leading to errors in EDI testing. The effective date needed to be updated to match the child's DOB.",
    "rca": "There is an ongoing task to fix the feature gap related to effective date handling for dependents. This issue is temporarily handled by manually updating the effective date.",
    "steps_taken": "The effective date for the dependent was updated to 2/5/2024 using the Vericred Tool. The QLE was sent from Retool, and the update was reflected in the EE debugger.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-1855": {
    "key": "BENINTEG-1855",
    "issue": "The client's carrier did not receive the termination form for employee Sandra Wright, which was supposed to be sent via email. The broker is trying to obtain an exception to retroactively terminate the employee, but no email copy can be found by any of the intended recipients.",
    "issue_summary": "The termination form email for Sandra Wright was not received by the intended recipients, causing issues with retroactive termination by the carrier. The debugger shows the email as sent, but no record of it exists.",
    "rca": "Logs are missing on PauBox end, and the system only retains logs for emails up to 45 days old. Additionally, the customer was on the BCBS TX impact list, meaning no emails were sent out, and the broker should have managed changes directly on the portal.",
    "steps_taken": "Reviewed the debugger to confirm the email was sent and communicated this to the broker. Searched various inboxes for the email but could not locate it. Checked with the engineering team to confirm if the email was sent or if there was a bounce back. Verified that the email was not sent due to the customer being on the BCBS TX impact list. Attempted to check PAU client logs, but they do not persist older logs beyond 45 days.",
    "data_models": "[]"
  },
  "BENINTEG-1854": {
    "key": "BENINTEG-1854",
    "issue": "Upon clicking the 'Noyo Plan Mapper' link from the company debugger page, it returns the 'sad cloud' error message, blocking the ability to complete Noyo plan mapping tasks and send a census snapshot.",
    "issue_summary": "The 'Noyo Plan Mapper' page fails to load, displaying a 'sad cloud' error, which is blocking the migration process from Ideon to Noyo for the group Paperless Parts.",
    "rca": "The root cause of the issue is related to the API 'get_classification_value_descriptions_v2' throwing a 500 exception, which is needed to support Blue2020 in Noyo.",
    "steps_taken": "The engineering team identified that the API 'get_classification_value_descriptions_v2' is throwing a 500 exception. Further investigation is required to resolve the API error.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-1853": {
    "key": "BENINTEG-1853",
    "issue": "Admin is receiving emails with forms even though the company has an active 834 EDI file feed.",
    "issue_summary": "The admin received emails with forms for enrollments despite having an active 834 EDI file feed, which should have prevented form emails from being sent.",
    "rca": "The issue was resolved manually. It was explained that during Open Enrollment (OE), the file feed is paused, and forms are submitted through emails.",
    "steps_taken": "The issue was manually resolved by explaining to the admin that during Open Enrollment, the file feed is paused, and forms are submitted through emails. No further action was required from engineering.",
    "data_models": "[]"
  },
  "BENINTEG-1852": {
    "key": "BENINTEG-1852",
    "issue": "Admin reported that 8 employee COBRA terminations were not submitted to the carrier via the file feed, resulting in overcharges for the group.",
    "issue_summary": "COBRA terminations for multiple employees at Commerce Fabric, Inc. were not transmitted to the carrier until 08/13/2024, causing overcharges.",
    "rca": "The issue appears to be intermittent, and the data related to the payloads has been cleared from ingestion as amendments were already sent to Vericred. The root cause could not be determined due to the lack of available logs and data.",
    "steps_taken": "Attempts were made to retrieve logs from Snowflake and Datadog to investigate the issue, but the logs were unavailable. The team confirmed that the data had been cleared after sending amendments to Vericred. The issue was marked as done with a note to create a follow-up if it reoccurs.",
    "data_models": "[PendingAction]"
  },
  "BENINTEG-1850": {
    "key": "BENINTEG-1850",
    "issue": "Enrollments/Changes/Terminations emails were being sent to the group's old broker instead of the current one.",
    "issue_summary": "Emails related to enrollments, changes, and terminations were mistakenly sent to the group's old broker due to outdated broker information in the system.",
    "rca": "The issue was caused because the broker information was updated very close to when the last email was sent out, resulting in the email being queued just before the configuration was updated. This led to the emails being sent to the old broker.",
    "steps_taken": "The broker information was updated to the correct broker, HUB_INTERNATIONAL, on 08/28/2024. It was confirmed that no emails were sent to the old broker in the last month, and the Pending Actions for this company were verified to ensure no broker emails are sent anymore. The issue was also resolved in a previous Jira ticket, BENINTEG-1691.",
    "data_models": "[PendingAction]"
  },
  "BENINTEG-1849": {
    "key": "BENINTEG-1849",
    "issue": "Limo Technologies, Inc. faced an error 'No eligible cclis found' when attempting to connect the group to Noyo during the Ideon to Noyo migration.",
    "issue_summary": "Limo Technologies, Inc. encountered an error indicating 'No eligible cclis found' while trying to connect the group to Noyo as part of the migration from Ideon. This blocked the group's Anthem migration to Noyo.",
    "rca": "The issue was categorized as an Ops Issue. It was not reproducible and worked on the first try for this company.",
    "steps_taken": "A meeting with the Noyo team was conducted to troubleshoot the issue. Eventually, the request was successfully submitted, and the ticket was marked as done.",
    "data_models": "[]"
  },
  "BENINTEG-1848": {
    "key": "BENINTEG-1848",
    "issue": "AgentSync's class code menu on their class and enrollment class code page is not populating.",
    "issue_summary": "The class code menu on AgentSync's enrollment class code page is not populating due to data inconsistency caused by old company plans being attached to deleted cclis.",
    "rca": "Data inconsistency in the system was identified as the root cause. Some old company plans were still attached to deleted CompanyCarrierLineInfo (cclis), leading to the issue.",
    "steps_taken": "A script was run to identify and delete the old company plans attached to deleted cclis. The script iterated over InsuranceCompanyPlanInfo objects, checked if their associated CompanyCarrierLineInfo was marked as deleted, and if so, added them to a list and deleted them.\n\n```python\nccli = BaseCompanyCarrierLineInfo.objects.get(id=\"655e30399f3fa31760f4782c\")\ncpis = InsuranceCompanyPlanInfo.objects.filter(company=ccli.company)\ndel_cpi = []\nfor cpi in cpis:\n    if cpi.companyCarrierLineInfo.isDeleted:\n        del_cpi.append(cpi)\n        del_cpi.delete()\nreturn del_cpi\n```",
    "data_models": "[BaseCompanyCarrierLineInfo, InsuranceCompanyPlanInfo]"
  },
  "BENINTEG-1840": {
    "key": "BENINTEG-1840",
    "issue": "The end date of an employee's role at Kojo Technologies, Inc was updated from 2024-06-28 to 2024-07-01, requiring a 'Termination (end date correction)' event to be created and insurance timelines to be updated accordingly.",
    "issue_summary": "The issue involved updating the end date of an employee's role, which required manual handling to ensure that the termination event and insurance timelines were correctly updated.",
    "rca": "The root cause of the issue was that changes to role end dates need to be handled manually, as the current tooling does not automate this process.",
    "steps_taken": "1. Verified that a 'Termination (end date correction)' event was created for the prior termination event. 2. Ensured that insurance timelines were updated by the termination event. 3. Communicated with Noyo via email to update the end date with carriers. 4. Verified COBRA coverage and timelines with the Compliance team. 5. Confirmed that the data in Rippling matched the carrier's data, ensuring no further action was needed.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-1839": {
    "key": "BENINTEG-1839",
    "issue": "Sex of dependents is incorrectly populating as 'U' on the Member Snapshot for several employees at Enveda Therapeutics, despite being correctly set in the Rippling system.",
    "issue_summary": "The sex of dependents for employees at Enveda Therapeutics is showing as 'U' in the Member Snapshot, while it is correctly set in the Rippling system. This issue is related to data transmission through Noyo.",
    "rca": "The root cause of the issue was identified as a bug in the Noyo data transmission process, where the sex of dependents was not being correctly populated in the snapshot data.",
    "steps_taken": "The team investigated the Noyo data and employee debugger to identify the issue. Mapping was completed to ensure the correct sex values were transmitted. After the mapping was corrected, the issue was resolved, and the dependents' sex values were correctly populated.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-1838": {
    "key": "BENINTEG-1838",
    "issue": "The COBRA enrollment for Fifth Wall Ventures Management was sent via email instead of the expected file feed, despite having a file feed set up.",
    "issue_summary": "COBRA enrollments for Fifth Wall Ventures Management were sent via email instead of file feed due to the carrier being on Noyo, which does not support COBRA enrollments via EDI.",
    "rca": "The carriers for the company are on Noyo, which does not support COBRA enrollments via EDI. Therefore, the system is functioning as expected by sending COBRA enrollments via email.",
    "steps_taken": "The issue was identified as expected behavior due to the limitations of Noyo in handling COBRA enrollments via EDI. The ticket was marked as done after confirming this behavior.",
    "data_models": "[]"
  },
  "BENINTEG-1837": {
    "key": "BENINTEG-1837",
    "issue": "The production file for SnapStream Media Inc was not running automatically on the scheduled frequency, causing delays in the transmission of insurance benefits to the carrier.",
    "issue_summary": "The production file for SnapStream Media Inc was not executed automatically as per the scheduled frequency, leading to missed transmissions for two consecutive weeks.",
    "rca": "The issue was related to the use of a support tool, specifically a webscript, which was supposed to automate the scheduling of the production file but failed to do so.",
    "steps_taken": "The team confirmed the scheduling issue and planned to close all cut over tickets, indicating a resolution or transition to a new process.",
    "data_models": "[]"
  },
  "BENINTEG-1836": {
    "key": "BENINTEG-1836",
    "issue": "The cleanup step for Ideon in the Lilt's Cigna file feed is failing, causing a blocker in the production process with EBN.",
    "issue_summary": "The cleanup step for Ideon in the Lilt's Cigna file feed is failing due to an error where 2 items are returned instead of 1, causing a blocker in the production process with EBN.",
    "rca": "The issue was caused by the use of Retool, which returned 2 items instead of the expected 1 during the cleanup process for the EBN EDI order.",
    "steps_taken": "The ticket was closed after verifying that there was no active Ideon connection for the specified company-carrier combination, as evidenced by the screenshot provided in the comment.",
    "data_models": "[]"
  },
  "BENINTEG-1834": {
    "key": "BENINTEG-1834",
    "issue": "Noyo Transactions not sending SSN's, resulting in 72 blocked transactions for the group Rewiring America.",
    "issue_summary": "Transactions for the group Rewiring America were blocked because the SSN was not included in the payload sent to Guardian, causing a 422 error.",
    "rca": "The group has moved to a snapshot with Noyo, and the missing SSN is now included in the payload.",
    "steps_taken": "The issue was resolved by moving the group to a snapshot with Noyo, which ensured that the SSN was included in the payload. The ticket was then closed.",
    "data_models": "[]"
  },
  "BENINTEG-1832": {
    "key": "BENINTEG-1832",
    "issue": "The Fundworks, LLC was unable to view the change forms in the Open Enrollment materials, even after regenerating the submission material.",
    "issue_summary": "The change forms were missing from the Open Enrollment materials for The Fundworks, LLC due to a code issue that was resolved in a related ticket.",
    "rca": "The issue was caused by an incorrect implementation in the code, which was resolved in the related ticket BENINTEG-1821.",
    "steps_taken": "The engineering team fixed the code issue, and the carrier packet was recreated to ensure the change forms appeared correctly.",
    "data_models": "[]"
  },
  "BENINTEG-1830": {
    "key": "BENINTEG-1830",
    "issue": "The employee's COBRA coverage effective date was misentered, causing the active coverage to terminate prematurely on 08/02/2024, instead of continuing through August. The COBRA information was not transmitting correctly, showing coverage beginning 08/01 and ending 08/02.",
    "issue_summary": "The issue was caused by a misentry of the COBRA coverage effective date, leading to incorrect termination of active coverage and incorrect COBRA transmission.",
    "rca": "The root cause was identified as a misentry of the COBRA coverage effective date by the employee, which led to the active coverage terminating on 08/02/2024 and COBRA coverage not being transmitted correctly.",
    "steps_taken": "The engineering team was instructed to have UHC manually correct the employee's coverage to end on 08/30 for active coverage and begin COBRA on 09/01. The COBRA QLE was resent to Vericred with the correct start date of 09/01. The data was fetched from Vericred to confirm the correction, and the issue was closed once the data reflected the correct information.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-1829": {
    "key": "BENINTEG-1829",
    "issue": "The wrong email addresses were being attached to auto-generated OneKonnect orders, causing manual updates and communication issues.",
    "issue_summary": "Auto-generated OneKonnect orders were being sent with incorrect email addresses, leading to manual updates by OneKonnect and communication issues with the Ops team.",
    "rca": "The email address in the system was incorrect, leading to the wrong contact information being sent with OneKonnect orders.",
    "steps_taken": "The email address was corrected from 'onekonnect_implementations@rippling.com' to 'onekonnect-implementations@rippling.com'. The changes were deployed to resolve the issue.",
    "data_models": "[]"
  },
  "BENINTEG-1827": {
    "key": "BENINTEG-1827",
    "issue": "Forms are not generated for new hires at Kalustyan Corporation, impacting their insurance coverages.",
    "issue_summary": "Forms for new hires at Kalustyan Corporation were not generated, causing a delay in sending necessary information to carriers Aetna & Equitable.",
    "rca": "The support case related to the issue was closed, which deferred the resolution of the problem.",
    "steps_taken": "The ticket was flagged multiple times indicating the closure of the associated support case to keep the backlog clean. Eventually, the ticket was closed as the support case was closed.",
    "data_models": "[]"
  },
  "BENINTEG-1826": {
    "key": "BENINTEG-1826",
    "issue": "The broker for Soar Autism Center claims that their carrier connections with Anthem and Guardian have disappeared, but there is no visible history of these connections in the system.",
    "issue_summary": "The broker for Soar Autism Center reported missing carrier connections with Anthem and Guardian, but investigations showed no history of such connections being set up.",
    "rca": "The issue was due to a misunderstanding or miscommunication. There were two different companies set up: Soar Autism Center and Soar Health. The connections were set up for Soar Health, not Soar Autism Center, which led to the confusion.",
    "steps_taken": "Investigated the group and vendor details, checked for any deleted connections, confirmed with the broker about the carrier and connection type, and identified that the connections were set up for a different company (Soar Health) rather than Soar Autism Center.",
    "data_models": "[CompanyInsuranceInfo]"
  },
  "BENINTEG-1825": {
    "key": "BENINTEG-1825",
    "issue": "Catherine Martin's OE task for 1/1/24 - 12/31/24 was completed, and there was uncertainty about whether the enrollment form was sent to the carrier UHC via email. The request was to verify if the form was sent and to provide details for client sharing.",
    "issue_summary": "The issue was about confirming the transmission of enrollment forms for a BOB group to the carrier UHC. The main concern was whether the forms were sent via email as expected.",
    "rca": "The root cause was identified as a misunderstanding of the process for OE enrollments. It was clarified that OE enrollments do not get emailed, which is the expected behavior.",
    "steps_taken": "The integration team was tasked with checking the form status. It was confirmed that the form was not sent because OE enrollments are not emailed. This was communicated back to the requester.",
    "data_models": "[EmployeeEnrollmentTask]"
  },
  "BENINTEG-1824": {
    "key": "BENINTEG-1824",
    "issue": "The STD plan for Blew & Associates is not passing consistent data to OneKonnect. The expected total STD volume of 700 (Basic STD: 400 + Buy Up STD: 300) is not being transmitted correctly.",
    "issue_summary": "Inconsistent data transmission of STD volumes to OneKonnect for Blew & Associates, where the expected total STD volume of 700 is not being sent.",
    "rca": "The issue is being tracked as a feature request in a Slack thread. The root cause is related to how the benefit amounts are calculated and transmitted, specifically the need to sum the approvedBasicVolumeInfo and approvedVoluntaryVolumeInfo fields to get the correct total benefit amount.",
    "steps_taken": "The team identified the need to sum the sli.approvedBasicVolumeInfo and sli.approvedVoluntaryVolumeInfo fields to get the correct total benefit amount. Changes were made in the codebase to address this, and the fix was verified after the next EBN file generation.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-1823": {
    "key": "BENINTEG-1823",
    "issue": "Pacific Deals' CIGNA ACE file failed to load at the carrier due to missing INS08 (Employment Status) in the file.",
    "issue_summary": "The CIGNA ACE file for Pacific Deals was missing the INS08 (Employment Status) field, causing the file to fail to load at the carrier.",
    "rca": "The root cause of the issue was a change in the business logic on Stedi, which affected the inclusion of the INS08 field in the file.",
    "steps_taken": "The issue was fixed by ensuring that the INS08 field is only empty when member_indicator_01 is 'N'. A test file was generated to verify the fix, showing the correct INS loops.",
    "data_models": "[]"
  },
  "BENINTEG-1821": {
    "key": "BENINTEG-1821",
    "issue": "Stoke Space Technologies' OE submission materials did not include EE change forms, which were expected to be part of the package for carrier submission.",
    "issue_summary": "The OE submission materials for Stoke Space Technologies were missing the EE change forms, which are essential for carrier submission after Open Enrollment. This issue was identified when the admin attempted to download the materials post-OE, which ended on 08/28.",
    "rca": "The root cause of the issue was an incorrect implementation in the system, as indicated by the 'Bug Fix' category and 'Incorrect Implementation' subcategory in the RCA. The specific details of the incorrect implementation were referred to in a PR linked in the ticket.",
    "steps_taken": "The issue was escalated and investigated by the engineering team. After identifying the root cause, a fix was implemented and deployed. The team then instructed the stakeholders to regenerate the carrier packet, which successfully included the EE change forms.",
    "data_models": "No specific data models were mentioned in the ticket or comments."
  },
  "BENINTEG-1819": {
    "key": "BENINTEG-1819",
    "issue": "Benefits enrollment forms not getting sent to carriers automatically for new hires during enrollment, causing confusion for the admin regarding employee status, action date, and enrollment delay.",
    "issue_summary": "New hire enrollment forms were not sent automatically due to system logic that delayed sending until a specific date, causing confusion for the admin.",
    "rca": "The system was working as expected. The forms were not sent immediately because the logic for the carrier required the forms to be sent only after a specific date (Sep-3). The forms were manually sent before this date, which was why they were not sent automatically.",
    "steps_taken": "The issue was investigated by checking the communication setup for the carrier-group combination and debugging the logic related to the date that prevented the form from being sent. It was confirmed that the system behavior was as expected, and the forms would have been sent automatically if waited for a few days. The forms were manually sent before the expected date, and the ticket was closed as the system was functioning correctly.",
    "data_models": "[CustomCommunicationDetail]"
  },
  "BENINTEG-1818": {
    "key": "BENINTEG-1818",
    "issue": "The issue involves 6 blocked Group Coverage Cancellation transactions for Antares Nuclear, Inc with Guardian via Noyo. The errors are not providing actionable insights, and attempts to retry the transactions have failed.",
    "issue_summary": "6 Group Coverage Cancellation transactions for Antares Nuclear, Inc with Guardian are blocked in Noyo, with errors not providing actionable insights.",
    "rca": "The root cause analysis indicates a bug related to special case handling, specifically involving invalidated CCLIs (InsuranceCompanyCarrierLineInfo) where expiration dates are less than effective dates. This led to issues in plan mappings and blocked transactions.",
    "steps_taken": "The team reviewed the issue internally and attempted to retry the transactions without success. A related bug was identified and addressed in another ticket (BENINTEG-1369). Further investigation revealed issues with invalidated CCLIs, prompting questions to the Ben Admin team. A feature flag was introduced to fetch only valid CCLIs, which was turned on to resolve the issue.",
    "data_models": "[InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-1817": {
    "key": "BENINTEG-1817",
    "issue": "The dataset for HeyTutor's MetLife connection was not being sent to OneKonnect, causing a high business impact and blocking the process.",
    "issue_summary": "The dataset for HeyTutor's MetLife connection was not being sent to OneKonnect due to an issue with a subscriber's address being None, which blocked the data transmission.",
    "rca": "The root cause of the issue was identified as an intermittent problem where the EBN file generation failed because at least one of the subscribers had an address set to None. This was due to a test account with incomplete onboarding, resulting in a missing home address.",
    "steps_taken": "The engineering team identified the issue using DD logs and a Python script to filter SubscriberLineInfo objects for the company. They found a test account with a missing home address. The test account's enrollment information was deleted, allowing the account to be removed and unblocking the forms. The issue was then resolved, and the forms were sent successfully.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-1816": {
    "key": "BENINTEG-1816",
    "issue": "The end date of the role for Elliot Grace Charland was updated from 2024-08-27 to 2024-09-02, requiring updates to termination events and insurance timelines.",
    "issue_summary": "The end date for Elliot Grace Charland's role was updated, necessitating the creation of a 'Termination (end date correction)' event and updates to insurance timelines and carrier notifications.",
    "rca": "The root cause was identified as a validated end date change using a support tool, which required updates to the termination event and insurance timelines.",
    "steps_taken": "1. Verified that a 'Termination (end date correction)' event was created for the prior termination event. 2. Reviewed insurance timelines to ensure they were updated by the termination event. 3. Checked that forms were generated and sent correctly to BCBS and UHC, although pending actions were not active due to an unclosed Confirm Enrollment Task. 4. Confirmed that the date change for the principal was processed via Noyo. 5. Closed the ticket as no further action was needed from the COBRA team, and all lines were waived in the Insurance Enrollment Before Termination event.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-1814": {
    "key": "BENINTEG-1814",
    "issue": "Incorrect employee employment details are being sent on the PEO EDI feed to Ideon, causing production errors as the carrier shows the employee as active while Rippling indicates the employee is terminated.",
    "issue_summary": "The employee's status, start date, and end date values in the JSON payload sent to Ideon are incorrect, showing terminated status and incorrect dates despite the employee being rehired and active.",
    "rca": "The group (PEO) was migrated to Noyo, which resolved the issue. The incorrect status and date values were likely due to outdated data being pulled from the previous system.",
    "steps_taken": "The issue was resolved by migrating the group to Noyo, which corrected the data being sent to Ideon.",
    "data_models": "[]"
  },
  "BENINTEG-1813": {
    "key": "BENINTEG-1813",
    "issue": "Rippling is not managing forms for a group, but the group should still have the option to update the status of the form, which is not happening.",
    "issue_summary": "The group is unable to update the status of forms because the forms are not being generated due to a missing template in S3.",
    "rca": "The root cause of the issue was identified as a missing template in S3, which prevented the generation of forms for the group.",
    "steps_taken": "The issue was resolved by ensuring the missing template was added to S3, allowing the forms to be generated successfully. The logs were checked to confirm that form generation failed due to the missing template, and once the template was added, the forms were generated.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-1812": {
    "key": "BENINTEG-1812",
    "issue": "Stodge Inc. DBA Postscript faced an error when attempting to access employee Kayla Lum's Noyo Amendment page, indicating a failure to find a matching Noyo plan mapping information, despite the plan mapping appearing correct.",
    "issue_summary": "The issue was that the Noyo plan mapping for the Hospital Indemnity line type for employee Kayla Lum was not found, causing a transmission error to Noyo, even though the plan mapping appeared correct.",
    "rca": "The root cause was identified as the groupId for the company not being set up for the CCLIs, which prevented the plans from appearing in the Noyo plan mapper. This was a special case handling bug.",
    "steps_taken": "The issue was reviewed with a Noyo expert, and it was identified that the groupId for the company was not set up for the CCLIs. Once this was corrected, the plans started appearing in the Noyo plan mapper, resolving the issue.",
    "data_models": "[InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-1809": {
    "key": "BENINTEG-1809",
    "issue": "The COBRA enrollment for employee Renee Gardner was not sent via EDI file feed to Kaiser, despite having an active EDI connection since November 27, 2023. The enrollment was made on April 13, 2024, but was not transmitted.",
    "issue_summary": "COBRA enrollment for an employee was not sent via EDI due to the 'cobrasupported' flag being set to false in the active Vericred connection.",
    "rca": "The root cause of the issue was identified as the 'cobrasupported' flag being set to false in the data received from Vericred's API, which prevented the COBRA payloads from being sent.",
    "steps_taken": "The issue was escalated to Ideon (Vericred), who identified and fixed the problem on their end. The 'cobrasupported' flag was corrected, allowing COBRA payloads to be sent.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-1808": {
    "key": "BENINTEG-1808",
    "issue": "Forms are not getting generated for Edge Delta carrier for new hires and COBRA cancellations for the carrier Information Technology Industry Health Trust (WA).",
    "issue_summary": "Forms for new hires and COBRA cancellations are not being generated due to a naming error in the forms stored in BOX.",
    "rca": "There was a naming error in the forms stored in BOX, specifically a leading space in the form names, which prevented the forms from being generated.",
    "steps_taken": "The issue was identified as a naming error in the forms on BOX. The names of the forms were corrected to remove the leading space. The following code snippet was used to regenerate the forms: `pa = PendingAction.objects.get(id=\"66d4965962a68528e7a36366\") return createEtaTaskPdfs(pa, deleteForms=True, forceRegenerate=True)`. After fixing the names, the forms were regenerated and verified to be appearing correctly.",
    "data_models": "[PendingAction]"
  },
  "BENINTEG-1807": {
    "key": "BENINTEG-1807",
    "issue": "The COBRA enrollment for EE Clayton Edward Elliot was sent via forms instead of EDI, despite having an active EDI connection with Anthem since Nov 13, 2023. This issue has occurred twice, causing concern for the group.",
    "issue_summary": "COBRA enrollment for an employee was sent via forms instead of EDI due to the current Vericred coverage period having cobraSupported set to false, despite having an active EDI connection.",
    "rca": "The root cause of the issue was identified as the current Vericred coverage period having cobraSupported set to false. This setting caused the system to default to sending forms instead of using the EDI connection for COBRA enrollments.",
    "steps_taken": "The issue was temporarily resolved by manually triggering an amendment in the Vericred tab to reflect the COBRA enrollment correctly. Additionally, it was confirmed that the active Vericred connection does not support sending COBRA events automatically as per the current configuration. The team reached out to Vericred to understand why cobraSupported is set to false in their API response.",
    "data_models": "[PendingAction, VericredCompanyCarrier]"
  },
  "BENINTEG-1805": {
    "key": "BENINTEG-1805",
    "issue": "The issue involves confirming the engineering logic for open enrollment redeterminations related to salary updates for Simplex Trading, specifically how these updates will be communicated via Noyo Snapshots upon renewal.",
    "issue_summary": "The ticket seeks confirmation on the engineering logic for salary redetermination reporting during open enrollment, particularly concerning Noyo Snapshots, to ensure updated salaries are correctly processed.",
    "rca": "The support case associated with this ticket was closed, leading to the closure of this ticket as well. The closure was part of a bulk action to maintain a clean backlog, focusing on tickets where customers are actively waiting.",
    "steps_taken": "The steps involved working with an Ops Noyo specialist to troubleshoot the issue. However, the ticket was flagged and closed due to the associated support case being closed.",
    "data_models": "[]"
  },
  "BENINTEG-1804": {
    "key": "BENINTEG-1804",
    "issue": "The 'Vericred Amendment' pages for 44 employees are inaccessible, preventing Insurance Ops from taking action on related audit items.",
    "issue_summary": "The 'Vericred Amendment' pages for 44 employees under the company Hopin (now Bending Spoons US, Inc.) are not loading, blocking Insurance Ops from addressing 44 audit items.",
    "rca": "No issue right now",
    "steps_taken": "The issue was resolved as all audit items were removed from the queue, and no further action was required. The ticket was closed with the understanding that it would be reopened if the issue reoccurred.",
    "data_models": "[]"
  },
  "BENINTEG-1803": {
    "key": "BENINTEG-1803",
    "issue": "Summit Global Investments reported that enrollment forms for a customer, Elisha Werner, were generated but not delivered. Additionally, there was a concern about forms not being automatically delivered for new hires.",
    "issue_summary": "Enrollment forms for Summit Global Investments were generated but not delivered due to carriers not being set up for email delivery. The issue persisted because the EDI feed setup made email delivery irrelevant.",
    "rca": "The root cause of the issue was that the carriers were not configured to receive email forms. With the EDI feed now set up, the email delivery of forms became unnecessary, which was not initially communicated or understood.",
    "steps_taken": "The issue was resolved by confirming that the EDI file is in production, making the email delivery of forms irrelevant. The ticket was marked as resolved after this confirmation.",
    "data_models": "[]"
  },
  "BENINTEG-1786": {
    "key": "BENINTEG-1786",
    "issue": "The employee's UHC coverage end date was not properly transmitted to Ideon, resulting in the employee being erroneously reinstated and receiving 3 extra months of coverage.",
    "issue_summary": "The issue was that the employee's coverage end date was not included in the file feed transmission to Ideon, despite being present in the JSON payload, leading to erroneous reinstatement of coverage.",
    "rca": "The root cause was identified as an exception in the performAction function due to a missing Vericred ID for the member, which prevented the proper transmission of the coverage end date to Ideon.",
    "steps_taken": "The issue was investigated by reviewing the JSON payload and file transmission records. An exception trace was found in the performAction function, indicating a missing Vericred ID. After addressing this issue, the Vericred API was able to process the member data. The company carrier connection was then moved to Noyo and marked as Waived.",
    "data_models": "[PendingAction, SubscriberLineInfo]"
  },
  "BENINTEG-1784": {
    "key": "BENINTEG-1784",
    "issue": "Employee Sheldon Cooper experienced a missed enrollment due to the wrong policy ID being sent to Noyo, affecting his coverage.",
    "issue_summary": "The system sent the wrong policy ID (00943584 instead of 878530) to Noyo, causing a missed enrollment for employee Sheldon Cooper.",
    "rca": "The root cause was a business logic change due to the migration of carriers from IDEON to NOYO. Carriers now supporting Noyo need to be included in member requests even if the company is not actively using Noyo for updates. The amendment tool was not picking up carrier SLIs correctly, marking them as terminated.",
    "steps_taken": "The existing transaction with Noyo was canceled, and an urgent request was made to send a new amendment with the correct policy ID. The issue was identified as being with the amendment tool not picking up carrier SLIs correctly. A fix was developed and reviewed, and the ticket was closed after the fix was deployed.",
    "data_models": "[SubscriberLineInfo, PendingActionGroup]"
  },
  "BENINTEG-1783": {
    "key": "BENINTEG-1783",
    "issue": "The API connection for DigitalPath Inc. is live in Noyo but is still showing as 'in implementation' in the Benefit Admin app's Carrier Transmissions tab.",
    "issue_summary": "The API connection status for DigitalPath Inc. is not syncing correctly between Noyo and the Benefit Admin app, causing a discrepancy in the displayed status.",
    "rca": "The root cause of the issue is related to the manual setting of the connectionId, which is not the normal process. This issue may have been exacerbated by the migration from Ideon to Noyo, requiring nontraditional implementation steps. Additionally, there is a feature request tracked under BENINTEG-1134 to address this issue.",
    "steps_taken": "The issue was investigated by checking the Noyo portal and confirming the connection was live. The company debugger was used to verify the completion of Noyo setup tasks. The connectionId was manually set via the company debugger, which resolved the immediate issue. The update_bob_company_carrier_transmissions ETA was checked to ensure it sets the connection status to LIVE when the NoyoCompanyCarrierTransmission.isConnectionLive method returns True. The history of the NoyoCompanyCarrierTransmission and NoyoCompanyCarrier objects was reviewed to understand the status changes.",
    "data_models": "[NoyoSetupTask, BaseCompanyCarrierTransmission, NoyoCompanyCarrierTransmission, NoyoCompanyCarrier]"
  },
  "BENINTEG-1782": {
    "key": "BENINTEG-1782",
    "issue": "Mapping issue blocking Anthem migrations from Ideon to Noyo due to active data for a prior plan year present in Noyo, which cannot be mapped in Rippling.",
    "issue_summary": "The issue is a mapping problem where active data for a prior plan year in Noyo is preventing correct mapping in Rippling, affecting at least 40 groups in the migration process.",
    "rca": "The root cause was identified as the Noyo plan mapper not supporting snapshots for groups that have recently gone through renewals. This was due to Anthem not sending end dates for the plans, causing both current and prior plan years to be pulled in, leading to mapping issues.",
    "steps_taken": "The solution involved updating the NoyoPlanMapper to show older plans so that operations can map them to active Noyo plans. Temporary solutions were attempted, and errors were monitored through amendment tooling and census sending tools. The team decided to map just the new plans and push a census with 'retool 2', reviewing error messages and using the 'map older plans' function if necessary.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, SubscriberLineInfo]"
  },
  "BENINTEG-1778": {
    "key": "BENINTEG-1778",
    "issue": "Humana (TX) enrollment forms are not generating in Rippling for a group using Humana for Dental and Vision. The forms were previously generating but stopped working between 7/29 and 8/5, affecting new hires and QLEs.",
    "issue_summary": "Humana (TX) enrollment forms stopped generating due to a manual data entry error where the file extension was incorrect.",
    "rca": "The root cause of the issue was a manual data entry error where the file extension for the Humana (TX) enrollment form was incorrectly set to 'PDF' in capital letters instead of 'pdf' in lowercase letters.",
    "steps_taken": "The issue was identified as a wrong file extension in the Box storage. The correct form was regenerated with the proper file extension 'pdf' in lowercase letters to resolve the issue.",
    "data_models": "[]"
  },
  "BENINTEG-1777": {
    "key": "BENINTEG-1777",
    "issue": "The COBRA enrollment form for Chelsie Hartness at Snappy Kraken, Inc. did not include the carrier's email address, resulting in the employee not being included in their coverage.",
    "issue_summary": "The COBRA enrollment email sent to BCBS did not include the carrier's email address, preventing the employee from being added to their coverage.",
    "rca": "The root cause was identified as missing data in the email sent to the carrier, specifically the carrier's email address was not included. The email has since been sent successfully.",
    "steps_taken": "The issue was resolved by re-sending the email to the carrier, which was successfully delivered.",
    "data_models": "[]"
  },
  "BENINTEG-1776": {
    "key": "BENINTEG-1776",
    "issue": "Aetna has terminated Sultan Alsawaf's dental and vision coverage for COBRA due to a future termination date of 11/30/24 being present in the file feed, which is not allowed. This issue is causing Aetna to continue terminating coverage until the future termination date is removed.",
    "issue_summary": "Aetna terminated Sultan Alsawaf's dental and vision coverage due to a future termination date being present in the file feed, which is not allowed by Ideon and Aetna.",
    "rca": "The root cause of the issue was the presence of a future termination date in the file feed sent to Aetna, which is not permitted by Ideon and Aetna. The support tool used was Vericred/Ideon retool to send and change the QLE.",
    "steps_taken": "The future termination date was removed by sending a custom request to Ideon. The request included details such as coverage_period_id, eligibility_start_date, enrollment_received_date, enrollment_signature_date, event, external_identifier, and plan_elections for medical coverage with COBRA status.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-1775": {
    "key": "BENINTEG-1775",
    "issue": "The effective date for the employee Alison Manuilow was incorrectly set to 1/1/2024 for medical coverage, whereas it should have been 2/1/2024. The offline change processed did not update the effective date in the Vericred tab.",
    "issue_summary": "The effective date for medical coverage was incorrectly set to 1/1/2024 instead of 2/1/2024 for the employee Alison Manuilow, and the offline change did not reflect in the Vericred tab.",
    "rca": "The Vericred support tool was used, and the QLE (Qualifying Life Event) was updated, which led to the incorrect effective date being set.",
    "steps_taken": "The QLE was posted, and the effective date was updated to the correct date of 2/1/2024. The updated JSON reflects the corrected effective date for all members.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-1774": {
    "key": "BENINTEG-1774",
    "issue": "Carrier object for Anthem Blue Shield (Collective Health) CA was incorrectly routed to Noyo, which should not have been the case.",
    "issue_summary": "The carrier object for Anthem Blue Shield (Collective Health) CA was mistakenly sent to Noyo due to incorrect routing logic, which should have excluded this TPA from Noyo connections.",
    "rca": "Noyo support was incorrectly added to all Anthem carriers, including those that should not have been connected to Noyo, such as Anthem Collective Health.",
    "steps_taken": "The issue was resolved by verifying that no other groups were affected and confirming that a pull request (PR) fixed the routing logic to exclude Anthem Collective Health from Noyo connections. The PR can be found at: https://github.com/Rippling/rippling-main/pull/248669/files#diff-af11e4e36b8cda69711badf6c64d8efa284a2e80c4c088b695d9b644305a40b2",
    "data_models": "[]"
  },
  "BENINTEG-1773": {
    "key": "BENINTEG-1773",
    "issue": "Admin reported that several members with rejected Evidence of Insurability (EOI) had their coverage amounts changed once their OneKonnect file went live, causing incorrect enrollments and overcharges.",
    "issue_summary": "The issue was that rejected EOIs were still being submitted as pending amounts, leading to incorrect member enrollments and overcharges for the group.",
    "rca": "The root cause was identified as a product enhancement need where the system should not submit benefits as amount pending if the EOI is rejected. The system should either notate on the file feed if an EOI is pending or rejected, or include a rejected amount section for ancillary lines of coverage.",
    "steps_taken": "The issue was marked as a feature request and tracked under a new ticket BENINTEG-2737. It was noted that the memberEOIStatus.eoiStatus should be set to REJECTED, and the system should fallback to the base amount if the EOI is rejected, ensuring that the pending amount is not transmitted.",
    "data_models": "[memberEOIStatus]"
  },
  "BENINTEG-1771": {
    "key": "BENINTEG-1771",
    "issue": "The issue involves Overjet Inc. with Cigna as the carrier, where there is a need to cut over using a webscript, and the frequency of the task is set to weekly on Tuesday at 3 AM PST.",
    "issue_summary": "The issue pertains to the need for a cut over using a webscript for Overjet Inc. with Cigna, scheduled weekly on Tuesday at 3 AM PST.",
    "rca": "The root cause analysis indicates that the issue is related to the use of a support tool, specifically a cut over using a webscript.",
    "steps_taken": "The ticket was moved from Triage to Open as requested by the support team, which was the necessary action to address the issue.",
    "data_models": "[]"
  },
  "BENINTEG-1770": {
    "key": "BENINTEG-1770",
    "issue": "The issue is that there is no feature to capture employee/dependent suffixes in the correct field for Ideon EDI purposes, blocking an EDI feed setup for ZENBUSINESS INC.",
    "issue_summary": "The issue is that there is no feature to capture employee/dependent suffixes in the correct field for Ideon EDI purposes, blocking an EDI feed setup for ZENBUSINESS INC.",
    "rca": "The root cause of the issue is a lack of a feature to support name suffixes in the Ideon EDI integration, leading to manual data entry errors.",
    "steps_taken": "The steps taken to resolve the issue included manually adding suffixes to each member and updating last names to remove suffixes from that field. Additionally, a request was made to trigger 'Push Subscriber Data to Vericred' for all members to push the fix.",
    "data_models": "No specific data models were mentioned in the ticket."
  },
  "BENINTEG-1768": {
    "key": "BENINTEG-1768",
    "issue": "Zenni, a high ARR customer, faced issues with class code configuration after migrating from Ideon to Noyo, impacting employee enrollments and causing denial of care for an employee's child.",
    "issue_summary": "Zenni faced issues with class code configuration after migrating from Ideon to Noyo, impacting employee enrollments due to inability to set class codes correctly.",
    "rca": "The root cause was the need to enhance the CarrierClassification model to support plan exclusions. The issue was compounded by Ops mapping bill groups to Noyo plans, which was not supposed to be in the plan config, causing setup tasks to reopen.",
    "steps_taken": "The CarrierClassification model was enhanced to support plan exclusions. A backend workaround was proposed and implemented to address the immediate issue. The solution involved expanding the class code application logic to include plans from other carriers and adding options for applying class codes based on plan enrollment status. The feature was deployed and tested, and the setup tasks were cleared by un-mapping the bill group.",
    "data_models": "[CarrierClassification, InsuranceCompanyInfo]"
  },
  "BENINTEG-1766": {
    "key": "BENINTEG-1766",
    "issue": "Macquarie AirFinance employee Veronica Galarza Mercado has NHE forms in the debugger but they are not accessible to the admin or broker in Rippling.",
    "issue_summary": "The issue occurred because the employee completed both NHE and a redundant QLE on the same day, which led to the absence of enrollment forms accessible to non-Rippling employees.",
    "rca": "If NHEs and QLEs occur on the same day, enrollment forms are not generated due to invalid SLIs triggering a condition that assumes the client already has a relationship with the carrier. This is a special case handling bug.",
    "steps_taken": "The engineering team investigated the issue by checking the condition in the code that prevents form generation. They identified that invalid SLIs were being included in determining the previous relationship with the carrier. A product ticket was created for prioritization, and as a temporary measure, forms were shared from the debugger to unblock the admin.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-1765": {
    "key": "BENINTEG-1765",
    "issue": "After onboarding the group, there was a transmission error related to the marital status code in the demographic details.",
    "issue_summary": "Transmission error occurred due to an invalid marital status code 'B' which is not recognized by the system.",
    "rca": "The root cause of the issue was that the mapping for the marital status code was not completed, leading to the transmission error.",
    "steps_taken": "The demographic error was identified and sorted out. A test file was successfully run to confirm the resolution of the issue, after which the ticket was closed.",
    "data_models": "[]"
  },
  "BENINTEG-1764": {
    "key": "BENINTEG-1764",
    "issue": "Group's UHC file feed is not live, blocking OE elections and causing 26 non-OE transactions to not be submitted via email. Demographic changes and new hire enrollments are also being blocked by the file feed setup.",
    "issue_summary": "The UHC file feed for InMocean Group LLC is not live, blocking OE elections and other transactions. The system is expected to send OE elections via file feed even when it's not live, causing issues.",
    "rca": "The ticket was closed as it was not triaged, indicating that the issue was not fully investigated or resolved at the time of closure.",
    "steps_taken": "No specific steps were taken to resolve the issue as the ticket was closed without triage.",
    "data_models": "[]"
  },
  "BENINTEG-1762": {
    "key": "BENINTEG-1762",
    "issue": "OneKonnect is reporting that blank benefit volumes for Life and Disability coverages are being sent, resulting in a 0 value being passed to the carrier in the 'benefitamount' field for MetLife.",
    "issue_summary": "Blank benefit volumes for Life and Disability coverages are being sent to OneKonnect, causing a 0 value to be passed to MetLife. This issue started occurring after 08-19-2024.",
    "rca": "The issue was categorized as a bug under EBN and was resolved as part of an attached incident.",
    "steps_taken": "Reviewed the dataset and confirmed that all members were experiencing the same issue. Updated datasets with non-zero benefit amounts were sent to EBN, and the related incident was resolved.",
    "data_models": "[]"
  },
  "BENINTEG-1761": {
    "key": "BENINTEG-1761",
    "issue": "OneKonnect is reporting that blank benefit volumes for Life and Disability coverages are being sent, resulting in a 0 value being passed to the carrier in the 'benefitamount' field for MetLife.",
    "issue_summary": "Blank benefit volumes for Life and Disability coverages are being sent to OneKonnect, causing a 0 value to be passed to MetLife in the 'benefitamount' field.",
    "rca": "The issue was categorized as a bug within the EBN component and was resolved as part of a related incident.",
    "steps_taken": "Reviewed the dataset and confirmed that all members were experiencing the same issue. Updated datasets with non-zero benefit amounts were sent to EBN, and the related incident was resolved. The resolution was confirmed via the carrier connections dashboard.",
    "data_models": "[]"
  },
  "BENINTEG-1760": {
    "key": "BENINTEG-1760",
    "issue": "OneKonnect is reporting that blank benefit volumes for Life and Disability coverages are being sent, resulting in a 0 value being passed to the carrier in the 'benefitamount' field for MetLife.",
    "issue_summary": "Blank benefit volumes for Life and Disability coverages are being sent to OneKonnect, causing a 0 value to be passed to MetLife in the 'benefitamount' field.",
    "rca": "The issue was categorized as a bug under EBN and was resolved as part of a related incident.",
    "steps_taken": "Reviewed the dataset and confirmed that all members were experiencing the same issue. Updated datasets with non-zero benefit amounts were sent to EBN, and the related incident was resolved. The resolution was confirmed via the carrier connections dashboard.",
    "data_models": "[]"
  },
  "BENINTEG-1755": {
    "key": "BENINTEG-1755",
    "issue": "The task to move the file feed for Limble Solutions with Cigna to production is blocked due to an issue preventing file generation.",
    "issue_summary": "The file feed for Limble Solutions with Cigna cannot be moved to production because there is a blocking issue that prevents the file from being generated.",
    "rca": "The root cause analysis indicates that the support tool 'retool' can be used to address the issue, suggesting that the existing process or tool was inadequate for resolving the problem.",
    "steps_taken": "The task was marked as not for engineering because 'retool' is now available to handle the issue. No further steps were taken as the task was put on hold.",
    "data_models": "[]"
  },
  "BENINTEG-1754": {
    "key": "BENINTEG-1754",
    "issue": "Bright Cellars has canceled their medical coverage with Cigna effective 8/31/2024, and the automated file feed to Cigna needs to be stopped immediately.",
    "issue_summary": "Bright Cellars canceled their medical coverage with Cigna, requiring the cessation of the automated file feed to Cigna.",
    "rca": "The action to stop the file feed was performed manually as mentioned in the comment.",
    "steps_taken": "The feature flag was removed, and the following code was executed to delete the CustomStediCommunicationDetail for the company:\n\n```python\nfrom insurance.models.ops_models import CustomCommunicationDetail, CustomEmailCommunicationDetail, CustomStediCommunicationDetail\n\ncscc = CustomStediCommunicationDetail.objects.filter(company='62d8586e5b2ab1b8ef39affb')\nreturn cscc.delete()\n```",
    "data_models": "[CustomCommunicationDetail, CustomEmailCommunicationDetail, CustomStediCommunicationDetail, PendingAction]"
  },
  "BENINTEG-1753": {
    "key": "BENINTEG-1753",
    "issue": "The issue is related to the Workweek group with Group ID 00651338 and Company ID 6112db94ebfd9185286e4440, where there seems to be a problem with the carrier Cigna and the frequency of data transmission scheduled for Tuesday at 3AM PST.",
    "issue_summary": "The issue involves a problem with the data transmission for the Workweek group to the carrier Cigna, which is scheduled to occur every Tuesday at 3AM PST. The root cause is related to the use of a support tool for cut over using retool.",
    "rca": "The root cause of the issue was identified as a problem with the cut over process using the support tool 'retool'.",
    "steps_taken": "The steps taken to resolve the issue are not detailed in the provided data.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: []"
  },
  "BENINTEG-1749": {
    "key": "BENINTEG-1749",
    "issue": "The end date of the role for Monikabahen R Patel at Science Corporation was updated from 2024-08-15 to 2024-09-13, requiring verification and potential updates to insurance timelines and carrier notifications.",
    "issue_summary": "The end date of an employee's role was updated, necessitating the creation of a 'Termination (end date correction)' event and verification of insurance timeline updates.",
    "rca": "No action needed for the Noyo component as an email was automatically sent to Noyo, and the Ins Ops team will follow up if necessary.",
    "steps_taken": "1. Verified that no action was required for the Noyo component. 2. Confirmed that EE coverage and integration side were handled properly. 3. Routed to the appropriate team member for confirmation. 4. Closed the ticket as no further action was needed.",
    "data_models": "[]"
  },
  "BENINTEG-1748": {
    "key": "BENINTEG-1748",
    "issue": "Group's coverage cancellation end date was updated from 7/31 to 8/31, but this change did not reflect correctly at the employee event level. Individual employee debuggers did not generate Anthem (medical) information under Events, and Ideon file information appeared to reflect the original 7/31 end date, but not the update.",
    "issue_summary": "The issue was that the group's coverage cancellation end date change from 7/31 to 8/31 did not update the file feed information for Anthem coverages, and the cancellation information did not appear to generate under the group cancellation event on individual employee debuggers.",
    "rca": "The root cause was identified as expected system behavior where group coverage cancellation date changes do not update employee debuggers. This behavior is by design to avoid excessive messages that could confuse the carrier/vendor without proper explanations.",
    "steps_taken": "The issue was investigated, and it was confirmed that the behavior is expected and by design. It was noted that human interaction is needed to manually send updated forms to the carrier/vendor. A long-term ticket was suggested to address this behavior.",
    "data_models": "[EnrollmentEvent, PendingActionGroup]"
  },
  "BENINTEG-1746": {
    "key": "BENINTEG-1746",
    "issue": "Due to a misentry of demographic information, a false remove coverage QLE was generated, leading to incorrect removal of spouse coverage in the system. The issue was further complicated by the inability to submit the correct information via amendment.",
    "issue_summary": "A demographic misentry caused a false QLE, leading to incorrect removal of spouse coverage. The system failed to allow the submission of correct information via amendment.",
    "rca": "A one-off case where a significant mismatch occurred between Noyo and Rippling data due to a demographic change that altered the dependent's relationship and name, causing a false QLE and subsequent coverage removal.",
    "steps_taken": "1. Reviewed available amendment information and attempted to push through correct information. 2. Used a WebScript to send the amendment request from the backend. 3. Pushed a demographic amendment to Noyo to correct the spouse details. 4. Reinstated the spouse's dental coverage using a rate-changed QLE. 5. Verified the changes on Noyo's dashboard and confirmed the reinstatement of coverage.",
    "data_models": "[RoleWithCompany, QleAPI]"
  },
  "BENINTEG-1745": {
    "key": "BENINTEG-1745",
    "issue": "Captiv8, Inc. had an issue where the most updated information for a member, Julie White, was blocked from being sent to the carrier. The error occurred because the Short Term Disability (STD) plan eligibility was incorrectly set, and even after correction, the system attempted to send an invalid coverage update to Noyo, resulting in a 422 error.",
    "issue_summary": "The issue was that Julie White's updated insurance information was blocked from being sent due to an incorrect eligibility setup for the STD plan, which was later corrected but still resulted in an error when attempting to send the update.",
    "rca": "The root cause of the issue was that the system was trying to send an invalid coverage update to Noyo for the STD plan, which Julie White was never eligible for. The eligibility for the STD plan was initially set up incorrectly by the admin, and even after correction, the system continued to attempt to send the invalid coverage.",
    "steps_taken": "The team met with an internal Noyo expert to troubleshoot the issue. It was identified that the employee was incorrectly enrolled in the STD plan, and even though it was waived, the termination for STD needed to be sent, which was failing. A product fix was created and tracked under BENINTEG-1900. The fix was merged, and a snapshot was successfully sent without errors.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-1743": {
    "key": "BENINTEG-1743",
    "issue": "OneKonnect is reporting that a blank benefit amount is being sent for LTD coverages, resulting in a 0 value being passed to the carrier MetLife.",
    "issue_summary": "A blank benefit amount is being sent for LTD coverages to OneKonnect, causing a 0 value to be passed to MetLife. This issue affects all members in the dataset and has a high business impact.",
    "rca": "The issue was categorized under EBN as a bug and was resolved as part of a related incident.",
    "steps_taken": "Updated datasets with non-zero benefit amounts were sent to EBN, and the resolution was confirmed via the carrier connections dashboard. The related incident was resolved, and the ticket was closed.",
    "data_models": "[]"
  },
  "BENINTEG-1742": {
    "key": "BENINTEG-1742",
    "issue": "OneKonnect is reporting that blank benefit volumes for Life and Disability coverages are being sent, resulting in a 0 value being passed to the carrier (Principal).",
    "issue_summary": "Blank benefit volumes for Life and Disability coverages are being sent to OneKonnect, causing them to pass a 0 value to the carrier.",
    "rca": "The issue was categorized as a bug within the EBN component and was resolved as part of a related incident.",
    "steps_taken": "Reviewed the dataset and confirmed that 0 volumes were being passed in the 'BenefitAmount' field for some members. Updated datasets with non-zero benefit amounts were sent to EBN, and the issue was confirmed to be resolved as seen from the carrier connections dashboard.",
    "data_models": "[]"
  },
  "BENINTEG-1740": {
    "key": "BENINTEG-1740",
    "issue": "Dataset is not passing to OneKonnect for YieldStreet Inc. since 08/21, causing production file feed failures.",
    "issue_summary": "The dataset for YieldStreet Inc. was not passing to OneKonnect since 08/21, leading to a production file feed failure on 08/24. The issue was related to visibility in the EBN component.",
    "rca": "The root cause analysis indicated that the file was getting sent, but there was a visibility issue in the EBN component.",
    "steps_taken": "The issue resolved itself, but it was noted that the dataset did not pass from 8/22 to 8/27, causing a production file feed failure. Monitoring was suggested to proactively identify and prevent future blockers.",
    "data_models": "[]"
  },
  "BENINTEG-1739": {
    "key": "BENINTEG-1739",
    "issue": "Datasets were not passing to OneKonnect since 08/14 for Active Wellness (Damen 4 Management), causing production file feed failures.",
    "issue_summary": "Datasets for Active Wellness were not passing to OneKonnect due to missing addresses for certain employees, leading to production file feed failures.",
    "rca": "The issue was caused by certain employees not having addresses, which blocked the dataset from passing to OneKonnect. This was identified as a blocker because the system required addresses for the dataset to be processed.",
    "steps_taken": "The decision was made to modify the code to allow datasets to pass even if addresses were missing. This change was implemented, and the datasets began passing successfully.",
    "data_models": "[]"
  },
  "BENINTEG-1732": {
    "key": "BENINTEG-1732",
    "issue": "The admin is unable to edit the communication type for Cigna in the carrier transmission tab, which is throwing an error and preventing them from setting the communication type to email.",
    "issue_summary": "The admin encounters an error when trying to change the communication type for Cigna in the carrier transmission tab, due to missing Stedi config support on the UI.",
    "rca": "The client is onboarded to Stedi, but related front-end changes were not present, causing the front-end to crash when attempting to edit the communication type. The system incorrectly displayed an edit button for EDI/API cases, assuming communication was already set.",
    "steps_taken": "The engineering team made the necessary front-end changes to ensure the edit button is not shown for EDI/API cases. The fix was deployed, and the group was disconnected from Cigna-Stedi, defaulting to forms. The communication type was switched back to forms after the Stedi EDI generation was completed.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-1731": {
    "key": "BENINTEG-1731",
    "issue": "The employee signature on the Allied Termination form is populating vertically instead of horizontally, causing issues for operations as they are unable to fix it based on the backend element.",
    "issue_summary": "The issue is that the employee signature is appearing vertically on the Allied Termination form due to incorrect handling of PDF orientations for signature fields.",
    "rca": "The root cause of the issue is the incorrect handling of PDF orientations for signature fields. The PDF files have a property that determines the rotation/orientation of the file, which was not being accounted for in the signature fields. While text/date fields account for PDF orientations correctly using PdfTk, the signature fields use PyPDF2, which does not account for this rotation, leading to the vertical orientation of the signature.",
    "steps_taken": "The steps taken to resolve the issue included using a PDF recovery app to fix the form, which corrected the orientation. The form was then re-mapped, and the signature is now correctly populating horizontally. Additionally, a manual workaround was suggested to add the signature directly to unblock the issue immediately. The long-term fix involves handling the PDF orientation correctly for signature fields.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-1729": {
    "key": "BENINTEG-1729",
    "issue": "Admins are not receiving emails for employee enrollments, including QLEs and New Hire Enrollments, despite being transmitted to carriers via file feed.",
    "issue_summary": "Admins are not receiving email notifications for employee enrollments due to the system working as per configuration, where dual communication is disabled in PROD state.",
    "rca": "The system is working as expected based on its configuration. Dual communication is enabled only during INGEST or TEST states. Since the connection is now in PROD state, dual communication, which includes email notifications, is disabled.",
    "steps_taken": "The issue was identified as a configuration setting where dual communication is disabled in PROD state. The code snippet provided in the comments highlights the logic that checks the dual communication state and the Ebn Company Carrier State to determine if emails should be sent. The engineering team confirmed that dual communication is only enabled during INGEST or TEST states, and since the connection is in PROD, emails are not sent.",
    "data_models": "[EbnCompanyCarrierState, DualCommunicationState]"
  },
  "BENINTEG-1728": {
    "key": "BENINTEG-1728",
    "issue": "OneKonnect is reporting that we are sending a blank benefit for STD and LTD coverages on the dataset, resulting in a 0 value being passed to the carrier MetLife.",
    "issue_summary": "Blank benefit amounts for STD and LTD coverages are being sent to OneKonnect, causing them to pass a 0 value to MetLife.",
    "rca": "The issue was categorized under EBN as a bug and was resolved as part of a related incident.",
    "steps_taken": "Updated datasets with non-zero benefit amounts were sent to EBN, and the resolution was confirmed via the carrier connections dashboard. The related incident was resolved, and the ticket was closed.",
    "data_models": "[]"
  },
  "BENINTEG-1727": {
    "key": "BENINTEG-1727",
    "issue": "Admins and brokers did not receive a benefits termination notification for an employee who was terminated.",
    "issue_summary": "The broker or admin did not receive a benefits termination notification for a terminated employee. Rippling does not manage forms for the group, so notifications should be sent to the broker. However, they did not receive an email notification.",
    "rca": "The event was archived by the company admin, Dotty, which prevented the notification from being sent to the carrier or brokers.",
    "steps_taken": "The issue was identified by checking the logs and confirming that the event was archived by the company admin, which stopped the notification from being sent.",
    "data_models": "[]"
  },
  "BENINTEG-1721": {
    "key": "BENINTEG-1721",
    "issue": "Group Cigna forms are not being emailed to the carrier, which is preventing member enrollments from being emailed.",
    "issue_summary": "The issue is that the forms to Cigna stopped being emailed because the admin disabled email communications for Cigna.",
    "rca": "Emails are not sent because they were disabled by the admin. The system was working as expected, and the issue was due to the admin's action of disabling email communications for Cigna.",
    "steps_taken": "The issue was identified through a logrocket link showing that the admin disabled email communications for Cigna. It was communicated that if the admin wants to send emails to Cigna again, they need to enable it in the carrier transmission tab of ben admin. The ticket was closed after confirming the system was behaving as expected.",
    "data_models": "[CompanyBrokerInfo]"
  },
  "BENINTEG-1720": {
    "key": "BENINTEG-1720",
    "issue": "The Open Enrollment form for Guardian was inaccurate, showing both employee and dependent enrollment in dental coverage, whereas only the dependent should have been enrolled. This discrepancy led to incorrect billing by the carrier, and the company needs the form corrected and resubmitted for reimbursement.",
    "issue_summary": "The Open Enrollment form for Guardian inaccurately showed both employee and dependent enrollment in dental coverage, leading to incorrect billing. The form needs to be corrected to show only dependent enrollment.",
    "rca": "The root cause of the issue was a form mapping problem, where the form inaccurately reflected the enrollment status, showing both employee and dependent instead of just the dependent.",
    "steps_taken": "The issue was triaged by verifying enrollments and attempting to regenerate the forms using the EE debugger. It was identified as a form filling issue, not an integration issue, and was reassigned to the Insurance Ops team managing forms. Data elements were updated, and a form request was advised if inconsistencies persisted.",
    "data_models": "[]"
  },
  "BENINTEG-1719": {
    "key": "BENINTEG-1719",
    "issue": "Admin reported that enrollments for two new hires at Phantom Labs, Inc were not submitted to Guardian via the API, causing their COBRA coverage to be terminated.",
    "issue_summary": "The issue was that COBRA enrollments for new hires at Phantom Labs, Inc were not being sent to the carrier due to errors in the group feed transmissions, as they were being sent on an expired CP.",
    "rca": "The root cause was identified as processed termination amendments by restoring deleted NCC, which was deleted due to PEO offboarding. This led to COBRA enrollments not being sent to the carrier.",
    "steps_taken": "To resolve the issue, the previously deleted NCC for the company was restored using a web script. The script used was:\n\n```\nnccs = NoyoCompanyCarrier.objects_including_deleted.filter(company=\"6312834fceab3b5effa970bd\")\nncc = nccs[0]\nncc.isDeleted = False\nncc.save()\n```\n\nAfter processing the termination amendments, the NCC was deleted again. COBRA amendments were then generated and sent for the affected employees.",
    "data_models": "[NoyoCompanyCarrier]"
  },
  "BENINTEG-1715": {
    "key": "BENINTEG-1715",
    "issue": "OneKonnect is reporting that we are sending a blank benefit for STD and LTD coverages on the dataset, resulting in a 0 value being passed to the carrier (MetLife).",
    "issue_summary": "The Tendit Group is experiencing an issue where blank benefit amounts for STD and LTD are being sent, causing OneKonnect to pass a 0 value to MetLife. This issue has been affecting all members on the dataset since 8/19/2024.",
    "rca": "The issue was categorized under EBN as a bug and was resolved as part of a related incident.",
    "steps_taken": "Updated datasets with non-zero benefit amounts were sent to EBN, and the resolution was confirmed via the carrier connections dashboard. The related incident was resolved, and the ticket was closed.",
    "data_models": "[]"
  },
  "BENINTEG-1714": {
    "key": "BENINTEG-1714",
    "issue": "There is an unnecessary location code added to the invoices due to the file feed, and the company has requested its removal from the Guardian transmissions.",
    "issue_summary": "The issue is that an unnecessary location code was being added to the company's invoices due to a default job creating the work_location_text carrier classification, which was not needed for non-PEO groups.",
    "rca": "There was a regular job that by default created the work_location_text carrier classification. This job was initially set to create this classification for all groups, but it was determined that it should only be defaulted for PEO carriers.",
    "steps_taken": "The regular job was updated to only default the work_location_text carrier classification for PEO-guardian connections. This change ensures that the classification is not created for non-PEO groups, resolving the issue.",
    "data_models": "[CarrierClassification]"
  },
  "BENINTEG-1713": {
    "key": "BENINTEG-1713",
    "issue": "OneKonnect is reporting that blank benefit volumes for Life and Disability coverages are being sent, resulting in a 0 value being passed to the carrier MetLife.",
    "issue_summary": "Blank benefit volumes for Life and Disability coverages are being sent to OneKonnect, causing them to pass a 0 value to MetLife. This issue started occurring after 8/19/2024.",
    "rca": "The issue was categorized under EBN as a bug and was resolved as part of a related incident.",
    "steps_taken": "Updated datasets with non-zero benefit amounts were sent to EBN, and the resolution was confirmed via the carrier connections dashboard. The related incident was resolved, and the ticket was closed.",
    "data_models": "[]"
  },
  "BENINTEG-1712": {
    "key": "BENINTEG-1712",
    "issue": "OneKonnect is reporting that Rippling is sending a blank benefit volume for Life and Disability coverages, resulting in a 0 value being passed to the carrier MetLife.",
    "issue_summary": "Rippling was sending a 0 value for the benefit amount field for Life and Disability coverages to OneKonnect, affecting all members in the dataset for Tive Inc, which was then passed as 0 to the carrier MetLife.",
    "rca": "The issue was identified as a bug in the EBN component, which caused the benefit amount field to be populated with 0.00 for all members electing LTD benefits. This was resolved as part of a related incident.",
    "steps_taken": "The team reviewed the dataset and confirmed the issue across all members. They tracked the issue in an incident and confirmed that updated datasets with non-zero benefit amounts were sent to EBN. The related incident was resolved, and the fix was implemented to ensure benefit amounts pass correctly for life, STD, and LTD benefits. A note was sent to OneKonnect to inform them of the fix and request a new file submission for testing.",
    "data_models": "[]"
  },
  "BENINTEG-1706": {
    "key": "BENINTEG-1706",
    "issue": "Company contact information (AM / TAM / IM) is not pulling into the Company Debugger for any customer.",
    "issue_summary": "The Company Debugger is not displaying contact information for account managers, technical account managers, or implementation managers for any customer, causing difficulty for operations to find account contacts.",
    "rca": "No action needed as the contact information is present for all the mentioned companies in their company debugger.",
    "steps_taken": "Reviewed the Company Debugger for the mentioned companies and confirmed that the contact information is present. Attached screenshots as evidence and closed the ticket.",
    "data_models": "[]"
  },
  "BENINTEG-1705": {
    "key": "BENINTEG-1705",
    "issue": "The COBRA section in the form for Epiphany School is not being populated despite having all the necessary information collected in the form field details.",
    "issue_summary": "The COBRA section in the form for Epiphany School is not being populated due to incorrect form mapping, even though all necessary information is present in the form field details.",
    "rca": "The root cause of the issue is incorrect form mapping, which prevents the COBRA section from being populated with the collected information.",
    "steps_taken": "The issue was flagged by a broker, and it was confirmed that all necessary information is collected and stored in the form field details. A form-mapping request was submitted with Ops to address the issue. Further actions will be taken if needed.",
    "data_models": "[]"
  },
  "BENINTEG-1703": {
    "key": "BENINTEG-1703",
    "issue": "Epiphany School's company contact does not have a date populating in form field details or on forms, causing forms to be signed but not dated, which is flagged by the broker.",
    "issue_summary": "The issue is that the company contact signature date is not populating on COBRA enrollment forms for Epiphany School, which is required by the broker to avoid rejection or pending of enrollment by the carrier.",
    "rca": "The root cause analysis indicates that the system is working as expected and historically does not send the company contact signature date for COBRA enrollments. This behavior is within expectations, and no action is required as per the current system design.",
    "steps_taken": "The issue was identified in the file `app/insurance/interface/forms/cobra_enrollment_form.py`, where the `COBRAEnrollmentFormFiller` function `fill_signature_fields` does not fill the company contact signature date. It was noted that this is a historical behavior, and a feature request is needed to change this behavior. The issue of missing employee signature and date was identified as a separate issue owned by the Benadmin Employee team.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-1702": {
    "key": "BENINTEG-1702",
    "issue": "Employee Julie White selected a Short Term Disability (STD) plan they were ineligible for based on their location, and the coverage did not send to Noyo.",
    "issue_summary": "Employee Julie White from Captiv8, Inc. selected an STD plan they were ineligible for due to incorrect carrier classification settings in Rippling's system, allowing selection despite location-based ineligibility.",
    "rca": "The root cause was a mismatch between Rippling's system and Noyo's data regarding eligibility. Rippling's system allowed employees in California to select the STD plan due to incorrect carrier classification settings, while Noyo's data indicated the plan was only for Benefit Class Identifier 0002, excluding California employees.",
    "steps_taken": "The issue was investigated by checking the employee's eligibility in the EE Debugger and verifying plan mappings. It was found that the carrier classification within Rippling allowed the selection. A webscript was run to check Noyo data, confirming the mismatch. The recommendation was to verify the correct data with Noyo/Broker/Admin and update Rippling's carrier classification if necessary. The ticket was closed as there was no action item on Engineering.",
    "data_models": "[NoyoCompanyPlanInfo, InsuranceCompanyPlanInfo]"
  },
  "BENINTEG-1701": {
    "key": "BENINTEG-1701",
    "issue": "Forms of certain employees were not sent to Guardian (Dental) via Noyo due to an error while sending forms.",
    "issue_summary": "Forms sending error occurred for certain employees when transmitting to Guardian via Noyo, due to a mismatch in carrier classifications.",
    "rca": "The error was caused by a mismatch between the carrier classifications in Rippling's system and what Noyo expects. The Noyo API threw an error indicating that the selected life plan was not available for the specified benefit class, although the Guardian carrier classifications were applicable for all plans.",
    "steps_taken": "The engineering team suggested verifying the carrier classifications directly with Noyo and involving the Benefits Operations team to ensure alignment. The admin was advised to review and update their carrier classification. The issue was resolved after the admin was reached out with the suggested solution, and the ticket was closed as the system automatically marked it as 'solved'.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-1699": {
    "key": "BENINTEG-1699",
    "issue": "Termination form with Anthem not generated for the employee, Mara McCormick, on 20/08/2024.",
    "issue_summary": "Termination form for Mara McCormick was not generated by Anthem due to an incorrect noyoName in the carrier configuration.",
    "rca": "Anthem MEWA carrier did not have the correct noyoName in the carrier configuration, leading to a mismatch in the carrier name between the system request and the stored data.",
    "steps_taken": "The engineering team identified that the form generation failed because the carrier name in S3 was 'Anthem MEWA' while the system was requesting 'Andthem Mewa'. A carrier change request was raised to correct the noyoName field for this carrier. Once the request was approved, the termination form was successfully generated.",
    "data_models": "[PendingAction]"
  },
  "BENINTEG-1698": {
    "key": "BENINTEG-1698",
    "issue": "The broker requested to add the account manager's email address for BCBS during the EDI setup for the company Honeycomb, but the email was not included in the current submissions.",
    "issue_summary": "The account manager's email address for BCBS was missing during the EDI setup for the company Honeycomb, which is a BOB group.",
    "rca": "The root cause of the issue was related to the EDI feed setup, where the account manager's email address was not included in the submissions.",
    "steps_taken": "The email address was verified to be missing in the current submissions using the debugger. The necessary action was to add the account manager's email address to the submissions during the EDI setup. The EDI feed was eventually set up, resolving the issue.",
    "data_models": "[]"
  },
  "BENINTEG-1693": {
    "key": "BENINTEG-1693",
    "issue": "Life deductions for Lisle Savings Bank employees are showing as expired, preventing deductions from being processed.",
    "issue_summary": "Life deductions are not being processed because they are showing as expired, despite the plan being active. The expiration date for the life plan was incorrectly set, causing the deductions to appear expired.",
    "rca": "The root cause of the issue was that the expiration date for the life plan was incorrectly set to 2024-04-30 instead of 2025-04-30. This incorrect date was not updated in the SubscriberLineInfo models, leading to the deductions showing as expired.",
    "steps_taken": "The expiration date for the life plan was updated from 2024-04-30 to 2025-04-30. A script was run to update the SubscriberLineInfo models associated with the affected company and plan. The script identified impacted roles and refreshed the effective date on the SubscriberLineInfo models. The script used was:\n\n```python\nccli = InsuranceCompanyCarrierLineInfo.get_or_none(id=\"662678e5695d2abf49022d86\") # life ccli\ncps = InsuranceCompanyPlanInfo.objects.filter(company=ccli.company, companyCarrierLineInfo=ccli)\nslis = SubscriberLineInfo.objects.filter(\n    company=ccli.company,\n    companyPlan__in=cps,\n    expirationDate=\"2024-04-30\",\n    valid=True,\n    isDeleted=False,\n    status__ne=\"INIT\",\n    hasWaived=False,\n)\nimpacted_roles = set()\nimpacted_slis = []\nfor sli in slis:\n    if sli.role.roleState == \"ACTIVE\" and EmployeeEligibilityService.is_role_eligible_for_insurance(sli.role):\n        impacted_roles.add(sli.role)\n        impacted_slis.append(sli)\n        sli.onPlanChange() # to refresh EE's effective date on the sli\n```",
    "data_models": "[InsuranceCompanyCarrierLineInfo, InsuranceCompanyPlanInfo, SubscriberLineInfo]"
  },
  "BENINTEG-1691": {
    "key": "BENINTEG-1691",
    "issue": "Group converted to Rippling BOR in April, but emails/notifications are still being sent to the previous broker.",
    "issue_summary": "Despite the group converting to Rippling BOR in April, notifications are still being sent to the previous broker due to the broker's email not being removed from the communication details.",
    "rca": "The root cause was identified as the broker's email not being removed from the BOR group's custom communication details, which led to continued notifications being sent to the previous broker.",
    "steps_taken": "The broker's email was removed from the communication details to stop further notifications. A web script was run to delete the email address from the system: \n\n```cecds = CustomEmailCommunicationDetail.objects.get(id=\"65dd1b3413a9b625863bb9c5\")\nassert cecds.emailAddress == 'LouroTeam@pgpbenefits.com'\ncecds.isDeleted = True\ncecds.save()```\n\nAdditionally, it was confirmed that no emails were sent from the carrier communication system after the removal.",
    "data_models": "[CustomEmailCommunicationDetail]"
  },
  "BENINTEG-1690": {
    "key": "BENINTEG-1690",
    "issue": "SuSea, Inc. had an issue where all Colorado employees' current effective dates needed to reflect 8/31 instead of 7/31. The effective end date in Rippling did not match the carrier's records for various lines of coverage.",
    "issue_summary": "The effective end dates for all Colorado employees at SuSea, Inc. needed to be updated to 8/31 to match the carrier's records, but the system did not automatically update these dates.",
    "rca": "The root cause was related to visibility issues with Vericred, and no action was required from the Integrations team. The system did not automatically pick up the changes made via the company debugger to refresh the impacted SubscriberLineInfo (SLI) dates.",
    "steps_taken": "The proper way to update the effective and expiration dates was through the post-setup edit flow via the company's BenAdmin app. A script was run to refresh the effective and expiration dates for all impacted employees in bulk. The script filtered SubscriberLineInfo objects with specific conditions and refreshed the dates using the `onPlanChange()` method. The impacted SLIs were manually refreshed, and the data was corrected.",
    "data_models": "[CompanyEnrollmentEvent, InsuranceCompanyCarrierLineInfo, InsuranceCompanyPlanInfo, SubscriberLineInfo]"
  },
  "BENINTEG-1689": {
    "key": "BENINTEG-1689",
    "issue": "A future termination date is being listed for the employee's COBRA details, causing the member to be terminated. Additionally, when members go through a COBRA cancellation and only terminate some lines of coverage, the current debugger display appears as if the member terminated all coverage in the event.",
    "issue_summary": "The issue involves a future termination date incorrectly listed for an employee's COBRA details, leading to termination. The debugger display also inaccurately shows all coverage as terminated when only some lines of coverage are canceled.",
    "rca": "No specific root cause analysis was provided in the ticket. The RCA category is marked as 'Ops Issue' with a subcategory of 'RCA ask', and the description states 'No issues'.",
    "steps_taken": "The ticket was closed due to being stale and no response from Ops for 4 months. No specific steps were taken to resolve the issue as the ticket was not actively worked on.",
    "data_models": "No specific data models were mentioned in the ticket or comments."
  },
  "BENINTEG-1688": {
    "key": "BENINTEG-1688",
    "issue": "The member enrollment details are being sent with the name 'Elbert Wayne Huell Jr Jr', causing issues with Ideon production tasks and COBRA coverage processing.",
    "issue_summary": "The issue arises because the employee's last name includes 'Jr' and there is also a suffix 'Jr', resulting in the name being sent as 'Elbert Wayne Huell Jr Jr'.",
    "rca": "The root cause is that the employee's last name and suffix both contain 'Jr', leading to duplication in the name sent in the file feed. The system is working as expected, but the data entry for the employee's name needs correction.",
    "steps_taken": "A webscript was run to check the employee's name in the RoleWithCompany object, confirming the duplication. It was suggested to update the employee's last name to remove 'Jr'. However, HRIS confirmed that the suffix cannot be updated through the UI and requires engineering review. The issue was not resolved due to lack of updates from Ops.",
    "data_models": "[RoleWithCompany]"
  },
  "BENINTEG-1687": {
    "key": "BENINTEG-1687",
    "issue": "The termination form for Principal was not generated for the employee Julianne Reese, and the admin did not receive an email alert for the termination forms.",
    "issue_summary": "The termination form for Principal was not triggered due to a missing form path and a decryption error with the PDF file. Additionally, the admin did not receive an email notification for the termination forms.",
    "rca": "There were two main issues: 1) The termination form for Principal was not located at the expected path due to a modification by the ops team. Reverting this modification resolved the form path issue. 2) A decryption error occurred while generating the form because the event's end-date was marked as None, causing the form generation to fail.",
    "steps_taken": "1. Reverted the modification to the form path to resolve the path issue. 2. Identified and fixed the decryption error by setting the correct end-date for the termination event. The end-date was updated using the following code snippet: ```event = EnrollmentEvent.get_or_none(id=\"66b9f9525ae3d19fb2145b22\") event.endDate = '2024-08-11' event.save()``` 3. Ran the 'Forms Copier' to ensure the updated form was correctly reflected in the system. 4. Verified that the form was generated and the pending-action state was changed to PROCESSED.",
    "data_models": "[EnrollmentEvent, PendingAction]"
  },
  "BENINTEG-1681": {
    "key": "BENINTEG-1681",
    "issue": "Employee added spouse to coverage effective 6/1/2024, but the enrollment did not go through. UHC requires a new effective date due to a life event.",
    "issue_summary": "The enrollment for an employee's spouse did not process correctly, and UHC requires a new effective date due to a life event. The issue was caused by Vericred sending amendments with incorrect effective dates.",
    "rca": "Vericred sent an amendment with incorrect effective dates, causing the enrollment to not process correctly.",
    "steps_taken": "A manual amendment was sent to Vericred to update the effective dates to 6/1/2024. The JSON payload was provided in the comments. Vericred will take about a week to send the updated data to UHC.",
    "data_models": "[PendingAction, EnrollmentEvent]"
  },
  "BENINTEG-1680": {
    "key": "BENINTEG-1680",
    "issue": "Carrier CIGNA requested to update the effective dates for several employees due to recent life events, but the offline change did not update all coverage effective dates to match the new added dependents.",
    "issue_summary": "The effective dates for insurance coverage were not updated correctly for several employees after recent life events, causing discrepancies in the data sent to the carrier CIGNA.",
    "rca": "The wrong effective date was sent to Vericred due to a bug, which was fixed by a manual amendment using Retool.",
    "steps_taken": "Manual amendments were sent to Vericred to update the effective dates for the affected employees. JSON data was sent for each employee to correct the effective dates. The long-term fix is being tracked in a separate Jira ticket (BENINTEG-1249).",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-1678": {
    "key": "BENINTEG-1678",
    "issue": "getMinimumWeeksOfApprovedPayrollRequired is missing from carrierObjects causing an AttributeError during the execution of _onSetupDone.",
    "issue_summary": "The issue arises because the UnitedWAProxy class does not extend UnitedNGEReady, leading to a missing method getMinimumWeeksOfApprovedPayrollRequired, which causes an AttributeError.",
    "rca": "The root cause of the issue is that the UnitedWAProxy class does not inherit from UnitedNGEReady, which contains the method getMinimumWeeksOfApprovedPayrollRequired. This inheritance is necessary for the proper functioning of the code.",
    "steps_taken": "The solution involved adding UnitedNGEReady to UnitedWA to ensure that the required method getMinimumWeeksOfApprovedPayrollRequired is available in the UnitedWAProxy class.",
    "data_models": "[CompanyEnrollmentEvent]"
  },
  "BENINTEG-1673": {
    "key": "BENINTEG-1673",
    "issue": "New CP under the carrier Cigna Angle Health was not automatically initiated and the Vericred retool link does not allow for a new CP to be created.",
    "issue_summary": "The issue was that a new Coverage Period (CP) under the carrier Cigna Angle Health was not automatically initiated, and attempts to create a new CP using the Vericred retool link resulted in a server error.",
    "rca": "The Ideon/Vericred connection could not be created due to a carrier change. It was unclear if this was an issue in the system or because the steps for disconnection and re-connection weren't performed correctly. However, this became irrelevant as the group is no longer using Ideon/Vericred for Cigna.",
    "steps_taken": "Attempts were made to disconnect the Ideon connections and initiate a new connection. However, there was no option to ingest the group after disconnection. It was later confirmed that the group is no longer on Vericred, and the issue was considered resolved.",
    "data_models": "[]"
  },
  "BENINTEG-1644": {
    "key": "BENINTEG-1644",
    "issue": "Columbia Orthopaedic Group's salaries were updated outside of the plan schedule, causing incorrect updates to the LTD volume with Guardian.",
    "issue_summary": "Salaries for three employees at Columbia Orthopaedic Group were updated outside of the scheduled salary redetermination for their long-term disability plan, leading to incorrect LTD volume updates with Guardian.",
    "rca": "The root cause of the issue was that the snapshot synced salaries for three employees, which caused an update to their salaries with Guardian outside of the scheduled salary redetermination. This led to incorrect updates to the LTD volume.",
    "steps_taken": "The issue was identified as a known problem, and a fix was planned for an upcoming sprint. A ticket (BENINTEG-1652) was created to address the issue. In the meantime, it was suggested to discuss the issue with the Noyo team to handle the specific cases of the three employees mentioned. A Slack thread was initiated to finalize the fix, and ongoing communication with Noyo was maintained to correct the issue.",
    "data_models": "[]"
  },
  "BENINTEG-1640": {
    "key": "BENINTEG-1640",
    "issue": "The medical Cobra enrollment end date for an employee at Blue Cheetah Analog Design Inc. is not being reported to Ideon, the EDI vendor, despite the event being processed correctly in Rippling.",
    "issue_summary": "The Cobra end date for an employee is not being transmitted to Ideon, even though the event was processed correctly in Rippling.",
    "rca": "The coverage expired for the case, which caused the new amended request to fail. There was a need to confirm with Ideon if a new coverage period could be sent.",
    "steps_taken": "Attempts were made to perform a Vericred Amendment, but it did not work. Communication with Ideon was initiated to confirm if a new coverage period could be sent, and amendments with the correct start and end dates were prepared to be sent upon confirmation.",
    "data_models": "[]"
  },
  "BENINTEG-1639": {
    "key": "BENINTEG-1639",
    "issue": "Product Hunt EE's medical enrollment is not reporting to Ideon correctly, showing the plan name instead of 'Waived'. Additionally, the Cobra end date for Emmett Storts is incorrect, preventing the carrier from processing the termination.",
    "issue_summary": "The medical enrollment for an employee is not being reported correctly to Ideon, showing the plan name instead of 'Waived', and the Cobra end date is incorrect, causing processing issues.",
    "rca": "The system is working as expected, and there is no action required from Ops. The issue is categorized as a wrong expectation.",
    "steps_taken": "No steps were taken to resolve the issue as it was determined to be a wrong expectation and the system was working as expected. The ticket was closed due to no response from Ops.",
    "data_models": "[]"
  },
  "BENINTEG-1638": {
    "key": "BENINTEG-1638",
    "issue": "Open enrollment was not triggered for Grey Matter Capital LLC even after all plans were mapped, causing a blocker for the upcoming renewal on 9/1/2024.",
    "issue_summary": "Open enrollment was not triggered for Grey Matter Capital LLC despite plans being mapped, due to a visibility issue with Noyo.",
    "rca": "The issue was related to visibility in Noyo, but it was not an issue at the time of resolution.",
    "steps_taken": "The issue was resolved as open enrollment was confirmed to have occurred, and there were active employees on Noyo. A screenshot was provided as evidence.",
    "data_models": "[]"
  },
  "BENINTEG-1636": {
    "key": "BENINTEG-1636",
    "issue": "Failed NHE API transaction for a member due to incorrect DOB entry, causing issues with Noyo's amendment tool and preventing enrollment amendments.",
    "issue_summary": "The issue involved a failed NHE API transaction due to an incorrect DOB entry, which led to complications with Noyo's amendment tool, particularly after the Aetna PEO migration, causing multiple Noyo Group IDs to be found and preventing enrollment amendments.",
    "rca": "The root cause was identified as a broken Noyo amendment tool due to the snapshots and Aetna PEO migration. This was temporarily fixed with a code adjustment, but a proper fix is being tracked in a linked ticket.",
    "steps_taken": "The issue was escalated to the CC team and a Jira ticket was created. A temporary code fix was applied to the Noyo amendment tool. A manual transaction was requested to be sent from the backend using a WebScript. The WebScript encountered a TypeError due to a NoneType concatenation issue. The amendment tool was later fixed, allowing for the sending of amendments, but only for New Hire amendments as no payload was generated for standard and rate-changed QLE amendments.",
    "data_models": "[RoleWithCompany, QleAPI]"
  },
  "BENINTEG-1635": {
    "key": "BENINTEG-1635",
    "issue": "Blocked access to employee profiles for People Center, Inc, specifically for Cameron D Connally and Hannah Patricia Smithmier, causing issues with plan end dates and benefit status confirmation.",
    "issue_summary": "Access to employee profiles for People Center, Inc was blocked, causing issues with transmitting correct plan end dates to Ideon and confirming benefit status for employees.",
    "rca": "The system was working as expected, but there was a misunderstanding regarding the plan end date being sent to Ideon. The termination date for the PEO group was correctly set to 2024-09-30, and no employee received an end date of 2024-11-30.",
    "steps_taken": "The error for Cameron D Connally was cleared after confirming that the correct termination date was sent. The issue for Hannah Patricia Smithmier regarding benefit status/employment status confirmation is still pending.",
    "data_models": "[]"
  },
  "BENINTEG-1631": {
    "key": "BENINTEG-1631",
    "issue": "The Standard carrier uses Rippling's 3 digit employee ID as the identifier for employee records, but Rippling is not passing this identifier to OneKonnect, causing issues in the testing process.",
    "issue_summary": "Rippling is not passing the 3 digit employee ID to OneKonnect, which is required by The Standard carrier for employee records, leading to testing process issues.",
    "rca": "The issue arose because Rippling never passes the 3 digit employee ID (Rippling Profile Number) in the OneKonnect dataset. This is a new feature requirement as the carrier, The Standard, uses this identifier instead of the more common SSN.",
    "steps_taken": "The customer reimplemented with the carrier using the SSN as the identifier instead of the 3 digit Rippling Profile Number. The issue was downgraded to low priority, and it was suggested to close the ticket and consider a future story for handling such cases with a configurable option for identifiers.",
    "data_models": "[]"
  },
  "BENINTEG-1630": {
    "key": "BENINTEG-1630",
    "issue": "Missed terminations due to no BCBS TX email being listed during EDI initialization for Shift Paradigm.",
    "issue_summary": "Missed terminations occurred because there was no BCBS TX email listed during EDI initialization, which is a known issue affecting communication with BOB groups.",
    "rca": "The root cause of the issue is the absence of a BCBS TX email in the form submissions, which led to missed terminations. This is a known issue with BCBS TX email handling.",
    "steps_taken": "A PR was raised to fix the email issue, and the email was updated for HCSC Carriers (TX, IL, OK, NM, MT). Emails were sent to inform all the BOB groups about the update. The group's insurance admin was also informed via email.",
    "data_models": "[]"
  },
  "BENINTEG-1628": {
    "key": "BENINTEG-1628",
    "issue": "Employee Benjamin Levy elected COBRA on 8/6, but by 8/14, he was not enrolled with UHC. The employee appeared to be enrolled in COBRA in Rippling, but the carrier did not have his records.",
    "issue_summary": "Employee Benjamin Levy elected COBRA on 8/6, but UHC did not receive the form from Rippling, resulting in non-enrollment. The system behaved as expected because COBRA enrollments for this group are not supported via Noyo.",
    "rca": "Ops wanted to confirm why COBRA enrollments were not sent via Vendor, but we don't support COBRA enrollments for this group via Noyo. Hence the system is behaving per expectation.",
    "steps_taken": "The issue was investigated, and it was confirmed that COBRA enrollments for UHC are not sent via Noyo. Notifications were mailed to UHC, and the admin was informed. The ticket was closed as the system was functioning as expected.",
    "data_models": "[]"
  },
  "BENINTEG-1626": {
    "key": "BENINTEG-1626",
    "issue": "Fullcast Inc. is unable to update the recipient for enrollments as there is no pencil icon above the carrier to make the update.",
    "issue_summary": "Fullcast Inc. faced an issue where they couldn't update the enrollment recipient due to the absence of a pencil icon for editing, caused by dual communication not being enabled for Noyo.",
    "rca": "The root cause of the issue was that dual communication is not enabled for Noyo, which means that when communication is happening via Noyo, no emails will be sent. This affected the ability to update the recipient for enrollments.",
    "steps_taken": "The issue was identified as related to carrier connections, which fall under the Marketplace - Integ team. It was noted that for Principal carrier, Noyo connection is set up, and emails are not sent due to dual-comms not being enabled. However, for COBRA cases or failure cases, emails will be CCed to specified addresses. The ticket was eventually closed due to no response from the reporter.",
    "data_models": "[]"
  },
  "BENINTEG-1625": {
    "key": "BENINTEG-1625",
    "issue": "The issue faced was the need to generate group cancellation letters for Espresso AI's interim coverage with Oxford and MetLife, which was not automatically generated. This was urgent as the coverage needed to be retroactively cancelled effective 08/01, but the cancellation tasks were not generated correctly, causing delays.",
    "issue_summary": "The group cancellation letters for Espresso AI's interim coverage with Oxford and MetLife were not generated automatically due to issues with the cancellation event setup, leading to delays in processing the cancellation.",
    "rca": "The root cause was identified as the absence of a pending action for MetLife due to the communication method being set to email, but the method 'should_send_group_termination_forms' was not defined for MetLife, defaulting to False. This prevented the creation of a pending action for MetLife, which is necessary for generating the cancellation letter.",
    "steps_taken": "To resolve the issue, the team manually initiated the Group Coverage Cancellation (GCC) event creation. A script was run to create a new GCC event. It was suggested to update the method to allow creating pending actions for MetLife or create a different communication method. The team also considered forcefully triggering the pending action and discussed the need for a long-term solution to automate the process.",
    "data_models": "[CompanyCarrierLineInfo, GroupCoverageCancellationEvent, CompanyEnrollmentEvent]"
  },
  "BENINTEG-1623": {
    "key": "BENINTEG-1623",
    "issue": "Cigna reported that the weekly file for Momentum Behavior Services no longer contained new coverage period changes. The file contained old effective dates and plan IDs that expired on 7/31/2024 instead of the new ones starting from 8/1/2024.",
    "issue_summary": "The weekly file sent to Cigna for Momentum Behavior Services contained outdated effective dates and plan IDs, failing to reflect the new coverage period starting 8/1/2024.",
    "rca": "PendingActions were not generated from the group renewal event. The system picked up the previous snapshot that was successfully sent and applied a negligible delta. The PendingAction generation was configured after the group's renewal event, leading to the issue.",
    "steps_taken": "The issue was temporarily fixed by resetting the previous snapshot to the new snapshot. This involved confirming the PendingAction generation configuration and ensuring it aligned with the group's renewal event.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-1621": {
    "key": "BENINTEG-1621",
    "issue": "Forms for Kaiser were not generated for COBRA cancellation for Sophie Wild and termination for Nina Tabios, despite being generated for Delta Dental.",
    "issue_summary": "Forms for Kaiser were not generated due to a missing country code in the fax number configuration, causing communication failure.",
    "rca": "The root cause was a manual data entry error where the fax-phone-number for Kaiser was configured without the necessary country code. The number was set as 8553555334 instead of +188553555334, leading to a communication failure as faxing to country KH was not allowed.",
    "steps_taken": "The fax number was updated to include the correct country code. The updated configuration was: {\"id\": \"66c52897754772c034acbf97\", \"faxNumber\": \"+18553555334\", \"isDeleted\": \"False\", \"createdAt\": \"2024-08-20 23:36:55.152000+00:00\", \"updatedAt\": \"2024-08-21 05:03:44.196000+00:00\", \"lock\": \"None\", \"external_on_changes\": \"\", \"company\": \"mmelvin@touchstoneclimbing.com\", \"carrier\": \"Kaiser Foundation Health Plan, Inc.:['40513', '27330']\", \"_cls\": \"CustomCommunicationDetail.CustomFaxCommunicationDetail\"}. After updating, the pending action was reprocessed, and the form was successfully sent.",
    "data_models": "[PendingAction, CustomCommunicationDetail]"
  },
  "BENINTEG-1620": {
    "key": "BENINTEG-1620",
    "issue": "The signature on forms for employee Justin Green was populating vertically, and attempts to fix it via form updates were unsuccessful.",
    "issue_summary": "The signature on forms was incorrectly oriented vertically due to a backend element issue, which could not be fixed through initial form updates.",
    "rca": "The forms had an incorrect orientation directive set, which needed to be cleared by using a sanitizer.",
    "steps_taken": "The team identified that the issue was related to the orientation of the forms. They attempted to fix the forms' orientation and re-map them. The issue was initially fixed for Allied NY but needed to be applied to Allied CA as well. After updating the forms for all states, the signature issue was resolved, but the date was still populating vertically. Further adjustments were made to correct the orientation of all fields, and the issue was finally resolved.",
    "data_models": "[]"
  },
  "BENINTEG-1619": {
    "key": "BENINTEG-1619",
    "issue": "Salary Redetermination settings were not being applied for all OneKonnect customers, causing discrepancies in benefit amounts.",
    "issue_summary": "The Salary Redetermination settings were not being considered for all OneKonnect customers, specifically affecting Hallmark HCS with MetLife, leading to incorrect benefit amounts being transmitted.",
    "rca": "The root cause was identified as a missing feature-flag `benefits-integration-ebn-updated-benefit-amount` that needed to be enabled to fix the benefit-amount for all the groups mentioned in the ticket. This flag was not enabled for all customers, leading to the issue.",
    "steps_taken": "The feature-flag `benefits-integration-ebn-updated-benefit-amount` was enabled for all the companies listed in the CSV attached to the ticket, totaling 201 companies/groups. The flag was later enabled for all OneKonnect groups not in production, and eventually, it was made live in production for all customers.",
    "data_models": "[]"
  },
  "BENINTEG-1618": {
    "key": "BENINTEG-1618",
    "issue": "The user encountered validation errors for all elements while using the new onboarding tool to set up a group for Cigna (FACETS) under Strategic Innovative Solutions, LLC.",
    "issue_summary": "Validation errors occurred due to incorrect data entry in the onboarding template for setting up a group with Cigna (FACETS).",
    "rca": "The root cause of the issue was a manual data entry error in the onboarding template, where one of the values was incorrect.",
    "steps_taken": "The issue was resolved by identifying and correcting the incorrect value in the onboarding template.",
    "data_models": "[]"
  },
  "BENINTEG-1616": {
    "key": "BENINTEG-1616",
    "issue": "Termination forms for employee George Victory were not sent to the carrier after the group switched from BOB to BOR.",
    "issue_summary": "The termination forms for employee George Victory were not sent to the carrier despite the group switching to BOR and the termination event being completed. The reason listed was 'UNSUBMITTED_PRIOR_FORMS'.",
    "rca": "The issue was due to a bug where all past pending actions were considered in a processed state, which should not have been the case. Only past pending actions within a year from the current date should be considered.",
    "steps_taken": "The team identified the bug and planned to fix it by the end of the week. A script was run to check the state of pending actions and update them if necessary. The issue was fixed, and the forms were sent out.",
    "data_models": "[PendingAction]"
  },
  "BENINTEG-1615": {
    "key": "BENINTEG-1615",
    "issue": "The group 'Cars & Credit Master (Pacific Deal)' needs to be moved to production with a weekly schedule for file feeds to Cigna, but the tooling is not ready, requiring manual intervention.",
    "issue_summary": "The group 'Cars & Credit Master (Pacific Deal)' needs to be moved to production for file feeds to Cigna, but the tooling is not ready, necessitating manual processing.",
    "rca": "The tooling required to automate the process of moving the group to production is not yet ready, necessitating manual handling of the task.",
    "steps_taken": "The task is being handled manually due to the unavailability of the required tooling. The group is scheduled to be sent on two files: FACETS for Medical and ACE for Dental and Vision.",
    "data_models": "[]"
  },
  "BENINTEG-1612": {
    "key": "BENINTEG-1612",
    "issue": "Forms for Delta Dental were not processed and sent to the carrier, while forms for two other carriers were sent. The broker is seeking clarification on this discrepancy.",
    "issue_summary": "Forms for Delta Dental were not sent due to the Open Enrollment (OE) deadline not being passed, while forms for other carriers were sent. This is due to a cancellation being triggered for Delta Dental, which blocked the pending action.",
    "rca": "The root cause of the issue is that a cancellation was triggered for the Delta Dental carrier, which resulted in the pending action not being processed due to the reason 'OE_DEADLINE_NOT_PASSED'. This is a system behavior where forms are not sent if a cancellation is ongoing until the cancelled CCLI expiration date is passed.",
    "steps_taken": "The enrollment team confirmed that forms were not sent due to the OE deadline not being passed. It was identified that a 'CancellingInsuranceCompanyCarrierLineInfo' was created for Delta Dental, which blocked the pending action. The forms for Delta Dental were generated but not sent, and it was suggested that company admins/brokers manage it manually if needed.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyEnrollmentEvent]"
  },
  "BENINTEG-1611": {
    "key": "BENINTEG-1611",
    "issue": "Employee Rippling instance did not link to Noyo instance, causing a missed termination and inability to manage enrollment through the API connection.",
    "issue_summary": "The employee's Rippling profile was not linked to their Noyo profile, leading to a missed termination and customer escalation as the enrollment could not be managed through the expected API connection.",
    "rca": "Connection to Noyo was created on 26th June 2024 for the group, which was after the employee's termination. This delay caused the requests to Noyo to be sent late from the Rippling system.",
    "steps_taken": "Worked with Noyo Ops expert to send a fail transaction to get employee data to Noyo, which linked the accounts and allowed the termination to be sent.",
    "data_models": "[]"
  },
  "BENINTEG-1610": {
    "key": "BENINTEG-1610",
    "issue": "AcuityMD, Inc. is facing an issue with the Cigna carrier integration, requiring manual intervention due to tooling not being ready.",
    "issue_summary": "The issue is related to the integration with Cigna for AcuityMD, Inc., where the necessary tooling is not yet ready, necessitating manual processing.",
    "rca": "The root cause of the issue is that the tooling required for the integration with Cigna is not yet ready, which is why the process has to be done manually.",
    "steps_taken": "The issue is being manually handled as the tooling is not ready. There are no specific code snippets or detailed steps provided in the ticket.",
    "data_models": "[]"
  },
  "BENINTEG-1609": {
    "key": "BENINTEG-1609",
    "issue": "The issue involves the inability to cut over to a new Cigna plan for CoinTracker (Nino Finance, Inc.) because the 2023 Cigna plan is still active. This has caused a delay in the scheduled transmission of production files.",
    "issue_summary": "The 2023 Cigna plan for CoinTracker is still active, preventing the transition to the 2024 plan and causing delays in scheduled file transmissions.",
    "rca": "The root cause of the issue was the continued activity of the 2023 Cigna plan, which was not expired as expected. This was due to a cut over using a webscript that did not execute as intended.",
    "steps_taken": "The steps taken to resolve the issue included requesting Ideon to expire the 2023 Cigna plan file feed. A ticket was submitted to Ideon to address this, and the Ideon feed was eventually expired. However, due to the delay, production files had to be triggered manually for two weeks.",
    "data_models": "[]"
  },
  "BENINTEG-1605": {
    "key": "BENINTEG-1605",
    "issue": "The issue is related to the manual processing of insurance data for Tixr, Inc. with the carrier Cigna, which is currently deferred until the necessary tooling is completed. The process is scheduled to occur on Tuesdays at 3 AM PST.",
    "issue_summary": "The manual processing of insurance data for Tixr, Inc. with Cigna is deferred due to the lack of necessary tooling, causing delays in automation.",
    "rca": "The root cause of the issue is the absence of automated tooling, necessitating a manual process for handling the insurance data transmission for Tixr, Inc. with Cigna.",
    "steps_taken": "The ticket was moved to 'Open' status for further action, and there were requests to prioritize the issue, but no specific steps or code snippets were provided in the ticket.",
    "data_models": "[]"
  },
  "BENINTEG-1600": {
    "key": "BENINTEG-1600",
    "issue": "Kate Collardson's COBRA enrollment form for Premera medical coverage was not generated, while forms for dental and vision were successfully submitted.",
    "issue_summary": "The COBRA enrollment form for Premera medical coverage was not generated due to missing forms in the specified file path.",
    "rca": "The issue was caused by missing forms from their designated location path. The system attempted to access a file path that did not exist, specifically 'Mapped PDF Forms/WA/Premera BlueCross/Premera BlueCross_WA_COBRA Enrollment.pdf'. The folder 'Premera BlueCross' under 'WA' was missing, which led to the failure in form generation.",
    "steps_taken": "The missing forms were uploaded by the operations team, specifically using forms from 'Premera (Vimly)' for Premera BlueCross. This resolved the issue, and the COBRA enrollment form was successfully generated.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-1596": {
    "key": "BENINTEG-1596",
    "issue": "Forms are being sent and the Anthem Ideon file feed is active, causing members to be incorrectly re-added or terminated from coverage. Additionally, the carrier transmissions details in Rippling show the Anthem feed as inactive.",
    "issue_summary": "Dual communication issue with Anthem where forms are being sent and the Ideon file feed is active, leading to incorrect member re-additions or terminations. The Anthem feed appears inactive in Rippling, causing confusion.",
    "rca": "The root cause was a misconfiguration in the Vericred setup, where the settings were distributed across two Anthem carriers - Sequoia A and Anthem Blue Cross. This led to the connection being marked inactive due to the absence of valid coverage periods.",
    "steps_taken": "The setup was fixed by ensuring the correct carrier (Sequoia A) was configured and marked active. The incorrect Anthem Blue Cross configuration was removed. The following code was used to delete the incorrect configuration:\n\n```python\nvcc = VericredCompanyCarrier.objects.get(id='65fdae62c8f56200af8ce86d')\nreturn VericredCompanyCoveragePeriodInfo.objects.filter(company=vcc.company, carrier = vcc.carrier).delete()\nvcc.delete()\n```",
    "data_models": "[VericredCompanyCarrier, VericredCompanyCoveragePeriodInfo]"
  },
  "BENINTEG-1595": {
    "key": "BENINTEG-1595",
    "issue": "An employee was able to select a California-based HMO plan they were ineligible for due to a gap in system logic within the QLE flow. The employee had not updated their address within their Rippling account, which should have triggered a demographic change and blocked them from enrolling in the HMO plan.",
    "issue_summary": "The system allowed an employee to select a state-specific HMO plan during a QLE flow despite being ineligible due to an outdated address, which should have triggered a block.",
    "rca": "The issue was identified as a non-issue after investigation. The ticket had been in waiting for customer response for a long time and was closed as it was determined that the employee never completed an event after their out-of-state move/address was updated, which would have marked the plan as invalid.",
    "steps_taken": "The issue was investigated by checking the employee event debugger and reviewing the events related to the employee's QLE and OE. It was confirmed that the employee's profile address was still listed as California during the QLE and OE events, allowing them to select the HMO plan. The admin later updated the work location, creating a QLE (Role Transition), but the employee did not complete any events after the address update.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-1593": {
    "key": "BENINTEG-1593",
    "issue": "The issue is related to the manual processing of insurance data for Memora Health with Cigna due to tooling not being ready.",
    "issue_summary": "The manual processing of insurance data for Memora Health with Cigna is required because the necessary tooling is not yet ready.",
    "rca": "The root cause of the issue is that the tooling required to automate the process is not yet ready, necessitating manual intervention.",
    "steps_taken": "The issue is being manually handled as the tooling is not ready. No specific code snippets or detailed steps are provided in the ticket.",
    "data_models": "[]"
  },
  "BENINTEG-1592": {
    "key": "BENINTEG-1592",
    "issue": "Data errors were reported during testing with Cigna, specifically related to date discrepancies in the DTP*303 and DTP*348 fields for members Stephen Snell and Tanner Arnold. The DTP*303 dates were older than the DTP*348 benefit effective dates, causing a mismatch.",
    "issue_summary": "The issue involved date discrepancies in the DTP*303 field being older than the DTP*348 benefit effective dates for certain members in the file sent to Cigna. This was due to incorrect logic implementation for DTP*303.",
    "rca": "The root cause was identified as an incorrect implementation of the DTP*303 logic. The logic was supposed to ensure that the DTP*303 date should either match or be after the DTP*348 benefit effective start date. However, due to a demographic change (address change) for Stephen Snell, the DTP*303 date was set incorrectly to an earlier date.",
    "steps_taken": "The logic for DTP*303 was reviewed and updated to ensure that the DTP*303 date is not before the DTP*348 date. The updated logic was to pick the maximum DTP*348 date across all coverages. Changes were made and deployed as per the discussions and agreement with Cigna's expectations.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-1591": {
    "key": "BENINTEG-1591",
    "issue": "Two employees from Eighth Light LLC show as sending via Vericred API, but there is no Vericred/Ideon history in the company debugger.",
    "issue_summary": "Two employees' changes for the 01/01/2024 renewal were not processed by the carrier. Their debuggers indicate submission via Vericred API, but no Vericred history is visible in the company debugger.",
    "rca": "The Vericred connection for the group was deleted on 2024-06-11, which is why it is not showing in the 'Vericred Company Info' dashboard. However, the enrollment information for the employees was sent via Vericred in December 2023 when the connection was active.",
    "steps_taken": "Checked the Vericred company carrier connection and confirmed it was deleted on 2024-06-11. Verified that the enrollment information was sent via Vericred in December 2023. Confirmed that all required data related to enrollment was sent via Vericred, as seen in the Carrier Connections Dashboard.",
    "data_models": "[VericredCompanyCarrier]"
  },
  "BENINTEG-1590": {
    "key": "BENINTEG-1590",
    "issue": "Employee Erica Schleimer's Kaiser QLE was not processed by the carrier due to a mid-month effective date. Kaiser coverage can only become effective on the 1st of the month.",
    "issue_summary": "The issue was that Erica Schleimer's QLE for Kaiser was not processed because the effective date was set mid-month, which is against Kaiser's policy that requires coverage to start on the 1st of the month.",
    "rca": "The root cause was identified as the system not accounting for the waiting period when computing SLI effective dates for QLEs. Specifically, the method QLEEnrollmentEvent.getEffectiveDate was returning the date of the QLE Event without considering the 1st of the month requirement for Kaiser small groups.",
    "steps_taken": "The issue was investigated by examining the faulty SLIs object history and the computation path in the code. It was identified that the waiting period was not being considered in the effective date calculation. A script was run to identify affected groups, and it was suggested to move the customer to Noyo to solve the problem.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, QLEEnrollmentEvent]"
  },
  "BENINTEG-1586": {
    "key": "BENINTEG-1586",
    "issue": "Brown Boots Inc. had three new hires whose benefits were effective starting on 8/1, but their forms were not sent to Guardian due to the CONNECTION_NOT_INITIATED status. The Guardian PEO file feed was still live, although the group is now a BOR group.",
    "issue_summary": "The issue was that the Guardian PEO file feed was still active, preventing the automatic setup of the Noyo connection for the BOR group. This was due to outstanding tasks not being completed, which prevented the transition from PeoGuardian to Guardian.",
    "rca": "Some outstanding tasks were not completed, which prevented the automatic Noyo connection setup for transitioning the carrier from PeoGuardian to Guardian. Specifically, the ConfirmCompanyEnrollmentTask was not created because SubmitEmployeeEnrollmentTask objects were still in 'TODO' status. This was due to a change in broker status from WAVELING_ONLY to NFP_PLUS_WAVELING and back, which caused tasks to be marked as 'Broker Task' and not automatically processed.",
    "steps_taken": "The steps taken included marking the outstanding tasks as completed, which allowed the ConfirmCompanyEnrollmentTask to be created. This triggered the Noyo connection setup and the removal of the PEO Noyo connection. The engineering team monitored the automation process to ensure it worked as expected. Code snippets used for debugging included checking the status of PendingAction and SubmitEmployeeEnrollmentTask objects.",
    "data_models": "[PendingAction, SubmitEmployeeEnrollmentTask, ConfirmCompanyEnrollmentTask, CompanyInsuranceInfo, CompanyBrokerInfo]"
  },
  "BENINTEG-1582": {
    "key": "BENINTEG-1582",
    "issue": "There are 16 blocked transactions for the Bayou Village School group due to mapping errors with UHC Noyo groups, resulting in Noyo rejecting the requests.",
    "issue_summary": "The issue involves blocked transactions for the Bayou Village School group due to errors in mapping logic for UHC Noyo groups, specifically related to missing 'population_id' and 'bill_group_id' fields in the request.",
    "rca": "The root cause of the issue is that the requests sent to Noyo are missing the 'population_id' and 'bill_group_id' fields, which are required according to the carrier configurations in Noyo.",
    "steps_taken": "The group was migrated from Ideon to Noyo, and operations confirmed that the carrier configurations match what Noyo has on record. However, the error message indicates that the 'population_id' and 'bill_group_id' are not being sent as expected. Engineering needs to review and potentially update the logic for UHC groups to ensure these fields are included in the requests.",
    "data_models": "[CompanyInsuranceInfo, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-1581": {
    "key": "BENINTEG-1581",
    "issue": "The BOB group Boulder Care Provider Group, P.A. was unable to set up an EDI/API connection as the 'continue' button was not functioning, preventing them from proceeding to the next page.",
    "issue_summary": "The issue was caused by a stray carrier communication object left behind, likely from a partial application of an Ideon to Ebn migration tool, which prevented the setup of the EDI/API connection.",
    "rca": "The root cause was identified as a stray carrier communication object that was left behind, most likely due to a partial application of an Ideon to Ebn migration tool. This object was causing the error message and preventing the setup of the EDI/API connection.",
    "steps_taken": "The issue was resolved by deleting the stray carrier communication object. A patch was created and executed to remove the Vericred carrier transmission object, allowing the EDI setup to proceed. The EBN feed was set up correctly using the EBN connection Retool, and the transmissions have been processing since 08/16.",
    "data_models": "[BaseCompanyCarrierTransmission, VericredCompanyCarrierTransmission]"
  },
  "BENINTEG-1580": {
    "key": "BENINTEG-1580",
    "issue": "Transaction for Rishabh Agrawal's QLE event to add a spouse on 06/04/2024 did not send via carrier connection as expected, but instead sent via form.",
    "issue_summary": "The transaction for a QLE event was expected to be sent via Noyo carrier connection but was sent via forms due to the absence of the NoyoCompanyCarrier object at the time of processing.",
    "rca": "The NoyoCompanyCarrier object did not exist when the QLE was processed on 06/21, leading to the default behavior of sending QLEs via forms. The NoyoCompanyCarrier was only created on 06/26, after the QLE was completed.",
    "steps_taken": "The issue was identified by checking the company debugger under 'Noyo Group Connection Info' to confirm the absence of the NoyoCompanyCarrier object at the time of the QLE processing.",
    "data_models": "[NoyoCompanyCarrier]"
  },
  "BENINTEG-1579": {
    "key": "BENINTEG-1579",
    "issue": "Noyo blocked transactions due to expired plans being pulled in, impacting enrollments for two employees at two different companies.",
    "issue_summary": "The issue involves blocked transactions in Noyo due to expired lines of coverage being pulled in, causing a failure in plan mapping for UnitedHealthcare Insurance Company of the River Valley.",
    "rca": "There was a plan mapping related issue, which was initially fixed manually. However, a missing active coverage issue was identified and resolved by implementing omitted coverage handling.",
    "steps_taken": "The team confirmed that the lines of coverage were active and correctly mapped in the plan mapping tool. A web script was used to address blocked transactions by checking the validity and activity of the CompanyCarrierLineInfo (CCLI) and handling missing active coverage. The script iterated over blocked transactions, checked for valid and active CCLI, and printed issues related to plan mapping. The RCA was linked to a related Jira ticket for further context.",
    "data_models": "[NoyoCompanyPlanInfo, InsuranceCompanyPlanInfo, CompanyCarrierLineInfo, BlockedTransaction]"
  },
  "BENINTEG-1578": {
    "key": "BENINTEG-1578",
    "issue": "Simplex Investments LLC's employee, Jonathan Taylor, had a salary update sent to the carrier outside of the plan's guidelines, which should only occur at renewal.",
    "issue_summary": "The issue involved a salary update for an employee being sent to the carrier outside of the plan's guidelines, which should only occur at renewal. This was due to a demographic change sent to Noyo on June 28, which included the salary update.",
    "rca": "The root cause was identified as the system sending a demographic change to Noyo on June 28, which included a salary update. This update was not supposed to be sent mid-year as per the plan's guidelines. The salary update was initially made in February but was not communicated to Noyo at that time because no EmployeeEnrollmentEvent was triggered. When a QLE occurred on June 28, the system detected the salary difference and sent the update to Noyo, which then communicated it to the carrier.",
    "steps_taken": "The issue was investigated by checking the employee event debugger and confirming the timeline of events. It was found that the salary update was not communicated initially due to the absence of an EmployeeEnrollmentEvent. The issue was escalated to the BENADMIN-EEx team to investigate why the event was not triggered. It was determined that the system behaved as expected, and the responsibility for not applying the salary change to LTD enrollment was on Noyo. The ticket was then sent back to the Marketplace team for further action.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-1577": {
    "key": "BENINTEG-1577",
    "issue": "CIQ / Noyo plan mapping error with Anthem data causing errors when accessing Principal Noyo amendment for employees.",
    "issue_summary": "The Rippling system is incorrectly attempting to pull Noyo data for Anthem, which is routed to Ideon, causing plan mapping errors.",
    "rca": "Blocked transactions due to fetching Noyo carrier classifications for companies which do not use Noyo for the carrier.",
    "steps_taken": "A fix was merged to ensure that all Anthem data is routed to the correct vendor. The fix was deployed to production, and the Noyo amendment page is now loading successfully.",
    "data_models": "[]"
  },
  "BENINTEG-1573": {
    "key": "BENINTEG-1573",
    "issue": "Multiple EBN EDI Order Failures on the carrier connections dashboard for several companies, causing a high business impact and blocking the transmission of insurance benefits to OneKonnect.",
    "issue_summary": "The issue involves EDI Order Failures for multiple companies on the carrier connections dashboard, primarily due to incorrect data such as group IDs and addresses, and existing carrier names causing conflicts.",
    "rca": "The root cause of the issue was identified as incorrect or malicious data entries for group IDs and addresses, and existing carrier names causing conflicts. Specifically, for Wellness IQ, the group ID was too long; for Unily Inc., the address was from England instead of the US; for Epiphany School, the group ID was incorrect; and for Rep Data Inc., the carrier name already existed in EBN's system.",
    "steps_taken": "The steps taken to resolve the issue included: 1) Reviewing the carrier connections dashboard and applying company filters to identify specific errors. 2) For Wellness IQ, it was advised to update the group ID to a correct one. 3) For Unily Inc., a support ticket was opened with OneKonnect to address the foreign address issue. 4) For Epiphany School, the group ID needed correction. 5) For Rep Data Inc., it was suggested to ask EBN to rename the old connection. Additionally, guidance was provided on how Ops can resolve such tickets without waiting for engineering intervention.",
    "data_models": "[VendorRequest, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-1570": {
    "key": "BENINTEG-1570",
    "issue": "Admin noticed the carrier transmission tab was missing, and managing forms was turned off, but Vericred info still showed transmissions. Unable to verify enrollments.",
    "issue_summary": "The carrier transmission tab disappeared, and managing forms was turned off, yet Vericred info still showed active transmissions. This discrepancy needed investigation to ensure enrollments were being transmitted correctly.",
    "rca": "Ops toggled Rippling managing forms, which led to the carrier transmission tab disappearing while Vericred info still showed active transmissions.",
    "steps_taken": "The issue was resolved by toggling Rippling managing forms in the debugger, which restored the carrier transmission tab.",
    "data_models": "[CompanyInsuranceInfo]"
  },
  "BENINTEG-1566": {
    "key": "BENINTEG-1566",
    "issue": "The updated end date for an employee's termination event did not populate in Vericred data, causing a missed termination update for Tunuva Technologies Inc.",
    "issue_summary": "The issue was that the updated end date for an employee's termination event was not reflected in Vericred data, leading to a missed termination update. This was due to the pending action for the second QLE not being processed because the event was marked as 'Archived'.",
    "rca": "The root cause was identified as the absence of a CustomVericredCommunicationDetail object for the carrier UnitedVA when the pending action for the QLE was being processed. This object was necessary to enable data transmission to Vericred. Additionally, the QLE was invalidated after the Vericred transmission was made, and the system did not handle this case properly. The checks for updating expiration dates in Vericred did not trigger a new payload for the second QLE.",
    "steps_taken": "The investigation revealed that the CustomVericredCommunicationDetail object was deleted, which prevented the QLE from being processed via Vericred API. The team identified that the system did not handle invalidated QLEs properly and that the checks for updating expiration dates were not met for the second QLE. A product ticket was suggested to handle invalidated coverage updates and improve the system's handling of such cases.",
    "data_models": "[EnrollmentEvent, CustomVericredCommunicationDetail, VericredAPIDetails]"
  },
  "BENINTEG-1564": {
    "key": "BENINTEG-1564",
    "issue": "The customer, Jobnimbus, has churned due to ongoing issues with Rippling, specifically the inability to terminate members via the file feed through OneKonnect. OneKonnect requires Benefit Term Dates to be sent on the same file as Role Term Dates, and the failure to do so has resulted in terminations not being sent to the carrier.",
    "issue_summary": "The issue is that OneKonnect is not sending terminations because Rippling is not sending Benefit Term Dates on the same file as Role Term Dates, causing terminations to not be sent to the carrier.",
    "rca": "The root cause of the issue is a bug where Benefit Term Dates were not being sent on the same file as Role Term Dates, which is required by OneKonnect for processing terminations.",
    "steps_taken": "A support ticket was opened with OneKonnect to determine the reason for the issue. Communication with OneKonnect was established to work on a fix. The issue is being tracked as an incident, and internal options are being explored to resolve it.",
    "data_models": "[]"
  },
  "BENINTEG-1563": {
    "key": "BENINTEG-1563",
    "issue": "Enrollment for Samuel James Lyons was not sent to BCBS TX; instead, it was sent to insurance-ops@rippling.com twice.",
    "issue_summary": "The enrollment for Samuel James Lyons was not sent to BCBS TX as expected. Instead, it was sent to insurance-ops@rippling.com due to a misunderstanding of the process for groups managed by Rippling and NFP.",
    "rca": "The system was working as expected. For groups managed by Rippling and NFP, forms are not supposed to be sent to BCBS via email. Instead, they are sent to insurance-ops@rippling.com, and the Rippling ops team manually posts the enrollments on the carrier portal.",
    "steps_taken": "The issue was identified as a misunderstanding of the process. It was clarified that for this BOR group, forms are sent to insurance-ops@rippling.com, and the Rippling ops team manually handles the enrollment. No further engineering assistance was required, and the ticket was closed.",
    "data_models": "[]"
  },
  "BENINTEG-1562": {
    "key": "BENINTEG-1562",
    "issue": "The admin needs to update the email address for Health Partners carrier in the carrier transmission tab, but they are unable to do so themselves as they are in the process of setting up their EDI connection.",
    "issue_summary": "Admin is unable to update the email address for Health Partners carrier due to ongoing EDI connection setup, requiring manual intervention.",
    "rca": "The issue arose because the group is in the process of setting up their EDI connection, which restricts their ability to edit the email address themselves. The support tool used did not provide a response on the ticket.",
    "steps_taken": "The recommendation was to use the self-service tool for updating the email, as the integration is via EBN. A document link was provided for guidance. The ticket was flagged as the associated support case was closed, and it was suggested to close the ticket if resolved.",
    "data_models": "[]"
  },
  "BENINTEG-1560": {
    "key": "BENINTEG-1560",
    "issue": "Coverage end dates for 5 employees enrolled in Kaiser medical coverage were incorrectly populated in the JSON payload sent to Ideon, causing the entire multi-tenant Kaiser file to fail due to exceeding the 10% termination threshold.",
    "issue_summary": "Coverage end dates were incorrectly populated for employees renewing with the same carrier, causing the Kaiser file to fail due to exceeding termination thresholds.",
    "rca": "The root cause was deferred, but it was noted that a 'loss_of_coverage' event was incorrectly triggered, possibly due to an amendment posted after a Global Cancellation Event but before a Renewal event.",
    "steps_taken": "The end dates for the QLEs were removed using the Vericred Tool. A Vericred amendment was applied to remove the 'loss_of_coverage' events, and QLEs were amended to remove the end date. Screenshots of the corrected QLEs were attached for verification.",
    "data_models": "[SubscriberLineInfo, CompanyEnrollmentEvent]"
  },
  "BENINTEG-1557": {
    "key": "BENINTEG-1557",
    "issue": "Enrollment forms are not being automatically generated and sent when employees have coverage changes, specifically for Delta Dental.",
    "issue_summary": "Enrollment forms for Delta Dental are not being automatically generated and sent due to a dual communication setup issue, causing manual auditing by the client.",
    "rca": "The root cause of the issue was identified as a dual communication setup issue. Although dual communication was enabled, no custom emails were set up, which resulted in the failure of automatic email sending for enrollment forms.",
    "steps_taken": "The issue was resolved by setting up the custom email configuration for Delta Dental forms. The email configuration was verified using the Carrier Connection Tools to ensure that the recipient for Delta Dental forms was correctly set to cs@alliedadministrators.com.",
    "data_models": "[]"
  },
  "BENINTEG-1556": {
    "key": "BENINTEG-1556",
    "issue": "The admin, Jess Grooms, is unable to update the recipient for the Dearborn enrollment forms due to the edit button being disabled during the EDI implementation phase.",
    "issue_summary": "Admin unable to update Dearborn enrollment forms recipient due to EDI implementation phase restrictions.",
    "rca": "The issue was caused by the EDI implementation phase, which disabled the edit button for updating the recipient of the Dearborn enrollment forms. The email was updated using the EBN carrier tool as per the request.",
    "steps_taken": "The email for Dearborn was updated using the EBN carrier tool. Additionally, it was communicated that the admin could use a self-service tool to make such updates in the future, with documentation provided for guidance.",
    "data_models": "[]"
  },
  "BENINTEG-1555": {
    "key": "BENINTEG-1555",
    "issue": "The report for BOB Groups EDI/API not connected is inaccurate, showing groups that should not be there and missing Noyo setup tasks for some groups.",
    "issue_summary": "The report for BOB Groups EDI/API not connected is inaccurate due to incorrect filtering logic, causing groups with completed connections to still appear and missing Noyo setup tasks for some groups.",
    "rca": "Correct issues were not being propagated and the filter to select the companies not connected was incorrect and was wrongly grouping companies that were connected. Specifically, groups with a 'FINALIZED' state but without a connection created within 7 days were incorrectly included in the report. Additionally, the NoyoCarrierConnection object did not have a connectionId set, causing connected groups to still appear in the report.",
    "steps_taken": "The engineering team reviewed the report and setup task queue. They identified that groups with a 'FINALIZED' state but without a connection created within 7 days were incorrectly included in the report. They also found that the NoyoCarrierConnection object did not have a connectionId set, which caused connected groups to still appear in the report. The report was updated to remove completed connections and add vendor names for better visibility. The blocking reason was also updated to provide more visibility on Ops steps needed.",
    "data_models": "[BaseCompanyCarrierTransmission, NoyoCarrierConnection]"
  },
  "BENINTEG-1554": {
    "key": "BENINTEG-1554",
    "issue": "Nerdio, Inc. experienced an interruption in email submissions to BCBS starting in July, resulting in two months of emails not being transmitted as expected.",
    "issue_summary": "Email submissions to BCBS for Nerdio, Inc. were interrupted in July, causing a backlog of two months of untransmitted emails. The issue began after a broker was added in June, and automated replies from BCBS stopped abruptly.",
    "rca": "BCBS stopped accepting enrollment submissions via form since 1/1/2024 and expects information to be ingested on their portal. This change was not accounted for, leading to the interruption in email submissions.",
    "steps_taken": "The issue was tracked to an ongoing incident, and it was communicated to the group's insurance admin that BCBS no longer accepts form submissions. The incident was monitored in a dedicated channel, and the ticket was closed after informing the relevant parties.",
    "data_models": "[]"
  },
  "BENINTEG-1553": {
    "key": "BENINTEG-1553",
    "issue": "Elevate had an issue where several employees were added to the 'new hire' section of the Benefits Admin App due to incorrect zip codes, leading to the deletion of medical enrollment information for several employees. This resulted in no medical deductions appearing in payroll and missing information in Rippling.",
    "issue_summary": "Incorrect zip codes led to employees being added to the 'new hire' section, and subsequent resolution actions deleted medical enrollment information, causing payroll and coverage issues.",
    "rca": "All member enrollment data for medical lines either reflected correctly with our Vendors, or they had waived their medical line. The issue was caused by incorrect zip codes entered during Open Enrollment, which created New Hire Events instead of EnrollmentEvents. Deleting these New Hire Events inadvertently removed medical coverage for the affected employees.",
    "steps_taken": "The incorrect zip codes were corrected in Rippling. The previously invalidated medical SubscriberLineInfos (SLIs) were reinstated for the affected employees. Amendments were pushed through without end dates for the affected employees. The Benefits Integration team was involved to ensure the feed operations for any amendments were correctly handled.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-1548": {
    "key": "BENINTEG-1548",
    "issue": "Employee Prisca Ekkens has two Rippling profiles with benefit enrollments, causing duplicate emails and conflicting information.",
    "issue_summary": "Duplicate profiles for employee Prisca Ekkens with benefit enrollments in each, requiring cancellation of one profile's enrollments.",
    "rca": "The employee state is as expected in the system and with both vendors handling PEO insurance (Vericred + Noyo), indicating no duplicates in their systems.",
    "steps_taken": "Cleared insurance enrollments for the duplicate profile using the following code:\n\n```python\n# https://rippling.atlassian.net/browse/BENEEX-1672\nduplicate_role = RoleWithCompany.objects.get(id=\"664f781ee5d68428c656fe50\")\n\nfrom insurance.scripts import seed\nseed.Seed().clear_insurance_for_role(duplicate_role)\n```\n\nCommunicated with carriers to disregard duplicate forms, as the elections were identical between the two accounts.",
    "data_models": "[RoleWithCompany]"
  },
  "BENINTEG-1547": {
    "key": "BENINTEG-1547",
    "issue": "Coverage period information for renewing groups was not sent to Ideon (Vericred) as expected. The process was supposed to send the coverage period 7 days after the OE setup done date, but it was sent 1 day after the OE ended.",
    "issue_summary": "The coverage period for renewing groups was not sent to Ideon as per the expected timeline. It was supposed to be sent 7 days after the OE setup done date but was instead sent 1 day after the OE ended.",
    "rca": "The current system behavior sends the coverage period information to Ideon a day after the company enrollment deadline, which was set at May 3rd. This behavior does not align with the expected process of sending the information 7 days after the OE setup done date.",
    "steps_taken": "The issue was discussed in comments and Slack threads. It was identified that the logic in the system triggers the transmission after the company enrollment deadline. There was a suggestion to update the documentation and expectations to reflect the current behavior. The ticket was closed due to no further response, and any changes to the behavior were suggested to be tracked as a feature request.",
    "data_models": "No specific data models were mentioned in the ticket."
  },
  "BENINTEG-1545": {
    "key": "BENINTEG-1545",
    "issue": "Missing employer application in the renewal packet for Heeler Security, Inc Group ID: 20643-05031, causing a blocker for the upcoming renewal on 8/1/2024.",
    "issue_summary": "The employer application form for Delta Dental MD was missing from the renewal packet for Heeler Security, Inc, which was a blocker for the renewal process scheduled for 8/1/2024.",
    "rca": "The root cause was identified as a missing master renewal form for Delta Dental MD, which required a code change to enable it.",
    "steps_taken": "The issue was addressed by enabling the master renewal form for Delta Dental MD through a code change. This change was merged, and the renewal forms were verified to be available when regenerating the carrier packet. The issue was then closed as resolved.",
    "data_models": "[]"
  },
  "BENINTEG-1542": {
    "key": "BENINTEG-1542",
    "issue": "Coverage effective date is different in Rippling and the carrier, causing a discrepancy where the group is asking for a refund for June since their coverage was not active for that month.",
    "issue_summary": "The coverage effective date for the PEO group 'No Worry Home' is set to 06/01 in Rippling but shows as 07/01 with the carrier, leading to a request for a refund for June.",
    "rca": "The root cause was identified as a manual data entry error on Rippling's side, where the enrollment events were initially created with an incorrect effective date of 07/01. Although this was corrected in Rippling to 06/01, the update was not reflected on the carrier's portal due to a failure in communication via Noyo and Ideon.",
    "steps_taken": "The issue was investigated by checking the effective dates in both Rippling and the carrier's portal. The error was corrected in Rippling, and the changes were communicated to the vendors Noyo and Ideon. Follow-ups were made with the carriers to ensure the updates were reflected. The issue was escalated to the Benefits Integrations and Benefits Ops team for further handling. Communication with the carriers and vendors was maintained until the effective dates were correctly updated to 06/01 for all employees involved.",
    "data_models": "[VendorRequest, InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-1541": {
    "key": "BENINTEG-1541",
    "issue": "Catch Labs Inc. faced an issue with COBRA cancellation events where the changeover from company-paid to employee-paid COBRA was being transmitted as a termination date, causing confusion in the file feed.",
    "issue_summary": "The issue involved COBRA cancellation events being incorrectly transmitted as termination dates when the financial responsibility for COBRA coverage shifted from the company to the employee after three months.",
    "rca": "The root cause was identified as the current system behavior, which treats the changeover of financial responsibility as a COBRA cancellation event. This is expected behavior but not ideal, and it has been taken as a feature request for improvement.",
    "steps_taken": "The issue was investigated by reviewing the COBRA cancellation events and confirming that the system was behaving as expected by sending the end date for the coverage. It was determined that the cancellation event was triggered by the employee, not the system. The team decided to create a product ticket to implement a better construct for handling COBRA coverage transitions.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-1540": {
    "key": "BENINTEG-1540",
    "issue": "The emails for COBRA enrollment for a BOB group were not sent to cobra-ops@rippling.com, leading to missed enrollments as the RIS team was not notified.",
    "issue_summary": "COBRA enrollment emails for a BOB group were not sent to the designated email address, cobra-ops@rippling.com, due to a misconfiguration in the communication setup.",
    "rca": "The issue occurred because the COBRA enrollment event was triggered before the Noyo connection for the BOB group was completed. Until the Noyo connection was set up, the CustomCommunicationObject was active, which did not send emails to cobra-ops@rippling.com. This was configured in the CustomNoyoCommunicationDetail object but not in the CustomCommunicationObject. Once the Noyo connection was completed, the custom email method was deleted, and emails were correctly routed to cobra-ops@rippling.com.",
    "steps_taken": "The investigation confirmed that the setup for Principal is to send COBRA emails to the RIS team once the BOB group carrier connection is complete. The issue was resolved by ensuring that the Noyo connection setup was completed, which automatically corrected the email routing.",
    "data_models": "[CustomCommunicationObject, CustomNoyoCommunicationDetail]"
  },
  "BENINTEG-1539": {
    "key": "BENINTEG-1539",
    "issue": "Discrepancies in employee and dependent data for Tensentric LLC preventing the group from going live with Cigna via Noyo. Missing employees and dependents in the system, specifically Richard Lytle III, causing a delay in setting up the EDI feed.",
    "issue_summary": "Discrepancies in employee data for Tensentric LLC with Cigna via Noyo, specifically missing Richard Lytle III, preventing the group from going live.",
    "rca": "The root cause analysis revealed that there is no employee named Richard Lytle III in the system for Tensentric LLC. The carrier, Cigna, has this employee on their file, but Rippling's system does not, indicating a possible data mismatch or error in the setup of the EDI feed.",
    "steps_taken": "The discrepancy for Timothy Ogle was resolved. For Richard Lytle III, it was confirmed that there is no such employee in the system, and further confirmation from the carrier and group was sought. The issue was escalated to engineering for further investigation and resolution.",
    "data_models": "[]"
  },
  "BENINTEG-1538": {
    "key": "BENINTEG-1538",
    "issue": "Measurabl, Inc. / Justin Mauldin / spouse only COBRA has been requested to be sent differently by carrier. The EDI feed being received is incorrect, and the spouse needed to be enrolled under their own SSN to continue the COBRA plan.",
    "issue_summary": "The issue involves the incorrect EDI feed for a spouse-only COBRA plan with Anthem, where the spouse needs to be enrolled under their own SSN. The carrier requested adjustments to the EDI file logic to accommodate this requirement.",
    "rca": "The root cause of the issue is related to a bug in the Vericred system, where the EDI feed logic did not accommodate the carrier's request for dependent-only coverage under a separate SSN.",
    "steps_taken": "The team initiated a conversation with Vericred to discuss the possibility of adjusting the EDI file logic. Ideon made a change on their end to address the issue, ensuring it won't affect members moving forward.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-1536": {
    "key": "BENINTEG-1536",
    "issue": "Scout Motors Inc faced an issue with VSP where a data file was not received due to an expired token error, causing a high business impact and blocking production files.",
    "issue_summary": "The issue was related to an expired token error during a data transmission to EBN/OneKonnect, which was identified as a transient error related to AWS S3 token expiry.",
    "rca": "The root cause was identified as a transient error from an unrelated component in the tooling, specifically an AWS S3 token expiry issue. The system was working as expected, and the file was successfully transmitted despite the error message.",
    "steps_taken": "The team reviewed the issue and confirmed that it was a transient error. They verified that the file was successfully transmitted and received confirmation from CX. A screenshot was attached to confirm the successful transmission, and the ticket was closed after confirmation.",
    "data_models": "[]"
  },
  "BENINTEG-1532": {
    "key": "BENINTEG-1532",
    "issue": "Issue being faced in ticket",
    "issue_summary": "The ticket is a test ticket with no specific issue described.",
    "rca": "The root cause analysis category is marked as 'Deferred', but no specific reason or description is provided.",
    "steps_taken": "No steps were taken as this is a test ticket.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: []"
  },
  "BENINTEG-1529": {
    "key": "BENINTEG-1529",
    "issue": "The demographic change was sent by email when EDI file feeds are active, causing confusion for the admin.",
    "issue_summary": "The admin received demographic changes via email despite having active EDI file feeds, due to dual communication logic in the system.",
    "rca": "The system is designed to send dual communications if any existing Vericred coverage period for the company is 'expired' or 'canceled'. This logic led to the demographic change being sent via email even though EDI feeds were active.",
    "steps_taken": "The team investigated the logic in the codebase that triggers dual communication. They used the following code snippet to debug:\n\n```python\npendingAction = PendingAction.objects.get(id='66aa2eacda98826ddc7467e9')\npa = pendingAction\ncarrierObject = pa.carrier.getCarrierObject()\nci = CompanyInsuranceInfo.objects.get(company=pendingAction.company)\nvcc = getVericredCompanyCarrier(pendingAction.role.get_company_tax_info(), carrier=pendingAction.carrier)\nreturn vcc.shouldDualCommunicateWithReason(pa)\n```\n\nThey also used a retool application to find emails configured for dual communication and identified that the email belonged to the broker. The ticket was closed with a suggestion to raise a feature request with the product team if a behavior change is needed.",
    "data_models": "[PendingAction, CompanyInsuranceInfo]"
  },
  "BENINTEG-1528": {
    "key": "BENINTEG-1528",
    "issue": "Rippling needs to differentiate Short Term Disability vs Short Term Disability Buy Up for Blew Associates' Mutual of Omaha file feed.",
    "issue_summary": "Rippling was unable to differentiate between Short Term Disability and Short Term Disability Buy Up for Blew Associates' Mutual of Omaha file feed due to a missing feature flag.",
    "rca": "Added Blew and Associates to feature flag to enable updated EBN benefit amount.",
    "steps_taken": "The feature from a previous fix (BENINTEG-831) was applied to enable the differentiation for Blew & Associates, P.A. The feature flag was updated to include Blew and Associates, allowing the updated EBN benefit amount to be applied.",
    "data_models": "[]"
  },
  "BENINTEG-1527": {
    "key": "BENINTEG-1527",
    "issue": "Incorrect employee coverage end dates were being generated in enrollment audits for SuSea, Inc. The original effective date for PEO coverage was changed, but the audit items did not update to reflect the new coverage termination date.",
    "issue_summary": "The issue was that the coverage end dates for 26 employees' Anthem coverage were not updated in the enrollment audits after the effective date for PEO coverage was changed from 08/01/2024 to 09/01/2024.",
    "rca": "The root cause of the issue was that the coverage period was expired, and the scheduled job that marks audits as done did not pick up expired coverage periods. This resulted in the audit items not being updated to reflect the new coverage end date.",
    "steps_taken": "A script was run to mark the audits with no mismatch as done for the expired coverage period ID. This resolved the issue for most audit items, but one case showed a mismatch due to the employee being on COBRA coverage rather than employer-sponsored coverage. Further investigation confirmed that expired coverage period audits are not covered in the scheduled job, and a script was requested to mark the remaining audit item as done.",
    "data_models": "[RoleWithCompany, CompanyInsuranceInfo]"
  },
  "BENINTEG-1526": {
    "key": "BENINTEG-1526",
    "issue": "There are 26 audit items with vendor Vericred and carrier Kaiser Permanente that are not clearing from the Carrier Connections Dashboard despite data being synced between Rippling and Ideon. No amendments are generating to resolve these audits.",
    "issue_summary": "Audit items with Vericred and Kaiser Permanente are not clearing from the Carrier Connections Dashboard due to amendments not generating, despite data being synced.",
    "rca": "Amendments made using VCC IDs are not closing the corresponding audits. The batch amendment process amends the amendments but does not mark the corresponding audits as done.",
    "steps_taken": "1. Investigated the issue and found that the batch amendment using VCC IDs on the retool app amends the amendments but doesn't mark the corresponding audits as done. 2. Created a bug ticket (BENINTEG-1844) to address this issue. 3. Added logic in the daily cron job to mark audits as DONE if there is no amendment to make. Verified that for all reported companies, the corresponding audits are marked as DONE.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-1525": {
    "key": "BENINTEG-1525",
    "issue": "The group wants COBRA enrollment forms to be sent to a new email address (tpa_eligibility@uhc.com) instead of the current one (clientserviceoperations@uhc.com).",
    "issue_summary": "The issue is that COBRA enrollment forms need to be sent to a new email address as requested by the group, but the current system setup only allows one email ID for COBRA, causing a delay in updating the email address.",
    "rca": "The root cause of the issue is a gap in the implementation where the system is ignoring the is_cobra flag, and the current setup enforces COBRA to go via emails, which is not picking up the configured COBRA email.",
    "steps_taken": "The team discussed the possibility of sending COBRA enrollments via a file feed instead of emails. It was confirmed that the configuration can be changed to use a file feed, and instructions were provided to update the setup. The bug related to the email configuration was identified and will be fixed separately. The team followed the instructions to update the configuration, and it was confirmed that the setup is now correct for sending COBRA enrollments via file feed.",
    "data_models": "[ops_models]"
  },
  "BENINTEG-1524": {
    "key": "BENINTEG-1524",
    "issue": "Nuclearn Inc. faced enrollment event failures for an employee due to a 'COMMUNICATION_DETAILS_NOT_READY' error, despite not having a Noyo connection.",
    "issue_summary": "The enrollment events for an employee at Nuclearn Inc. failed due to a 'COMMUNICATION_DETAILS_NOT_READY' error. The issue was initially thought to be related to Noyo, but the group does not have a Noyo connection.",
    "rca": "The root cause of the issue was a setup/expectation problem. The error was not related to Noyo as initially suspected, but rather due to the absence of a default email configuration for the carrier, which is necessary for communication.",
    "steps_taken": "The issue was investigated by checking the error message in the confluence and confirming that the group does not have an active Noyo connection. It was identified that the problem was due to the lack of a default email setup for the carrier. An email setup task was created separately to address this issue.",
    "data_models": "[]"
  },
  "BENINTEG-1518": {
    "key": "BENINTEG-1518",
    "issue": "Noyo Blocked Transaction - CareerPuck, Inc. 'GROUP_COVERAGE_CANCELLATION' impacting 26 transactions for employees trying to cancel coverage with Beam and Guardian.",
    "issue_summary": "Blocked transactions for 'Group Coverage Cancellation' impacting Beam and Guardian lines of coverage, related to a previous issue BENINTEG-1310.",
    "rca": "The blocked transactions were related to a visibility issue with Noyo, which was previously addressed in BENINTEG-1310. The fix for the issue was already live, and the transactions were expected to be resolved by the end of the day.",
    "steps_taken": "The engineering team reviewed the blocked transactions and confirmed that the fix was live. They monitored the transactions, which were successfully processed, allowing the ticket to be closed.",
    "data_models": "[]"
  },
  "BENINTEG-1517": {
    "key": "BENINTEG-1517",
    "issue": "The termination event for a member at Velocity Labs did not transmit before the COBRA event, despite being submitted first.",
    "issue_summary": "The termination event for a member was not transmitted before the COBRA event due to an unknown issue, causing the COBRA event to be processed first.",
    "rca": "The pending action for termination failed to generate forms on time for an unknown reason. Since the failure occurred more than two months ago, the exact cause could not be determined. The COBRA pending action was able to generate its forms successfully before the termination pending action, leading to the COBRA event being processed first.",
    "steps_taken": "The issue was resolved on June 26th, but the exact reason for the resolution is unknown due to lack of data. As a preventive measure, it was decided to store the message/error in logs for future debugging if similar cases arise.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-1479": {
    "key": "BENINTEG-1479",
    "issue": "Issue being faced in ticket",
    "issue_summary": "This is a test ticket with no actual issue reported.",
    "rca": "The ticket is marked as a test ticket and no action is needed.",
    "steps_taken": "No steps were taken as this is a test ticket.",
    "data_models": "[]"
  },
  "BENINTEG-1478": {
    "key": "BENINTEG-1478",
    "issue": "The PEO group for Scarlet Global Holdings Ltd was not ingested, causing a missed enrollment for employee Jacob Maine.",
    "issue_summary": "The PEO group for Scarlet Global Holdings Ltd was not ingested into the system, leading to a missed enrollment opportunity for an employee. This issue is recurring and indicates that the root cause has not been properly addressed.",
    "rca": "The root cause analysis category is 'Bug Fix' with a subcategory of 'Special Case Handling'. The detailed description of the root cause is not available.",
    "steps_taken": "The group was ingested to Noyo using a script that iterates over PEO sales events and ingests them if certain conditions are met. The script checks for the tentative effective date and setup done date, and if the conditions are satisfied, it calls the 'ingestPeoGroupToNoyo' function. The issue was resolved after merging a pull request.",
    "data_models": "[CompanyEnrollmentEvent, NoyoCompanyPlanInfo]"
  },
  "BENINTEG-1477": {
    "key": "BENINTEG-1477",
    "issue": "Bevy Labs, Inc is facing an issue with their insurance data transmission to Cigna using the Stedi component.",
    "issue_summary": "The issue involves Bevy Labs, Inc's insurance data transmission to Cigna, with the root cause being the ongoing creation of a Retool support tool.",
    "rca": "The root cause of the issue is identified as the ongoing creation of a Retool support tool, which is affecting the data transmission process.",
    "steps_taken": "The steps to resolve the issue are not detailed in the ticket.",
    "data_models": "[]"
  },
  "BENINTEG-1476": {
    "key": "BENINTEG-1476",
    "issue": "The company name 'e-L\u014dvu Health Inc' was incorrectly populating as 'e-Lvu Health Inc' on all forms and carriers, causing incorrect information to be sent.",
    "issue_summary": "The company name 'e-L\u014dvu Health Inc' was incorrectly populating as 'e-Lvu Health Inc' on forms due to a Unicode character issue, affecting all forms and carriers.",
    "rca": "The issue was caused by the tool used for PDF generation, 'pdftk', not supporting Unicode characters, leading to incorrect downscaling of the Unicode character '\u014d' to 'o'.",
    "steps_taken": "The issue was temporarily resolved by manually editing forms to replace the Unicode character with a regular 'o'. A backend change was later implemented to handle the name correctly, and forms were regenerated to confirm the fix. The code snippet used for debugging involved using 'forge_fdf' to generate the PDF form data and checking the Unicode encoding.",
    "data_models": "[CompanyInsuranceInfo, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-1474": {
    "key": "BENINTEG-1474",
    "issue": "Forms for LTD and STD are incorrectly displaying the policy number in the group ID section, despite the correct Group ID being entered in the Ben Admin app.",
    "issue_summary": "The forms for LTD and STD are showing the policy number instead of the Group ID in the group ID section due to a system behavior where the field populates the groupId from InsuranceCompanyPlan for all carriers except Unum.",
    "rca": "The root cause of the issue is a setup problem and lack of documentation. The system behavior is such that the field always populates the groupId from InsuranceCompanyPlan for all carriers except Unum. If this value is not set, it falls back to GroupId. This behavior has been consistent for the past 2-3 years, and there is no documentation explaining the reason behind it.",
    "steps_taken": "The issue was identified as a system behavior where the CompanyPlan's Policy Id overrides the groupId of Company Carrier GroupId. A setup change is needed to fix this, and the responsible team member will be getting this setup fixed.",
    "data_models": "[InsuranceCompanyPlan, CompanyCarrierLineInfo]"
  },
  "BENINTEG-1473": {
    "key": "BENINTEG-1473",
    "issue": "The EDI churn report from the engineering team does not match the churn emails received monthly, causing confusion on which source to prioritize for actioning EDI Churn Requests.",
    "issue_summary": "The EDI churn report from ENG doesn't match the churn emails, leading to uncertainty about which source to prioritize for processing EDI Churn Requests.",
    "rca": "The issue was identified as a duplicate of another ongoing investigation captured in the ticket BENERX-1459.",
    "steps_taken": "The ticket was closed as a duplicate, and all further investigation and activity are being tracked in the related ticket BENERX-1459.",
    "data_models": "[]"
  },
  "BENINTEG-1452": {
    "key": "BENINTEG-1452",
    "issue": "The end date of a role for an employee at Sendlane Inc was updated from 2024-07-26 to 2024-08-02, requiring updates to insurance timelines and potential COBRA coverage adjustments.",
    "issue_summary": "The end date of an employee's role was updated, necessitating the creation of a 'Termination (end date correction)' event and updates to insurance timelines. Additionally, the Marketplace - Integrations team needs to update the end date with carriers, and if COBRA coverage is involved, the Compliance team may need to update COBRA timelines.",
    "rca": "The root cause analysis category is 'Support Tool Used', but no specific subcategory or detailed description is provided.",
    "steps_taken": "1. A 'Termination (end date correction)' event was created for the prior termination event. 2. Insurance timelines were reviewed and updated by the Termination (end date correction) event. 3. The ticket was reassigned to the Marketplace - Integrations team to update the end date with carriers, as one form hadn't been submitted by email. 4. It was confirmed that a COBRA event was created and processed, so there was no need to involve the COBRA team.",
    "data_models": "[]"
  },
  "BENINTEG-1450": {
    "key": "BENINTEG-1450",
    "issue": "COBRA transactions for ClimateAi were not sent over the API as expected, instead defaulting to forms.",
    "issue_summary": "COBRA transactions for ClimateAi were not transmitted via API due to an expectation mismatch regarding the use of Noyo for Guardian non-PEO groups.",
    "rca": "The issue was due to a misunderstanding of the system's behavior. Noyo does not support COBRA transactions for non-PEO Guardian groups, and thus, the transactions defaulted to forms, which is the expected behavior.",
    "steps_taken": "The team reviewed the logic configured for Guardian on Noyo and confirmed that the group is not PEO. It was clarified that for non-PEO Guardian groups, forms are the correct route for COBRA transactions. The issue was closed after confirming the expected behavior.",
    "data_models": "[]"
  },
  "BENINTEG-1449": {
    "key": "BENINTEG-1449",
    "issue": "The admin updated the Rippling system on 7/31/24 to change the effective date of coverage for Luna Rivera to 6/8/2024, but this change was not pushed to Ideon. This is critical as UHC has a 60-day retro rule, and the update needs to be pushed to Ideon before the deadline.",
    "issue_summary": "The effective date for Luna Rivera's coverage was updated in Rippling but not pushed to Ideon, risking non-compliance with UHC's 60-day retro rule.",
    "rca": "The issue was categorized as an Ops Issue due to incorrect steps or a state error. The coverage for Luna Rivera was split into two intervals (06/06 to 06/07 and 06/08 to 08/31) due to an offline change, and the systems were in sync with the coverage starting from 06/06. Updating the coverage start period to 06/08 at Vericred would create an inconsistency between Rippling and Vericred.",
    "steps_taken": "The systems were checked for synchronization, and it was confirmed that both systems stated the coverage started from 06/06. A merging of coverage intervals was performed, and it was advised to follow the SOP for any offline changes to resolve the requirement operationally.",
    "data_models": "[]"
  },
  "BENINTEG-1448": {
    "key": "BENINTEG-1448",
    "issue": "The carrier, Equitable AXA, reported that the age reduction for life benefits is not being applied correctly. They expect the original benefit amount to be rounded to the next higher $1000 before applying the age reduction, but currently, the rounding is happening after the age reduction.",
    "issue_summary": "The issue is that the benefit amount is being rounded after the age reduction is applied, whereas the carrier expects it to be rounded before the age reduction.",
    "rca": "The root cause is identified as a product enhancement need where the current logic in the system applies rounding after age reduction, which is contrary to the carrier's expectation of rounding before age reduction. This discrepancy is specific to this carrier and not a general issue across all carriers.",
    "steps_taken": "A workaround was implemented where OneKonnect performs the calculation on their side. Additionally, a feature request was filed to address this logic discrepancy in the system. The relevant code snippets were identified in the system where the current logic is implemented, specifically in the `ebn_utils.py` and `insurance_plan_models.py` files.",
    "data_models": "[LifeLikePlan]"
  },
  "BENINTEG-1447": {
    "key": "BENINTEG-1447",
    "issue": "Three employee subgroup classifications are not updating correctly in the JSON payload being sent to Ideon. The employees should have a specific Vericred ID for their employment classification, but an outdated ID is being used, blocking a file feed setup.",
    "issue_summary": "Employee subgroup classifications are not updating correctly due to a mismatch in Vericred ID numbers, causing a blockage in the file feed setup.",
    "rca": "The root cause of the issue was a wrong data setup at Vericred. The effective and expiry dates for the classification ID were the same, causing the system to fall back to old sent values. The expiry date was set on Vericred's system and synced to Rippling, but was later removed from Vericred without a corresponding cleanup in Rippling's system.",
    "steps_taken": "The issue was identified as a setup problem with effective and expiry dates being the same. The expiry date was fetched from Vericred's config and was not updated in Rippling's system after being removed from Vericred. A fix was pushed to update the system and unblock the issue. The correct classification IDs were populated for each employee, resolving the issue.",
    "data_models": "[CompanyInsuranceInfo, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-1432": {
    "key": "BENINTEG-1432",
    "issue": "The termination transaction for an employee at DRIVE THRU TECHNOLOGY INC DBA DTIQ Technologies did not send to the carrier, requiring manual intervention.",
    "issue_summary": "The employee's termination transaction was not sent to the carrier due to a discrepancy between Rippling and Noyo systems, where the employee was terminated and rehired under different roles, causing confusion.",
    "rca": "The root cause was identified as a race condition where the employee had two different roles. The previous role was terminated, and a new role was created, leading to confusion between Rippling and Noyo systems. The termination event could not be sent because the subscriber was not created in Noyo due to the new hire event not being processed initially.",
    "steps_taken": "The issue was investigated by reaching out to Noyo to understand why the employment status was marked as terminated. It was found that the employee was terminated and rehired under different roles, causing confusion. A new hire event was created for the new role, which eventually created the subscriber in Noyo. The termination event for the previous role was then sent. A ticket was registered to address the issue of handling different roles.",
    "data_models": "[EnrollmentEvent]"
  },
  "BENINTEG-1431": {
    "key": "BENINTEG-1431",
    "issue": "The transaction for DRIVE THRU TECHNOLOGY INC DBA DTIQ Technologies / TYEISHA SANDERS did not actually send to the carrier, despite the debugger indicating it did. The Principal Vision enrollment shows an incorrect date of 01/01/2025.",
    "issue_summary": "The transaction for the employee's NHE Principal Vision enrollment did not send to the carrier due to a manual data entry error, specifically an incorrect date of birth in the Rippling system.",
    "rca": "The root cause of the issue was a manual data entry error where the wrong date of birth was entered in the Rippling system for the member 'Amari Williams'. This discrepancy led to the failure of the transaction to be sent to the carrier.",
    "steps_taken": "The initial debugging indicated a group ID issue, and attempts to send a new transaction resulted in errors indicating that a dependent does not belong to the employee. The issue was identified as an incorrect date of birth for a member, which was corrected. A resync was attempted to fix the issue, but further errors indicated discrepancies between Rippling and Noyo systems. The group was migrated to Snapshot to resolve the issue, and an extra dependent fetched from the carrier was identified and removed.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-1430": {
    "key": "BENINTEG-1430",
    "issue": "Tiki Labs Inc is facing an issue with their insurance carrier Cigna, related to the frequency and preferred day and time for some process.",
    "issue_summary": "Tiki Labs Inc is experiencing an issue with their insurance carrier Cigna, specifically related to the frequency and preferred day and time for a process involving the Stedi component.",
    "rca": "The root cause analysis indicates that a support tool was used, and there is a need to create a retool for the same.",
    "steps_taken": "The steps to resolve the issue involve creating a retool for the process.",
    "data_models": "[]"
  },
  "BENINTEG-1429": {
    "key": "BENINTEG-1429",
    "issue": "Employee elected dental coverage for their daughter during the 3/1 Open Enrollment, but this information did not transmit over the API to Noyo.",
    "issue_summary": "The dental coverage election for an employee's dependent was not transmitted to Noyo as expected.",
    "rca": "The system was working as expected, and the correct details were sent in the carrier packet on March 30, 2024. There was no transmission of termination over the API from Rippling's side. The issue was due to a misunderstanding or error on Noyo's part, as they marked it terminated.",
    "steps_taken": "Reviewed the Noyo dashboard against employee events and Noyo Amendment. Verified that the correct details were sent in the carrier packet, which included the dependent's dental coverage. Confirmed no termination transmission from Rippling's side. Reached out to Noyo for clarification on why they marked it terminated.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-1427": {
    "key": "BENINTEG-1427",
    "issue": "Infinitus Systems, Inc. is facing an issue with Cigna CA related to the frequency of data transmission scheduled for Tuesday at 3am PST.",
    "issue_summary": "The issue involves Infinitus Systems, Inc. with Cigna CA, where there is a need to address the data transmission frequency scheduled for Tuesday at 3am PST.",
    "rca": "The root cause analysis indicates that a support tool, specifically a retool, needs to be created to address the issue.",
    "steps_taken": "The steps to resolve the issue involve creating a retool to manage the data transmission frequency effectively.",
    "data_models": "[]"
  },
  "BENINTEG-1426": {
    "key": "BENINTEG-1426",
    "issue": "The issue involves the need to create a retool for REsurety, Inc. with Cigna as the carrier, and the current workaround involves running a script on webscript.",
    "issue_summary": "REsurety, Inc. requires a retool for integration with Cigna, but currently, a script is being manually run on webscript as a temporary solution.",
    "rca": "The root cause analysis indicates that there is a need to create a retool for the integration process, but for now, the issue is being temporarily resolved by running a script on webscript.",
    "steps_taken": "A script was run on webscript as a temporary measure to address the issue until a retool can be created.",
    "data_models": "[]"
  },
  "BENINTEG-1425": {
    "key": "BENINTEG-1425",
    "issue": "The issue involves the need to create a migration tool for the group i4DM LLC with Carrier Cigna, as indicated by the Group ID: 00636138 and Company ID: 5e54430cb99dbf6bc0783e5f.",
    "issue_summary": "The issue is related to the need for a migration tool for the group i4DM LLC with Carrier Cigna, as identified by the Group ID: 00636138.",
    "rca": "The root cause analysis indicates that there is a need to create a migration tool for the group i4DM LLC with Carrier Cigna.",
    "steps_taken": "The steps to resolve the issue are not detailed in the ticket.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: []"
  },
  "BENINTEG-1424": {
    "key": "BENINTEG-1424",
    "issue": "COBRA members, specifically Gisele Griffin, are missing from the dataset being sent to OneKonnect for Premera, despite having active COBRA coverage.",
    "issue_summary": "COBRA member Gisele Griffin is not appearing in the dataset sent to OneKonnect for Premera, even though they have active COBRA coverage. The system was working as expected, but the member was explicitly set to be skipped.",
    "rca": "The issue was categorized as an Ops Issue with the subcategory 'Wrong Expectation - System working as expected'. The root cause was that the employee, Gisele Griffin, was explicitly set to be skipped in the dataset, and there was no initial reason found for this action.",
    "steps_taken": "The team identified that Gisele Griffin was explicitly set to be skipped. It was suggested to remove the function that skips this specific member. A past expiration date was set to resolve the issue temporarily, allowing the member to be included in the dataset. Additionally, there was a request to add a delete function in the retool for Ops to manage such cases independently in the future.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [roles_to_skip]"
  },
  "BENINTEG-1423": {
    "key": "BENINTEG-1423",
    "issue": "Feast & Fettle Inc is facing issues with the Cigna carrier integration, requiring an audit of the production file to ensure all coverages and employees are correctly included, especially after numerous events in the past week.",
    "issue_summary": "Feast & Fettle Inc is experiencing issues with the Cigna carrier integration, necessitating a production file audit to verify correct coverage and employee inclusion due to recent events.",
    "rca": "The root cause analysis indicates a need to create a tool for switch over and migration, suggesting that the current process may not adequately handle transitions or migrations, leading to potential discrepancies in the production file.",
    "steps_taken": "An audit was scheduled to be performed on the production file on the day of production to ensure all valid pending actions are applied and to identify any errors.",
    "data_models": "[]"
  },
  "BENINTEG-1422": {
    "key": "BENINTEG-1422",
    "issue": "Nativo Inc's Anthem coverage file feed only reflects 8 members being transmitted, while over 100 employees are missing. Amendments cannot be submitted, and the option to reingest the group is not available in the Vericred classifications.",
    "issue_summary": "The Ideon file feed for Nativo's Anthem coverage is missing over 100 employees due to missing Vericred IDs in their profiles, preventing amendments and reingestion.",
    "rca": "The root cause of the issue was that many employees had not set up their SSN, causing Vericred member creation to fail. Additionally, the wrong carrier was chosen while setting up the connection for Kaiser, and the coverage period for Anthem Life was marked as expired by Ideon.",
    "steps_taken": "Employees provided their SSNs, and the group was reingested via the Vericred Tool. A batch amendment was run for Anthem Sequoia (Medical), and the connection for Kaiser was corrected to Kaiser Sequoia. The issue with the ccli was resolved by setting an effectiveDate. For Anthem Life, it was confirmed that the coverage is self-billed and does not need to be sent on the file feed.",
    "data_models": "[EnrollmentEvent, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-1421": {
    "key": "BENINTEG-1421",
    "issue": "Unable to push member enrollment corrections via the Guardian API due to errors related to unsupported 'department' field, resulting in overbilling for the group.",
    "issue_summary": "The issue was caused by the inclusion of 'department' as a carrier classification in the payload sent to Guardian via Noyo, which is not supported by Guardian, leading to transaction errors.",
    "rca": "The root cause of the issue was the presence of 'department' as a carrier classification in the payload, which Guardian does not support. This resulted in the rejection of the requests by Noyo, as the 'department' field was marked as an 'Unknown field.'",
    "steps_taken": "The engineering team identified that the 'department' field was not supported by Guardian and suggested removing it from the payload. Communication with Noyo was initiated to confirm if replacing 'department' with 'bill_subgroup_identifier' would resolve the issue. Noyo confirmed that they do not support sending 'department' details and recommended removing the department codes to allow transactions to be submitted.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-1420": {
    "key": "BENINTEG-1420",
    "issue": "Guru Technologies, Inc. faced an issue where salary redeterminations were not sent to carriers automatically, requiring manual intervention.",
    "issue_summary": "Salary redeterminations for Guru Technologies, Inc. were not sent automatically due to the system's intentional design to not send salary amendments via Noyo.",
    "rca": "The root cause analysis revealed that the system was working as expected. The implementation was designed to not send salary amendments via Noyo when SalaryChangeEvents support was added. This was an intentional decision, and thus, not an issue with the system.",
    "steps_taken": "The issue was investigated by reviewing the codebase and historical context. It was confirmed that salary amendments are not sent via Noyo, and this behavior was intentional. The ticket was closed as the system was functioning as expected.",
    "data_models": "[SalaryChangeEvent]"
  },
  "BENINTEG-1419": {
    "key": "BENINTEG-1419",
    "issue": "Webull Financial is facing an issue with their insurance carrier, Cigna, related to the frequency of data transmission scheduled for Tuesday at 3am PST.",
    "issue_summary": "Webull Financial is experiencing issues with the scheduled data transmission to Cigna, which is set to occur every Tuesday at 3am PST. The problem is related to the support tool used for the switch over.",
    "rca": "The root cause of the issue is related to the support tool used for creating the switch over process.",
    "steps_taken": "The steps to resolve the issue are not detailed in the ticket.",
    "data_models": "[]"
  },
  "BENINTEG-1418": {
    "key": "BENINTEG-1418",
    "issue": "Lessin/ Cigna Production Approval is pending for the company with ID 5dd596b5c594bf2049a53f04, with a weekly frequency set for Tuesdays at 3 am PST.",
    "issue_summary": "The issue involves the need for production approval for the company Lessin with Cigna as the carrier, scheduled for weekly processing.",
    "rca": "The root cause analysis indicates that a support tool, specifically retool, is being created to facilitate migration.",
    "steps_taken": "The steps to resolve the issue involve creating a retool to handle the migration process.",
    "data_models": "[]"
  },
  "BENINTEG-1416": {
    "key": "BENINTEG-1416",
    "issue": "The admin needs to update the email address for Anthem to send updates to the carrier, but the current setup lacks the communication details for Anthem, causing a delay in processing enrollments.",
    "issue_summary": "The issue involves updating the email address for Anthem to ensure proper communication for carrier transmissions. The current setup processed with an old contact, leading to no response from Anthem.",
    "rca": "The root cause of the issue was that the system was processing with an outdated contact email for Anthem, which resulted in no response from the carrier. Additionally, the capability to specify an email address for one group when using Noyo was not supported, causing a fallback to email due to incomplete setup tasks.",
    "steps_taken": "The steps taken included confirming the need to update the email address specifically for the group, discussing the urgency of the request, and completing the Noyo setup for Anthem to enable proper transmission. The email address maineconciergeservices@anthem.com was considered for default use, and the setup tasks were completed to allow transmission via Noyo.",
    "data_models": "[]"
  },
  "BENINTEG-1414": {
    "key": "BENINTEG-1414",
    "issue": "The client, Basemint Creative, is joining the PEO on 8/1 and completed the cancellation of current coverage task within Rippling several weeks ago. However, United and Beam have not received the cancellation notice, causing the admin to work directly with these carriers to cancel. Additionally, there is a need to confirm that their PEO plan enrollments have been successfully passed to the carriers for the 8/1 effective date.",
    "issue_summary": "Basemint Creative's cancellation notices were not sent to United and Beam despite completing the task in Rippling, due to a 5-day cooldown period after cancellation is raised. Confirmation of PEO plan enrollments for 8/1 is also required.",
    "rca": "The root cause of the issue is a 5-day cooldown period after a group cancellation is raised, which delayed the transmission of cancellation notices to the carriers. The system was working as expected, but the expectation was not communicated to the client.",
    "steps_taken": "The issue was moved to the benefits integrations team to investigate why the forms were not sent. It was identified that there is a 5-day cooldown period after the group cancellation is raised, and the updates are expected to go through by 6 Aug. A reference to the relevant pull request was provided for developers.",
    "data_models": "[CompanyEnrollmentEvent]"
  },
  "BENINTEG-1413": {
    "key": "BENINTEG-1413",
    "issue": "The COBRA enrollment forms for Ontic Technologies were being sent to the wrong email address (clientserviceoperations@uhc.com) instead of the requested tpa_eligibility@uhc.com. This was causing issues as the forms were not reaching the correct department at UHC.",
    "issue_summary": "COBRA enrollment forms for Ontic Technologies were sent to the incorrect email address due to a misconfiguration, despite having an active EDI connection with UHC.",
    "rca": "The root cause of the issue was a misconfiguration in the system where COBRA forms were being sent via email instead of through the EDI file feed, which was already set up and active. Additionally, there was confusion about the correct email address to use for COBRA forms, as UHC had different requirements for different types of forms.",
    "steps_taken": "The team investigated the configuration settings and confirmed that the EDI file feed was active. They communicated with UHC to confirm the correct email address for COBRA forms. It was determined that the system should not send emails for COBRA forms if the EDI connection is active. A new Jira ticket was created to update the email address configuration.",
    "data_models": "[CompanyInsuranceInfo, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-1401": {
    "key": "BENINTEG-1401",
    "issue": "The member's Principal coverage could not be submitted over the API to the carrier due to an Anthem connection issue, blocking the enrollment process.",
    "issue_summary": "The issue was caused by a NOYO API problem where enrollment did not send due to missing Noyo plan mapping information for the Anthem plan, which blocked the Principal coverage submission.",
    "rca": "The root cause was a combination of issues on both Rippling's and Noyo's end. There were NEW_HIRE requests blocked due to missing hire dates for employees. Rippling implemented a fix to send a demographic event if the hire_date is missing. On Noyo's end, they were unable to sync hire_date for employees, ingesting the hire_date based on the data provided by Rippling.",
    "steps_taken": "Rippling implemented a fix to send a demographic event when hire_date is missing for NEW_HIRE requests. Manual steps were required by the Noyo team to completely fix the issue. Noyo confirmed the fix was completed, and no further action was needed.",
    "data_models": "[CompanyInsuranceInfo, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-1400": {
    "key": "BENINTEG-1400",
    "issue": "The customer needed confirmation on the date they requested the EDI connection with Care First, as they believed it was requested 12 months ago, but records show it was submitted to OneKonnect on 05/07/2024.",
    "issue_summary": "The customer believed they requested the EDI connection with Care First 12 months ago, but records indicate it was submitted on 05/07/2024.",
    "rca": "The root cause analysis was not applicable as the ticket was primarily a request for confirmation of the EDI request date and not an issue with the system.",
    "steps_taken": "The logs were checked to confirm the request date for the Care First EDI connection, which was found to be 2024-05-07 16:12:04.647 +0000. Additionally, the request date for the Metlife connection was confirmed as 10/03/2023 01:29 PM PDT, requested by als20854@gmail.com. The history link and reference for the Metlife connection were provided for further verification.",
    "data_models": "[BaseCompanyCarrierLineInfo, VericredCompanyCarrierTransmission]"
  },
  "BENINTEG-1398": {
    "key": "BENINTEG-1398",
    "issue": "Kaiser PEO California forms are automatically populating the northern California group ID (606843) regardless of the employee's location or plan.",
    "issue_summary": "Kaiser PEO forms are incorrectly populating with the northern California group ID for all employees, irrespective of their actual location or plan.",
    "rca": "The issue is categorized as a product enhancement that needs grooming. A related ticket has been created for further investigation and resolution: https://rippling.atlassian.net/browse/BENINTEG-4256.",
    "steps_taken": "The issue has been marked as a customer task for review and to be filed into the backlog for further action.",
    "data_models": "[]"
  },
  "BENINTEG-1397": {
    "key": "BENINTEG-1397",
    "issue": "COBRA enrollment for an employee did not transmit correctly to Ideon, causing a delay in coverage.",
    "issue_summary": "The COBRA enrollment for an employee was not transmitted correctly to Ideon due to a timing issue with the group cancellation event, which led to the COBRA enrollment being disregarded.",
    "rca": "The root cause was identified as a delayed Pending Action (PA) execution logic for group cancellation, which caused the COBRA orphan event to be sent prior to the cancellation. This led Vericred to disregard the COBRA enrollment.",
    "steps_taken": "The team reviewed Ideon's data and cross-referenced events in the employee's company and orphan debuggers. They reached out to Vericred to understand why the data was not updated after acknowledgment. The COBRA QLE was pushed through manually to ensure the employee's enrollment info was not overwritten. Finally, the COBRA enrollment was re-sent to Vericred.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-1394": {
    "key": "BENINTEG-1394",
    "issue": "The issue involves the need to migrate Nailpolis, Inc.'s insurance data transmission to Cigna using the in-house EDI solution, Stedi, with a scheduled weekly transmission.",
    "issue_summary": "Nailpolis, Inc. requires migration to in-house EDI solution Stedi for Cigna data transmission, but a tool for the switchover needs to be created.",
    "rca": "The root cause of the issue is the absence of a tool necessary for switching over the data transmission to the in-house EDI solution, Stedi.",
    "steps_taken": "The ticket has been assigned to a team member for further action, with a note to involve on-call intervention if necessary.",
    "data_models": "[]"
  },
  "BENINTEG-1393": {
    "key": "BENINTEG-1393",
    "issue": "Mothership Technologies requires production approval for Cigna with a weekly transmission schedule.",
    "issue_summary": "Mothership Technologies needs a tool to switch over for Cigna production approval, scheduled weekly on Tuesdays at 3 am PST.",
    "rca": "The root cause is the need to create a tool for the switch over to facilitate the production approval process with Cigna.",
    "steps_taken": "The ticket was assigned to a team member for further action.",
    "data_models": "[]"
  },
  "BENINTEG-1392": {
    "key": "BENINTEG-1392",
    "issue": "Cigna requires a new effective date for class code changes, causing errors in production when a new class code is received without a new effective date. This affects all Cigna files in production with OneKonnect and may impact other carriers.",
    "issue_summary": "Cigna flags errors when class code changes occur without a new effective date. This issue affects Cigna files in production with OneKonnect, requiring a solution to pass the correct effective date.",
    "rca": "The issue is a feature request tracked under BENINTEG-1249. Cigna requires a new effective date for class code changes, which is not currently captured. Attempts to use workarounds have been made, but a permanent solution is needed.",
    "steps_taken": "Attempts were made to use the employee's home state change as a proxy for class code changes. Discussions were held on whether to apply similar logic to the eBN integration. The issue is deferred as a feature request, with ongoing work tracked under BENINTEG-1249.",
    "data_models": "[]"
  },
  "BENINTEG-1391": {
    "key": "BENINTEG-1391",
    "issue": "Fieldguide Inc. employee's medical enrollment end date is not showing correctly, causing incorrect reporting to Ideon.",
    "issue_summary": "The employee's medical enrollment is incorrectly showing the plan name instead of 'Waived', and the COBRA end date is reported as 11/30/2024 instead of the correct date 7/31/2024 to Ideon.",
    "rca": "The root cause analysis indicates a deferred response with no specific responder response provided.",
    "steps_taken": "The COBRA enrollment for the employee was cancelled, and the open enrollment was waived with the carrier. The issue was marked as closed due to lack of response and potential resolution.",
    "data_models": "[]"
  },
  "BENINTEG-1389": {
    "key": "BENINTEG-1389",
    "issue": "Member Dorothy Pavloff processed a QLE to add her children to coverage, but the enrollments were not sent to the carrier. Additionally, the Vericred amendment tab was not loading.",
    "issue_summary": "The issue involved a failure in transmitting state to Vericred, resulting in the system states going out of sync and causing the Vericred amendment tab to not load and enrollments not being sent.",
    "rca": "A transient failure in transmitting state to Vericred caused the system states to go out of sync with Vericred. This resulted in the dependents not being created on Vericred's side, even though they were stored on Rippling's side.",
    "steps_taken": "The issue was resolved by creating the Vericred members for all carriers, which allowed the Vericred tab to load and the amendments for the QLE to be sent. The following code snippet was used to address the issue:\n\n```python\ndef main(**kwargs):\n    from insurance.models.employee_enrollment_event_models import SubscriberLineInfo\n    from insurance.models.vericred_models import VericredCompanyCarrier\n    from insurance.models.vericred_models import vericred_member_from_member\n    from insurance.models.employee_enrollment_event_models import Subscriber\n    from insurance.models.vericred_models import VericredAPI\n    from insurance.models.vericred_models import VericredApiError\n    from insurance.models.employee_enrollment_event_models import VericredMember\n    import json\n    from insurance.models.employee_enrollment_event_models import Member\n    \n    vccs = VericredCompanyCarrier.objects.filter(company=\"6360470388c053b124387b6c\")\n    vericredCompanyCarrier = vccs[2] # Change this for all 3 carriers\n    slis = SubscriberLineInfo.objects.filter(status__ne=\"INIT\", role=\"636c23fea77ff446d1477caa\", company=\"6360470388c053b124387b6c\")\n    subscriber = Subscriber.objects.get(role=\"636c23fea77ff446d1477caa\")\n    subscriberId = subscriber.getVericredId(vericredCompanyCarrier)\n    dependents = []\n    if slis:\n        for s in slis:\n            dependents.extend([s for s in s.chosenDependents if not s.isSubscriber])\n        dependents = list(set(dependents))\n    else:\n        dependents = [m for m in Member.objects.filter(role=role) if not m.isSubscriber]\n    for dependent in dependents:\n        dependentId = dependent.getVericredId(vericredCompanyCarrier)\n        vericredMember = vericred_member_from_member(dependent, vericredCompanyCarrier)\n        payload = json.dumps({\"dependent\": vericredMember})\n        response = None\n        if dependentId:\n            print(\"found dep id\")\n            path = \"/dependents/\" + dependentId\n            response = VericredAPI.put(path, payload)\n        else:\n            print(\"did not find dep id\")\n            path = \"/subscribers/\" + subscriberId + \"/dependents\"\n            response = VericredAPI.post(path, payload)\n\n        if not response.ok:\n            print(\"first failure\", response.content)\n            vericred_error = VericredApiError(response)\n            if not has_invalid_county_code_in_vericred_api_error(vericred_error):\n                raise VericredApiError(response)\n                \n            print(\"not response ok [0]\", response.content)\n            vericredMember[\"mailing_address\"].pop(\"fips_county_code\", None)\n            vericredMember[\"residential_address\"].pop(\"fips_county_code\", None)\n\n            payload = json.dumps({\"dependent\": vericredMember})\n            if dependentId:\n                print(\"no create dep\")\n                path = \"/dependents/\" + dependentId\n                response = VericredAPI.put(path, payload)\n            else:\n                print(\"create dep\")\n                path = \"/subscribers/\" + subscriberId + \"/dependents\"\n                response = VericredAPI.post(path, payload)\n\n        if not response.ok:\n            print(\"complete failure\", response.content)\n            raise VericredApiError(response)\n\n        responseJson = json.loads(response.text)\n        if not dependentId:\n            dependentId = responseJson[\"dependent\"][\"id\"]\n            VericredMember.get_or_create(\n                company=dependent.company,\n                role=dependent.role,\n                member=dependent,\n                memberVendorId=dependentId,\n                groupVendorId=vericredCompanyCarrier.vericredId,\n            )\n```",
    "data_models": "[SubscriberLineInfo, VericredCompanyCarrier, VericredAPI, VericredApiError, VericredMember, Member]"
  },
  "BENINTEG-1387": {
    "key": "BENINTEG-1387",
    "issue": "A termination was incorrectly submitted for Ashley Mamas, who is enrolled in dental coverage. The employee was informed by the carrier that they are not enrolled in dental insurance coverage.",
    "issue_summary": "A termination request was sent to Principal for Ashley Mamas during a group migration process, resulting in the employee being informed of coverage termination.",
    "rca": "The employee belongs to two groups on Rippling's side and was in the process of migrating from one group (Emergency Physicians, Inc.) to another (Telescope Health). During this migration, the employee was terminated from the first group, which triggered a termination request to Noyo. The open enrollment for Telescope Health failed on Noyo's side, but the termination went through, leading to the coverage termination notification.",
    "steps_taken": "The issue was identified as part of a migration process where the employee was terminated from one group and moved to another. The termination request was sent to Noyo due to this migration. The ticket was marked as resolved after identifying the root cause. A follow-up was initiated to improve the product experience for inter-group movements. The failed open enrollment event with Noyo is being followed up separately.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-1386": {
    "key": "BENINTEG-1386",
    "issue": "The COBRA transaction for an employee was transmitted to Noyo before the employee's termination was processed in Rippling.",
    "issue_summary": "The system sent the API transaction for the employee's COBRA enrollment to Noyo before processing the employee's termination, despite the termination being entered first in Rippling.",
    "rca": "The root cause is unknown due to the loss of logs as the issue occurred more than a month ago. Persistent logs are being implemented to prevent this in the future.",
    "steps_taken": "The user's COBRA enrollment was resent to unblock them. Persistent logs are being released to ensure logs are not lost if the issue occurs again.",
    "data_models": "[]"
  },
  "BENINTEG-1385": {
    "key": "BENINTEG-1385",
    "issue": "Employee-level enrollment data is not transmitting to Ideon as expected, generating error messages for all 19 employees with the error message 'NoneType' object has no attribute 'get'. This is blocking their EDI feed setup with UHC.",
    "issue_summary": "Enrollment data for Chive Media Group, LLC employees is not being transmitted to Ideon due to a 'NoneType' object error, which is blocking the EDI feed setup with UHC.",
    "rca": "The error was due to missing mailing address and SSN for some employees, which caused the system to fail with a 'NoneType' object error. The error message displayed was incorrect and did not provide clear guidance on the actual issue.",
    "steps_taken": "The issue was investigated, and it was found that the error was due to missing mailing address and SSN for some employees. A code fix was raised to provide a proper error message instead of the current unclear one. The issue was resolved for some employees, but further investigation was needed for others. It was confirmed that the address must be in the system for the process to go through.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-1384": {
    "key": "BENINTEG-1384",
    "issue": "OneKonnect orders for MetLife and Cigna are failing for Traffop Corp (Miovision Technologies Incorporated) due to address validation issues.",
    "issue_summary": "The orders to OneKonnect for MetLife and Cigna are failing because the address being used is from Canada, which is invalid for US insurance orders. The system is incorrectly using the company's postal address instead of the US address set up for insurance.",
    "rca": "The root cause of the issue was that the system was fetching the postal address from the Company model, which was set to a Canadian address. This address was being used for US insurance orders, causing validation failures. The correct address should have been fetched from the CompanyInsuranceInfo model, which contains the US address used during insurance setup.",
    "steps_taken": "The team identified that the address should be fetched from CompanyInsuranceInfo.addresses, which contains the correct US address. A logic was implemented to select the first valid address from this model. The fix was deployed, and the orders were retried. Additionally, the team used existing support tools to address the issue and suggested enhancing the knowledge base for operations.",
    "data_models": "[Company, CompanyInsuranceInfo]"
  },
  "BENINTEG-1380": {
    "key": "BENINTEG-1380",
    "issue": "The broker for Epiphany School requested a change in the submission email address for Reliance Matrix during the EDI setup. The current email setup was causing issues, and the customer was considering leaving Rippling due to these problems.",
    "issue_summary": "The submission email address for Reliance Matrix needed to be updated to matt.mccoy@bbrown.com, and the email should be removed from CC to prevent duplicates. The issue was escalated due to the risk of customer churn.",
    "rca": "The root cause was the need to update the email used for communications during the EDI setup. The broker requested the change to ensure proper communication and prevent duplicates.",
    "steps_taken": "The primary email address was changed from adminchanges@rsli.com to matt.mccoy@bbrown.com using the retool application. Additionally, the email was removed from CC by executing a web script: ```python\nbroker = CompanyBrokerInfo.objects.filter(company=\"65149e0a3484d458e3f3a518\")[0]\nbroker._shouldCCEnrollmentManager = False\nbroker.save()\nreturn broker```",
    "data_models": "[CompanyBrokerInfo]"
  },
  "BENINTEG-1379": {
    "key": "BENINTEG-1379",
    "issue": "Rippling PEO 1, Inc. / HMSA / Kento Muraki - Internal Missed Enrollment. Internal employee Kento Muraki was not enrolled in medical coverage with HMSA.",
    "issue_summary": "Internal employee Kento Muraki was not enrolled in medical coverage with HMSA due to a potential issue with task generation for HMSA enrollments.",
    "rca": "The root cause analysis suggests that the issue might be related to a known problem with PEO task generation for HMSA enrollments, as referenced in another Jira ticket (BENINTEG-1243). The enrollment task was created, but there was no acknowledgment of receipt from the carrier, indicating a possible communication issue.",
    "steps_taken": "The team confirmed that the employee was enrolled in the system but not communicated to the carrier. Manual enrollment was required for HMSA, and a form was generated and sent. A Snowflake query was used to verify the task creation: `select INSURANCE_TASK.*, CARRIER.name from INSURANCE_TASK inner join CARRIER on CARRIER._ID = INSURANCE_TASK.carrier where PENDING_ACTION in (select _ID from PENDING_ACTION where role='66392645e17fef2584dd7793') and carrier.name = 'PeoHMSA'`. The issue was resolved by processing the enrollment with HMSA manually.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, PendingAction]"
  },
  "BENINTEG-1367": {
    "key": "BENINTEG-1367",
    "issue": "Commure / Noyo transactions did not send for a group with a live Noyo feed, affecting multiple employees. Manual intervention was required to send amendments.",
    "issue_summary": "Commure / Noyo transactions failed to send due to missing group ID in the CompanyCarrierLineInfo, which was necessary for successful transmission.",
    "rca": "The root cause of the issue was a manual data entry error where the group ID was not set in the CompanyCarrierLineInfo. This omission prevented the transactions from being sent to Noyo.",
    "steps_taken": "The issue was resolved by manually setting the group ID in the CompanyCarrierLineInfo, which allowed the transactions to be sent successfully. It was noted that ensuring the group ID is set will prevent this issue from occurring in the future.",
    "data_models": "[CompanyCarrierLineInfo]"
  },
  "BENINTEG-1365": {
    "key": "BENINTEG-1365",
    "issue": "Three employee transactions were blocked due to missing hire dates in the new hire member request sent to Noyo, causing issues with processing their insurance enrollments.",
    "issue_summary": "Employee transactions were blocked because the hire date was missing in the new hire member request sent to Noyo, resulting in a 422 error response.",
    "rca": "The issue was due to both Rippling and Noyo. On Rippling's side, the NEW_HIRE requests were missing the hire date, which led to blocked transactions. On Noyo's side, for the Principal carrier, they were unable to sync the hire date for employees, leading to ingestion of incorrect data. A fix was implemented to send a demographic event if the hire date is missing when sending a NEW_HIRE request.",
    "steps_taken": "A fix was implemented to ensure that whenever a NEW_HIRE member-request is sent to Noyo, a demographic event is also sent if the hire_date is missing. Additionally, a thread was raised with Noyo to address the issue on their end. The NEW_HIRE request was resent, and the issue was marked as resolved once it was in processing state on Noyo's side.",
    "data_models": "[BlockedTransaction]"
  },
  "BENINTEG-1364": {
    "key": "BENINTEG-1364",
    "issue": "Need to send a COBRA election for Guardian to Noyo for an employee, but the transaction didn't send automatically due to PEO transfer.",
    "issue_summary": "COBRA election for Guardian was not sent automatically to Noyo due to the employee being transferred into COBRA, requiring manual intervention.",
    "rca": "This issue occurred because the Guardian PEO groups had not yet been migrated to snapshots, which would have included the COBRA details automatically.",
    "steps_taken": "The amendment was sent to Noyo with the COBRA details using a snapshot. Future cases will be handled automatically as Guardian PEO groups have been migrated to Noyo snapshots.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-1363": {
    "key": "BENINTEG-1363",
    "issue": "The UHC form for Carrie Crane is incorrect, showing the 'waive' box checked on page 1, preventing enrollment for Carrie and her spouse, Hillary.",
    "issue_summary": "The UHC enrollment form incorrectly shows the 'waive' box checked, affecting enrollment for Carrie Crane and her spouse, despite them being enrolled.",
    "rca": "The issue was due to incorrect form mapping, similar to a previously identified mapping issue in another ticket (BENINTEG-270).",
    "steps_taken": "The form mapping was corrected, and the issue was fixed on the form. The forms were not copying correctly from box to s3, which was addressed.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-1357": {
    "key": "BENINTEG-1357",
    "issue": "The employee (EE) was never enrolled in Kaiser, yet termination forms were sent, which should not have happened.",
    "issue_summary": "Termination forms were incorrectly sent for an employee who was never enrolled in Kaiser due to a bug in the system.",
    "rca": "The issue was caused by a change in the code that added a default 'forceRegeneration = True' flag. This flag led to the generation of a QLE cancellation form even when the employee was not previously enrolled. The presence of this flag altered the decision-making process, resulting in the incorrect action of sending termination forms.",
    "steps_taken": "The issue was identified as being related to the 'forceRegeneration' flag in the code. The relevant code sections were reviewed, and a fix was implemented to ensure that forms are not generated for employees who were never enrolled. The fix was reviewed and merged, resolving the issue.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-1356": {
    "key": "BENINTEG-1356",
    "issue": "The termination forms for a few employees were sent only to maggie@bennie.com and not to the carrier BCBS(TX). The admin needs to understand when and who changed the carrier email address from BCBS_Eligibility_TX@bcbstx.com to maggie@bennie.com.",
    "issue_summary": "Termination forms for employees were sent to the wrong email address due to a change in the carrier email from BCBS_Eligibility_TX@bcbstx.com to maggie@bennie.com, causing confusion and miscommunication.",
    "rca": "The group converted their insurance broker from Rippling to Broker on 2024/04/28 and added maggie@bennie.com as their broker, which led to forms being sent to this email. The email BCBS_Eligibility_TX@bcbstx.com was removed from the list of recipients as part of a previous request, and the UI incorrectly showed the email as still being used.",
    "steps_taken": "The issue was identified as a result of a change in the broker and email settings. The engineering team confirmed that the email BCBS_Eligibility_TX@bcbstx.com was removed for all groups, which was not intended for BOB groups. A PR was raised to fix the issue, ensuring that emails are sent to the correct addresses based on the broker type. The method `_getEmailOrFaxCommunicationMethod_` was identified as incorrect and is to be fixed.",
    "data_models": "[CompanyBrokerInfo, CompanyInsuranceInfo, PendingAction]"
  },
  "BENINTEG-1355": {
    "key": "BENINTEG-1355",
    "issue": "USA Automotive Partners is unable to update the suffix for a dependent child's name in the employee's account, resulting in a carrier flagging the dependent's name as a testing error.",
    "issue_summary": "The issue arises because there is no customer-facing field to update the suffix for a dependent's name in Rippling, causing a mismatch with the carrier's records.",
    "rca": "The root cause of the issue is the absence of a customer-facing field in Rippling to update the suffix for a dependent's name, which is present in the carrier's system.",
    "steps_taken": "A WebScript was pushed to add the 'Jr' suffix to the dependent's data in the JSON payload being sent to Ideon. The following code snippet was used to update the suffix:\n\n```python\nmember = Member.objects.get(role=\"637c007e1b342196ab0c01b4\", company=\"6346f94d3f52745e321aa670\", id=\"6398ef7d73f30eac802eb5d5\")\nassert member.relationship==\"CHILD\"\nprint(member.name.first, member.name.last, member.name.suffix)\nmember.name.suffix=\"Jr\"\nmember.name.save()\nmember.save()\nreturn member.name.fullName()\n```\n\nThe employee's dependent name suffix was modified and pushed to Ideon, resolving the issue.",
    "data_models": "[Member]"
  },
  "BENINTEG-1354": {
    "key": "BENINTEG-1354",
    "issue": "Employees at Viral Media Partners and Vici Media Group were auto-enrolled in employer-sponsored plans without the option to waive them, despite having agreements with other Life plans.",
    "issue_summary": "Employees were auto-enrolled in employer-sponsored plans without the option to waive them due to system defaults, causing conflicts with their existing Life insurance agreements.",
    "rca": "The root cause was identified as the system's default setting to auto-enroll employees in employer-sponsored plans, which did not allow employees to waive these plans. This was compounded by the 'auto enroll' setting on the CCLI, which forced enrollment without providing an option to waive.",
    "steps_taken": "The issue was addressed by manually updating the SubscriberLineInfo (SLI) to mark the plans as waived using a script. The forms were then attempted to be regenerated, but they continued to show the employees as enrolled. It was decided to use the Noyo Amendment tool to submit amendments for the employees, ensuring the changes were processed by Noyo. The steps included using the EE Debugger to access the Noyo Amendment tool and submitting requests for amendments. Follow-up with the carrier was advised to ensure the coverages were updated appropriately.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-1351": {
    "key": "BENINTEG-1351",
    "issue": "OneKonnect is reporting that blank benefit values for STD and LTD coverages are being sent, resulting in a 0 value being passed to the carrier (BCBS).",
    "issue_summary": "The issue is that the system is sending blank benefit values for STD and LTD coverages, causing OneKonnect to pass a 0 value to the carrier instead of the expected values.",
    "rca": "The root cause of the issue is not explicitly detailed in the ticket, but it is categorized as a bug related to EBN.",
    "steps_taken": "Enabled the flag for the company with ID 649decadc487488560d934f4. The next file generated should have the correct data filled for STD and LTD volumes.",
    "data_models": "[]"
  },
  "BENINTEG-1347": {
    "key": "BENINTEG-1347",
    "issue": "High volume of blocked transactions for Flock Safety and Harrison Group General due to complex configurations with classifications dependent on demographic variables that change during the plan year.",
    "issue_summary": "Blocked transactions for Flock Safety and Harrison Group General due to complex carrier classifications and demographic variable changes during the plan year.",
    "rca": "The issue was caused by the use of custom fields to set up carrier classifications, which were not properly configured for some employees, leading to blank values and incorrect benefit class identifiers. Additionally, the system did not support the complex carrier classification structures, particularly those dependent on tenure and other demographic variables, leading to mismatches and outdated data being sent to the vendor.",
    "steps_taken": "The team reviewed the mapping and configurations, identified the issue with custom fields and benefit class identifiers, and manually pushed transactions as a temporary solution. A detailed code snippet was used to handle the classifications and generate the necessary payloads for Noyo. However, it was acknowledged that a long-term solution would require significant architectural changes, and the product enhancement was planned for Q3.",
    "data_models": "[SubscriberLineInfo, NoyoSliInterval, NoyoMemberSnapshotController, NoyoMemberSnapshotPayloadGenerator, PendingAction]"
  },
  "BENINTEG-1346": {
    "key": "BENINTEG-1346",
    "issue": "Nightfall AI employee's child dependent's dental enrollment information was not transmitted to Noyo during the 03/28 API transmission.",
    "issue_summary": "The dental enrollment information for the employee's child dependent was not included in the 03/28 API transmission to Noyo, despite being selected in the system.",
    "rca": "From our system, everything is working as expected. The issue seems to be a carrier error as the API transmission from Rippling and Noyo was correct, but the dependent became unenrolled in all Guardian coverage.",
    "steps_taken": "Reviewed Noyo dashboard and JSON payload from Rippling. Verified that the member snapshot sent to Noyo included dependents. Checked previous open enrollment events and confirmed that the API transmission from Rippling was correct. Concluded that the issue is likely a carrier error.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-1345": {
    "key": "BENINTEG-1345",
    "issue": "A termination transaction for an employee at Columbia Orthopaedic Group is blocked due to an error: 'Unable to find a matching Noyo plan mapping information.' This is preventing the employee's termination of coverage from being processed.",
    "issue_summary": "The issue is a blocked termination transaction for an employee due to missing Noyo plan mapping information, which is causing the employee's termination of coverage to not be processed.",
    "rca": "The root cause of the issue is an unhandled scenario in the Noyo integration where role transitions were not properly managed in the snapshots implementation, leading to the employee not being sorted into the correct classification.",
    "steps_taken": "The issue was resolved using a webscript to manually create a Noyo member snapshot with the correct termination details and send it to Noyo. The script involved fetching the subscriber, generating a member snapshot payload, and updating the NoyoMemberSnapshot and PendingAction models based on the response from Noyo. The RCA for the fix was tracked in a separate Jira ticket (BENINTEG-1348).",
    "data_models": "[NoyoCompanyPlanInfo, Subscriber, PendingAction, NoyoMemberSnapshot, NoyoApi, NoyoMemberSnapshotController, NoyoMember]"
  },
  "BENINTEG-1344": {
    "key": "BENINTEG-1344",
    "issue": "Expired plans are being pulled in, causing blocked transactions for enrollments of 2 employees at 2 different companies.",
    "issue_summary": "Expired lines of coverage are being pulled in, causing blocked transactions for enrollments. The issue is related to Noyo plan mappings not being found for the plans 'Beam 50k Life Insurance' and 'Guardian Dental PPO'.",
    "rca": "The root cause was identified as an unhandled case in the snapshots and Noyo implementation, leading to incorrect handling of role transitions and plan mappings.",
    "steps_taken": "The issue was resolved by running scripts to update the NoyoCompanyPlanInfo and PendingAction objects. For Phung Tu, the script set isDeleted to False for the relevant NoyoCompanyPlanInfo and performed the pending action. For Aisha Gutierrez, a script was run to generate and send a member snapshot payload to Noyo, updating the member snapshot and pending actions based on the response.",
    "data_models": "[NoyoCompanyPlanInfo, PendingAction, Subscriber, NoyoMemberSnapshot, NoyoApi, NoyoMemberSnapshotController, NoyoMember]"
  },
  "BENINTEG-1343": {
    "key": "BENINTEG-1343",
    "issue": "The enrollment transaction for Guardian STD via Noyo is blocked due to a missing class value after switching to the new API/Snapshot. The transaction was working fine before the migration but is now failing to sort the member into a class.",
    "issue_summary": "The issue is that the enrollment transaction for Guardian STD is blocked due to a missing class value after switching to the new API/Snapshot. This is potentially related to an unhandled case in the Noyo implementation.",
    "rca": "The root cause of the issue is an unhandled case in the Noyo implementation where role transitions are not being handled properly in the snapshots implementation. This led to the member not being sorted into a class, causing the transaction to be blocked.",
    "steps_taken": "The steps taken to resolve the issue included reviewing the mapping and classifications, attempting to retry the transaction, and eventually fixing the issue using a workaround script. The script involved generating a member snapshot payload, updating the employment status to 'terminated', and sending the snapshot to Noyo. The code snippet used is as follows:\n\n```python\nnoyo_group_id = \"3f7a3aa9-e592-49b0-9e68-cb5c0be9457d\"\nsubscriber = Subscriber.get_or_none(role=\"64fb4fbe750a955beb705d9e\")\nnoyo_census_request = None\npending_action = PendingAction.objects.get(id=\"6666341144fc3ed3c06cb637\")\ninbound_member_snapshot_payload = NoyoMemberSnapshotController.generate_member_snapshot_payload_string(\n    noyo_group_id, subscriber, pending_action\n)\na = json.loads(inbound_member_snapshot_payload)\na[\"employee\"][\"employment\"][\"employment_dates\"][\"terminated\"] = str(pending_action.get_event().approximateEffectiveDate)\na[\"employee\"][\"employment\"][\"employment_status\"] = \"terminated\"\ninbound_member_snapshot_payload = json.dumps(a, indent=2)\nnoyo_member_snapshot = NoyoMemberSnapshot.objects.create(\n    company=subscriber.company,\n    role=subscriber.role,\n    request=inbound_member_snapshot_payload,\n    group_noyo_id=noyo_group_id,\n    pending_action=pending_action,\n    noyo_census_request=noyo_census_request,\n)\n\ntry:\n    response = NoyoApi().create_member_snapshot(noyo_group_id, inbound_member_snapshot_payload)\n    NoyoMemberSnapshotController._update_member_snapshot_from_noyo_response(noyo_member_snapshot, response)\n    NoyoMemberSnapshotController._update_pending_actions(noyo_member_snapshot, response)\n\n    for created_member in response.created_members:\n        NoyoMember.create_or_update(\n            company=subscriber.company,\n            role=subscriber.role,\n            member=created_member.custom_individual_id,\n            groupVendorId=noyo_group_id,\n            update={\n                \"memberVendorId\": str(created_member.id),\n            },\n        )\n    return noyo_member_snapshot, None\nexcept ThirdPartyAppError as e:\n    print(\"Noyo member snapshot send for group has failed with a 3rd party exception\", noyo_group_id)\n    error_response: requests.Response = e.response\n    noyo_member_snapshot.request_vendor_id = None\n    noyo_member_snapshot.request_status = None\n    noyo_member_snapshot.response_code = error_response.status_code\n    noyo_member_snapshot.response = error_response.text\n    noyo_member_snapshot.subscriber_noyo_id = NoyoMemberSnapshotController._get_existing_subscriber_noyo_id(noyo_group_id, subscriber)\n    noyo_member_snapshot.synced_at = pst_now()\n    noyo_member_snapshot.save()\n    return noyo_member_snapshot, e\nexcept Exception as e:\n    print(f\"Noyo member snapshot send for group {noyo_group_id} has failed with this exception {e}\")\n    noyo_member_snapshot.internal_error = str(e)\n    noyo_member_snapshot.save()\n    raise\nreturn noyo_member_snapshot\n```",
    "data_models": "[NoyoCompanyPlanInfo, Subscriber, PendingAction, NoyoMemberSnapshot, NoyoApi, NoyoMemberSnapshotController, NoyoMember]"
  },
  "BENINTEG-1342": {
    "key": "BENINTEG-1342",
    "issue": "Data extract request for unresolved/open Insurance tasks of type 'Noyo Setup Task' or 'Base Noyo Setup Task'.",
    "issue_summary": "A request was made to extract data for Insurance tasks where the task type is either 'Noyo Setup Task' or 'Base Noyo Setup Task' and the status is unresolved/open.",
    "rca": "The issue was related to a support tool used for extracting data on specific insurance tasks. The root cause analysis category is 'Support Tool Used', but no specific subcategory or detailed description was provided.",
    "steps_taken": "A Python script was used to filter and extract the required data from the InsuranceTask model. The script filtered tasks based on type and status, retrieved relevant information from related models like CompanyInsuranceInfo, and formatted the data into a CSV string using the 'items_to_csv_str' function.",
    "data_models": "[InsuranceTask, CompanyInsuranceInfo]"
  },
  "BENINTEG-1341": {
    "key": "BENINTEG-1341",
    "issue": "The automated report 'Rippling OE Files not moved to production' was not being sent since 6/10, and the report needed to be sent to updated email addresses for monitoring purposes.",
    "issue_summary": "The 'Rippling OE Files not moved to production' report was not being sent since 6/10, and the email addresses for report distribution needed updating.",
    "rca": "The root cause was related to a business logic change that affected the distribution of the report, specifically the email addresses to which the report was being sent were outdated.",
    "steps_taken": "The email distribution list for the report was updated to include only 'insurance-carrier-connections@rippling.com' and 'enrollments@ideonapi.com', removing the outdated addresses. The issue was confirmed to be fixed as emails were sent to the correct addresses.",
    "data_models": "[]"
  },
  "BENINTEG-1336": {
    "key": "BENINTEG-1336",
    "issue": "Client churn data pull request needed for Ops to manually shut off connections for clients that have churned Rippling or Carrier Connections subscription.",
    "issue_summary": "A data pull request was made to identify clients that have churned Rippling or Carrier Connections subscription and still have active EDI/API connections that need to be shut off. The issue was identified as a duplicate of another ticket.",
    "rca": "The issue was identified as a duplicate of an existing ticket, BENERX-1459, which is already tracking the same request.",
    "steps_taken": "The ticket was closed as it was identified as a duplicate of an existing ticket that is already tracking the issue.",
    "data_models": "[]"
  },
  "BENINTEG-1335": {
    "key": "BENINTEG-1335",
    "issue": "Se\u00f1or Sisig / Calchoice renewal errors where waivers for 3 employees were not processed by CalChoice as they require specific forms for member changes.",
    "issue_summary": "The issue was that CalChoice did not process waivers for 3 employees during renewal because they require specific forms for member changes, which were not included in the renewal packet.",
    "rca": "CalChoice requires a CalChoice Employee Change Request or an Employee waiver form to process member changes, but historically, waivers were communicated through an omission on the census, which CalChoice does not accept for processing enrollments, cancellations, terminations, or waivers.",
    "steps_taken": "The forms used for employee cancellation or OE waiver requests were updated to use change forms as required by CalChoice. The correct forms should now be included in the packet, and it was advised to regenerate the packet.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-1334": {
    "key": "BENINTEG-1334",
    "issue": "The OneKonnect EDI requests for Colorado Autism Consultants, LLC were kicked off again after being previously cancelled due to not meeting life requirements, causing double work for Rippling Ops and OneKonnect analysts.",
    "issue_summary": "OneKonnect EDI requests for Colorado Autism Consultants, LLC were re-initiated after cancellation, leading to redundant work.",
    "rca": "The EDI requests for both Beta Health and USAvision carriers were re-initiated by Ethan Mortensen, who is the admin of the group.",
    "steps_taken": "Identified the initiator of the EDI requests as Ethan Mortensen, the admin of the group, using object history links provided in the comments.",
    "data_models": "[EbnCompanyCarrierTransmission]"
  },
  "BENINTEG-1332": {
    "key": "BENINTEG-1332",
    "issue": "BOB group Propane Ninja reported that for some of their employees, the Open Enrollment form incorrectly shows a New Hire Enrollment coversheet.",
    "issue_summary": "The Open Enrollment form for certain employees in the BOB group Propane Ninja is incorrectly using the New Hire Enrollment coversheet template instead of the appropriate Open Enrollment coversheet.",
    "rca": "The system behavior for United Healthcare FL dictates that if an employee is waiving all coverages and was not previously enrolled with the carrier, a New Hire form is generated during Open Enrollment because there is no existing Open Enrollment waiver form for UHC-FL, and an Open Enrollment cancellation form cannot be generated as there is no prior coverage to cancel.",
    "steps_taken": "The issue was identified and discussed with Insurance Operations. It was determined that a Jira ticket was necessary to address the problem. The comments indicate that the system's current logic was reviewed, and the behavior was explained, but no specific code changes or debugging steps were detailed in the ticket.",
    "data_models": "No specific data models were mentioned in the ticket or comments."
  },
  "BENINTEG-1331": {
    "key": "BENINTEG-1331",
    "issue": "The group Hopin/Streamyard is showing their Anthem feed as in production in the Company Debugger and Ideon, but when proxied, it shows as In Progress. Forms are still being sent for this group, indicating a discrepancy in the EDI connection status.",
    "issue_summary": "The issue is that the EDI connection for the group Hopin/Streamyard is incorrectly configured, showing as In Progress when it should be in production. This is due to a wrong carrier connection setup with Anthem instead of Anthem Sequoia.",
    "rca": "The root cause of the issue was a manual data entry error where the EDI connection was mistakenly set up with the Anthem carrier instead of Anthem Sequoia. This led to the EDI status showing as inactive for the correct carrier, Anthem Sequoia, while the feed was active for the incorrect carrier, Anthem.",
    "steps_taken": "The steps taken to resolve the issue included identifying the incorrect carrier connection setup and then moving the carrier connection from Anthem to Anthem Sequoia. This change was confirmed by the absence of the banner indicating an inactive status, and the ticket was subsequently closed.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, VericredCompanyCarrier, VericredCompanyCarrierTransmission]"
  },
  "BENINTEG-1330": {
    "key": "BENINTEG-1330",
    "issue": "OneKonnect reported that Rippling was sending a blank benefit amount for Short Term Disability (STD) and Long Term Disability (LTD) coverages, resulting in a 0 value being passed to the carrier, Dearborn. This was affecting all members in the dataset for the company Active Wellness.",
    "issue_summary": "Rippling was sending a blank benefit amount for STD and LTD coverages to OneKonnect, causing a 0 value to be passed to the carrier Dearborn. The issue was due to a missing address for an employee in the dataset, which blocked the EBN file generation.",
    "rca": "The root cause of the issue was identified as a missing address for an employee in the company's dataset. This missing address caused the EBN file generation process to fail, as the system is designed to fail the entire dataset processing if any part of it fails. The employee with the missing address was identified as a test profile, which further complicated the issue.",
    "steps_taken": "The flag from a previous fix (BENINTEG-1027) was applied to the company. The missing address for the test profile was identified as the blocker. It was recommended to either provide an address for the test profile or remove it. The EBN file generation process was then re-run after addressing the missing address issue. Debugging involved checking SubscriberLineInfo and using the EbnFileGenerator to ensure correct data processing.",
    "data_models": "[SubscriberLineInfo, PendingAction, Member]"
  },
  "BENINTEG-1329": {
    "key": "BENINTEG-1329",
    "issue": "The carrier, Blue Cross Blue Shield (BCBS) TN, is not processing COBRA terminations submitted via the file feed if the coverage is terminated before the 18-month end date. The carrier requires these changes to be emailed instead.",
    "issue_summary": "BCBS TN is unable to process COBRA terminations before the 18-month term date via the file feed, requiring email notifications for such changes.",
    "rca": "The system was working as expected, but there was a misunderstanding regarding the carrier's requirements for processing COBRA terminations before the 18-month term date. The carrier requires these changes to be communicated via email rather than through the file feed.",
    "steps_taken": "The steps taken involved stopping the sending of COBRA updates via the EBN file feed and instead sending them via email to the specified address (spc@bcbst.com). It was confirmed that turning off COBRA for the file feed would automatically redirect COBRA enrollment notifications to be sent via email.",
    "data_models": "[]"
  },
  "BENINTEG-1328": {
    "key": "BENINTEG-1328",
    "issue": "An extra dependent, Angel Ramirez, was being sent in the feed to Ideon, which was not supposed to be enrolled with the carrier (Cigna). The only dependent that should be enrolled is Benjamin Cruz.",
    "issue_summary": "An incorrect dependent, Angel Ramirez, was being sent to Ideon in the feed, despite not being enrolled with the carrier. This was due to the dependent being enrolled at the time of data transfer.",
    "rca": "The employee had enrolled Angel Ramirez with the carrier at the time of data transfer via a Transfer event, which led to the dependent being included in the feed. Later, the dependent was removed from the employee debugger, but there was no way to delete the dependent once ingested to Vericred.",
    "steps_taken": "The team went through the current system and found no way to delete a dependent once it is ingested to Vericred. They requested Vericred to delete the member from their system for this subscriber and suggested escalating the issue to Ideon/Vericred for resolution.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-1324": {
    "key": "BENINTEG-1324",
    "issue": "Carrier email missing from outbound enrollment emails for Anthem, affecting multiple employees between 5/15 and 6/28. The emails were sent only to the broker and admins, not the carrier.",
    "issue_summary": "The issue was that the carrier email was missing from outbound enrollment emails for Anthem, affecting multiple employees. The emails were sent only to the broker and admins, not the carrier due to a bug in the system.",
    "rca": "The root cause was a bug in the system where, if a large group email was not configured for a carrier, the system defaulted to the default email. However, due to a bug, it was not sending to the carrier. This was resolved in a PR on June 19.",
    "steps_taken": "The issue was identified and a PR was raised to fix the bug. The default email was set to CALGEnrollintake@anthem.com, and after the fix, any form after June 19 was sent to the carrier. Affected customers were identified, and pending actions were sent to the carrier. A separate fix was raised for COBRA emails.",
    "data_models": "[InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-1316": {
    "key": "BENINTEG-1316",
    "issue": "Swift Media Entertainment Incorporated DBA TSM / Eddie Lee / member didn't automatically send to Noyo.",
    "issue_summary": "Eddie Lee's insurance coverage was not automatically transmitted to Noyo due to a configuration issue, initially thought to be due to pending member requests.",
    "rca": "The root cause of the issue was a configuration problem where the supported line types were not configured in Noyo. Specifically, the lines VOLUNTARY_LIFE, LONG_DISABILITY, and LIFE were not loaded in Noyo, causing the requests to fail.",
    "steps_taken": "The issue was resolved by configuring the missing lines in Noyo. The comment from rdutta@rippling.com clarified the configuration issue, and maskari@rippling.com confirmed that the lines should now be configured.",
    "data_models": "[NoyoCompanyCarrier]"
  },
  "BENINTEG-1315": {
    "key": "BENINTEG-1315",
    "issue": "A transaction for the group Cerby was blocked due to the migration from Member Request (MR) to Snapshot, as PFG groups were not yet enabled for Snapshot.",
    "issue_summary": "The issue was a blocked transaction for the group Cerby because the group was in the process of migrating from Member Request to Snapshot, and PFG groups had not been enabled for Snapshot yet.",
    "rca": "The root cause of the issue was that snapshots were sent but not turned on for the company Cerby, which led to the transaction being blocked.",
    "steps_taken": "The issue was reviewed with Paige McIntyre and flagged to engineering. It was identified that snapshots were not turned on for the company, and once this was resolved, the blocked transaction issue was cleared.",
    "data_models": "[]"
  },
  "BENINTEG-1314": {
    "key": "BENINTEG-1314",
    "issue": "DSSV, Inc. DBA brightwheel's Kaiser Ideon feed status is showing as 'Configuring' on the dashboard despite being in production.",
    "issue_summary": "The Kaiser Ideon feed for DSSV, Inc. DBA brightwheel is in production, but the dashboard incorrectly displays the status as 'Configuring' due to an unexpired coverage period.",
    "rca": "The discrepancy in the EDI status for Kaiser is due to an existing coverage period with an effective date of 2019/11/1 and an expiration date of 2020/10/31, which is still in the 'INITIAL' state. This coverage period needs to be marked as expired by Vericred.",
    "steps_taken": "The issue was identified as a coverage period that needs to be marked as expired by Vericred. The team was advised to contact Vericred through the #rippling-vericred-integrations channel to request the expiration of the coverage period. No further engineering effort was required.",
    "data_models": "[VericredCompanyCoveragePeriodInfo]"
  },
  "BENINTEG-1312": {
    "key": "BENINTEG-1312",
    "issue": "The form with Employee's dependent details being sent to United Healthcare for Open Enrollment (OE) is showing duplicate details for George and Harvey and missing details for Catherine and Charles, causing a delay in form submission to the carrier.",
    "issue_summary": "The OE form for United Healthcare is incorrectly populating dependent details, showing duplicates for some and missing others, due to a plan mapping issue.",
    "rca": "The root cause of the issue was identified as a plan mapping problem where the form mapping was not correctly utilizing all child details for filling the form, leading to incorrect population of dependent information.",
    "steps_taken": "The issue was initially identified as a plan mapping problem. The mapping was fixed, and the form was regenerated. However, the issue persisted, indicating that the initial fix did not resolve the problem completely. Further investigation and adjustments were made to ensure the form mapping correctly utilized all child details. Once the mapping was corrected, the form was regenerated successfully, resolving the issue.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-1310": {
    "key": "BENINTEG-1310",
    "issue": "10 'Group Coverage Cancellation' transactions for employees trying to cancel coverage are blocked. The company is dropping Dental Line of Coverage and renewing others, but the transactions remain blocked despite the plan setup appearing correct.",
    "issue_summary": "Blocked transactions for 'Group Coverage Cancellation' due to a mismatch between lines in Rippling and Noyo, specifically related to the Dental line being terminated in Noyo.",
    "rca": "The Dental line has been terminated from Noyo, and there is an internal check in the system that blocks transactions if the lines in Rippling do not match the lines in Noyo.",
    "steps_taken": "The issue was reviewed internally, and attempts were made to retry transactions, but they remained blocked. Engineering was asked to review and unblock the transactions. A fix was pushed and reviewed multiple times, but additional issues were encountered. The fix was eventually made live, and the blocked transactions were expected to resolve. However, due to a lack of response, the ticket was closed.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-1304": {
    "key": "BENINTEG-1304",
    "issue": "Missing employer application in the renewal packet for Heeler Security, Inc, which is a blocker for the upcoming renewal on 8/1/2024.",
    "issue_summary": "The employer application form for Delta Dental MD is missing from the renewal packet for Heeler Security, Inc, causing a blocker for the renewal process scheduled on 8/1/2024.",
    "rca": "The root cause analysis category is 'Forms' with a subcategory of 'Missing Data'. The detailed description of the root cause is not available (NA).",
    "steps_taken": "The issue was resolved by a fix implemented as part of a pull request. The relevant pull request can be found at: https://github.com/Rippling/rippling-main/pull/255892. After the fix, the team was asked to retry generating the carrier packet for the group.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-1301": {
    "key": "BENINTEG-1301",
    "issue": "EDI file feed issue - The carrier is indicating that the file is showing Sarah Petrich errored out due to missing an end date for COBRA.",
    "issue_summary": "The EDI file for Sarah Petrich's COBRA enrollment is missing an end date, causing an error with the carrier. The carrier requested an update to include an end date of 11/30/2025.",
    "rca": "The issue is not a bug but rather a feature request. The current business logic (should_include_end_date) does not add an end date to plan_elections coverages unless certain conditions are met. For this specific case, the logic deliberately does not add an end date, and even if it did, it would not match the requested 18-month period.",
    "steps_taken": "The issue was identified as a feature request rather than a bug. The logic for adding end dates was reviewed, and it was determined that the current implementation is working as intended. The request for an 18-month end date is not supported by the existing logic. The team decided not to make carrier-specific changes and closed the ticket based on the explanation provided.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-1295": {
    "key": "BENINTEG-1295",
    "issue": "28 Noyo transactions are blocked due to an error in the Snapshot Payload sent to Noyo, which requires a terminated employment date to match the event date.",
    "issue_summary": "Noyo transactions are blocked because the Snapshot Payload lacks a terminated employment date that matches the event date, causing an error.",
    "rca": "The root cause of the issue is a bug in handling termination events for active roles, where the termination date was not being set correctly in the payload sent to Noyo.",
    "steps_taken": "The engineering team was asked to update the payload to include the required termination date. The issue was reviewed and fixed, with a note that two pending blocked transactions remain for the company, which may require a separate ticket.",
    "data_models": "[]"
  },
  "BENINTEG-1277": {
    "key": "BENINTEG-1277",
    "issue": "The transaction for FlutterFlow with Ideon is blocked due to missing 'plan_id' for medical and vision coverage for specific members.",
    "issue_summary": "The issue is a blocked transaction with Ideon for FlutterFlow due to missing 'plan_id' in the plan elections for medical and vision coverage, causing errors in the transmission.",
    "rca": "The root cause of the issue was an incorrect implementation where the 'plan_id' was not being correctly assigned or transmitted for the members involved in the qualifying life event.",
    "steps_taken": "The issue was acknowledged as a bug and fixed using a webscript. The script iterated over InsuranceCompanyPlanInfo objects for the company, retrieved the VericredCompanyCarrier, and ensured the plan was created using VericredAPIDetails. The blocked transaction was expected to resolve overnight.",
    "data_models": "[InsuranceCompanyPlanInfo, VericredCompanyCarrier]"
  },
  "BENINTEG-1276": {
    "key": "BENINTEG-1276",
    "issue": "Group has a Coverage Period (CP) that is blank and not showing the Lines of Coverage (LOCs). This was ingested over to Ideon. Additionally, another CP is missing Short Term Disability (STD).",
    "issue_summary": "The issue was caused by an incorrect ingestion order leading to a blank Coverage Period (CP) and missing Lines of Coverage (LOCs) in Ideon.",
    "rca": "The root cause of the issue was an incorrect ingestion order, which resulted in the creation of a new unintended Coverage Period (CP) and the original CP not being ingested for the new Company Carrier Line Infos (CCLIs).",
    "steps_taken": "The steps taken to resolve the issue included re-ingesting the group and carrier, setting up the correct CP for the new CCLIs, and using a webscript to update the InsuranceCompanyPlanInfo to point to the correct coverage period. The webscript used was:\n\n```python\nicpi = InsuranceCompanyPlanInfo.objects.get(id=\"6672a84d7eb5e0f000cd02e9\")\nicpi.vericredId = None\nicpi.save()\nreturn icpi\n```\n\nFollowed by re-ingesting the group.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, InsuranceCompanyPlanInfo]"
  },
  "BENINTEG-1275": {
    "key": "BENINTEG-1275",
    "issue": "Noyo plan mapper is not loading for Anthem groups, preventing the migration of Anthem groups from Ideon to Noyo.",
    "issue_summary": "The Noyo plan mapper is not loading for Anthem groups due to an issue with handling suffix ids, which is preventing the migration of these groups from Ideon to Noyo.",
    "rca": "The root cause of the issue was identified as an incorrect implementation related to handling suffix ids, which affected the loading of the Noyo plan mapper for Anthem groups.",
    "steps_taken": "The issue was reviewed and a fix was implemented. The fix was in review and was expected to be completed by Monday EOD. The issue was eventually resolved, and the Anthem plan mapper was confirmed to be working again.",
    "data_models": "[]"
  },
  "BENINTEG-1274": {
    "key": "BENINTEG-1274",
    "issue": "A COBRA member had a missed termination due to a potential logic error in the system. The issue was identified by OneKonnect, who noted that the 'undercobra' flag was updated prematurely, leading to the employee being dropped from the feed before the termination date was processed.",
    "issue_summary": "The system did not account for the logic that the COBRA flag should not be changed until at least one file has passed with the termination date, causing a missed termination for a COBRA member.",
    "rca": "The root cause of the issue was identified as a missing logic in the system where the COBRA flag should not be updated until at least one file has passed with the termination date. This logic was not implemented, leading to the premature update of the 'undercobra' flag and the subsequent missed termination.",
    "steps_taken": "The issue was acknowledged, and it was noted that the logic to prevent changing the COBRA flag prematurely was not in place. The team planned to address this by implementing the necessary logic, estimated at ~8 story points for one engineer. The issue was flagged for discussion in the next product call with OneKonnect to ensure alignment and understanding of expectations.",
    "data_models": "[]"
  },
  "BENINTEG-1273": {
    "key": "BENINTEG-1273",
    "issue": "A handful of employees at Sellers Dorsey & Associates, LLC had an issue where their spouses were incorrectly showing up under COBRA on the group's bill when they should not have been.",
    "issue_summary": "The issue was that dependents were incorrectly flagged as being under COBRA coverage, causing them to appear on the group's bill. This was due to incorrect handling of COBRA flags in the data sent to OneKonnect.",
    "rca": "The root cause was identified as a misunderstanding in the logic used to set COBRA flags. The system was marking dependents as under COBRA if they ever had active COBRA coverage, rather than only if they currently had active coverage. This led to incorrect data being sent to OneKonnect.",
    "steps_taken": "The team reviewed the logic for setting COBRA flags and confirmed it with OneKonnect. It was determined that OneKonnect could accommodate Rippling's current functionality without changes on Rippling's end. The issue was resolved by OneKonnect making adjustments on their side.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-1272": {
    "key": "BENINTEG-1272",
    "issue": "Commure, Inc. / Principal connection shows as in setup but is completed on the back end.",
    "issue_summary": "The Principal carrier connection for Commure, Inc. is active on the backend but still shows as 'in setup' in the Rippling benefits admin app.",
    "rca": "The status change for the carrier connection could take up to 24 hours to reflect on Rippling. However, this delay was not occurring for the group in question, indicating a potential issue with the status update process.",
    "steps_taken": "A script was run to check the connection status using the NoyoCompanyCarrierTransmission model. The script checked if the connection was live and updated the status to 'LIVE' if it was. The script snippet used was:\n\n```python\nct = NoyoCompanyCarrierTransmission.objects.get(company=\"652ec976b400bcf47bd7a6ea\")\n# if ct.isConnectionLive():\n#   ct.status = BaseCompanyCarrierTransmissionStatus.LIVE\n#   ct.save()\nreturn ct\n```",
    "data_models": "[NoyoCompanyCarrierTransmission]"
  },
  "BENINTEG-1265": {
    "key": "BENINTEG-1265",
    "issue": "The company with ID 65159e0bc40cb31d7b6208f2 does not have any medical plan included for their Open Enrollment, causing employees to be unable to select Medical coverage.",
    "issue_summary": "The medical plan for the company was missing from Open Enrollment due to a reset of all coverage tasks by a user, leading to the deletion of the previously mapped plan.",
    "rca": "The root cause of the issue was that the open enrollment was started but not followed up, causing the plans to be deleted. Specifically, the previously mapped plan was deleted by the ETA 'generatePacketAndCreateSubmitCompanyEnrollmentPacketTask'.",
    "steps_taken": "To resolve the issue, the following code snippet was used to restore the deleted plan:\n\n```python\ncclis = InsuranceCompanyCarrierLineInfo.objects.filter(company=\"65159e0bc40cb31d7b6208f2\", state__ne=\"INIT\")\nfor cpi in InsuranceCompanyPlanInfo.objects_including_deleted.filter(\n                  company=\"65159e0bc40cb31d7b6208f2\", state=\"FINALIZED\", companyCarrierLineInfo__in=cclis, isDeleted=True\n              ):\n    cpi.isDeleted = False\n    cpi.save()\nreturn\n```",
    "data_models": "[InsuranceCompanyCarrierLineInfo, InsuranceCompanyPlanInfo]"
  },
  "BENINTEG-1264": {
    "key": "BENINTEG-1264",
    "issue": "Forms for enrollments and terminations were not being sent to insurance carriers for the group, causing billing issues as terminated employees were still being billed.",
    "issue_summary": "Forms for enrollments and terminations were not being sent to insurance carriers due to a bug in the PendingAction workflow, causing billing issues for the company.",
    "rca": "The issue was caused by a bug in the PendingAction workflow architecture. Forms were blocked by earlier forms that were more than a year old, which should not have been sent, but the system was still blocked on those forms, preventing any new forms from being sent out.",
    "steps_taken": "A workaround script was executed to unblock the forms for the company. The script identified blocking pending actions and marked them as 'FAILED' if they were outdated or related to inactive events. This allowed the necessary forms to be sent to the carriers. The script used the following code snippet:\n\n```python\ndef get_blocking_pa(paction):\n    pas = [\n            pa\n            for pa in PendingAction.objects(role=paction.role, carrier=paction.carrier, state=\"PROCESSED\")\n        ]\n    for pa in pas:\n        if (\n            pa != paction\n            and pa.get_event().finalizedOn\n            and paction.get_event().finalizedOn  # type: ignore[union-attr]\n            and pa.get_event().finalizedOn < paction.get_event().finalizedOn  # type: ignore[union-attr]\n            and pa.shouldPerformAction()\n        ):\n            return True, pa\n\n    return False, None\n\n  a = set()\n  b = defaultdict(list)\n  for pa_id in PendingActionLog.objects_across_company.filter(\n      reason_for_not_performing=\"UNSUBMITTED_PRIOR_FORMS\",\n      createdAt__gte=pst_now()-timedelta(days=365),\n      company=\"5d979a1a8a9f4e74b861aa18\"\n    ).order_by(\"-createdAt\").values_list(\"pending_action\"):\n    try:\n      pa2 = get_blocking_pa(pa_id)[1]\n      if pa2 and pa2.company.isActiveCompany() and pa2.state == \"PROCESSED\" and pa2.createdAt < pst_now() - timedelta(days=365):\n        print(pa2.id, PendingActionLog.objects.get(company=pa2.company, pending_action=pa2).reason_for_not_performing, pst_now() - pa2.createdAt)\n        b[pa2].append(pa_id)\n    except Exception as e:\n      print(e)\n\n  for p, ps in b.items():\n    print(\"{} is blocking created on {}\".format(p.id , pst_now() - p.createdAt))\n    for pa in ps:\n      e = pa.get_event()\n      if \"CobraCancellationEvent\" in e._cls or \"TerminationEvent\" in e._cls:\n        if e.createdAt < pst_now() - timedelta(days=365):\n          pa.state = \"FAILED\"\n          pa.save()\n          print(\"\\t will delete\", pa.id, e._cls, e.active, e.approximateEffectiveDate, e.approximateExpiryDate)\n        else:\n          print(\"\\t will not delete\", pa.id, e._cls, e.active, e.approximateEffectiveDate, e.approximateExpiryDate)\n      elif not e.active:\n        pa.state = \"FAILED\"\n        pa.save()\n        print(\"\\t will delete\", pa.id, e._cls, e.active, e.approximateEffectiveDate, e.approximateExpiryDate)\n      else:\n        print(\"\\t will not delete\", pa.id, e._cls, e.active, e.approximateEffectiveDate, e.approximateExpiryDate)\n\n    p.state = \"FAILED\"\n    p.save()\n\n    print(\"is itself blocked by \", PendingActionLog.objects.get(company=p.company, pending_action=p).reason_for_not_performing)\n  return None\n```\n\nThe forms for necessary actions post the last NGE/Renewal were sent successfully.",
    "data_models": "[PendingAction, PendingActionLog]"
  },
  "BENINTEG-1263": {
    "key": "BENINTEG-1263",
    "issue": "A blocked transaction for a rehire within the same PEO at Platinum Technologies, specifically for the employee Farzad Messaq, needed to be unblocked. The issue was related to mapping the employee to Noyo.",
    "issue_summary": "The issue was a blocked transaction for a rehire at Platinum Technologies due to a mapping problem with Noyo, caused by a change in the employee's SSN.",
    "rca": "The root cause of the issue was identified as a change in the employee's SSN, which led to a mismatch in the Noyo employee mapping, preventing the transaction from being processed.",
    "steps_taken": "The operations team initially looked at the mapping to resolve the issue without engineering involvement but couldn't find a fix. It was later identified that the SSN change caused the mismatch. A suggestion was made to reach out to Noyo to update the SSN of the employee.",
    "data_models": "[PendingAction]"
  },
  "BENINTEG-1262": {
    "key": "BENINTEG-1262",
    "issue": "North Park Transportation Co's carrier, Equitable AXA, reported that invalid benefit amounts were being sent on the file feed for salary-dependent coverages (STD). The salary redetermination settings for these benefits were set to 'At Renewal', but the benefit volume was inconsistent with the salary being passed.",
    "issue_summary": "The issue was that the benefit volume being sent to OneKonnect was inconsistent with the salary information for salary-driven benefits, due to incorrect implementation of salary redetermination settings.",
    "rca": "The root cause of the issue was an incorrect implementation of the salary redetermination settings, which led to the transmission of inconsistent benefit volumes and salary information to the carrier Equitable AXA via OneKonnect.",
    "steps_taken": "The issue was identified as a known problem, and a fix was already in place but needed to be rolled out for this specific company. The fix involved updating the salary logic using a feature flag in LaunchDarkly. Once the fix was applied, the next EBN snapshot was expected to have the correct salary information. The issue was monitored, and confirmation was sought from the customer to ensure the problem was resolved.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-1261": {
    "key": "BENINTEG-1261",
    "issue": "Kojo Technologies, Inc faced an issue where incorrect cancellation dates were populating on forms for employee Phillip J Bradshaw. The employee was terminated on 6/28, and the coverage was supposed to end on 6/30. However, a correction was made to change the termination date to 7/01, which should have updated the cancellation date to 7/31. Despite this, the forms incorrectly stated the termination date as 7/02, leading to the employee's coverage being cancelled and causing issues when seeking urgent medical care.",
    "issue_summary": "Incorrect cancellation dates were generated on forms for an employee's termination, leading to coverage issues. The forms stated a termination date of 7/02 instead of the correct 7/31, causing the employee's coverage to be cancelled prematurely.",
    "rca": "The root cause of the issue was identified as a bug in the business logic for generating end date correction forms. The system incorrectly generated a termination date of 7/02/2024 due to some lines of coverage having a 'last day worked' termination policy while others had an 'end of month' policy. Additionally, the Noyo API does not support termination correction dates, which contributed to the issue.",
    "steps_taken": "To resolve the issue, another payload was sent to Vericred with the corrected termination date for Anthem. For Principal, since Noyo does not support termination correction dates via API, an email was sent to Noyo to correct the termination date. The team also worked directly with Noyo's team to correct the dashboard. Logs were added to track the issue better in the future, and a ticket was created to address the code bug related to the cover letter.",
    "data_models": "[VendorRequest]"
  },
  "BENINTEG-1260": {
    "key": "BENINTEG-1260",
    "issue": "SEO Werkz, LLC carrier (Equitable AXA) reported that invalid benefit amounts were being sent on the file feed for salary-dependent coverages (Basic Life / STD / LTD). The salary redetermination settings for these benefits were set to 'At Renewal', but the salary updates were not consistent with this setting.",
    "issue_summary": "The issue was that the salary information being sent to OneKonnect for salary-driven benefits was inconsistent with the benefit volume due to incorrect implementation of salary redetermination settings.",
    "rca": "The root cause of the issue was an incorrect implementation of the salary redetermination settings, which was supposed to be fixed but the fix was not rolled out properly.",
    "steps_taken": "The fix for the incorrect implementation was enabled, and it was verified that the issue was resolved. The fix was also enabled for other affected customers to ensure consistency.",
    "data_models": "[]"
  },
  "BENINTEG-1259": {
    "key": "BENINTEG-1259",
    "issue": "fabric Inc / Arnold Chan / Rippling data did not update, causing the COBRA termination to be missed.",
    "issue_summary": "The Vericred data for fabric Inc / Arnold Chan did not update to reflect the COBRA Cancellation on 07/12/2024, leading to a missed COBRA termination.",
    "rca": "The issue was caused by Vericred API sending 'cobra_supported' as False, which led to the Vericred request not being processed correctly.",
    "steps_taken": "The team reached out to Ideon to confirm the status of COBRA coverages. Ideon confirmed that COBRA coverages are still being sent as expected and are working on ensuring the accuracy of the 'cobra_supported' field when groups are put into production.",
    "data_models": "[]"
  },
  "BENINTEG-1256": {
    "key": "BENINTEG-1256",
    "issue": "Enrollment emails for the Axel Group were being sent to an admin and insurance operations instead of directly to the carrier, Horizon Blue Cross Blue Shield (NJ). This was causing issues with the processing of enrollments as the carrier was not receiving the necessary information.",
    "issue_summary": "Enrollment emails for the Axel Group were incorrectly sent to an admin instead of the carrier, Horizon Blue Cross Blue Shield (NJ), due to a misconfiguration in the email address setup for BOR groups without EDI file feed.",
    "rca": "The root cause of the issue was a misconfiguration in the email address setup for sending enrollment emails. The emails were being sent to an admin email address instead of the carrier's email address. Additionally, Horizon Blue Cross Blue Shield requires that enrollments be sent through a General Agent and not directly from brokers, which was not initially configured.",
    "steps_taken": "The email address for sending enrollment emails was updated to the correct carrier email address. A script was used to update the email configuration for the specific carrier and company. The script filtered the PendingAction objects for the company and carrier, retrieved the communication details, and updated the email address to 'daniel.rothman@pgpbenefits.com'.\n\n```python\ncarrier = \"5ab887e9d2a5f8516a647a93\"\ncompany = \"62d96e2854c6adab350d2a55\"\npa = PendingAction.objects.filter(company=company, carrier=carrier).order_by(\"-createdAt\")[0]\nreturn pa.carrier.getCarrierObject().getCommunicationDetails(pa)\nreturn CustomEmailCommunicationDetail.create_or_update(\n    company=pa.company,\n    carrier=pa.carrier,\n    update={\n        \"emailAddress\": \"daniel.rothman@pgpbenefits.com\"\n    }\n)\n```",
    "data_models": "[PendingAction, CustomEmailCommunicationDetail]"
  },
  "BENINTEG-1255": {
    "key": "BENINTEG-1255",
    "issue": "Employee personal phone numbers are not populating in the JSON payload sent to Ideon, despite being present in Rippling, affecting all employees enrolling in UHC coverage.",
    "issue_summary": "Employee phone numbers were not appearing in the JSON payload sent to Ideon due to format discrepancies, causing issues with the EDI setup for United Healthcare coverage.",
    "rca": "The root cause was identified as the handling of multiple phone number formats. The phone numbers were stored in a format that was not compatible with the expected format in the JSON payload, leading to them being null in the payload.",
    "steps_taken": "The issue was resolved by running a web script to update the phone number format to the required format. This was done after confirming the impact of the change and ensuring it would not affect other functionalities. The fix was implemented in the nightly feed, and all subscriber data was pushed to Vericred, confirming the resolution.",
    "data_models": "[]"
  },
  "BENINTEG-1253": {
    "key": "BENINTEG-1253",
    "issue": "The issue involves blocked transactions with Noyo due to multiple profiles for an employee, Katie Golden, who is also known as Catherine Golden in Noyo. Noyo cannot distinguish between the profiles, leading to a rejection error when trying to create the employee in their system.",
    "issue_summary": "The problem arises from Noyo's inability to differentiate between multiple profiles for the same employee, resulting in a transaction block and error message when attempting to create the employee in Noyo's system.",
    "rca": "The root cause is related to Noyo's tooling, where the system uses employee name and date of birth for verification. This employee had multiple profiles due to different roles and COBRA orphan status, which Noyo flagged as a duplicate issue. The current logic does not accommodate such scenarios, leading to the error.",
    "steps_taken": "The team identified the presence of three separate profiles for the employee, all valid for the time period. Discussions were initiated to reassess the current validation logic used for employee creation in Noyo. It was noted that the employee's SSN change could not be updated in Noyo, and a workflow for such situations needs to be created. A meeting with Noyo was scheduled to provide additional context and discuss potential solutions.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-1252": {
    "key": "BENINTEG-1252",
    "issue": "The transaction with Noyo for Signal Advisors is blocked due to a mismatch in member IDs between Rippling and Noyo.",
    "issue_summary": "The transaction with Noyo for Signal Advisors is blocked because the member IDs are not in sync between Rippling and Noyo, causing a data mismatch.",
    "rca": "The root cause of the issue is a mismatch in the dependent data between Rippling and Noyo. Rippling has different member IDs compared to what Noyo has, leading to the transaction being blocked.",
    "steps_taken": "The operations team attempted to resolve the issue by refreshing the Noyo IDs and resending the transaction, but the transaction remained blocked. Further investigation revealed a dependent mismatch between Rippling and Noyo. The team reached out to the admin and created a Salesforce case for further assistance. Eventually, the issue was resolved, and the ticket was closed.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [SubscriberLineInfo, PendingAction]"
  },
  "BENINTEG-1247": {
    "key": "BENINTEG-1247",
    "issue": "Employer Application is missing in New Group Enrollment Submission (NGE) for United Healthcare CA, preventing the carrier from proceeding with the installation of the group.",
    "issue_summary": "The Employer Application form was missing in the NGE submission for United Healthcare due to a deleted signatory role, which blocked the carrier from processing the group installation.",
    "rca": "The issue was caused by the deletion of the signatory role that was responsible for signing the enrollment information. This deletion led to the absence of the Employer Application form in the submission packet.",
    "steps_taken": "The role responsible for signing the enrollment information was manually updated to a new role. The following script was executed to update the signatory information:\n\n```python\nci = CompanyEnrollmentEventCarrierInformation.objects.filter(company=\"657976548a2aead36f15544d\")[2]\nci.enrollmentInformation[\"signedBy\"] = \"65a07439a28044da5090dc56\"\nci.eftInformation.signedBy = RoleWithCompany.objects.get(id=\"65a07439a28044da5090dc56\")\nreturn ci.save()\n```\n\nAfter running the script, the employer forms were successfully included in the packet.",
    "data_models": "[CompanyEnrollmentEventCarrierInformation, RoleWithCompany]"
  },
  "BENINTEG-1245": {
    "key": "BENINTEG-1245",
    "issue": "The employee cancelled their COBRA coverage effective 04/01/24, but the cancellation forms were not sent to the carriers, resulting in the forms not being submitted.",
    "issue_summary": "The issue was that the employee's COBRA cancellation forms were not sent to the carriers due to an issue with picking Pending Actions and handling the should perform action logic.",
    "rca": "The root cause of the issue was identified as a bug in the system related to the incorrect implementation of logic for picking Pending Actions and handling the should perform action logic, which resulted in the forms not being sent to the carriers.",
    "steps_taken": "The issue was acknowledged as a bug, and it was confirmed that no forms were sent after open enrollment. It was determined that the forms should have been sent directly to the carrier since Rippling was managing the group's forms. The action was manually performed using web scripts to resolve the issue. The script used was: `pa = PendingAction.objects.get(id=\"6603a728a2e99ca7d6c0c5f2\") pa.performAction(checkShouldPerformAction=False) return`. The RCA should be fixed with the related ticket BENINTEG-1202.",
    "data_models": "[PendingAction]"
  },
  "BENINTEG-1244": {
    "key": "BENINTEG-1244",
    "issue": "A termination form did not send for an employee in the QualSights group with a file feed for Guardian, and there is an error in the employee event debugger.",
    "issue_summary": "The termination form for an employee in the QualSights group was not sent due to an error in the employee event debugger. The root cause was identified as the role not having an end time despite being terminated.",
    "rca": "The root cause of the issue was that the employee's role did not have an end time set, even though the role was terminated. This caused the termination form not to be sent as expected.",
    "steps_taken": "To resolve the issue, an amendment was sent using a webscript to set the terminated employment date matching the event date of 2024-07-10. The following code snippet was used to create a member snapshot and update pending actions:\n\n```python\nfrom insurance.external_api.noyo_api.noyo_api import NoyoApi\ninbound_member_snapshot_payload = amendment_json\npa = PendingAction.objects.get(id=\"668eb1f51ddd0f2a04d51a61\")\nnoyo_group_id = \"ed6b621c-6c4c-4554-a06b-664e7f3d21e7\"\nnoyo_member_snapshot = NoyoMemberSnapshot.objects.create(\n    company=pa.company,\n    role=pa.role,\n    request=inbound_member_snapshot_payload,\n    group_noyo_id=noyo_group_id,\n    pending_action=pa,\n    noyo_census_request=None,\n)\nresponse = NoyoApi().create_member_snapshot(\"ed6b621c-6c4c-4554-a06b-664e7f3d21e7\", amendment_json)\nNoyoMemberSnapshotController._update_member_snapshot_from_noyo_response(noyo_member_snapshot, response)\nNoyoMemberSnapshotController._update_pending_actions(noyo_member_snapshot, response)\n\nfor created_member in response.created_members:\n    NoyoMember.create_or_update(\n        company=pa.company,\n        role=pa.role,\n        member=created_member.custom_individual_id,\n        groupVendorId=noyo_group_id,\n        update={\n            \"memberVendorId\": str(created_member.id),\n        },\n    )\n```",
    "data_models": "[PendingAction, NoyoMemberSnapshot, NoyoApi]"
  },
  "BENINTEG-1243": {
    "key": "BENINTEG-1243",
    "issue": "HMSA BCBS enrollments for Hawaii coverage were not generating termination tasks in the Insurance Tasks dashboard, leading to employees not being terminated in HMSA.",
    "issue_summary": "HMSA termination tasks were not being generated in the Insurance Tasks dashboard, causing employees to not be terminated in HMSA. This was due to a bug in the task generation process for older events.",
    "rca": "The root cause was identified as a bug in the special case handling for PEO HI PMSA, which prevented the generation of termination tasks for older events. The issue was fixed in a pull request that went live on March 1, 2024, but any group cancellation events created before that date did not have tasks or pending actions generated.",
    "steps_taken": "The issue was fixed in a pull request (https://github.com/Rippling/rippling-main/pull/210890) that went live on March 1, 2024. For events after this date, termination tasks were confirmed to be generated. The workflow was adjusted to keep tasks open rather than sending emails to Ops, as the tasks are the primary tracking method for PEO enrollments. The submit enrollment tasks will no longer auto-close for PEO HMSA.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-1242": {
    "key": "BENINTEG-1242",
    "issue": "Swift Media Entertainment Incorporated DBA TSM experienced unexpected emails being sent to a handful of employees on July 9th without an identifiable reason, causing concern as the carrier flagged this as a problem while the API is active.",
    "issue_summary": "Unexpected emails were sent to employees of Swift Media Entertainment Incorporated DBA TSM due to a fallback logic that triggered email communication when Noyo setup tasks remained incomplete for more than 4 days.",
    "rca": "The root cause of the issue was identified as pending member requests in Noyo. Specifically, there was a logic in place that if a Noyo setup task remained outstanding for more than 4 days, the system would fall back to sending emails instead of using the API. This was due to the error 'Lines not loaded in Noyo: LONG_DISABILITY, LIFE', indicating that there were LOCs built in Rippling without a corresponding plan in Noyo for 1:1 mapping.",
    "steps_taken": "The issue was investigated by reviewing the logic that caused the fallback to email communication. It was confirmed that the logic was in place because 4 days is the SLA from Noyo to get the API feed live with an insurance carrier. The setup tasks were identified as triggers for this fallback. It was also noted that the internal system incorrectly showed 'Submitted via Noyo' even when the actual member request was not sent via Noyo. A ticket was registered to address this false information issue. Additionally, it was suggested to contact Noyo to inquire about the pending member request that caused the fallback.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-1241": {
    "key": "BENINTEG-1241",
    "issue": "Paperless Parts dataset is not passing to OneKonnect since 07/13, resulting in production file feed failures.",
    "issue_summary": "The dataset for Paperless Parts is not being transmitted to OneKonnect due to the removal of the partner admin role, which caused the broker info details to lack an enrollment manager.",
    "rca": "The root cause of the issue was the deletion of the partner role (broker role) by the company admin, which led to the system defaulting to not managing forms as it could not identify the partner company managing the forms. This behavior is due to the system's reliance on the enrollment manager email to match with a partner company to fetch settings.",
    "steps_taken": "The issue was resolved by updating the broker details in the system. The company admin was instructed to go to Ben Admin > Company info > benefits administrator and edit the settings to ensure the forms are managed correctly.",
    "data_models": "[CompanyInsuranceInfo, CompanyBrokerInfo]"
  },
  "BENINTEG-1239": {
    "key": "BENINTEG-1239",
    "issue": "The cleanup step in the retool process was incorrectly processed, resulting in the deletion of Ideon data that was still needed while the BCBS TX Medical/Dental file was in testing with OneKonnect.",
    "issue_summary": "The cleanup step in the retool process was incorrectly processed, wiping necessary Ideon data during BCBS TX Medical/Dental file testing with OneKonnect.",
    "rca": "The issue was caused by incorrectly processed steps in the cleanup process, leading to the deletion of necessary Ideon data.",
    "steps_taken": "The issue was resolved by reverting the cleanup step using a script that restored the deleted Ideon data. The script involved setting the 'isDeleted' flag to 'False' for various data models related to the company and carrier, such as CustomVericredCommunicationDetail, VericredCompanyCarrier, VericredWorkLocationMap, VericredCompanyCarrierTransmission, VericredCompanyCoveragePeriodInfo, VericredMember, InsuranceCompanyCarrierLineInfo, and InsuranceCompanyPlanInfo. Additionally, EbnCompanyCarrierTransmission objects were deleted for the specified company and carrier.",
    "data_models": "[CustomVericredCommunicationDetail, VericredCompanyCarrier, VericredWorkLocationMap, VericredCompanyCarrierTransmission, VericredCompanyCoveragePeriodInfo, VericredMember, InsuranceCompanyCarrierLineInfo, InsuranceCompanyPlanInfo, EbnCompanyCarrierTransmission]"
  },
  "BENINTEG-1238": {
    "key": "BENINTEG-1238",
    "issue": "PatientNow / Terminations did not send to Noyo when expected, causing a delay in processing terminations for 7 employees.",
    "issue_summary": "Terminations for 7 employees with termination dates of 06/30/2024 were not sent to Noyo until 07/13/2024 due to an active company enrollment event blocking pending actions.",
    "rca": "The issue was caused by a bug where no pending actions were sent during the time an active company enrollment event was ongoing and its deadline had not passed. This incorrect implementation prevented the terminations from being sent to Noyo in a timely manner.",
    "steps_taken": "A new ticket (BENINTEG-1248) was created to address the bug. The team is tracking the progress of this ticket to implement a fix.",
    "data_models": "[PendingActionGroup, EnrollmentEvent]"
  },
  "BENINTEG-1232": {
    "key": "BENINTEG-1232",
    "issue": "Employee Alexandra Ulven's medical effective date was incorrectly reported as 9/1/2023 instead of 3/1/2024 to Ideon. Additionally, Admin Regina Corral, despite having Super Admin privileges, was unable to update employee information.",
    "issue_summary": "The medical effective date for employee Alexandra Ulven was incorrectly set to 9/1/2023 instead of 3/1/2024 in the system, causing incorrect reporting to Ideon. Additionally, there was an issue with Admin Regina Corral's privileges, preventing her from updating employee information.",
    "rca": "A business logic change for offline updates affected the effective date reporting, leading to the incorrect date being sent to Ideon.",
    "steps_taken": "The previous SubscriberLineInfo (SLI) was invalidated to correct the effective date. The code snippet used was:\n\n```python\nsli = SubscriberLineInfo.objects.get(id=\"66215efcbb5a4327c1a35ae9\")\nsli.invalidate()\nsli.save()\nreturn sli\n```\n\nThe pending action was reprocessed to ensure the correct effective date was sent out. Confirmation was received that the effective date is now passing correctly to Ideon.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-1222": {
    "key": "BENINTEG-1222",
    "issue": "The issue involves blocked transactions for Becki/Rebecca due to a problem with Noyo plan mapping for the 'Beam 50k Shelf-Rated Life' plan. The transactions cannot be sent because the plan is marked as discontinued, causing a blockage in sending a snapshot transaction.",
    "issue_summary": "Blocked transactions for Becki/Rebecca due to Noyo plan mapping issues, where the 'Beam 50k Shelf-Rated Life' plan is marked as discontinued, preventing the sending of a snapshot transaction.",
    "rca": "The root cause of the issue was that the Noyo API returned the plan as discontinued, which led to the deletion of the Noyo plan mapping objects. This discontinuation was temporary, and the plan was later restored.",
    "steps_taken": "The plan mappings were restored using a web script. The script iterated over the NoyoCompanyPlanInfo objects, setting 'isDeleted' to False and saving the changes. This allowed the pending actions to proceed, resolving the blocked transactions. The script used was:\n\n```python\nfor ncp in NoyoCompanyPlanInfo.objects_including_deleted.filter(company=\"5ff5ce567ad8c400a6396a39\", noyo_plan_id__in=[\"3c5550df-6f8f-4296-ac05-0617175d77a5\", \"be0bb863-d627-4dcd-b5d8-f1392c0ce3df\"]):\n    ncp.isDeleted = False\n    ncp.save()\nreturn\n```\n\nThe blocked transactions were resolved, and it was suggested to reach out to Noyo to understand why the plans were temporarily discontinued.",
    "data_models": "[NoyoCompanyPlanInfo]"
  },
  "BENINTEG-1220": {
    "key": "BENINTEG-1220",
    "issue": "Millennial Restaurant Group, LLC DBA Blaze Pizza is facing an issue with the incorrect class code being sent for employee Dustin McClinton. The employee's demographic change event is not reflecting the correct department code in the Anthem EDI file, causing a mismatch in the employee's location and department code.",
    "issue_summary": "The issue involves the incorrect class code being sent for an employee due to a demographic change event not updating the department code correctly in the Anthem EDI file. The employee moved from Florida to Kentucky, but the system is still passing the Florida department code instead of the Kentucky code.",
    "rca": "The root cause of the issue is a bug in the system where the demographic change event does not have a 'Reference Date' and due to a display bug, it is being replaced with today's date. Additionally, the groups failed to update in time, causing the old classification value to be passed through, resulting in the wrong department code being sent to Ideon.",
    "steps_taken": "The issue was investigated, and it was found that the demographic change event did not update the department code correctly. The team worked with the hub team to understand why the groups failed to update. A resubmission of the action was requested, and the classification value was corrected. The action was resubmitted via Vericred using a web script: `return PendingAction.objects.get(id=\"6633b03d1fefdb1215c67229\").performAction(checkShouldPerformAction=False)`. Confirmation was sought from Ideon to ensure the new carrier code was reflected correctly.",
    "data_models": "[EnrollmentEvent, PendingAction]"
  },
  "BENINTEG-1219": {
    "key": "BENINTEG-1219",
    "issue": "The open enrollment forms for a group had missing or incorrect information, specifically the child voluntary life volume was missing and a beneficiary was not listed on the form.",
    "issue_summary": "The open enrollment forms for a group had missing or incorrect volumes and beneficiaries due to issues with the form templates.",
    "rca": "The root cause of the issue was identified as a manual data entry error in the form templates, which led to missing values for child voluntary life volume and incorrect handling of contingent beneficiaries.",
    "steps_taken": "The form templates were reviewed and updated to include the missing values for child voluntary life volume and to address the issue with contingent beneficiaries. The forms were regenerated after the templates were fixed. Additionally, there was an issue with the forms not being copied from the box to S3, which was resolved to ensure the updated forms were visible.",
    "data_models": "[]"
  },
  "BENINTEG-1217": {
    "key": "BENINTEG-1217",
    "issue": "Unable to send terminations for 6 blocked transactions due to a Noyo plan mapping error for the plan 'Beam 50k Shelf-Rated Life'.",
    "issue_summary": "Transactions for terminations are blocked due to an error in Noyo plan mapping for the 'Beam 50k Shelf-Rated Life' plan, as the company carrier plan info is not eligible for Noyo.",
    "rca": "The blocked transactions were resolved, but the exact reason for the blockage was not clear. It was suggested to reach out to Noyo for further clarification on why the transactions were initially blocked.",
    "steps_taken": "Reviewed the mapping in the Noyo plan mapper and verified that lines appeared to be mapped correctly. Checked that the snapshot went through successfully for other transactions since the API migration. Blocked transactions were resolved, and it was suggested to contact Noyo for further clarification.",
    "data_models": "[NoyoCompanyPlanInfo, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-1211": {
    "key": "BENINTEG-1211",
    "issue": "Admin requested to remove Mat Gorchesky's email from Enrollment updates and replace it with John Blanzy's email during EDI setup for Bluesight.",
    "issue_summary": "Admin needed to update broker contact information during EDI setup by removing Mat Gorchesky's email and adding John Blanzy's email, but was unable to do so due to EDI pending status.",
    "rca": "The issue was caused by the need to change the CustomEbnCommunicationWithCustomEmailDetail using a webscript, as the previous email communication details were overwritten when EDI communication was set up for CareFirst.",
    "steps_taken": "The email was updated to John.Blanzy@lockton.com as requested by the admin. The change was confirmed after a miscommunication was corrected.",
    "data_models": "[CustomEbnCommunicationWithCustomEmailDetail]"
  },
  "BENINTEG-1209": {
    "key": "BENINTEG-1209",
    "issue": "Offline changes for Voluntary Life coverage effective dates are not being passed to OneKonnect as expected, causing a misalignment with MetLife's expected effective dates.",
    "issue_summary": "The offline change effective dates for Voluntary Life coverage are not being transmitted to OneKonnect, leading to a discrepancy between the expected and actual effective dates.",
    "rca": "The issue was caused by a business logic change where SubscriberLineInfo (SLI) entries were being combined if the expiration date of the previous SLI was one day less than the effective date of the new SLI. This logic was introduced last year and affected the offline change processing.",
    "steps_taken": "The solution involved marking the previous SLI as inactive to correct the effective date. A script was run to update the effective dates for the affected employees. The script iterated over roles and SLIs, checking conditions and invalidating previous SLIs if necessary. The script was confirmed to have fixed the effective dates.",
    "data_models": "[SubscriberLineInfo, RoleWithCompany]"
  },
  "BENINTEG-1203": {
    "key": "BENINTEG-1203",
    "issue": "Admin reported that a different Voluntary Life insurance amount was submitted to the carrier than what the employee elected, causing potential billing discrepancies.",
    "issue_summary": "The system sent a Voluntary Life insurance election amount of 25k to the carrier instead of the 20k elected by the employee, due to the system defaulting to the Guaranteed Issue (GI) amount.",
    "rca": "The root cause was identified as the system behavior where the elected amount under the GI amount defaults to the GI amount when transmitted to Noyo. This was due to the business logic where the system intentionally sends the volume without age tier deduction to Noyo, as Noyo handles this configuration on their side.",
    "steps_taken": "The issue was investigated by reviewing the code and confirming that the system sends the 'Desired Buy-up' amount to Noyo. It was confirmed that the system behavior was as expected, and the discrepancy was due to either a user error or a misunderstanding. The admin was advised to verify the amount with the employee and communicate with the carrier to agree on the final amount. The admin was also guided to use the self-serve tool to override the amount if necessary.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-1201": {
    "key": "BENINTEG-1201",
    "issue": "The group is in the process of setting up a file feed with Beam, and email communication should be used to send enrollment forms in the meantime. However, dual communication details are not set up, and the employee's enrollment forms have not been processed.",
    "issue_summary": "Carrier dual communication not enabled for Beam, causing enrollment forms not to be processed as the connection with Noyo is pending.",
    "rca": "The system does not have dual communication enabled for Beam, and specifically, Beam does not support email/fax fallback when Noyo is on. The group connection setup task for this company-carrier is in a pending state, preventing the setup of a group connection and the sending of forms.",
    "steps_taken": "The group was informed that they need to manage their enrollments outside of Rippling until the feed is live, as there is no fallback to forms in this scenario. The team is looking into supporting dual communications for Noyo to address this issue in the future.",
    "data_models": "[]"
  },
  "BENINTEG-1199": {
    "key": "BENINTEG-1199",
    "issue": "Dataset is not passing for ALERTWest with the EBN connection.",
    "issue_summary": "The issue was that the dataset for ALERTWest was not being transmitted to OneKonnect due to an incorrect carrier selection. The carrier 'Anthem Blue Shield' was selected instead of the correct carrier 'Anthem Blue Cross'.",
    "rca": "The root cause of the issue was the selection of the wrong carrier for creating the EBN connection. The carrier 'Anthem Blue Shield' was selected, which did not have any company-plans registered, instead of 'Anthem Blue Cross', which was the correct carrier with registered plans.",
    "steps_taken": "The steps taken to resolve the issue included identifying the incorrect carrier selection and advising to establish a carrier connection with the correct carrier 'Anthem Blue Cross'. It was suggested to create a CompanyPlan for the incorrect carrier if the connection was still desired.",
    "data_models": "[CompanyPlan]"
  },
  "BENINTEG-1198": {
    "key": "BENINTEG-1198",
    "issue": "The termination form for employee Cherryn Wang sent to BlueCrossBlueShield lacks the employee's signature, date, and administrator's name, causing the carrier to reject the form.",
    "issue_summary": "The termination form for Cherryn Wang was missing critical information such as the employee's signature, date, and administrator's name due to a mapping issue, leading to rejection by the carrier.",
    "rca": "The root cause of the issue was identified as a mapping issue in the form generation process, which resulted in the omission of necessary fields like the employee's signature, date, and administrator's name on the termination form.",
    "steps_taken": "The issue was resolved by updating the form mappings to include the missing fields. The engineer used the following code snippet to debug the issue:\n\n```python\npendingAction = PendingAction.objects.get(id=\"668e9e747288939bc7ed55be\")\ncarrier = pendingAction.carrier\ncarrierObject = pendingAction.carrier.getCarrierObject()\nevent = pendingAction.pendingActionGroup.event\ncaption, formTypes = carrierObject.getFormTypesOnEvent(event, carrier, pendingAction, forceRegenerate=False)\nassert len(formTypes) == 1\nformType = formTypes[0]\nreturn formType.getSignatureAreasHelperClass()\n```\n\nThe output indicated that the form was missing the signature area. The engineer then updated the form mappings to include the employee's signature, date, and administrator's name. The forms copier was run, and the forms were regenerated to reflect these changes.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-1197": {
    "key": "BENINTEG-1197",
    "issue": "Several employees from Compound Planning were not terminated from PEO benefits as expected, despite the group terminating from the PEO effective 12/31/23. The coverage appeared terminated in Rippling, but the file feed to Noyo was missing an end date, causing some employees to remain enrolled in benefits.",
    "issue_summary": "Employees from Compound Planning were not properly terminated from PEO benefits due to missing end dates in the file feed to Noyo, despite appearing terminated in Rippling.",
    "rca": "Noyo was showing stale information in their command center, which led to the employees still being shown as active in their system despite termination requests being sent.",
    "steps_taken": "The team reached out to Noyo to investigate the issue. It was confirmed that termination requests were sent for all coverages, but some employees still showed active coverage. Communication with Noyo was maintained to resolve the discrepancies, and the issue was flagged for further prioritization and root cause analysis.",
    "data_models": "No specific data models were mentioned in the ticket."
  },
  "BENINTEG-1187": {
    "key": "BENINTEG-1187",
    "issue": "Garuda Labs, Inc. DBA Instawork reported that Rippling is sending incorrect effective dates for insurance coverage to Aetna, causing enrollment issues.",
    "issue_summary": "Rippling is sending incorrect effective dates for insurance coverage to Aetna, which requires the effective date to match the date of a newborn's birth when adding a new dependent. This discrepancy is causing enrollment issues.",
    "rca": "A manual amendment is being sent to EBN for this particular user as a part of mitigation. An engineering task has been picked up to make the changes to fix this in long-term. The issue arises because Aetna requires the effective date to match the date of a newborn's birth when adding a new dependent, which was not being correctly handled by Rippling.",
    "steps_taken": "A manual amendment was sent to EBN for the specific user to correct the effective date. A custom QLE event dataset with the required dates was manually sent to Vericred, and it was verified that the data was updated on their end. The issue is being tracked for a long-term fix in another ticket (BENINTEG-1249).",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-1183": {
    "key": "BENINTEG-1183",
    "issue": "Admins are not receiving notifications after new hires complete their enrollments, despite Rippling not managing forms.",
    "issue_summary": "Admins and brokers are not being notified after new hires complete their enrollments because the system didn't send notifications as one carrier form was not generated.",
    "rca": "The system was working as expected by not sending notifications because one of the carrier forms was not generated. Specifically, the Anthem Blue Cross form was missing, preventing the PendingActionGroup from updating its state and sending notifications.",
    "steps_taken": "The issue was resolved by either adding the missing new hire enrollment form for Anthem Blue Cross and mapping it, or by marking the pending action corresponding to Anthem Blue Cross as archived to trigger notifications for other actions. Once the forms were autogenerated and emails were sent, the ticket was closed.",
    "data_models": "[CompanyInsuranceInfo, PendingActionGroup, PendingAction]"
  },
  "BENINTEG-1180": {
    "key": "BENINTEG-1180",
    "issue": "Open Enrollment (OE) changes were not completed for 17 employees due to incorrect form types being used. CalChoice required Change forms instead of OE forms for employees changing plans or coverage tiers.",
    "issue_summary": "The issue arose because CalChoice required Change forms for employees changing plans or coverage tiers, but the system generated OE forms instead, leading to a blocker for 17 employees.",
    "rca": "The root cause was an incorrect interpretation of the need for Change forms versus OE forms. The system did not generate Change forms because it considered the renewal plans and previous plans to be the same, leading to a lack of form generation for plan changes.",
    "steps_taken": "The issue was identified as a misunderstanding of the form requirements by CalChoice. The renewal plan mapping was reviewed, and it was confirmed that the system generated the correct forms. The issue was resolved when it was clarified that the forms received by the carrier were indeed Change forms, not OE forms.",
    "data_models": "[Company, CompanyEnrollmentEvent, USBenefitsCarrier, EnrollmentEvent, PendingActionGroup, PendingAction, PendingActionLog]"
  },
  "BENINTEG-1178": {
    "key": "BENINTEG-1178",
    "issue": "Enrollment emails were being sent to carriers for demo accounts, causing over 100 Salesforce cases due to incorrect policy numbers.",
    "issue_summary": "Enrollment emails were mistakenly sent to carriers for demo accounts, leading to incorrect policy numbers and confusion for the benefits advising team.",
    "rca": "The issue was caused by a bug in the system that did not filter out demo companies before executing pending actions, leading to enrollment emails being sent to carriers for demo accounts.",
    "steps_taken": "A check was added to filter out demo companies before executing pending actions. The following code snippet was used to identify and address the issue: ```companies = InsuranceCompanyCarrierLineInfo.objects_across_company.filter(groupId=\"834598\").distinct('company') pas = PendingAction.objects.filter(company__in=companies, state__in=[\"PENDING\", \"ACTIVE\"], createdAt__gte=date(2024,6,9)) print(pas.count()) for pa in pas: role = pa.role company=pa.company company_insurance_info = CompanyInsuranceInfo.objects.filter(company=company).first() _isActiveCompany = company_insurance_info._isActiveCompany if company_insurance_info else \"No\" is_demo_company = is_test_or_demo_company(company) print(pa.id, is_demo_company, _isActiveCompany, pa.carrier.displayName) return 0``` A PR was raised and merged to fix the issue, ensuring that enrollment emails are not sent for demo employees.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo, PendingAction]"
  },
  "BENINTEG-1177": {
    "key": "BENINTEG-1177",
    "issue": "53 open enrollment (OE) transactions are blocked due to an error 'invalid literal for int() with base 10: 'L08415'', which is affecting the group's open enrollment process.",
    "issue_summary": "The issue involves 53 blocked OE transactions due to an error related to Anthem ID being mistakenly processed through the wrong vendor, Noyo, instead of Ideon.",
    "rca": "The root cause of the issue was identified as blocked transactions due to fetching Noyo carrier classifications for companies that do not use Noyo for the carrier. Specifically, the Anthem ID was being incorrectly processed through Noyo.",
    "steps_taken": "The issue was discussed internally, and a fix was implemented and merged as per the pull request [https://github.com/Rippling/rippling-main/pull/253567]. The transactions were set to be retried by an automated job within a day, and they were expected to pass after the fix.",
    "data_models": "No specific data models were mentioned in the ticket or comments."
  },
  "BENINTEG-1175": {
    "key": "BENINTEG-1175",
    "issue": "Dutch Pet employees were not terminated from PEO benefits as expected, despite the group terminating from the PEO effective 12/31/23. The issue was that no end date was sent to Noyo, leaving several members enrolled in PEO benefits.",
    "issue_summary": "Dutch Pet employees remained enrolled in PEO benefits after the group terminated from the PEO because no end date was sent to Noyo. The coverage appeared terminated in Rippling, but the file feed was missing an end date.",
    "rca": "There is an issue with terminations not being sent to carriers when role terminations and PEO offboarding effective dates are the same. However, the company/EE's in this ticket didn't seem to be affected, so the ticket was closed.",
    "steps_taken": "The issue was investigated by checking the status of terminations in the PEO group and confirming that cancellations were sent to Guardian via Noyo for affected employees. It was found that the employees had terminated coverages in the PEO group and active coverages in the standalone group. The ticket was closed after confirming that Dutch Pet was not affected.",
    "data_models": "[]"
  },
  "BENINTEG-1174": {
    "key": "BENINTEG-1174",
    "issue": "The issue was a missing API submission for an employee's enrollment event on 04/01, which did not generate a Noyo request or form submission for Guardian enrollment.",
    "issue_summary": "The employee's enrollment event as part of the New Group Enrollment (NGE) did not generate a Noyo request or form submission for Guardian, leading to a potential missed enrollment.",
    "rca": "The root cause analysis revealed that the employee's enrollment was included in the carrier packet as part of the NGE process, which is the expected behavior. The issue was due to a misunderstanding, as the data was sent in the carrier packet, and the employee was listed in the census file for Guardian.",
    "steps_taken": "The steps taken included reviewing the debugger event and confirming the employee's listing in the carrier packet for Guardian. The issue was identified as a misunderstanding, and it was confirmed that the behavior was as expected on Rippling's end.",
    "data_models": "[CompanyEnrollmentEvent, SubscriberLineInfo]"
  },
  "BENINTEG-1173": {
    "key": "BENINTEG-1173",
    "issue": "NOYO Blocked Transactions for Sierra Technologies Inc due to Beam Mapping Issues affecting the Dental line of coverage for 2 employees.",
    "issue_summary": "The issue involves blocked enrollment transactions for the Dental line of coverage due to a mapping issue with the Noyo plan, potentially related to an expired line of coverage being pulled in.",
    "rca": "The root cause is linked to a different ticket's issue, which is causing this problem. The issue was temporarily unblocked using a web script.",
    "steps_taken": "A web script was run to temporarily fix the issue. The root cause is being addressed in a separate Jira ticket (BENINTEG-1349).",
    "data_models": "[NoyoCompanyPlanInfo]"
  },
  "BENINTEG-1172": {
    "key": "BENINTEG-1172",
    "issue": "One Medical flagged missing work emails on the latest e-file received from Rippling, affecting about 70 entries, primarily unenrolled members needed for a summer email campaign.",
    "issue_summary": "One Medical reported missing work emails in the e-file from Rippling, impacting 70 entries, mostly unenrolled members, which are needed for an email campaign.",
    "rca": "The root cause analysis is not detailed in the ticket. However, it suggests that the missing work emails might be due to incorrect or incomplete data in Rippling's system for those specific individuals.",
    "steps_taken": "The issue was raised multiple times in comments, but there is no detailed resolution or steps taken to fix the issue mentioned in the ticket. The ticket was eventually closed pending further review and confirmation of scope/RCA by Ops.",
    "data_models": "No specific data models were mentioned in the ticket."
  },
  "BENINTEG-1170": {
    "key": "BENINTEG-1170",
    "issue": "Axio Global / Cristy Goff / UHC informed that the COBRA form was incorrectly mapped, leading to dissatisfaction with the information provided, such as termination date, termination reason, and discrepancies in the enrollment details for dependents.",
    "issue_summary": "The COBRA form for an employee was flagged by United Healthcare due to incorrect mapping, resulting in missing or incorrect information such as termination details and dependent enrollment discrepancies.",
    "rca": "The root cause of the issue was identified as mapping errors in the form, which led to incorrect or incomplete information being filled out in the COBRA form.",
    "steps_taken": "The termination date was added to the form, and the waiver section causing confusion was removed. The form mapping was updated to ensure correct information is filled out.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-1162": {
    "key": "BENINTEG-1162",
    "issue": "The employee wants their personal email, instead of their work email, to be sent to the carrier BCBS FL via the OneKonnect feed.",
    "issue_summary": "The employee's personal email needs to be communicated to BCBS FL via the OneKonnect feed, but the current system only sends the work email.",
    "rca": "The current system does not support sending personal emails instead of work emails through the OneKonnect feed, and the logic for choosing between work and personal email is not owned by the team handling the feed.",
    "steps_taken": "The issue was consulted with Ops OneKonnect experts, and it was determined that implementing this functionality would require a product enhancement and significant effort. The request has been added to the product backlog for prioritization.",
    "data_models": "[]"
  },
  "BENINTEG-1161": {
    "key": "BENINTEG-1161",
    "issue": "Forms are being sent for Canopy Tax, Inc. despite having an active file feed with OneKonnect.",
    "issue_summary": "Forms are being sent for Canopy Tax, Inc. while their OneKonnect file feed is active due to the company being under an Open Enrollment (OE) grace period.",
    "rca": "The forms are being sent because the company has some future companyCarrierLine Integration and is under an OE grace period. During this period, forms are sent irrespective of the state of the file feed.",
    "steps_taken": "The issue was investigated by consulting with OneKonnect experts and confirming that the behavior is expected during the OE grace period. It was determined that this is not a bug but a customer experience improvement opportunity. The ticket was closed after confirming the behavior and tagging it for product improvement evaluation.",
    "data_models": "[CompanyCarrierLineInfo]"
  },
  "BENINTEG-1160": {
    "key": "BENINTEG-1160",
    "issue": "13 enrollment transactions for employees enrolling dependent children in CI coverage are blocked. The transactions are not being processed even though the mapping appears correct.",
    "issue_summary": "Enrollment transactions for dependent children in CI coverage are blocked due to a mapping issue with the Line of Coverage (LOC) for Urgent.ly Inc. The transactions remain blocked despite confirming eligibility with Noyo.",
    "rca": "Unum should not have the dependent enrolled, and the admin is contacting Unum to have the dependent removed. Engineering intervention is not needed.",
    "steps_taken": "Worked with Noyo Engineering to confirm and correct eligibility on the Line of Coverage (LOC). Attempted to retry transactions, but they remained blocked. Reached out to the admin to work directly with Unum to remove the dependent.",
    "data_models": "[]"
  },
  "BENINTEG-1159": {
    "key": "BENINTEG-1159",
    "issue": "Paul Harper's COBRA coverage was not automatically populated on the Vericred file feed, requiring a manual amendment.",
    "issue_summary": "Paul Harper's COBRA coverage was missing from the Vericred file feed due to a system bug that considered expired CPs, necessitating a manual amendment.",
    "rca": "The issue was caused by a bug in the system where expired CPs were being considered, preventing COBRA file feeds from being sent through Vericred EDI. This was addressed in a separate ticket (BENINTEG-1152) which fixed the system to only consider active CPs.",
    "steps_taken": "The issue was resolved by fixing the bug in the system as documented in ticket BENINTEG-1152, ensuring that only active CPs are considered for COBRA file feeds.",
    "data_models": "[]"
  },
  "BENINTEG-1157": {
    "key": "BENINTEG-1157",
    "issue": "Cheetah Technologies' enrollment forms for Sutter Health Plus are being sent to the wrong email address at the carrier, and the admin cannot change the email due to EDI feeds being set up.",
    "issue_summary": "Enrollment forms for Sutter Health Plus are being sent to the wrong email address because the carrier connection via EDI has been set up, preventing the admin from changing the email address.",
    "rca": "The email form of communication doesn't apply anymore since the carrier connection via EDI has been setup, leading to forms being sent to the wrong email address.",
    "steps_taken": "The issue was investigated by checking the EDI setup and confirming that the connection with Sutter Health was already established. The team verified that transmissions to Sutter Health for the company were occurring via EBN. The TAM was informed to verify that the EDI is live and that the email issue is resolved. Once confirmed, the ticket was marked as resolved.",
    "data_models": "[]"
  },
  "BENINTEG-1152": {
    "key": "BENINTEG-1152",
    "issue": "Axio group received a COBRA enrollment email for an employee, despite expecting the COBRA coverage to be sent via file feed.",
    "issue_summary": "The Axio group received a COBRA enrollment email instead of the expected file feed transmission due to a logic error in handling coverage periods.",
    "rca": "The root cause was identified as a logic error in the codebase where all coverage periods, including 'expired' ones, were checked for COBRA support. If any coverage period did not support COBRA, the system defaulted to sending an email instead of using the API. This behavior was undesirable for 'expired' coverage periods, and only 'production' coverage periods should have been considered.",
    "steps_taken": "The solution involved modifying the logic to only consider 'production' coverage periods when determining if COBRA should be sent via API. The function `VericredCompanyCarrier.shouldSendCobraOnEDI` was reviewed and adjusted accordingly. The fix was approved by the product team and scheduled for deployment, which was confirmed to be completed.",
    "data_models": "[VericredCompanyCarrier]"
  },
  "BENINTEG-1151": {
    "key": "BENINTEG-1151",
    "issue": "Enrollment transactions for AgentSync Inc were blocked due to a mapping issue with the Unum Short Term Disability plan, affecting 5 employees.",
    "issue_summary": "The issue was caused by an expired line of coverage being pulled in, which blocked enrollment transactions for the Unum Short Term Disability plan.",
    "rca": "The root cause was identified as a special case handling bug where the company carrier plan info (ccli) was not eligible for Noyo due to an expiration date issue. The plan mapping was not correctly updated, leading to the blockage.",
    "steps_taken": "The issue was resolved by executing a script to roll back the Noyo plan mapping for the affected transactions. The script iterated over blocked transactions, retrieved the relevant InsuranceCompanyPlanInfo and NoyoCompanyPlanInfo, and applied the rollback function to correct the mapping.\n\n```python\nfor blocked_transaction in BlockedTransaction.objects.filter(company=\"5d9b9c61fa9c4e56fbba2d93\", state__ne=\"RESOLVED\"):\n    try:\n      icp_id = \"64cbc382ac51585d4034c696\"\n      icp = InsuranceCompanyPlanInfo.objects.filter(id=icp_id)[0]\n      ccli = icp.companyCarrierLineInfo\n      ncps = NoyoCompanyPlanInfo.objects.filter(company_plan_info=\"655e36cb021d176c5d484c78\", company=blocked_transaction.company)\n      for ncp in ncps:\n        roll_backward_noyo_plan_mapping(ncp)\n    except Exception as e:\n      print(e)\n  return\n```",
    "data_models": "[InsuranceCompanyPlanInfo, NoyoCompanyPlanInfo, BlockedTransaction]"
  },
  "BENINTEG-1149": {
    "key": "BENINTEG-1149",
    "issue": "Enrollment transactions for Equilibrium Energy, Inc. were blocked due to a mapping issue with the dental PPO 1500 line of coverage for 10 employees.",
    "issue_summary": "The issue was caused by the system pulling in an expired line of coverage, resulting in blocked transactions due to missing Noyo plan mapping information for the Principal Dental 1500 plan.",
    "rca": "The root cause was identified as missing plan mappings for the expired dental plan, which were not available in the system. This was confirmed by the error message indicating the absence of matching Noyo plan mapping information.",
    "steps_taken": "The engineering team manually created the necessary plan mappings using a backend script. The script involved fetching the company and plan information, verifying the effective date and plan name, and then creating new NoyoCompanyPlanInfo entries for the required mappings. The script was executed successfully, resolving the issue for the dental plan. A similar approach was taken to resolve a subsequent issue with the Accident plan mappings.",
    "data_models": "[NoyoCompanyPlanInfo, InsuranceCompanyPlanInfo, Company]"
  },
  "BENINTEG-1123": {
    "key": "BENINTEG-1123",
    "issue": "GPI USA / Unidentified data sent to Ideon. Ideon claimed a reinstatement transaction was sent for two employees, but no event was visible in Rippling debuggers.",
    "issue_summary": "Unidentified reinstatement transactions were sent to Ideon for two employees without corresponding events in Rippling, due to an incorrect implementation last year.",
    "rca": "The issue was caused by an incorrect implementation last year where a pending action was processed but not sent via Vericred due to a missing form submission task. A subsequent code change inadvertently allowed the pending action to be transmitted, as it created the missing task, leading to the transmission of stale pending actions.",
    "steps_taken": "The sequence of events was analyzed, revealing that a code change on Feb 28, 2023, added a line to create missing tasks before transmission, which caused the pending action to be transmitted. This change was later reverted on March 17, 2023. The missing submission task's reason remains unknown due to lack of logs. The issue is unlikely to recur as the process now relies on submission tasks to create blocked transactions.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-1107": {
    "key": "BENINTEG-1107",
    "issue": "The employee renewed COBRA coverage during Open Enrollment, but the enrollment form generated for the carrier indicated 'employee cancellation'.",
    "issue_summary": "The issue was caused by a confusion in plan names during the Open Enrollment process, leading to the generation of a cancellation form for the employee's previous plan.",
    "rca": "The root cause was a misunderstanding of the plan names. The employee selected a new plan, 'MEWA Blue Access PPO 3500/0%/7500', which actually belongs to Anthem and not MEWA Anthem. The old plan, which belonged to MEWA Anthem, needed to be cancelled as the mapped plan changed during renewal. This triggered a cancellation for MEWA Anthem.",
    "steps_taken": "The issue was investigated by reviewing the employee's Open Enrollment event and confirming the plan selection. It was clarified that the new plan belongs to Anthem, and the old plan belonged to MEWA Anthem, which was why a cancellation form was generated. The explanation was provided, and the ticket was closed as no further action was required.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-1101": {
    "key": "BENINTEG-1101",
    "issue": "There are 11 blocked transactions due to Anthem mapping issues for Midi Health, Inc. The issue is related to the Anthem Silver PPO HSA/H 2600/3200/5200 35% PrevRx plan, impacting the snapshot integration with NOYO.",
    "issue_summary": "The issue involves blocked transactions due to Anthem mapping issues, specifically with the Anthem Silver PPO HSA/H 2600/3200/5200 35% PrevRx plan. This affects the integration with NOYO and requires confirmation of support for suffix IDs.",
    "rca": "The root cause of the issue is related to the Anthem suffix ID mapping, which is not currently supported. Anthem's membership team is reviewing examples to provide details that can help distinguish the plans. The long-term fix is to have these plans appear as a single option, but this is not expected until next year.",
    "steps_taken": "The steps taken include discussing the issue in a Slack thread, assigning the ticket to someone with more context on the NOYO snapshot migration, and planning to add the suffix_id in the carrier configuration page. Ops will populate these based on the plans and selections. A product enhancement ticket (BENINTEG-1164) was created to support the suffix IDs for Anthem.",
    "data_models": "No specific data models were mentioned in the ticket."
  },
  "BENINTEG-1100": {
    "key": "BENINTEG-1100",
    "issue": "The issue is that BCBS requires Primary Care Physician (PCP) information on the file feed, but the dataset sent to OneKonnect does not include this information. The customer does not want auto-assigned PCP on the carrier side.",
    "issue_summary": "The dataset sent to OneKonnect does not include PCP information, which is required by BCBS. The customer does not want auto-assigned PCP, but the system sends 'Auto-Assign' if the PCP name is blank.",
    "rca": "The system is designed to send PCP information if the member has entered it. However, if the PCP name is blank, the system sends 'Auto-Assign' as the PCP name. This is due to the way the system handles blank PCP names, which conflicts with the customer's requirement to not have auto-assigned PCPs.",
    "steps_taken": "The investigation revealed that the system sends 'Auto-Assign' as the PCP name only if the PCP name is blank. The team is questioning whether this behavior is a bug and is seeking clarification on when to send 'N/A' versus 'Auto-Assign' to OneKonnect.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-1097": {
    "key": "BENINTEG-1097",
    "issue": "Test Automation",
    "issue_summary": "The ticket is related to test automation within the EBN component, but lacks detailed description and comments.",
    "rca": "The root cause analysis is categorized as 'Deferred' with a description indicating it is related to Automation Testing Jira.",
    "steps_taken": "No specific steps were taken as the ticket lacks detailed description and comments.",
    "data_models": "[]"
  },
  "BENINTEG-1089": {
    "key": "BENINTEG-1089",
    "issue": "The issue is that the group has updated the email for Delta Dental to the Rippling default (eligibility@deltadentalmi.com), but forms are still being sent to producerservices@delta.org, which is incorrect.",
    "issue_summary": "The email for Delta Dental was updated to the Rippling default, but forms are still being sent to the old email address due to a system behavior issue.",
    "rca": "The root cause of the issue is related to the system's business logic and behavior. The system is not updating the email address for large groups as expected, and the email configuration for large groups is not being utilized correctly. The system is checking against the CompanyInsuranceInfo object, which defines large groups as any company with more than 75 active roles.",
    "steps_taken": "The steps taken to resolve the issue included confirming the email configuration for large groups, updating the email configuration using a web script, and instructing the admin to update the email address in the carrier transmission tab. The web script used to update the email configuration is as follows:\n\n```python\nfrom copy import deepcopy\nimport json\nfrom insurance.domain.carrier.us_benefits_carrier_service import (\n  USBenefitsCarrierService,\n)\n\ncarriers = USBenefitsCarrierService().filter_without_peo_and_custom_carriers(\n  carrierIds=\"deltadental\",\n)\nconfigs = {}\nfor carrier in carriers:\n  if carrier.config is None:\n    new_config_dict = {\n      \"supportedLines\": {}\n    }\n  else:\n    config_dict = carrier.config.as_dict()\n    new_config_dict = {\n      k: deepcopy(config_dict[k])\n      for k in config_dict[\"populatedAttributes\"]\n    }\n  \n  if \"emailConfig\" not in new_config_dict:\n    new_config_dict[\"emailConfig\"] = {\n      \"defaultEmails\": [],\n      \"cobraEmails\": [],\n      \"largeGroupEmails\": [],\n      \"ngeEmails\": [],\n      \"borLettersSubmissionEmails\": [],\n      \"borLettersSubmissionIfNotNFPEmails\": [],\n      \"renewalSubmissionEmails\": [],\n    }\n  new_config_dict[\"emailConfig\"][\"largeGroupEmails\"].append(\"eligibility@deltadentalmi.com\")\n  configs[str(carrier.id)] = new_config_dict\n\nreturn json.dumps(configs, indent=2)\n```",
    "data_models": "[CompanyInsuranceInfo, BaseCompanyCarrierLineInfo]"
  },
  "BENINTEG-1081": {
    "key": "BENINTEG-1081",
    "issue": "Forms for Delta Dental are being sent to the wrong email address 'producerservices@delta.org' instead of the intended 'cs@alliedadministrators.com'.",
    "issue_summary": "Delta Dental forms are being transmitted to the default email for large groups instead of the overridden email provided for the group.",
    "rca": "For large groups, the system is configured to use a default email address for communication rather than the overridden email address specified for the group. This behavior is due to the business logic/system behavior that defaults to large group communication settings.",
    "steps_taken": "To resolve the issue, it was suggested to change the email setting in the carrier transmission tab to 'Choose Email' and manually enter the desired email address 'cs@alliedadministrators.com'. This would override the default large group email settings and ensure that all enrollment forms are sent to the correct email address.",
    "data_models": "[preferredLargeGroupCommunicationDetails]"
  },
  "BENINTEG-1059": {
    "key": "BENINTEG-1059",
    "issue": "The admin reported that employees Timothy and Jason are still showing as active in COBRA, despite their COBRA coverage having ended. Timothy's COBRA was supposed to end on 12/31/2023, and Jason's COBRA expiration was effective from June 1. The forms were sent to the carrier, but the issue persists.",
    "issue_summary": "Employees Timothy and Jason are incorrectly showing as active in COBRA despite their coverage having ended. The issue is due to the employees not completing the onboarding process, which prevented the expected COBRA task from being generated.",
    "rca": "The root cause of the issue was that the employees never completed onboarding onto Rippling, so their expected COBRA task could not be generated. This led to the COBRA coverage not being updated correctly in the system.",
    "steps_taken": "The issue was resolved by manually terminating the members' COBRA in Rippling. It was confirmed that the correct end dates were sent as an audit for both employees. The ticket was closed after verifying that the correct end dates were sent.",
    "data_models": "[VendorRequest]"
  },
  "BENINTEG-1055": {
    "key": "BENINTEG-1055",
    "issue": "Rippling employee's dependent information was missing in Aetna's system, despite being correctly enrolled in Rippling's portal.",
    "issue_summary": "The issue was that a Rippling employee's dependent was not showing as enrolled in Aetna's system, even though the dependent was correctly enrolled in Rippling's system. The root cause was a blocked transaction due to Vericred rejecting the request because the enrollment start date was not within 31 days of the event date.",
    "rca": "The root cause of the issue was a blocked transaction created because Vericred rejected the request. The rejection was due to the enrollment start date not being within 31 days of the event date, which is a requirement for births. This led to the dependent not being enrolled in Aetna's system.",
    "steps_taken": "The steps taken to resolve the issue included verifying the payload and pushing an amendment to Ideon. The engineering team ran a script to send the amendment request to Vericred. The script involved fetching the relevant enrollment event and using the `send_vericred_amendment_request` function to push the data. The function iterated over managers, pushed data, and printed the payloads and coverage period IDs involved. The script was executed successfully, and the amendment was sent.",
    "data_models": "[SubscriberLineInfo, QLEEnrollmentEvent, EnrollmentEvent]"
  },
  "BENINTEG-1053": {
    "key": "BENINTEG-1053",
    "issue": "Employee's dependent insurance coverage issue despite submitting a qualifying life event for June 1st enrollment. Marko's (dependent) enrollment email wasn't processed by Anthem due to an incorrect group number on the form.",
    "issue_summary": "Issues with Benefits Setup: Employee Durdica Georgia Jakovljevic's dependent was not reflected on her insurance despite submitting a qualifying life event. The enrollment email for the dependent was not sent to Anthem's correct email, and there was an error in the group number on the enrollment form.",
    "rca": "There was some data error from ops on the ticket, and also some intermittent issue on product side which is now fixed.",
    "steps_taken": "The email communication details for the carrier Anthem were checked and corrected. The correct email for Anthem was identified as CALGEnrollintake@anthem.com. A script was used to verify the email contacts: \n\n```python\n# BENINTG-1053\nemailService = CompanyPartnerCommunicationContactService()\nreturn emailService.get_contacts(company_id=\"653936c38269dc2cee53c40b\",is_cobra=False)\n```\n\nThe group number issue was identified as an ops input error. Manual processing of forms was suggested for the current employee.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-1052": {
    "key": "BENINTEG-1052",
    "issue": "Admin reported that employees are listed under the incorrect billing group, and an amendment for employee Trey could not be pushed due to a sync error with Noyo member IDs.",
    "issue_summary": "Employees were listed under the incorrect billing group due to a sync error with Noyo member IDs, preventing the necessary amendment for employee Trey.",
    "rca": "There was a setup issue where two groups in Rippling shared the same group on Principal and Noyo. Noyo had deleted one of the profiles for the employee and dependents, causing the member IDs to be out of sync.",
    "steps_taken": "The engineering team updated the Noyo member IDs for the employee and dependents using a script. The script involved fetching the NoyoMember objects, verifying their current IDs, updating them to the new IDs provided by Noyo, saving the changes, and reloading to ensure the updates were successful. Once the IDs were updated, the amendment was successfully sent.",
    "data_models": "[NoyoMember]"
  },
  "BENINTEG-1051": {
    "key": "BENINTEG-1051",
    "issue": "Employee Kenneth Lopez is encountering an error with the carrier Aetna due to the gender being sent as 'Unknown' in the file feed, causing failures in the transmission.",
    "issue_summary": "The issue arises because the employee's gender is being sent as 'Unknown' to Vericred (Ideon) during integration, which is causing errors with the carrier Aetna.",
    "rca": "The root cause of the issue is that the system is intentionally mapping non-binary gender to 'Unknown' during the Vericred integration. This is the expected behavior of the system, but it is causing issues with the carrier Aetna.",
    "steps_taken": "The team reviewed the debugger and Vericred tab, attempted to push updated information to Vericred, checked for amendments, and verified the gender in the employee's profile. A thread was started with Vericred to understand the expected value for non-binary gender and to explore potential workarounds.",
    "data_models": "[]"
  },
  "BENINTEG-1050": {
    "key": "BENINTEG-1050",
    "issue": "Nativo Inc's carrier connection with Anthem Blue Cross was incorrectly routed to Noyo, causing a high business impact and blocking the correct setup of carrier transmission.",
    "issue_summary": "The carrier connection for Nativo Inc with Anthem Blue Cross was mistakenly routed to Noyo due to a bug, impacting the correct setup of carrier transmission.",
    "rca": "The issue was caused by a bug introduced in a previous pull request, which incorrectly routed the Anthem Blue Cross connection to Noyo. This was identified as a special case handling issue.",
    "steps_taken": "The bug was identified and a fix was pushed in a subsequent pull request. The existing Noyo setup for the group was deleted using a script, and the admin was instructed to set up the carrier transmission again. The script used was:\n\n```python\nccli = BaseCompanyCarrierLineInfo.objects.get(id=\"66707bf2e15d4aba1f9797e6\")\ncarrier = ccli.carrier\ncompany = ccli.company\n\n# return ccli.carrier\n# ncc = NoyoCompanyCarrier.objects.filter(company=company, carrier=carrier).first()\n\n# NoyoGroupConnectionRequest.objects.filter(company=company, carrier_group_id=ncc.carrier_group_id).delete()\n# CustomNoyoCommunicationDetail.objects.filter(company=ccli.company, carrier=ccli.carrier).delete()\n# NoyoSetupTask.objects.filter(company=company, carrier=carrier).delete()\n# NoyoCompanyCarrierTransmission.objects.filter(company=company, carrier=carrier).delete()\n# NoyoCompanyCarrier.objects.filter(company=company, carrier=carrier).delete()\n```",
    "data_models": "[BaseCompanyCarrierLineInfo, NoyoCompanyCarrier, NoyoGroupConnectionRequest, CustomNoyoCommunicationDetail, NoyoSetupTask, NoyoCompanyCarrierTransmission]"
  },
  "BENINTEG-1049": {
    "key": "BENINTEG-1049",
    "issue": "The PEO group for Lazer Technologies Inc. was not ingested, causing a missed enrollment for employee Hugh Donkin.",
    "issue_summary": "The PEO group for Lazer Technologies Inc. was not ingested into the system, leading to a missed enrollment for an employee. This issue was related to a previous incident and required urgent attention.",
    "rca": "The root cause analysis category is 'Bug Fix' with a subcategory of 'Special Case Handling'. The detailed description is not available.",
    "steps_taken": "The engineering team executed a script to filter and ingest PEO sales events that were not in 'INIT' or 'STARTED' status and had a tentative effective date greater than or equal to May 1, 2024. The script printed the company details and attempted to ingest the group to Noyo. The output confirmed that the group for Lazer Technologies Inc. was ingested successfully.",
    "data_models": "[CompanyEnrollmentEvent]"
  },
  "BENINTEG-1046": {
    "key": "BENINTEG-1046",
    "issue": "Emily Alten enrolled her son into dental coverage with PFG, but the QLE did not go to Noyo, and the form was not sent due to an OE_DEADLINE_NOT_PASSED error.",
    "issue_summary": "The QLE for Emily Alten's son's dental coverage enrollment did not transmit to Noyo due to an OE_DEADLINE_NOT_PASSED error, which was unexpected as the OE was not until 8/1.",
    "rca": "The pending action was blocked in the processed status because the method hasDeadlinePassedForOverlappingOpenEnrollment returned false. This was due to a blocked transaction with errors related to carrier classifications, and the system's configuration to not send forms until the OE/Renewal is processed. Additionally, the NO_COMMUNICATION_METHOD error was encountered initially, preventing the form from being sent in February.",
    "steps_taken": "The issue was identified as being due to a blocked transaction and overlapping CCLI with an ongoing company renewal event. The system's configuration was explained, and the blocked transaction was monitored by ops, who could create tickets for engineering intervention if needed.",
    "data_models": "[PendingAction, PendingActionGroup, CompanyCarrierLineInfo]"
  },
  "BENINTEG-1045": {
    "key": "BENINTEG-1045",
    "issue": "Employer application form not generating in the New Group Enrollment (NGE) carrier packet for Blue Cross Blue Shield TX, Group- TGrid, USA, effective 07/01/2024.",
    "issue_summary": "The employer application form was missing from the carrier packet due to a deleted role that signed the forms, causing the system to break when searching for the signatory.",
    "rca": "The forms for the group were signed by a role that was never moved to finalized, resulting in the role being deleted. This caused the system to break when it attempted to search for the signatory, as the role no longer existed.",
    "steps_taken": "1. Identified that the method `carrier_info._get_or_create_company_forms(forceGenerate=False)` was breaking due to a missing role.\n2. Attempted to remove the 'signedBy' field from the enrollment info, but checks in place required this field.\n3. Reopened required actions that were completed by the deleted role.\n4. Ran scripts to fix the `UrlRequiredAction` and `DocumentRequiredAction` by resetting certain fields and marking actions as 'INIT'.\n5. Manually sent the employer application form and waited for approval.",
    "data_models": "[RoleWithCompany, CompanyEnrollmentEvent, RequiredAction, DocumentRequiredAction, CompanyEnrollmentEventCarrierInformation]"
  },
  "BENINTEG-1041": {
    "key": "BENINTEG-1041",
    "issue": "Rippling employee mistakenly updated their address to Canada, causing them to be marked ineligible for benefits and triggering a Qualifying Life Event (QLE) in the Rippling App.",
    "issue_summary": "A Rippling employee accidentally updated their address to Canada, which led to their insurance coverage being terminated due to ineligibility, and a QLE was created in the system.",
    "rca": "The root cause of the issue was the employee mistakenly changing their address to Canada, which resulted in the system marking them ineligible for benefits. This led to the creation of a QLE and the termination of their insurance coverage.",
    "steps_taken": "1. Deleted the demographic change event and QLE using the following code:\n\n```python\ndemographic_change_event = EnrollmentEvent.objects.get(id=\"667b1fd8ea90e5c565ea3dac\")\nqle = EnrollmentEvent.objects.get(id=\"667b1ff8c4605b4a439079ed\")\ndemographic_change_event.delete()\nqle.delete()\n```\n\n2. Deleted the termination event and its SLIs:\n\n```python\ntermination_event = EnrollmentEvent.objects.get(id=\"667a50066d56f130974869e9\")\ntermination_event.delete()\n```\n\n3. Refreshed SLIs on the first and second OE events:\n\n```python\n# DENTAL,LIFE,LONG_DISABILITY,MEDICAL,VISION,VOLUNTARY_LIFE\noe = EnrollmentEvent.objects.get(id=\"6508a77cecdc4d3e13652e8a\")\noe.on_plan_change_for_all_lines()\nslis = SubscriberLineInfo.objects.filter(enrollmentEvent=oe)\nreturn slis\n\n# SHORT_DISABILITY\noe = EnrollmentEvent.objects.get(id=\"65e8f604f9bd2602bdd067b7\")\noe.on_plan_change_for_all_lines()\nslis = SubscriberLineInfo.objects.filter(enrollmentEvent=oe)\nreturn slis\n```\n\n4. Reached out to Benefits Ops team to communicate with carriers to ignore the termination and reinstate coverage.\n\n5. Sent Noyo amendment with the following payload:\n\n```json\n{\n  \"coverages\": [\n    {\n      \"carrier_config\": {\n        \"benefit_class_identifier\": \"0001\",\n        \"work_location_text\": \"0f23856a\"\n      },\n      \"carrier_id\": \"c699414d-fd1c-4de4-86f0-66dfff2276c4\",\n      \"lines_of_coverage\": {\n        \"add\": {\n          \"modifying_coverage\": [\n            {\n              \"id\": \"938b3eb9-668e-4349-9299-4cc0a537eedc\",\n              \"member_type\": \"employee\",\n              \"plan_id\": \"d27f7c21-8fdf-4042-b5b6-fe98a72bba76\",\n              \"volume\": 400000\n            }\n          ]\n        },\n        \"dental\": {\n          \"modifying_coverage\": [\n            {\n              \"id\": \"938b3eb9-668e-4349-9299-4cc0a537eedc\",\n              \"member_type\": \"employee\",\n              \"plan_id\": \"10eeea1f-4a34-483b-9e82-8e7376f23f5a\"\n            }\n          ]\n        },\n        \"life\": {\n          \"modifying_coverage\": [\n            {\n              \"id\": \"938b3eb9-668e-4349-9299-4cc0a537eedc\",\n              \"member_type\": \"employee\",\n              \"plan_id\": \"3a9d7739-1e85-4d92-af52-a220efd0daee\",\n              \"volume\": 400000\n            }\n          ]\n        },\n        \"ltd\": {\n          \"modifying_coverage\": [\n            {\n              \"id\": \"938b3eb9-668e-4349-9299-4cc0a537eedc\",\n              \"member_type\": \"employee\",\n              \"plan_id\": \"6a8df611-88cf-476a-bb9a-3b61cada4a9d\",\n              \"volume\": 10000\n            }\n          ]\n        },\n        \"std\": {\n          \"modifying_coverage\": [\n            {\n              \"id\": \"938b3eb9-668e-4349-9299-4cc0a537eedc\",\n              \"member_type\": \"employee\",\n              \"plan_id\": \"23277c61-f706-4e66-a08c-8960e1c4e2ad\",\n              \"volume\": 1500\n            }\n          ]\n        },\n        \"vision\": {\n          \"modifying_coverage\": [\n            {\n              \"id\": \"938b3eb9-668e-4349-9299-4cc0a537eedc\",\n              \"member_type\": \"employee\",\n              \"plan_id\": \"aa298800-9bb5-4ba9-acbf-7e8f86fbac29\"\n            }\n          ]\n        }\n      },\n      \"signature_date\": \"2024-06-30\"\n    }\n  ],\n  \"event\": {\n    \"event_date\": \"2024-06-30\",\n    \"event_type\": \"rate_changed\"\n  }\n}\n```\n\n6. Sent Vericred amendment for Aetna with the following script:\n\n```python\ndemographic_change_event = EnrollmentEvent.objects_including_deleted.get(id=\"667b1fd8ea90e5c565ea3dac\")\nrole = demographic_change_event.role\n\nsend_vericred_amendment_request(role)\n```\n\n7. Confirmed that all associated SLIs expiration date is back to 11/30/2024.",
    "data_models": "[EnrollmentEvent, SubscriberLineInfo, QleAPI, CarrierConnectionAdminViewSet]"
  },
  "BENINTEG-1040": {
    "key": "BENINTEG-1040",
    "issue": "The group requested to update the email address for sending COBRA enrollment forms to UHC from clientserviceoperations@uhc.com to tpa_eligibility@uhc.com.",
    "issue_summary": "The group wanted to change the email address for sending COBRA enrollment forms to UHC, but it was later decided that the change was not needed.",
    "rca": "Initially, the group requested an email change for COBRA enrollments, but it was later determined that the change was not necessary.",
    "steps_taken": "The integration on-call team was added to assist with the update. It was discussed that the current system does not support separate email setups for COBRA communication. The possibility of updating the email address for all enrollment forms was considered, but ultimately, the admin decided not to proceed with the update.",
    "data_models": "[]"
  },
  "BENINTEG-1039": {
    "key": "BENINTEG-1039",
    "issue": "Javier Silva, an employee of Arisma Group LLC, was not included in the carrier packet for the 2023 renewal, resulting in a missed enrollment.",
    "issue_summary": "Javier Silva's enrollment for the 2023 renewal was not communicated to the carrier because he completed his enrollment after the carrier packet was sent.",
    "rca": "The root cause was identified as an operational issue where the system worked as expected, but the expectation was incorrect. Javier Silva's enrollment was completed after the carrier packet was sent, and thus, his enrollment was not communicated to the carrier.",
    "steps_taken": "The issue was flagged for further investigation by the Benefits Integrations team. It was confirmed that the employee was found in both carrier packets for the renewal effective 07/01/2023, but the communication to the carrier was not handled correctly. The product behaved as expected, but the process needed clarification.",
    "data_models": "No specific data models were mentioned in the ticket."
  },
  "BENINTEG-1037": {
    "key": "BENINTEG-1037",
    "issue": "Snapshot transactions are blocked due to missing active coverage information for dependents, causing errors in processing insurance data.",
    "issue_summary": "Blocked snapshot transactions due to missing active coverage information for dependents, requiring a snapshot with a termination date to resolve.",
    "rca": "The root cause of the issue was identified as missing active coverage information in the snapshot transactions, which led to errors. To address this, an omitted-coverage-handling mechanism with a 'continue' flag was introduced to maintain existing coverages.",
    "steps_taken": "The team worked on implementing the omitted-coverage-handling mechanism with a 'continue' flag to address the missing active coverage issue. Configuration issues were identified and fixed, and snapshots were tested and sent to ensure the solution worked. The solution was initially applied to a few groups and then planned for a broader rollout.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-1028": {
    "key": "BENINTEG-1028",
    "issue": "Unable to merge Coverage Period IDs for the carrier 'Guardian (Sequoia Tech)' due to mismatched 'ExpirationDate' fields, blocking EDI feed implementation.",
    "issue_summary": "The issue involves the inability to merge two Coverage Period IDs for the carrier 'Guardian (Sequoia Tech)' because the 'ExpirationDate' for one of the IDs does not match the expected date, preventing the merge and blocking an EDI feed implementation.",
    "rca": "The Vericred Id in the InsuranceCompanyCarrierLineInfo (CCLI) for secondary life had a leading space, which resulted in it not updating automatically in the coveragePeriod info.",
    "steps_taken": "1. Confirmed it was okay to delete the coverage period 8d4e51c5-b196-4908-bd16-9c28773622ef and add the SECONDARY_LIFE line to the coverage period 75661034-d6a3-42ba-87d2-4af57cd72f4f. 2. Executed a script to append 'SECONDARY_LIFE' to the lines involved in the coverage period 75661034-d6a3-42ba-87d2-4af57cd72f4f and marked the other coverage period as deleted. 3. Removed the leading space from the vericredId in the CCLI using the following script: ```python ccli = InsuranceCompanyCarrierLineInfo.objects.get(id=\"65e88ce73b0368d1aa5e451f\") ccli.vericredId = ccli.vericredId.replace(\" \",\"\") ccli.save() return ccli.reload() ``` 4. Updated the fields in the coverage period 75661034-d6a3-42ba-87d2-4af57cd72f4f using the script: ```python vcp1 = VericredCompanyCoveragePeriodInfo.objects.get(id=\"65f31119a03022d5693c22ca\") vcp1.updateCachedFields() return vcp1.reload() ```",
    "data_models": "[InsuranceCompanyCarrierLineInfo, VericredCompanyCoveragePeriodInfo]"
  },
  "BENINTEG-1027": {
    "key": "BENINTEG-1027",
    "issue": "OneKonnect is reporting that Rippling is sending a blank benefit amount for STD and LTD coverages, resulting in a 0 value being passed to the carrier MetLife.",
    "issue_summary": "Rippling is sending a blank benefit amount for STD and LTD coverages to OneKonnect, causing them to pass a 0 value to MetLife. This issue is due to incorrect method usage for fetching benefit amounts.",
    "rca": "The root cause of the issue was identified as the incorrect method being used to fetch the benefit amount for STD and LTD lines. The methods sli.getApprovedBenefitAmountMap() and sli.getBenefitAmountMap() were returning empty dictionaries. It was determined that the correct method to use was sli.getApprovedVoluntaryVolumeInfo, which was not being utilized.",
    "steps_taken": "A feature flag 'benefits-integration-ebn-updated-benefit-amount' was introduced to enable special handling for computing the benefit amount using the correct method. The flag was enabled for the specific company to resolve the issue. The engineering team applied the fix, and a test file was sent to the carrier for feedback.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-1014": {
    "key": "BENINTEG-1014",
    "issue": "The issue was that the company requested to add specific email addresses to the COBRA enrollment notifications for Cigna, but the system only supports the same emails for both COBRA and active enrollments.",
    "issue_summary": "The company requested to add specific email addresses for COBRA enrollment notifications, but the system only supports the same emails for both COBRA and active enrollments, leading to a request for confirmation on which email to use.",
    "rca": "The root cause of the issue was a misunderstanding of the system's capabilities. The system was working as expected, supporting the same emails for both COBRA and active enrollments, but the expectation was to have separate emails for COBRA notifications.",
    "steps_taken": "The steps taken included communicating with the admin to confirm which email address should be used for both COBRA and active enrollments. After several follow-ups, it was confirmed that the email 'eliginquiries@cigna.com' would be used for both. Eventually, the carrier updated their process, and the company no longer required the change, leading to the closure of the ticket.",
    "data_models": "[]"
  },
  "BENINTEG-1011": {
    "key": "BENINTEG-1011",
    "issue": "Correct forms are not regenerating for Principal's New Group Enrollment Submission, specifically the Group Policy Installation Form is missing.",
    "issue_summary": "The Group Policy Installation Form was missing from the New Group Enrollment Submission for Principal, despite attempts to regenerate the submission. This was due to the forms being updated only at the US level, while the system was set to use state-level forms.",
    "rca": "Ops had updated the master forms for Principal at the US level, but the system was configured to use state-level forms for Principal. This discrepancy led to the missing form in the New Group Enrollment Submission.",
    "steps_taken": "The state-specific forms for Principal were updated, and the forms copier tool was used to refresh the forms. This allowed the regenerate forms function to work as expected, and the forms were successfully submitted to the carrier.",
    "data_models": "[]"
  },
  "BENINTEG-999": {
    "key": "BENINTEG-999",
    "issue": "The issue was a request for EDI/API support for the carrier Coastal Administrative Services (CAS) for the group CommandLink. The request was to enable EDI for the medical line of coverage through the vendor OneKonnect.",
    "issue_summary": "The issue involved enabling EDI/API support for Coastal Administrative Services for the CommandLink group, specifically for the medical line of coverage. The process required coordination with the vendor OneKonnect and the carrier contact, which involved multiple follow-ups due to delayed responses.",
    "rca": "The root cause was the need for an EDI feed for the carrier Coastal Administrative Services (CAS) through the vendor OneKonnect. The process was delayed due to the carrier contact's slow response, which required multiple follow-ups.",
    "steps_taken": "The steps taken included reaching out to the vendor OneKonnect to initiate the EDI support request, following up with the carrier contact multiple times due to lack of response, and eventually receiving confirmation from the carrier contact and OneKonnect to proceed. The CAS carrier object was marked as eligible for EDI through OneKonnect, and the necessary approvals were obtained to enable the EDI feed.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-998": {
    "key": "BENINTEG-998",
    "issue": "Admin reported that a member's coverage was not active with Guardian, and a termination was incorrectly submitted for the member's Guardian coverage.",
    "issue_summary": "A member's coverage was not active with Guardian due to an incorrect termination submission for the member's Guardian coverage, caused by a setup issue on the PEO side.",
    "rca": "The issue was due to a setup problem on the PEO side, where a Noyo amendment was needed for the employee. Noyo had corrected coverage for all these employees on their side. The problem arose because plans provided by the same carrier but for different states were involved in an enrollment event, leading to separate transmissions to Noyo. This was a system limitation where Guardian (MN) and Guardian (CA) were treated as different entities in the system but were the same outside.",
    "steps_taken": "The steps taken to resolve the issue included sending a Noyo amendment for the employee. The member's coverage was manually updated with the carrier, and an amendment was sent on Noyo for the employee. Additionally, it was suggested to add a state check for these plans/CCLIs to avoid employees being available for multiple plans.",
    "data_models": "[InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-995": {
    "key": "BENINTEG-995",
    "issue": "Admin reported that employee forms are being emailed to the incorrect email address for the Prudential carrier.",
    "issue_summary": "The issue is that the system currently does not support sending enrollment changes to different email addresses for different lines of coverage under the same carrier, Prudential, which is causing forms to be sent to the wrong email address.",
    "rca": "The root cause of the issue is that the system only allows updating the email address for Prudential as a whole and does not support multiple email setups for different sets of line types for the same carrier. This limitation is a product enhancement requirement.",
    "steps_taken": "The immediate workaround was to add both email addresses in the system, so all line types are sent to both emails. However, this was not a viable solution as confirmed by Prudential. The admin requested to continue sending emails directly to her email address, and it was confirmed that the system was already configured to do so. A product enhancement ticket was created to address the feature request for routing by line of coverage.",
    "data_models": "[]"
  },
  "BENINTEG-994": {
    "key": "BENINTEG-994",
    "issue": "Termination forms for employee Joel Carusone and others were not generated for Principal and BCBS, causing a delay in notifying the broker and impacting multiple employees.",
    "issue_summary": "Termination forms for employee Joel Carusone and others were not generated due to a signature issue on the forms, affecting multiple employees and causing a delay in notifying the broker.",
    "rca": "The root cause of the issue was identified as a signature issue on the forms, which prevented the generation of termination forms for the employees.",
    "steps_taken": "The engineering team identified the signature issue on the forms and merged a fix. They used the following code snippets to debug and resolve the issue:\n\n```python\npa = PendingAction.objects.get(id=\"665ba997fc062851aecdd25f\")\ncarrierObj = pa.carrier.getCarrierObject()\ncaption,ft = carrierObj.getFormTypesOnEvent(pa.pendingActionGroup.event, pa.carrier, pa, False)\nft=ft[0]\nfields = ft.getFields(pa.company, pa.role.user_cache, pa.role,caption=caption,event=pa.pendingActionGroup.event,carrierObj=carrierObj,pendingAction=pa)\nsigs = ft.getSignatureAreas()[0]\nprint(fields)\nprint(sigs)\nprint(fields[sigs[\"key\"]])\nreturn pa\n```\n\n```python\npendingAction = PendingAction.objects.get(id=\"665ba997fc062851aecdd25f\")\ncompanyInsuranceInfo = CompanyInsuranceInfo.objects.get(company=pendingAction.company)\nevent = pendingAction.pendingActionGroup.event\ncarrierObject = pendingAction.carrier.getCarrierObject()\ncaption, formTypes = carrierObject.getFormTypesOnEvent(event, pendingAction.carrier, pendingAction, forceRegenerate=True)\nformType = formTypes[0]\nfiller = formType.getFiller(\nformType.formType(), caption, pendingAction.role, event, carrierObject, pendingAction\n)\nsignatureUrls = filler.fill_signature_fields()\nirt_s = event.insuranceRoleTransition.signatureUrl\nevent.signatureUrl = event.insuranceRoleTransition.signatureUrl\nevent.save()\nevent.reload()\nevent_s = event.signatureUrl\n\nprint(\"x\", event_s)\n\nreturn 0\n```\n\nThe issue was fixed, and forms were successfully generated for the affected employees.",
    "data_models": "[PendingAction, CompanyInsuranceInfo, TerminationEvent]"
  },
  "BENINTEG-993": {
    "key": "BENINTEG-993",
    "issue": "Admin reported that a member's coverage was not being reflected with Anthem due to a future termination date being incorrectly set in the Ideon Anthem information.",
    "issue_summary": "The issue was caused by a future termination date being sent to Ideon, which should only occur if the member is truly terminating coverage. This led to the member's coverage not being reflected with Anthem.",
    "rca": "The root cause of the issue was identified as a bug in the system where a termination date was being sent prematurely. There is a maximum number of days (60-90 days depending on the carrier) before which a termination can be sent, and this was not being adhered to, causing early termination of coverage.",
    "steps_taken": "A temporary fix was implemented by sending an updated payload to Vericred to remove the end date. Additionally, a product enhancement ticket was created to address the issue of sending termination dates prematurely. The team is working with Ideon and the carrier to reinstate the member's coverage and determine the root cause.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-979": {
    "key": "BENINTEG-979",
    "issue": "Roofr / Anthem COBRA letter didn't send due to a missing communication method for COBRA letters in the carrier configuration.",
    "issue_summary": "The COBRA letter for Roofr / Anthem was not sent because the communication method for COBRA letters was not configured for the carrier, resulting in the letter being stuck in 'Letter needs to be submitted to the carrier' status.",
    "rca": "The root cause of the issue was that the communication method for COBRA letters was not configured for the carrier Anthem. Specifically, there was no email address set up for the carrier, which is required to send COBRA letters. This was identified when the code to retrieve the communication method returned None, indicating that no method was configured.",
    "steps_taken": "The issue was identified by running a code snippet to check the communication method for COBRA letters, which returned None. It was determined that the email address was missing from the carrier configuration. A manual intervention was performed for the specific group to resolve the immediate issue. It was suggested to implement a background check to create a task for operations if the communication method is missing when setting up COBRA with a carrier.",
    "data_models": "[USBenefitsCarrier, CobraAdministratorLetter]"
  },
  "BENINTEG-978": {
    "key": "BENINTEG-978",
    "issue": "Automated forms for BCBS Michigan were not being sent to the correct enrollment email address, causing a delay in processing enrollments.",
    "issue_summary": "Automated forms intended for BCBS Michigan were not reaching the correct enrollment email address, instead being sent to customer email addresses. This issue was due to a misconfiguration or oversight in the email setup for carrier transmissions.",
    "rca": "The root cause was identified as a misconfiguration in the carrier metadata, where the correct enrollment email for BCBS Michigan was not set up properly. This was confirmed by checking the carrier configuration, which was updated on 10/23/23.",
    "steps_taken": "The issue was investigated by confirming the correct email address for BCBS Michigan enrollments, which is AccountServices@bcbsm.com. The carrier configuration was checked and confirmed to have been updated correctly. The issue was resolved by ensuring the correct email was used for future transmissions.",
    "data_models": "[]"
  },
  "BENINTEG-977": {
    "key": "BENINTEG-977",
    "issue": "The admin, Michele Shea, is not receiving enrollment emails for new hire events despite the system indicating that emails have been sent.",
    "issue_summary": "Emails for new hire events were not being sent to the admin, Michele Shea, due to a manual override marking tasks as complete, which gave the false impression that emails were sent.",
    "rca": "Emails were not sent out initially because a user manually marked the submit task as done, which overrode the pending action status. This led to the false impression that the emails were sent, but they were not due to the error 'OE_DEADLINE_NOT_PASSED'.",
    "steps_taken": "The issue was investigated by checking the carrier transmission details and confirming that the emails were not sent from the New Hire event. It was identified that a manual intervention marked the task as done, which was incorrect. The error 'OE_DEADLINE_NOT_PASSED' was identified as the reason for the emails not being sent.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-976": {
    "key": "BENINTEG-976",
    "issue": "Admin reported that an employee's COBRA coverage was incorrectly listed as terminated with the carrier.",
    "issue_summary": "The employee's COBRA coverage was terminated due to discrepancies between the plans listed in Noyo and Rippling, leading to incorrect plan changes.",
    "rca": "There was a difference in the plan information between Noyo and Rippling. The system sent a request to Noyo that included plan changes due to a diff check between the two systems, even though no actual plan changes were made by the employee.",
    "steps_taken": "Reviewed the member's COBRA transaction and confirmed the plan changes. Verified with Noyo that the employee was still in active coverage. Checked the payload sent to Noyo and identified that the system was modifying plans based on differences detected between Noyo and Rippling.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-974": {
    "key": "BENINTEG-974",
    "issue": "Pacific Adjusting & Claims Services LLC faced an issue with Noyo employee profile errors where the 1:1 mapping for employees was broken, causing termination transactions to be required for invalid employee profiles.",
    "issue_summary": "The issue involved broken 1:1 mapping for employees in the Noyo system, requiring termination transactions for invalid employee profiles.",
    "rca": "The root cause was identified as duplicate and wrongly mapped Noyo members, which needed to be deleted.",
    "steps_taken": "The engineering team identified the invalid group ID and deleted the duplicate Noyo members from Rippling. This allowed the amendments to be available for the employees, and the appropriate transactions were sent successfully.",
    "data_models": "[RoleWithCompany, NoyoMember]"
  },
  "BENINTEG-973": {
    "key": "BENINTEG-973",
    "issue": "Tunuva Technologies, Inc. needed a new Noyo Snapshot for a hire date update for employee Jason Strobell, but the necessary tool for Ops to perform this action was not available, creating a blocker.",
    "issue_summary": "The issue was that a new Noyo Snapshot was required for a hire date update, but the tool needed for Ops to send this snapshot was unavailable, causing a delay.",
    "rca": "The root cause was the unavailability of the tool required by Ops to send a new hire snapshot to Noyo. This was categorized under Noyo tooling issues.",
    "steps_taken": "The team coordinated to address the issue by developing and launching a new snapshot tool. Once the tool was available, a transaction was successfully sent to Noyo with the updated hire date, resolving the issue.",
    "data_models": "[]"
  },
  "BENINTEG-972": {
    "key": "BENINTEG-972",
    "issue": "The employer form is missing from the renewal packet for Decathlon America LLC with Kaiser WA, which is required to process the renewal effective 06/01/2024.",
    "issue_summary": "The employer form is not included in the renewal packet for Decathlon America LLC with Kaiser WA, causing a blocker for the renewal process effective 06/01/2024. The root cause is related to the configuration where the 'hasGroupRenewal' form is set to false for Kaiser WA.",
    "rca": "The issue was caused because the 'hasGroupRenewal' form was set to false for the carrier Kaiser WA, which resulted in the employer form not being included in the renewal packet. Previously, Kaiser WA accepted renewals without the employer form, but they have now changed their expectations, requiring the form.",
    "steps_taken": "The team decided to send the employer form for all groups during renewal, irrespective of whether there were changes in coverage or not, as the current system does not support conditional form sending. Changes were merged, and the carrier packet was regenerated to include the employer form.",
    "data_models": "[]"
  },
  "BENINTEG-971": {
    "key": "BENINTEG-971",
    "issue": "The number of hours worked per week for part-time employee Katharine Nason is incorrectly reflected as 40 hours in the system, whereas it should be updated to 32 hours as per the admin's request. This discrepancy affects the Unum forms for Short Term Disability, Long Term Disability, Life, and Voluntary Life coverages.",
    "issue_summary": "The system is reflecting 40 hours per week for part-time employee Katharine Nason instead of the correct 32 hours, affecting Unum forms for various coverages.",
    "rca": "The system is designed to fill 40 hours for part-time employees when the WeeklyHourRange is set to '30 or more'. This behavior has been consistent for the past year and is not due to any recent changes.",
    "steps_taken": "The weekly hours for the employee were updated to 32, which triggered a change in the effective annual salary. However, the system still fetched 40 hours due to the WeeklyHourRange setting. It was suggested to set the WeeklyHourRange to null to allow the form to reflect 32 hours, which requires coordination with the HRIS team.",
    "data_models": "[hris.models.job.Job]"
  },
  "BENINTEG-969": {
    "key": "BENINTEG-969",
    "issue": "The issue was that a demographic change form was generated when an employee changed their preferred name from 'Thomas' to 'Tom'. The form incorrectly reported the legal name 'Thomas' and checked the 'address change' box instead of the 'name change' box.",
    "issue_summary": "A demographic change form was incorrectly generated for a preferred name change instead of a legal name change, and the form had incorrect box checked for 'address change' instead of 'name change'.",
    "rca": "The root cause analysis revealed that the system was working as expected, but there was a misunderstanding. The employee had actually changed their legal name, not just the preferred name. The form mapping issue was identified as an operational oversight.",
    "steps_taken": "The issue was resolved by confirming that the legal name was changed, not the preferred name. The Ops team was involved to correct the form mapping to ensure the 'name change' box is checked appropriately in the future.",
    "data_models": "[]"
  },
  "BENINTEG-963": {
    "key": "BENINTEG-963",
    "issue": "Admin reported that two new hires did not have their enrollments submitted to Guardian via the API.",
    "issue_summary": "The issue was that the enrollments for two new hires were not submitted to Guardian via the API due to the system configuration not being set up to manage and generate forms at the time of the event.",
    "rca": "The root cause of the issue was that the event happened before Rippling was configured to manage and generate forms. Specifically, the form was generated on 05/29, but the companyInsuranceInfo setting indicated that forms should be sent if generated on or after 06/01.",
    "steps_taken": "The steps taken to resolve the issue included reviewing the group's API setup, confirming the system configuration, triggering the regeneration of forms after the correct date, and ensuring that a Noyo ID was generated for the member so that their enrollment could be submitted via the API.",
    "data_models": "[CompanyInsuranceInfo]"
  },
  "BENINTEG-960": {
    "key": "BENINTEG-960",
    "issue": "The customer's Ideon file feed with UHC remained active after they churned from Rippling, leading to erroneous reinstatements of employees and resulting in extra premiums of $14,750.22.",
    "issue_summary": "The Ideon file feed for a customer with UHC was not deactivated after the customer churned from Rippling, causing incorrect employee reinstatements and additional premium charges.",
    "rca": "When a group churns from Rippling, all data related to the vendor is deleted, including coverage period info. This is expected behavior to manage data for a single connection at a time. The group did not cancel their coverage with UHC in the Rippling system, leading to continued submissions to Ideon without an expiration date.",
    "steps_taken": "1. Checked the company debugger page and found no Ideon data. 2. Located the group in the Ideon portal and attempted to retrieve data using the 'Ideon UUID Lookup' in retool, but no data was returned. 3. Confirmed that the group's insurance expiration date for UHC was not altered upon churning. 4. Verified that Rippling does not send termination notifications to Ideon or other vendors like OneKonnect and Noyo. 5. Provided the missing coverage period data from the system logs.",
    "data_models": "[VericredCompanyCarrier, CompanyInsuranceInfo]"
  },
  "BENINTEG-958": {
    "key": "BENINTEG-958",
    "issue": "Rippling is passing a Benefit Effective date of 01/01/24 for Voluntary Life Benefit due to the company's renewal date, but MetLife expects the effective date to be based on EOI approval, which should be 06/01/2024.",
    "issue_summary": "The effective date for Voluntary Life Benefit is being incorrectly set to 01/01/2024 instead of the expected 06/01/2024 based on EOI approval, causing a discrepancy with MetLife's expectations.",
    "rca": "A product enhancement was required to address the issue of effective dates being set incorrectly for EOI approvals. The enhancement has been released.",
    "steps_taken": "The issue was tracked and linked to another ticket (BENINTEG-1249) for a larger feature request. The ticket was eventually closed as the feature was made live.",
    "data_models": "[]"
  },
  "BENINTEG-957": {
    "key": "BENINTEG-957",
    "issue": "Cancellation event for the group Ourotech/Pear Bio was not generated in the debugger, leading to an employee being enrolled in Aetna coverage despite the group cancelling their EDI connections.",
    "issue_summary": "The group Ourotech/Pear Bio did not have a cancellation event generated in the system, resulting in an employee being erroneously enrolled in Aetna coverage. The Ideon connections were expired, but the cancellation request was not properly generated.",
    "rca": "The issue was identified as a process gap rather than a bug. The cancellation event was not created due to a lack of proper process handling for the cancellation request.",
    "steps_taken": "A new Jira ticket (BENINTEG-1150) was created to address the process gap. No further action was needed for this specific instance as it was not related to a bug.",
    "data_models": "[]"
  },
  "BENINTEG-956": {
    "key": "BENINTEG-956",
    "issue": "Rippling employee was unable to select the correct Qualifying Life Event (QLE) date for their newborn's insurance enrollment, which was causing issues with the insurance coverage start date.",
    "issue_summary": "The employee faced an issue where the QLE event date for their newborn was not selectable as 4/12/2024, which was the actual date of birth. Instead, the system only allowed selecting 4/14/2024, causing potential coverage issues.",
    "rca": "There was an issue in sending the event date for a Rippling employee. The system was transmitting the incorrect event date of 4/14/2024 instead of the actual date of 4/12/2024. This was due to a misalignment in the event date setup for the QLE.",
    "steps_taken": "The steps taken to resolve the issue included overriding the event date to 4/12/2024 using the following code snippet:\n\n```python\n  event = EnrollmentEvent.get_or_none(id=\"663f0145061e990563bbf803\")\n  new_date = date(2024, 4, 12)\n  event.overrideEventDate(new_date)\n  event.regenerateForms()\n```\n\nAdditionally, the engineering team verified the event date update for the Kaiser pending action and marked the pending action as processed. They also performed the action for the pending action using the following code snippet:\n\n```python\n  role = \"6463ffa25d6e7df5c5ff20f9\"\n  evt  = EnrollmentEvent.objects.get(id=\"663f0145061e990563bbf803\")\n  pag = PendingActionGroup.objects.get(event = evt)\n  kaiserPa = PendingAction.objects.get(id=\"663f0642030e701900d91062\")\n  kaiserPa.state=\"PROCESSED\"\n  kaiserPa.save()\n```\n\nFinally, they confirmed that the correct data was sent for Guardian and sent the amendment for Kaiser.",
    "data_models": "[EnrollmentEvent, Member, PendingActionGroup, PendingAction]"
  },
  "BENINTEG-955": {
    "key": "BENINTEG-955",
    "issue": "Forms unavailable in Upcoming Events tab for terminated employees, preventing the generation of termination forms for most terminated employees.",
    "issue_summary": "Termination forms are not being generated for most terminated employees listed in the Upcoming Events tab due to missing data in the forms component.",
    "rca": "The root cause of the issue was related to missing data in the forms component, which prevented the generation of termination forms for terminated employees.",
    "steps_taken": "The issue was investigated by checking the PendingAction and InsuranceRoleTransition objects. A code snippet was used to retrieve and update the signature URL for the event. The issue was resolved by deploying a pull request, and forms were regenerated from the Forms tab for affected employees.",
    "data_models": "[PendingAction, InsuranceRoleTransition]"
  },
  "BENINTEG-953": {
    "key": "BENINTEG-953",
    "issue": "Pacific Adjusting & Claims Services LLC / Noyo mapping gives error causing none of the employees for this new PEO customer to be properly sent to the carrier.",
    "issue_summary": "The issue was that the Noyo plan mapping for Pacific Adjusting & Claims Services LLC was incorrect, leading to errors in employee enrollments being sent to the carrier.",
    "rca": "The client joined PEO, previously set up insurance, and then cancelled it. As a result, the Noyo company carrier and Noyo company plan info were created as per the old group ID, causing the mapping to break.",
    "steps_taken": "The steps taken to resolve the issue included identifying the incorrect plan mapping due to the old group ID, deleting the existing NoyoCompanyPlanInfo and NoyoCompanyCarrier objects, and re-ingesting the PEO group to Noyo with the correct information. Code snippets used included:\n\n```python\nplan_infos = NoyoCompanyPlanInfo.objects.filter(company=company)\nfor plan_info in plan_infos:\n    plan_info.delete()\nreturn\n```\n\n```python\ncompany = Company.get_or_none(id=\"636955d888fb94646b3c5eef\")\nncc = NoyoCompanyCarrier.get_or_none(company=company)\nncc.delete()\nreturn\n```\n\n```python\ncompany = Company.get_or_none(id=\"636955d888fb94646b3c5eef\")\nevent = CompanyEnrollmentEvent.get_or_none(id='661ee2194a3a2fd67c4ae141')\ningestPeoGroupToNoyo(event, forceIngest=True)\nreturn\n```",
    "data_models": "[NoyoCompanyPlanInfo, NoyoCompanyCarrier, Company, CompanyEnrollmentEvent]"
  },
  "BENINTEG-952": {
    "key": "BENINTEG-952",
    "issue": "The effective date for a Qualifying Life Event (QLE) related to an employee's newborn was incorrectly sent to the carrier Aetna as February 25th instead of the correct date, January 26th, causing additional medical bills for the employee.",
    "issue_summary": "The QLE effective date for an employee's newborn was incorrectly communicated to Aetna, leading to billing issues. The effective date was set to February 25th instead of January 26th, the actual birth date.",
    "rca": "The root cause was identified as a manual data entry error where the effective date sent to the carrier was incorrect. The system had the correct effective date of January 26th, but due to a 60-day lookback policy by Aetna, the effective date was adjusted to February 25th without intervention.",
    "steps_taken": "The team verified that the Rippling system had the correct effective date of January 26th. A script was run to confirm the coverage data. A thread was started with Ideon to investigate why the incorrect date was sent to Aetna. It was found that the QLE was not received by Ideon until April 26th, leading to the effective date being set to February 25th due to Aetna's policy. The issue was escalated to the CX team for further resolution.",
    "data_models": "[RoleWithCompany]"
  },
  "BENINTEG-951": {
    "key": "BENINTEG-951",
    "issue": "The user was unable to access the Insurance Debugger for a specific company ID, which was preventing them from retrieving necessary insurance information such as TAM, Broker, Lines of coverage, and other details.",
    "issue_summary": "The user faced an issue accessing the Insurance Debugger for company ID: 654e8dbccc26b254c3f043c1, which was needed to retrieve specific insurance details. The root cause was not replicable.",
    "rca": "The root cause analysis indicated that the issue was deferred as it was unable to be replicated.",
    "steps_taken": "The task was changed to a 'Customer Task' and the component 'Ideon' was selected. The issue was eventually resolved as the user confirmed they could access the Insurance Debugger and retrieve the needed information.",
    "data_models": "[]"
  },
  "BENINTEG-945": {
    "key": "BENINTEG-945",
    "issue": "Incorrect hours worked being populated onto enrollment form for employees Davin Parish & David Ian Valencia, causing denial of enrollment by the carrier Guardian.",
    "issue_summary": "The enrollment forms for Guardian were showing incorrect hours worked (19 hours) for employees who transitioned from part-time to full-time, preventing their enrollment.",
    "rca": "The root cause was identified as the weekly hours not being updated correctly in the job profile after transitioning from part-time to full-time. The logic for computing weekly hours was not accounting for this transition, leading to the incorrect hours being populated on the forms.",
    "steps_taken": "The weekly hours in the job profile were set to None to ensure the correct hours (40) are returned for full-time roles. This was done using the following code snippet:\n\n```python\nids= [\"5eebb03d1a9ca4437ec1e7a4\", \"5eebbe1e82a6a40a1913964f\", \"5eebbc1582a6a40a191369e8\"]\nfor role in RoleWithCompany.objects(id__in=ids):\n    role.currentJob.weeklyHours=None\n    role.currentJob.save()\nreturn\n```\n\nThe forms were then regenerated to reflect the updated working hours.",
    "data_models": "[RoleWithCompany, Job]"
  },
  "BENINTEG-944": {
    "key": "BENINTEG-944",
    "issue": "Forms and tasks related to insurance enrollment for employee John Fulan at Two Chairs were stuck in 'todo' status since 2022, causing delays in processing.",
    "issue_summary": "Forms and tasks for employee John Fulan at Two Chairs were stuck in 'todo' status due to previous PendingActions being in a processed state, leading to UNSUBMITTED_PRIOR_FORMS.",
    "rca": "The issue occurred because Rippling was not managing the forms for the group when PendingActions associated with the New Hire Enrollment event were created in 2022. Later, when Rippling started managing forms for the group, there were prior PendingActions in a processed state, resulting in UNSUBMITTED_PRIOR_FORMS, which prevented the submission of forms for new PendingActions.",
    "steps_taken": "The issue was identified as similar to a linked ticket where the solution was discussed. It was determined that no operational action was needed at the moment, and the ticket was closed as it was redundant and no group was blocked.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-943": {
    "key": "BENINTEG-943",
    "issue": "Kaiser CO plan is set up in the system but does not show in the company debugger, causing issues with form sending.",
    "issue_summary": "The Kaiser CO plan is not appearing in the company debugger, which is preventing forms from being sent to the appropriate carriers.",
    "rca": "The issue with the Kaiser CO plan not showing in the company debugger is a display issue and does not indicate problems with the underlying models. The form submission issue is unrelated to the display problem and was due to a bug in the system.",
    "steps_taken": "A separate ticket was filed to address the display issue. For the form submission issue, a bug fix was raised and merged, ensuring that forms will be sent to the carrier going forward. The following code snippets were used to debug and fix the issue:\n\n```python\nccli = InsuranceCompanyCarrierLineInfo.get_or_none(id=\"664fc9f4d679f53247fe1d9c\")\nreturn InsuranceCompanyPlanInfo.get_or_none(companyCarrierLineInfo=ccli)\n```\n\n```python\npa = PendingAction.objects.get(id=\"66620bfb513ca5f22e1f303a\")\ncarrierObject = pa.carrier.getCarrierObject()\ncommunicationDetails = carrierObject.getCommunicationDetails(pa)\nreturn communicationDetails.emailAddress()\n```",
    "data_models": "[InsuranceCompanyCarrierLineInfo, InsuranceCompanyPlanInfo, PendingAction]"
  },
  "BENINTEG-941": {
    "key": "BENINTEG-941",
    "issue": "The system is not sending forms for demographic changes to PFG, despite dual communication being turned on.",
    "issue_summary": "Forms are not being sent due to prior unsent forms in the New Hire Enrollment event of the employee. The system checks for all PendingActions for the given company and carrier whose event is before the current PendingAction event and is in PROCESSED state. If there exists one, it fails the form sending for the current PendingAction with reason UNSUBMITTED_PRIOR_FORMS.",
    "rca": "The issue arises because the system checks PendingActions of all previous enrollment events. For groups where Rippling was not managing forms until recently, all PendingActions will be in Processed state. When the group wants Rippling to manage forms, only PendingActions created in the last 365 days are processed. If there exists any PendingAction created prior to 1 year, it won't be processed, leading to failure of sending forms for current PendingActions.",
    "steps_taken": "To resolve the issue, the proposed solution was to mark all PendingActions created before 1 year as active when the group chooses Rippling to manage forms. Additionally, only past 1 year of PendingActions should be checked for UNSUBMITTED_PRIOR_FORMS. To unblock the group, all PendingActions created 1 year from today were marked as Active without sending any forms to carriers. Code snippet used: `pa_count = PendingAction.objects.filter(company=\"61551a0f462b9a6e562644b8\", createdAt__lte=pst_today() - timedelta(days=365)).count()`.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-940": {
    "key": "BENINTEG-940",
    "issue": "COBRA Enrollment form for Shannon Arnold does not display the effective date, despite the employee submitting COBRA with an effective date of 7/1.",
    "issue_summary": "The COBRA Enrollment form for an employee did not display the effective date due to incorrect form mapping, where the effective date field was not correctly mapped to the COBRA_EffectiveDate.",
    "rca": "The root cause of the issue was identified as a form mapping error. The effective date field in the COBRA Enrollment form was incorrectly mapped to OEPlan_EffectiveDate instead of COBRA_EffectiveDate. This mapping discrepancy led to the effective date not being displayed on the form.",
    "steps_taken": "The form mapping was updated to correctly map the effective date field to COBRA_EffectiveDate for the COBRA Enrollment forms. This was done for the carrier Sunlife and later extended to Cigna (OH). The form copier was run to apply the changes, and the form was regenerated to verify the fix.",
    "data_models": "[PendingAction]"
  },
  "BENINTEG-937": {
    "key": "BENINTEG-937",
    "issue": "Admin reported that the Meritain Health QLE forms for members Kylie Daly and Nick Hatley were not generated.",
    "issue_summary": "The Meritain Health QLE forms for members were not generated due to incorrect naming of the form in the Box storage.",
    "rca": "The root cause of the issue was a manual data entry error where the form name in Box was incorrect. The expected form name was 'Meritain Health_UT_Qualifying Life Event Add', but it was named 'Meritain Health_UT_Qualifying Life Event'.",
    "steps_taken": "The form name in Box was corrected to 'Meritain Health_UT_Qualifying Life Event Add'. The form copier was then run to import the corrected form, and the form was successfully regenerated. The following code snippet was used to debug the issue:\n\n```python\npa = PendingAction.objects.get(id=\"664baf259ea75e9459ec3a01\")\nevent = pa.pendingActionGroup.event\ncarrierObject = pa.carrier.getCarrierObject()\ncaption, formTypes = carrierObject.getFormTypesOnEvent(event, pa.carrier, pa, True)\nformType = formTypes[0]\nreturn formType.suffix(checkQuarter=False)\n```",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-933": {
    "key": "BENINTEG-933",
    "issue": "Admin reported that employees are being added to the incorrect billing group due to the API, causing enrollment elections to be sent under the old billing group.",
    "issue_summary": "Employees were added to the incorrect billing group because the carrier classification was not set up for the group until after the enrollment was sent, leading to incorrect billing group assignments.",
    "rca": "The root cause was that the carrier classification was not set up for the group until after the enrollment was sent. As a result, the system sent empty data for the carrier config in the payload to Noyo, and Noyo might have picked up the carrier classification from previous coverage.",
    "steps_taken": "An amendment was pushed to correct the billing group classification. A list of employees needing amendments was generated using the following code snippet:\n\n```python\n  ees = EnrollmentEvent.objects.filter(company=\"6508d60e0bb92e8ea26ea510\", status__ne=\"INIT\", reason = \"OPEN_ENROLLMENT\", finalizedOn__lte=date(2024,5,1))\n  for ee in ees:\n    print(ee.role.user_cache.fullName())\n  return 0\n```\n\nThe amendment was sent for all employees enrolled before 2024/5/1.",
    "data_models": "[EnrollmentEvent]"
  },
  "BENINTEG-932": {
    "key": "BENINTEG-932",
    "issue": "SEMAFOR INC's member, Karina Tsui, faced an issue where the COBRA API transaction was transmitted incorrectly, resulting in the termination of her dental and vision COBRA coverage.",
    "issue_summary": "The COBRA API transaction for SEMAFOR INC's member, Karina Tsui, was transmitted incorrectly, leading to the termination of her dental and vision COBRA coverage. The system was working as expected, but there was a wrong expectation regarding the transaction.",
    "rca": "The root cause analysis indicates that the issue was categorized as an Ops Issue with a subcategory of 'Wrong Expectation - System working as expected'. The system functioned correctly, but there was a misunderstanding or incorrect expectation regarding the COBRA API transaction.",
    "steps_taken": "Attempts were made to push through an amendment, but it failed due to limitations in the ability to process these correctly. A request was sent to Noyo, but it was rejected with an error indicating the employee was already enrolled in the dental plan via individual enrollment. It was suggested to get the issue fixed on Noyo's end by asking them to talk to the carrier to reinstate the employee and sync their system with the carrier.",
    "data_models": "[]"
  },
  "BENINTEG-928": {
    "key": "BENINTEG-928",
    "issue": "Admin reported that the member's dependents are missing from coverage for EE Cobra Coverage.",
    "issue_summary": "The issue was that the member's dependents were missing from coverage due to the enrollment data not being sent to the carrier because the role start date was missing.",
    "rca": "The root cause of the issue was that the role start date for the employee was missing, which prevented the enrollment data from being sent to the carrier.",
    "steps_taken": "The role start date was updated for the employee, which allowed the enrollment data to be sent to the carrier. The admin confirmed the original start date, and the role object was updated accordingly. The request was then successfully sent to Noyo.",
    "data_models": "[RoleWithCompany]"
  },
  "BENINTEG-927": {
    "key": "BENINTEG-927",
    "issue": "Enrollment event for Navid Kouchaki Pour at Anysphere Inc did not transmit when completed on 11/22/2023, causing a delay until 2/23/24.",
    "issue_summary": "The enrollment event for Navid Kouchaki Pour was completed on 11/22/2023 but did not transmit until 2/23/24 due to a missing SSN.",
    "rca": "The pending action was not processed because the SSN was missing for the employee Navid Kouchaki Pour. This missing data prevented the transmission of the enrollment event.",
    "steps_taken": "The SSN was updated for the employee, which allowed the pending action to be processed and the enrollment event to be transmitted.",
    "data_models": "[PendingAction]"
  },
  "BENINTEG-926": {
    "key": "BENINTEG-926",
    "issue": "Rippling is passing a Benefit Effective date of 01/01/24 due to the company's renewal date, but MetLife expects the effective date to be based on the EOI approval, which should be 02/01/2024.",
    "issue_summary": "The effective date for Voluntary Life Benefit is being incorrectly set to 01/01/2024 instead of 02/01/2024 as expected by MetLife, due to the company's renewal date being used instead of the EOI approval date.",
    "rca": "The issue is categorized as a product enhancement. The feature to handle effective dates based on EOI approval has been deployed, but the current implementation still defaults to using the company's renewal date, causing a mismatch with MetLife's expectations.",
    "steps_taken": "The issue was discussed among team members, and it was suggested that the effective date should be sent as a separate field to EBN for proper mapping. The discussion involved checking with OneKonnect and Ideon for similar issues. The task was eventually assigned back to engineering for further investigation and resolution.",
    "data_models": "No specific data models were mentioned in the ticket."
  },
  "BENINTEG-920": {
    "key": "BENINTEG-920",
    "issue": "Al Warren Oil's self-administered plans (Life, Disability, Accident, and Critical Illness) are not included on the EDI file feed, while Medical, Dental, and Vision are expected to be included. The issue is whether it's possible to proceed with the file feed for Medical, Dental, and Vision without including the self-administered plans.",
    "issue_summary": "The issue is that self-administered plans are not included on the EDI file feed, and there is a concern about whether Medical, Dental, and Vision can be included without the self-administered plans.",
    "rca": "The root cause is a feature gap in the current system, which assumes all lines with a carrier are on the same integration format. This gap prevents the segregation of lines at one carrier, leading to the exclusion of self-administered plans from the EDI file feed.",
    "steps_taken": "The team confirmed that the carrier can ignore the ancillary plans, and EBN can filter them out. It was determined that there are no downstream impacts other than the standard risks associated with the employer managing self-bill/admin. The decision was made to move forward with including Medical, Dental, and Vision on the file feed, excluding the self-billed plans.",
    "data_models": "[]"
  },
  "BENINTEG-919": {
    "key": "BENINTEG-919",
    "issue": "SEO Werkz, LLC's carrier, Equitable, is receiving invalid benefit amounts for salary-dependent coverages (Basic Life / STD / LTD) due to salary updates after the renewal date.",
    "issue_summary": "Invalid benefit amounts are being sent to Equitable for salary-dependent coverages because the salary redetermination settings are set to 'At Renewal', and there were salary updates after the 01/01/2024 renewal.",
    "rca": "The issue was caused by the salary redetermination settings being set to 'At Renewal', which did not account for salary updates that occurred after the renewal date, leading to incorrect benefit amounts being sent.",
    "steps_taken": "The updated salary calculation for the group was enabled to ensure that salaries are sent as per the redetermination period. This adjustment was made to align with the settings and ensure correct data transmission to EBN.",
    "data_models": "[]"
  },
  "BENINTEG-912": {
    "key": "BENINTEG-912",
    "issue": "The enrollment transactions were blocked because the dependent (DEP) spouse's address needed to be updated to reflect the employee's (EE) address in the Rippling system.",
    "issue_summary": "The issue was that the DEP spouse's address was not updated in Rippling, causing blocked transactions with Noyo - Ideon. The DEP spouse had relocated to the US to join the EE, and the address needed to be updated to unblock the transactions.",
    "rca": "The root cause of the issue was a data mapping problem that got auto-resolved upon retrying the transaction.",
    "steps_taken": "The steps taken to resolve the issue included confirming the correct address with the Group Admin/EE, updating the DEP spouse's address in the system to reflect the EE's address, and retrying the transactions, which then sent successfully.",
    "data_models": "[]"
  },
  "BENINTEG-910": {
    "key": "BENINTEG-910",
    "issue": "The OE forms generated for Elevate Community Services are not populating employee signatures, affecting multiple employees and causing a high business impact.",
    "issue_summary": "OE forms for Elevate Community Services are missing employee signatures due to system behavior where signatures are not populated for auto-enrolled employees.",
    "rca": "The system is working as expected; employee signatures do not populate on forms for events where employees are auto-enrolled. This has been the system behavior for the past three years.",
    "steps_taken": "The issue was triaged and confirmed as expected behavior. Communication was made to the admin to clarify that employee signatures will not populate for passive enrollments. The ticket was closed after confirming the system behavior with the admin.",
    "data_models": "[]"
  },
  "BENINTEG-906": {
    "key": "BENINTEG-906",
    "issue": "Dataset is blocked and not passing for Rehab For All's Mutual of Omaha and UHC connections.",
    "issue_summary": "The dataset for Rehab For All's Mutual of Omaha and United Healthcare connections was blocked and not passing, causing a disruption in data transmission.",
    "rca": "The issue was related to visibility in the EBN component, but it appears to have been resolved as the dataset is now passing according to operations.",
    "steps_taken": "The issue was reviewed, and it was confirmed that the dataset is now passing, allowing the ticket to be closed.",
    "data_models": "[]"
  },
  "BENINTEG-897": {
    "key": "BENINTEG-897",
    "issue": "The system is pulling incorrect group ID information for the employee's insurance forms. The group ID for Principle is supposed to be 1160440-10001, but the forms are pulling 1129720-10001 instead. This discrepancy is causing issues with the forms not reflecting the correct group ID.",
    "issue_summary": "The insurance forms are pulling the incorrect group ID, 1129720-10001, instead of the correct group ID, 1160440-10001, for the employee's insurance information.",
    "rca": "The root cause analysis revealed that the system was configured to use the group ID 1129720-10001, which was the expected configuration. The system was working as expected based on the current configuration, but the expectation was different from what was configured.",
    "steps_taken": "The forms were refreshed to see if the issue could be resolved. Further investigation was requested to update the backend information to reflect the correct group ID that is shown in the app.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [CompanyInsuranceInfo, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-887": {
    "key": "BENINTEG-887",
    "issue": "Transactions for Whalar group were blocked and not passing through to Noyo. Two transactions had server errors, and one transaction was missing address information.",
    "issue_summary": "The Whalar group faced issues with blocked transactions in the Noyo Snapshot API integration. Two transactions encountered server errors, and one transaction was due to missing address information, which was required.",
    "rca": "The root cause analysis revealed that there was an incorrect validation on Rippling's side, which prevented sending address information if it was international, even though it was a required field. Additionally, there were duplicate employee profiles causing issues, and Noyo only supports US addresses, which affected a dependent's coverage.",
    "steps_taken": "1. Reached out to Noyo to unblock transactions. 2. Identified incorrect validation logic for international addresses and duplicate employee profiles. 3. Communicated with Noyo to confirm issues and potential solutions. 4. Suggested sending US address for dependent coverage as a workaround.",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-886": {
    "key": "BENINTEG-886",
    "issue": "Two transactions for Riot Blockchain were blocked due to a VericredApiError with a 422 status code, indicating that the effective date for the resource is outside the allowable range.",
    "issue_summary": "The issue involves blocked transactions for Riot Blockchain due to an error from Vericred indicating that the effective date for the resource is outside the allowable range. This was caused by an incorrect setup where the carrier classification had a missing Vericred effective date.",
    "rca": "The root cause of the issue was an incorrect setup where the carrier classification had a missing Vericred effective date. This resulted in the system falling back to the earliest SubscriberLineInfo's effective date, which was not within the allowable range.",
    "steps_taken": "The team reached out to Vericred for input and identified that the issue was due to a missing Vericred effective date in the carrier classification setup. The suggestion was to update the effective date to resolve the issue. The engineering team was informed to check the setup and ensure the correct effective date is configured.",
    "data_models": "[CarrierClassification, SubscriberLineInfo]"
  },
  "BENINTEG-885": {
    "key": "BENINTEG-885",
    "issue": "The Open Enrollment (OE) transaction for an employee, Legna Oliveras Rivera, was blocked due to discrepancies in data being sent to Ideon via Vericred. The discrepancies included issues with the earnings effective date and phone numbers, causing the transaction to be halted.",
    "issue_summary": "The OE transaction for Legna Oliveras Rivera was blocked due to discrepancies in the data sent to Ideon, specifically related to the earnings effective date and phone numbers.",
    "rca": "The blocked transaction was automatically resolved as per the information in the Slack thread. The discrepancies were related to the earnings effective date and phone numbers, which were resolved automatically when they were no longer present in the census data.",
    "steps_taken": "Operations reviewed the error message and requested engineering to confirm the issue. The discrepancies were automatically resolved as they were no longer present in the census data pulled on subsequent dates.",
    "data_models": "No specific data models were mentioned in the ticket for debugging and fixing the issue."
  },
  "BENINTEG-883": {
    "key": "BENINTEG-883",
    "issue": "Transactions to Ideon were blocked due to a TypeError: unsupported operand type(s) for -: 'NoneType' and 'relativedelta'.",
    "issue_summary": "Transactions to Ideon for Phaedon, LLC were blocked due to a TypeError caused by a NoneType operand in a date calculation.",
    "rca": "The issue was a known problem that resolved itself when the Vericred connection was moved to production. The error was due to not calculating the pendingAction Date, which was causing the TypeError.",
    "steps_taken": "The issue resolved itself when the company's Vericred connection went to production on July 3rd. No further action was required from engineering as the pending actions were processed automatically.",
    "data_models": "[PendingAction]"
  },
  "BENINTEG-882": {
    "key": "BENINTEG-882",
    "issue": "The issue was a request to initiate the EBN portion of the EDI for a customer's Unum carrier, but there was confusion about the routing as it was initially set to be routed through Noyo, which was not desired.",
    "issue_summary": "The request was to transition the Unum carrier connection to EBN instead of Noyo, as the client was not eligible for Noyo. The issue was due to a misrouting of the connection setup.",
    "rca": "The root cause was related to documentation and tooling usage, where operations were redirected to use Retool for self-service, but there was confusion in the process, leading to the request being brought to engineering's attention.",
    "steps_taken": "The steps taken included verifying the migration steps in the documentation, attempting to migrate to OneKonnect (OK), and confirming the successful setup with OneKonnect despite an initial error. The issue was resolved by ensuring the Unum project was effective with OneKonnect as of 06/14/2024.",
    "data_models": "[]"
  },
  "BENINTEG-875": {
    "key": "BENINTEG-875",
    "issue": "COBRA transactions for a group were sent to Noyo in the wrong order, causing processing errors. The termination transactions were not sent before the COBRA transactions, leading to COBRA transactions not being processed.",
    "issue_summary": "COBRA transactions were sent to Noyo before termination transactions, causing errors in processing. This resulted in the inability to send amendments for employees' COBRA coverage.",
    "rca": "The root cause was identified as the COBRA transactions being sent in the wrong order, specifically before the termination transactions. This led to the COBRA transactions not being processed by Noyo.",
    "steps_taken": "The team met with an internal Noyo API expert to address the issue. They attempted to resend the COBRA initiation for one employee, Kimberly, and monitored its processing status. Once it was confirmed to be active, similar actions were taken for the remaining employees. The process involved waiting for Noyo to process the transactions and ensuring that the COBRA enrollment was completed.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-874": {
    "key": "BENINTEG-874",
    "issue": "COBRA transactions for a group were sent in the wrong order, causing errors. Specifically, COBRA transactions were sent to Noyo before a termination transaction, resulting in the COBRA transactions not being processed.",
    "issue_summary": "COBRA transactions were sent to Noyo before a termination transaction, causing processing errors. The issue was initially thought to be related to Noyo but was actually a Vericred payload.",
    "rca": "The root cause was identified as a miscommunication where the COBRA transactions were sent in the wrong order. The ticket initially indicated the issue was with Noyo, but it was actually related to a Vericred payload.",
    "steps_taken": "The team investigated the issue and confirmed that the COBRA transactions were sent via Vericred, not Noyo. It was found that no further action was needed for Bill Eibon as the error was on the reporting side. The issue was resolved by confirming the correct transmission path and closing the ticket.",
    "data_models": "[]"
  },
  "BENINTEG-872": {
    "key": "BENINTEG-872",
    "issue": "Roofr / Wrong documentation sent to Anthem to report COBRA status update. The group should have been changed from CalCOBRA to Federal COBRA as of 01/01/2024 with Anthem, but the incorrect documentation was sent, preventing the change from being processed.",
    "issue_summary": "The issue was that the wrong documentation was sent to Anthem to update the COBRA status from CalCOBRA to Federal COBRA, which was not processed due to incorrect communication method.",
    "rca": "The root cause analysis indicates that the issue is a duplicate of another ticket (BENINTEG-979) where the same problem is addressed. The incorrect way of informing Anthem about the COBRA change led to the issue.",
    "steps_taken": "The issue was referred to the Benefits Marketplace team for investigation. It was later determined that no action was needed as the issue was addressed in a separate JIRA ticket.",
    "data_models": "[]"
  },
  "BENINTEG-871": {
    "key": "BENINTEG-871",
    "issue": "The issue was a request to update the COBRA form contact email address for a specific group on EDI to include michelle_cloud@uhc.com.",
    "issue_summary": "The issue involved updating the COBRA form contact email address for a specific group to include a new email address, michelle_cloud@uhc.com, but there was confusion about whether this change could be applied at the group level or if it would affect all groups under the carrier.",
    "rca": "The root cause was identified as a need to add a custom email address for communication, which applies to both COBRA and non-COBRA forms. The confusion arose because the request was initially thought to require a carrier-wide change, but it was later clarified that it could be configured for just the specific group.",
    "steps_taken": "The issue was initially discussed and clarified through comments. It was determined that the email configuration could be applied just for the specific group's dual-communicated enrollments. The task was then assigned to the Integrations team, and the email address was successfully added for the group.",
    "data_models": "[]"
  },
  "BENINTEG-869": {
    "key": "BENINTEG-869",
    "issue": "Admin is receiving approval emails they should not be according to senior support considering they have file feed set up for these communications. This has caused confusion about whether individual approvals are still being sent via the file feed connection.",
    "issue_summary": "Admin is surprised to receive approval emails despite having a file feed set up, leading to doubts about the file feed's functionality. The root cause was identified as an override allowing forms to be sent for COBRA even if EDI is active.",
    "rca": "There is an override in place that allows forms to be sent for COBRA events even if the EDI feed is active. This override was identified in the PendingAction model, where forms were being sent out specifically for COBRA events.",
    "steps_taken": "The issue was investigated by verifying carrier transmissions and viewing forms in the EE debugger. It was confirmed that the file feed was set up correctly. The investigation revealed an override in the PendingAction model that was causing forms to be sent for COBRA events. The override was identified through the object history of the PendingAction model.",
    "data_models": "[PendingAction]"
  },
  "BENINTEG-868": {
    "key": "BENINTEG-868",
    "issue": "Admin reported that two new hires did not have their enrollments submitted to Cigna via the EDI, specifically for COBRA dental coverage.",
    "issue_summary": "The issue was that COBRA dental coverage for a new hire was not submitted to Cigna due to a future termination date being incorrectly listed in the transmission data.",
    "rca": "The root cause was identified as a bug in the Vericred integration where an end date was being sent out even when it was not necessary for employees maintaining COBRA coverage for one of their coverages.",
    "steps_taken": "The issue was resolved by removing the end date from the dental coverage in the JSON data sent to Vericred. The updated JSON was posted via Retool, and it was confirmed that the data on Vericred no longer had an end date for dental coverage.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-867": {
    "key": "BENINTEG-867",
    "issue": "Swift Media Entertainment Incorporated's Unum transactions are only being sent by amendment, and Pending Actions are not passing through automatically, resulting in errors.",
    "issue_summary": "Unum enrollment transactions for Swift Media Entertainment Incorporated are only successful when sent via amendment due to errors in plan mapping, causing Pending Actions to fail automatically.",
    "rca": "The system is working as expected, but a new issue was introduced by operations around plan mapping. Noyo is throwing an error due to incorrect or missing plan mappings, which is causing the transactions to fail.",
    "steps_taken": "The carrier connections team deleted the old mappings and remapped them. They confirmed that the Unum divisions in settings were not set up by them and looked standard. The team identified a blocked transaction for the event and confirmed that Noyo setup tasks are not needed if mappings exist. The issue was resolved after confirming the blocked transaction and ensuring correct mappings.",
    "data_models": "[PendingAction, PendingActionGroup]"
  },
  "BENINTEG-865": {
    "key": "BENINTEG-865",
    "issue": "Ankler Media Inc. employee Elaine Low's New Hire Enrollment event did not result in a form being sent to the carrier. There was no carrier connection at the time, and it is not indicated that a form was sent.",
    "issue_summary": "The New Hire Enrollment event for Elaine Low at Ankler Media Inc. did not trigger a form to be sent to the carrier due to a blocked transaction that was later archived, marking the pending action as active without any communication to the system.",
    "rca": "The root cause of the issue was a blocked transaction related to the Beam carrier, which was archived by an Ops team member 7 months later. This archival led to the pending action being marked as active, but no communication was sent to the system. The blocked transaction was due to the inability to find a matching Noyo plan mapping information for the Rippling plan 'Beam SmartPremium Select 1500-1500', as the company carrier plan info was not eligible for Noyo.",
    "steps_taken": "The investigation revealed that the blocked transaction was due to a missing Noyo plan mapping. The Ops team was advised to verify or update the Noyo plan mappings for the Rippling plan. The archival of the blocked transaction by Paige led to the pending action being marked as active, but no further communication was initiated.",
    "data_models": "[NoyoCompanyPlanInfo, InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-862": {
    "key": "BENINTEG-862",
    "issue": "Beam reached out regarding a missing section on the Universal Application form related to denoting the desired vision frequency. Currently, there is no data element to map this field, impacting over 25 new group enrollments each month. Additionally, Delta Dental TX requires a data element to capture the 'Work Location' of employees, which is also missing.",
    "issue_summary": "The issue is the absence of data elements to map the desired vision frequency for Beam's Universal Application form and to capture the 'Work Location' for Delta Dental TX, affecting a significant number of enrollments.",
    "rca": "The root cause is the lack of specific data elements in the system to capture and map the required fields for Beam's vision plans and Delta Dental TX's work location requirement.",
    "steps_taken": "The request is to create new data elements specifically for Beam to capture the vision plan options (VSP 1, 2, 3, and 4) and another data element to capture the 'Work Location' from employees' profiles.",
    "data_models": "[]"
  },
  "BENINTEG-857": {
    "key": "BENINTEG-857",
    "issue": "Form didn't send for Greg Marsh's Anthem enrollment because the carrier connection was still in setup, leading to a missed enrollment.",
    "issue_summary": "Greg Marsh's Anthem enrollment form didn't send due to the carrier connection being in 'initial' status, causing a missed enrollment.",
    "rca": "The system behaved as per configuration. The Vericred Company Carrier (VCC) was created on May 22nd with dual communication enabled, but the affected employees had their data sent to Vericred via API on May 21st when dual communication was off. This explains why emails were not sent.",
    "steps_taken": "Investigated the timeline of VCC creation and dual communication settings. Confirmed that dual communication was not on when the affected employees were onboarded. Verified that the employee onboarded on May 24th was fine, correlating with dual communication being on. Closed the issue after confirming the setup was correct post-May 22nd.",
    "data_models": "[Vericred Company Carrier]"
  },
  "BENINTEG-856": {
    "key": "BENINTEG-856",
    "issue": "The snapshot transaction for employee Alexandra Mandell is blocked due to missing active coverages for vision and dental, preventing termination at Guardian.",
    "issue_summary": "The snapshot transaction for employee Alexandra Mandell is blocked because Noyo is displaying active coverage for vision and dental, which the employee had waived, causing a discrepancy.",
    "rca": "There was a data issue on Noyo's side where they incorrectly showed active coverage for vision and dental for employee Alexandra Mandell, despite these coverages being waived since 2022. This discrepancy led to the snapshot being blocked.",
    "steps_taken": "The team confirmed that the employee should not show as active and that the snapshot needs to include termination for vision and dental. They communicated with Noyo to address the data issue, as the system was behaving as expected on Rippling's side. It was decided that Noyo should make a manual change to unblock the transaction without engineering intervention.",
    "data_models": "[PendingAction]"
  },
  "BENINTEG-855": {
    "key": "BENINTEG-855",
    "issue": "OneKonnect is experiencing a large number of dataset failures, resulting in 500 Server Errors. This issue is problematic as it prevents production files from passing as scheduled, particularly on Tuesdays and Thursdays.",
    "issue_summary": "Dataset failures with OneKonnect due to 500 Server Errors, causing production files to not pass as scheduled.",
    "rca": "The root cause of the issue is identified as a failure in EBN's API to respond, resulting in 500 errors. This is categorized under Bug Fix with a subcategory of Special Case Handling. HTTP retries were added for EBN APIs to mitigate the issue.",
    "steps_taken": "To address the issue, HTTP retries were introduced for EBN APIs as a stopgap measure. Additionally, the issue was reported to the EBN team for a fix on their end. Communication with OneKonnect was initiated to discuss the volume of datasets being sent simultaneously.",
    "data_models": "No specific data models were mentioned in the ticket."
  },
  "BENINTEG-850": {
    "key": "BENINTEG-850",
    "issue": "The EDI order for About Kids Home Care to United Healthcare via OneKonnect is failing, causing a blocker in sending the order.",
    "issue_summary": "The EDI order for About Kids Home Care to United Healthcare via OneKonnect failed due to issues with handling multi-EIN companies, resulting in incorrect tax information being sent.",
    "rca": "The root cause of the issue was that the system does not properly support multi-EIN companies, leading to incorrect CompanyTaxInfo being used in the EDI order. The method get_insurance_company_tax_info_from_company returned non-deterministic results due to the absence of tax info on CCLIs and multiple tax infos associated with the company.",
    "steps_taken": "To resolve the issue, a manual EDI order was sent using a WebScript with the correct tax info. The script involved fetching the correct CompanyTaxInfo and using it to override the default behavior in the EbnEDIOrderController.request_edi_order method.",
    "data_models": "[Company, CompanyTaxInfo, InsuranceCompanyCarrierLineInfo, SubscriberLineInfo, EbnCompanyCarrier, VericredCompanyCarrier, NoyoCompanyCarrier]"
  },
  "BENINTEG-849": {
    "key": "BENINTEG-849",
    "issue": "Blocked transactions for Noyo and Ideon due to timeout errors, preventing the transmission of insurance forms.",
    "issue_summary": "Transactions for Noyo and Ideon were blocked due to a timeout error, causing delays in sending insurance forms.",
    "rca": "The root cause was related to tooling issues with Noyo, resulting in blocked transactions. The specific error was a timeout error indicating that a function ran for more than 3600 seconds.",
    "steps_taken": "The operations team reviewed the blocked transactions and noted that they were not recent. They questioned why these transactions were generated and why they were timing out. The engineering team was asked to investigate the root cause. Eventually, it was confirmed that there were no more blocked transactions for the groups and errors mentioned, and the ticket was closed.",
    "data_models": "[]"
  },
  "BENINTEG-848": {
    "key": "BENINTEG-848",
    "issue": "Admin reported that a newborn dependent, Audrey Gallagher, was not being included in the insurance feed, leading to incorrect terminations in the system.",
    "issue_summary": "The issue was that a newborn dependent was not being transmitted to Vericred, causing the dependent to be incorrectly terminated in the system.",
    "rca": "The root cause was identified as the data being manually sent over to Vericred, and the amendment tool not picking up the new dependent for transmission via the Vericred API.",
    "steps_taken": "To resolve the issue, a custom payload was sent to add Audrey to the Dental, Vision, and Medical plans. This involved creating a JSON payload with the necessary coverage details and sending it to Vericred. After sending the custom payload, Audrey was successfully added to the plans, and the issue was closed.",
    "data_models": "[VericredCompanyCoveragePeriodInfo]"
  },
  "BENINTEG-847": {
    "key": "BENINTEG-847",
    "issue": "Enrollments are not showing up on Aetna for the client's employees, causing issues for employees with planned doctor visits.",
    "issue_summary": "The client's employees' enrollments are not appearing in the Aetna carrier system, impacting employees with scheduled doctor visits. The issue was due to the new group needing time to be reflected in the system.",
    "rca": "The issue was resolved on its own as it was a new group and needed time to be reflected in the carrier system. Documentation should reflect this to prevent future confusion.",
    "steps_taken": "The team checked the Vericred response on the carrier connections dashboard, which was pending. They verified that the data was sent correctly to Ideon and confirmed with Ideon why it was not seen at Aetna. The issue resolved itself as the new group was eventually reflected in the system.",
    "data_models": "[InsuranceCompanyPlanInfo]"
  },
  "BENINTEG-846": {
    "key": "BENINTEG-846",
    "issue": "BOB group unable to see EDI transmission tab Vericred integration within the carrier transmission tab.",
    "issue_summary": "BOB group PROKEEP INC was unable to see the weekly EDI transmissions for UHC via Vericred in the carrier communication sub tab of the benefits admin app. The last transmission visible was dated 03/29/2024, while the last sent transmission was on 5/29.",
    "rca": "Vericred API had an issue which caused the discrepancy in the EDI transmission visibility. The issue was related to a recent code change and was identified as a bug in the Vericred integration.",
    "steps_taken": "The issue was investigated by checking the CO debugger and verifying screenshots. It was confirmed that the feed was going normally to a multi-tenant configuration, but historical data was not being displayed correctly. Vericred team raised a production support ticket and resolved the issue.",
    "data_models": "[rippling_vericred_integration]"
  },
  "BENINTEG-844": {
    "key": "BENINTEG-844",
    "issue": "The issue was that a future termination date was being sent to Ideon for COBRA members, which was not expected by Ideon and caused the enrollment data to be rejected.",
    "issue_summary": "The problem was that a future termination date was being sent to Ideon for COBRA members, which Ideon does not accept, leading to data rejection.",
    "rca": "The root cause was identified as the system sending an end date for enrollment to Vericred (Ideon) when it was not expected, causing issues with the data processing. Specifically, Ideon does not accept future dated terminations, and this was causing the COBRA enrollment data to be rejected.",
    "steps_taken": "The steps taken to resolve the issue included removing the end date from the dental COBRA enrollment payload using the Vericred retool. The modified payload was then successfully sent to Vericred, and the issue was resolved as confirmed by the carrier connections dashboard.",
    "data_models": "[InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-843": {
    "key": "BENINTEG-843",
    "issue": "Crowd Cow's 06/04 dataset did not pass to OneKonnect, resulting in the scheduled production file not being sent to the carrier.",
    "issue_summary": "The dataset for Crowd Cow on 06/04 failed to pass to OneKonnect, preventing the scheduled production file from being sent to Delta Dental. This issue is identified as intermittent with no recurring errors in the codebase.",
    "rca": "This is an intermittent issue. Upon reviewing the last 15 days of data, it was found that this issue has not recurred for this company. No errors were raised in the codebase against this company for EBN processing, and historically, no entity changes could have impacted the processing.",
    "steps_taken": "Reviewed the dataset and confirmed it did not pass on 06/04. Pulled the trend for the last 15 days to check for recurrence. No further action was taken as it was identified as an isolated incident.",
    "data_models": "[]"
  },
  "BENINTEG-842": {
    "key": "BENINTEG-842",
    "issue": "Cannot re-ingest subscriber enrollment data to Ideon for two employees due to an error with the employee_identifier field, blocking the group's file feed setup.",
    "issue_summary": "The issue was caused by an invalid value in the employee_identifier field when attempting to re-ingest subscriber enrollment data to Ideon, preventing the setup of the group's file feed.",
    "rca": "The issue was temporary and has been resolved, as indicated by the RCA category 'Deferred' and the comment confirming it works now.",
    "steps_taken": "The issue was resolved by retrying the operation, as suggested in the comment 'Please try again now and let us know if it still fails'. The subsequent comment confirmed that the issue was fixed.",
    "data_models": "No specific data models were mentioned in the ticket."
  },
  "BENINTEG-841": {
    "key": "BENINTEG-841",
    "issue": "Employee Madison Hadley Radivonik and dependent Gleb Radivonik's effective date update completed offline by admin is not populating in the system.",
    "issue_summary": "The offline update for the effective date of employee Madison Hadley Radivonik and dependent Gleb Radivonik was not reflected in the system, as the system does not automatically push offline changes to the vendor or carrier.",
    "rca": "The root cause of the issue was that the system's expected behavior is not to push offline changes to the vendor or carrier, which is why the updated effective date was not reflecting. This was confirmed by using the Vericred retool.",
    "steps_taken": "A custom request was sent to Ideon via the Vericred retool to update the effective date for both Madison and Gleb. The following QLE was sent to Ideon:\n\n```\n{\n\t\"coverage_period_id\": \"0b209588-ccfd-4045-b1a0-3de3039d5c77\",\n\t\"date\": \"2024-01-10\",\n\t\"eligibility_start_date\": \"2024-01-08\",\n\t\"enrollment_received_date\": \"2024-01-10\",\n\t\"event\": \"initial_enrollment\",\n\t\"external_identifier\": \"658594726b60217b4a331866\",\n\t\"plan_elections\": {\n\t\t\"medical\": {\n\t\t\t\"coverages\": [\n\t\t\t\t{\n\t\t\t\t\t\"member_id\": \"21bfe0ec-2f6a-453b-a9d1-f7e91a606337\",\n\t\t\t\t\t\"plan_id\": \"94f24715-e81b-49f7-82bc-0347bc55d836\",\n\t\t\t\t\t\"start_date\": \"2024-02-01\",\n\t\t\t\t\t\"status\": \"employer_sponsored\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"member_id\": \"56c7e3cc-098f-4b06-be26-0a486b8b1baa\",\n\t\t\t\t\t\"plan_id\": \"94f24715-e81b-49f7-82bc-0347bc55d836\",\n\t\t\t\t\t\"start_date\": \"2024-02-01\",\n\t\t\t\t\t\"status\": \"employer_sponsored\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"type\": \"election\"\n\t\t}\n\t}\n}\n```",
    "data_models": "[SubscriberLineInfo, EnrollmentEvent]"
  },
  "BENINTEG-836": {
    "key": "BENINTEG-836",
    "issue": "The customer, Venafi Inc, is self-managing enrollments while their EDI is undergoing testing. They requested to turn off form sending for Regence without editing the EDI.",
    "issue_summary": "Venafi Inc requested to stop form sending for Regence as they are self-managing enrollments during EDI testing.",
    "rca": "The issue was categorized under 'Documentation' and 'Tooling Usage'. The root cause was identified as the availability of tooling and documentation to manage dual communication settings, which was not initially utilized by the team.",
    "steps_taken": "Instructions were provided to the team on how to edit dual communication settings for EBN using the provided documentation and Retool application. The specific links to the documentation and Retool application were shared in the comments.",
    "data_models": "[]"
  },
  "BENINTEG-835": {
    "key": "BENINTEG-835",
    "issue": "The COBRA form for Eva Spotorno from Patient Now LLC needs to be triggered due to a COBRA incompatibility issue with some UHC groups. The Vericred retool has been enabled, but the COBRA cancellation form has not been sent.",
    "issue_summary": "The COBRA form for Eva Spotorno was not triggered due to a COBRA incompatibility issue with some UHC groups. The Vericred retool was activated after the employee's enrollment, requiring manual intervention to trigger the form.",
    "rca": "The group was not configured to send emails for COBRA through Vericred, resulting in the COBRA cancellation event being dropped from Vericred.",
    "steps_taken": "The engineering team resent the PendingAction corresponding to the COBRA expiration event, and the email was sent as per configuration. The issue was closed as no further action was needed from the engineering team.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-829": {
    "key": "BENINTEG-829",
    "issue": "Issue being faced in ticket",
    "issue_summary": "The ticket is a test ticket with no specific issue or problem described.",
    "rca": "There is no detailed root cause analysis provided as this is a test ticket.",
    "steps_taken": "No steps were taken to resolve the issue as this is a test ticket.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: []"
  },
  "BENINTEG-827": {
    "key": "BENINTEG-827",
    "issue": "The form for employee Sacha Schmitz's benefit enrollment was not submitted to the carrier despite manual attempts to submit it via email through the Insurance Dashboard. The form showed a 'PENDING_ACTION_DATE' status, and the submission did not reflect as completed.",
    "issue_summary": "The issue was that the employee's benefit enrollment form was not submitted to the carrier due to a 'PENDING_ACTION_DATE' status, and manual submission attempts via email did not work. The root cause was identified as missing SSN data for the employee.",
    "rca": "The root cause of the issue was identified as invalid data, specifically the absence of the employee's SSN in the Rippling system, which prevented the form from being submitted to the carrier.",
    "steps_taken": "The issue was resolved by ensuring the employee updated their SSN in their Rippling profile. Once the SSN was updated, the enrollment submission was processed successfully by submitting via Vericred.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-826": {
    "key": "BENINTEG-826",
    "issue": "EDI Transmission Information Not Showing up for Client under BenAdmin",
    "issue_summary": "The EDI feed for UHC is live, but there is no history under Carrier Transmission > EDI Transmission. The issue is related to Vericred APIs not returning the historical transmissions.",
    "rca": "Vericred APIs were not returning the historical transmissions, causing the EDI transmission information to not display under Carrier Transmission. The issue was identified as a bug in the Vericred API, which was not providing the necessary data for display.",
    "steps_taken": "The issue was escalated to Vericred for resolution. It was confirmed that the problem was purely display-related and did not impact the actual file feeds. Vericred committed to fixing their APIs, and the team followed up to ensure the issue was resolved. Once Vericred fixed the API, the history began showing up correctly.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-825": {
    "key": "BENINTEG-825",
    "issue": "Employee enrolled in Guardian Dental coverage but portal shows no insurance and displays group number from previous employer.",
    "issue_summary": "Employee's dental coverage information was not displaying correctly in the portal, showing details from a previous employer.",
    "rca": "The employee was logging into the portal with credentials linked to their previous employer, causing outdated information to be displayed.",
    "steps_taken": "Verified SLIs and pending actions were correct. Checked Noyo for active status. Confirmed with employee to log into the correct portal instance.",
    "data_models": "[RoleWithCompany, EnrollmentEvent]"
  },
  "BENINTEG-824": {
    "key": "BENINTEG-824",
    "issue": "The group with NFP as their broker is being prompted to sign a broker letter upon login, which is unnecessary as they have already signed offline.",
    "issue_summary": "The system is incorrectly prompting a group with NFP as their broker to sign a broker letter, despite having already signed offline.",
    "rca": "The issue was related to a task that had the _canMarkComplete flag set to false, preventing it from being marked as complete. This was identified as a form-related issue for the Broker of Record (BOR) and needed to be addressed by the marketplace integrations team.",
    "steps_taken": "The task was identified as having the _canMarkComplete flag set to false. It was suggested that the task could be marked as complete through a web script or migration. The issue was directed to the marketplace integrations team, and the task was eventually removed, resolving the issue.",
    "data_models": "[CompanyInsuranceInfo]"
  },
  "BENINTEG-823": {
    "key": "BENINTEG-823",
    "issue": "Broker and admin received 13 email notifications on 05/17, all related to events from October 2023 or earlier, with no recent notifications.",
    "issue_summary": "Emails were sent to broker and admin for past events due to a bug where pending actions were triggered after carrier communication was configured.",
    "rca": "The company had pending actions in the last cycle that were in the processed state but were not being processed due to lack of communication details configured for the carrier. On 17th May, the carrier communication was configured, triggering all previous pending actions and sending the emails. This was identified as a bug because pending actions should not be rolled over when there is no carrier communication information available.",
    "steps_taken": "The emailVerificationNeeded status of tasks was changed by the send_forms_for_companies ETA owned by the carrier connection team. The field was set back to false on the 18th, preventing the issue from recurring. A long-term action was suggested to mark pending actions as PENDING instead of active when no carrier communication is needed.",
    "data_models": "[PendingAction, CustomCommunicationDetail]"
  },
  "BENINTEG-821": {
    "key": "BENINTEG-821",
    "issue": "Enrollment forms were not sent to Beam as expected; instead, they were incorrectly sent to Noyo, causing a delay in processing enrollments for the group that moved from CA to TX.",
    "issue_summary": "Enrollment forms intended for Beam were mistakenly sent to Noyo due to an incorrect setup, resulting in a failure to process enrollments for the group moving from CA to TX.",
    "rca": "The root cause of the issue was that the Noyo setup tasks were not followed up on, leading to plan mismatches and an incorrect setup of the Noyo connection. This caused the enrollments to not be sent to Beam via email as intended.",
    "steps_taken": "The team investigated the issue by checking the ee debugger and confirmed that data was submitted to Noyo before the connection was disabled. They reached out to Noyo to understand why the Beam (TX) setup was not completed and followed up on plan mismatches that were identified. Communication with Noyo was initiated to resolve the setup issues.",
    "data_models": "[NoyoCompanyCarrier]"
  },
  "BENINTEG-820": {
    "key": "BENINTEG-820",
    "issue": "Cigna requires a new effective date for class code changes, causing errors in production when a new class code is received without a new effective date. This affects all Cigna files in production with OneKonnect and potentially other carriers.",
    "issue_summary": "Cigna and MetLife require a new effective date for class code changes, causing errors when a new class code is received without it. This affects Cigna files in production with OneKonnect.",
    "rca": "The issue is due to the lack of a new effective date for class code changes, which is required by Cigna and MetLife. The current system does not store or pass the effective date of class/division/department/location/subgroup code changes to OneKonnect.",
    "steps_taken": "Two options were suggested by OneKonnect: 1) Terminate the current coverage record and reenroll with the new effective date, or 2) Use a custom field to populate the effective date of the class and update the mapping to pass that date if it is greater than the coverage effective date. The custom fields route was considered a stable approach.",
    "data_models": "[]"
  },
  "BENINTEG-814": {
    "key": "BENINTEG-814",
    "issue": "The issue involves enrollment discrepancies for groups joining the PEO, where automatic PEO group connections are live, causing problems with pre-PEO carriers that cannot be corrected over the API.",
    "issue_summary": "Enrollment discrepancies occur when a group joins the PEO, leading to issues with pre-PEO carriers due to automatic PEO group connections being live, which cannot be corrected over the API.",
    "rca": "The root cause is a knowledge gap in understanding the system behavior for Noyo connections, particularly how automatic PEO group connections impact existing Noyo connections and the workflow during the transition to PEO coverage.",
    "steps_taken": "The engineering team reviewed logs to understand how the group was supported for their carrier connections. It was found that the company had three active Noyo connections, and upon completing the setup, open enrollment events were created for employees. The automatic connection for PEO companies was already set up, and member requests were sent to Noyo using the new connection. It was clarified that existing API coverages should stay live until PEO coverage is live, and if a fallback to forms is needed, the Noyo connection must be disconnected from Rippling.",
    "data_models": "[CompanyEnrollmentEvent, EnrollmentEvent, PendingActionGroup]"
  },
  "BENINTEG-813": {
    "key": "BENINTEG-813",
    "issue": "The admin confirmed that they are not using form sending for Unum as they are self-bill and requested to turn off form sending for Unum.",
    "issue_summary": "The admin requested to turn off form sending for Unum because they are self-bill and do not require updates.",
    "rca": "The Noyo connection was cancelled, allowing the company to add new custom communication details.",
    "steps_taken": "The pending tasks for the Noyo connection for Unum were cancelled. The benefits team was instructed to add a Custom Carrier connection by going to the carrier transmission tab and editing Unum to add a NoAction Custom carrier. The request was confirmed to be only for stopping form sending, while EDI processes should remain in place.",
    "data_models": "[]"
  },
  "BENINTEG-812": {
    "key": "BENINTEG-812",
    "issue": "Admin sees the Noyo connection as still being in setup on their carrier connections tab of the Rippling dashboard, despite the connection being set up.",
    "issue_summary": "The admin's dashboard does not reflect the finalized file feed status for the Noyo connection, even though the carrier connections team sees it as set up.",
    "rca": "The issue was categorized as 'Deferred' and described as 'No longer an issue', indicating that the problem resolved itself or was not reproducible.",
    "steps_taken": "The issue was monitored, and it was noted that the banner indicating the setup was gone upon rechecking. No further action was deemed necessary.",
    "data_models": "[]"
  },
  "BENINTEG-811": {
    "key": "BENINTEG-811",
    "issue": "25 Ideon transactions for InMocean Group LLC were blocked due to an error: 'invalid_request.resource_not_found'.",
    "issue_summary": "The issue was caused by a discrepancy in the carrier information for the medical line, where the carrier was changed from Oxford to UnitedHealthcare without updating the Vericred system, leading to blocked transactions.",
    "rca": "The root cause of the issue was that the carrier for the medical line was changed operationally to UnitedHealthcare, but this change was not reflected in the Vericred Company Info or on the Vericred portal. This resulted in a mismatch where updates were being sent to Oxford's coverage, which Vericred rejected.",
    "steps_taken": "A tactical fix was deployed to ensure correct transactions for new enrollments. The solution involved terminating and resetting the existing connection with Vericred for the carrier, following the SOP for disconnection and reconnection.",
    "data_models": "[BaseCompanyCarrierLineInfo]"
  },
  "BENINTEG-807": {
    "key": "BENINTEG-807",
    "issue": "The termination of employee Stephen Lin was invalidated, causing no end date to be sent via Ideon for the employee's active coverage, resulting in the employee's termination being missed with the carrier.",
    "issue_summary": "The issue was that the termination of Stephen Lin was invalidated, which led to no end date being sent to Ideon for the employee's active coverage, causing the termination to be missed by the carrier.",
    "rca": "The root cause was that the employee was not actually terminated at the time the termination event was created. The admin scheduled the termination but changed the endDate multiple times, resulting in no termination being set at the end of the day. This led to the coverage being terminated without a proper end date being communicated to Ideon.",
    "steps_taken": "The investigation revealed that the termination event was communicated successfully, but the end date was not populated in the data sent to Vericred. It was found that the invalidation of the termination event is expected when there's a COBRA event following it. The issue was identified as a discrepancy on Ideon's side, and it was suggested to reach out to Ideon for further clarification.",
    "data_models": "[SubscriberLineInfo]"
  },
  "BENINTEG-806": {
    "key": "BENINTEG-806",
    "issue": "Rippling is failing to pass the plan-specific class value in the EBNClass field for terminated employees, resulting in discrepancies that prevent the EDI file feed from moving forward. This issue is causing missed terminations and production file feed failures.",
    "issue_summary": "The issue is that the EBNClass field is not being populated with the correct plan-specific class value for terminated employees, leading to EDI file feed failures and missed terminations.",
    "rca": "The root cause of the issue is related to the support tool used as a workaround. The feature request indicates that the current tool is not sustainable and is causing larger issues downstream as files fail in production.",
    "steps_taken": "The team is using a retool link as a temporary workaround to hard code the member's classes. However, this is not a sustainable solution, and there is a need for a long-term fix. The team is planning to resolve the root cause analysis (RCA) and is considering feature requests to improve the situation.",
    "data_models": "No specific data models were mentioned in the ticket."
  },
  "BENINTEG-788": {
    "key": "BENINTEG-788",
    "issue": "Bennie Health, Inc faced an issue with a missed COBRA termination for an employee, which was escalated by a broker partner.",
    "issue_summary": "The issue was a missed COBRA termination for an employee at Bennie Health, Inc, caused by a manual oversight where emails were used for communication and not followed up.",
    "rca": "The root cause of the issue was identified as a manual miss. The termination was communicated via email and was not followed up by Rippling to ensure it was successfully processed.",
    "steps_taken": "The investigation revealed that the COBRA enrollment and termination tasks were not followed up on. It was confirmed that the error was due to a manual task not being followed up on, and the termination was sent by email without verification of successful processing.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-787": {
    "key": "BENINTEG-787",
    "issue": "The data set for Bolt Financial is not passing through OneKonnect, causing a high business impact and acting as a blocker.",
    "issue_summary": "The data set for Bolt Financial is not passing through OneKonnect due to an invalid role, specifically an employee with a blank home address.",
    "rca": "The issue was caused by an employee named 'Pat Test' who had a blank home address, leading to the failure in file generation for the EBN dataset.",
    "steps_taken": "To resolve the issue, a skip record was added for the invalid role using the EBN Operational Tools in Retool, and the role was successfully skipped.",
    "data_models": "[RoleWithCompany]"
  },
  "BENINTEG-760": {
    "key": "BENINTEG-760",
    "issue": "The UHC forms are incorrectly marking the waiver checkbox on page 1, which is causing UHC to not process the forms correctly.",
    "issue_summary": "The UHC forms are incorrectly marking the waiver checkbox on page 1 due to business logic that checks the waiver box if some dependents are enrolling, causing UHC to not process the forms correctly.",
    "rca": "The root cause of the issue is the business logic that maps the waiver checkbox to the 'Dependent_ChildrenDecliningMedical' field. This field is set to 'True' because two out of five children are waived off in medical, which is the expected behavior according to the current form integration logic.",
    "steps_taken": "The team reviewed the current template of enrollment forms and confirmed that the mapping of the waiver checkbox is expected behavior. It was suggested to check with the carrier to understand their exact requirements for the forms, as any change in form mapping will impact all groups.",
    "data_models": "[Dependent_ChildrenDecliningMedical]"
  },
  "BENINTEG-751": {
    "key": "BENINTEG-751",
    "issue": "The system did not send out a termination form to the carrier, creating a missed termination. This is a blocker with high business impact.",
    "issue_summary": "The termination form was not sent to the carrier due to a misconfiguration in the EDI connection state with OneKonnect, which was expected to send emails for enrollment changes.",
    "rca": "The root cause was identified as a change in the state of the EBN connection from production to testing and back. The expectation was that communication should occur according to the new state, but during the termination event, the connection was in production, preventing the email from being sent.",
    "steps_taken": "The form was manually sent to the broker since an email could not be forced to the carrier. The issue was acknowledged and closed after confirming the state change details.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-748": {
    "key": "BENINTEG-748",
    "issue": "The initial email for UHC renewals was sent to the incorrect email addresses, causing a delay in processing the renewal for Canine Citizens Inc.",
    "issue_summary": "The initial email for UHC renewals was mistakenly sent to incorrect email addresses due to a business logic error, resulting in a delay of 3-4 days.",
    "rca": "The issue was caused by a business logic error where the system was configured to send renewal emails to shawn_mcgivern@uhc.com and VO_Nationalaccounts@uhc.com when a new line type was introduced in the renewal packet. The correct recipient should have been aaron_nelson@uhc.com, regardless of the presence of new line types.",
    "steps_taken": "The logic was updated to ensure that renewal emails are sent to aaron_nelson@uhc.com even if the renewal packet contains new line types. This change was confirmed and implemented.",
    "data_models": "[]"
  },
  "BENINTEG-744": {
    "key": "BENINTEG-744",
    "issue": "Issue being faced in ticket",
    "issue_summary": "The ticket is related to a product enhancement request for the Stedi component, but lacks detailed information.",
    "rca": "The root cause analysis is categorized under 'Product Enhancement', but no specific details or subcategory are provided.",
    "steps_taken": "No steps have been taken as the ticket lacks detailed information and comments.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: []"
  },
  "BENINTEG-743": {
    "key": "BENINTEG-743",
    "issue": "Issue being faced in ticket",
    "issue_summary": "The ticket is a clone for testing more automation related to the Stedi component.",
    "rca": "The root cause analysis indicates that this is a product enhancement task aimed at testing Jira integration.",
    "steps_taken": "No specific steps were taken to resolve the issue as it is a test for automation.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: []"
  },
  "BENINTEG-741": {
    "key": "BENINTEG-741",
    "issue": "Test case created for feature test, requested to be closed.",
    "issue_summary": "A test case was created for a feature test and there was a request to close it.",
    "rca": "The ticket was created as part of a product enhancement test and was not an actual issue.",
    "steps_taken": "The ticket was closed as per the request in the comments.",
    "data_models": "[]"
  },
  "BENINTEG-740": {
    "key": "BENINTEG-740",
    "issue": "Andrzej Sienkiewicz, a Rippling employee, had an address discrepancy reported by Ideon from the carrier Aetna, stating the address is invalid, causing issues with insurance coverage.",
    "issue_summary": "The issue was caused by an incorrect entry of the state in Andrzej Sienkiewicz's address, which was set to New Jersey instead of New York, leading to a discrepancy reported by Ideon from the carrier Aetna.",
    "rca": "Employee Andrzej Sienkiewicz's city and/or state was inputted incorrectly, specifically the state was set to New Jersey instead of New York. This incorrect information caused issues with the carrier Aetna.",
    "steps_taken": "The employee was informed to review and update their address. Andrzej Sienkiewicz corrected the state from New Jersey to New York, resolving the discrepancy with Aetna.",
    "data_models": "[]"
  },
  "BENINTEG-727": {
    "key": "BENINTEG-727",
    "issue": "Issue being faced in ticket",
    "issue_summary": "The ticket is related to testing more automation within the Stedi component, categorized as a product enhancement.",
    "rca": "The root cause analysis indicates that this is a testing phase for product enhancement, specifically for automation.",
    "steps_taken": "No specific steps were mentioned in the ticket for resolving the issue as it is related to testing.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: []"
  },
  "BENINTEG-726": {
    "key": "BENINTEG-726",
    "issue": "The end date of the role for an employee at Midi Health, Inc. was updated from 2024-04-09 to 2024-05-03, requiring updates to insurance timelines and potential COBRA coverage adjustments.",
    "issue_summary": "The end date of an employee's role was updated, necessitating the creation of a 'Termination (end date correction)' event and updates to insurance timelines and COBRA coverage if applicable.",
    "rca": "The system is working as expected, and the issue is categorized as an Ops Issue.",
    "steps_taken": "1. Ensure a 'Termination (end date correction)' event is created for the prior termination event. 2. Review and update insurance timelines based on the new end date. 3. If forms are not submitted, reassign the ticket to the Marketplace - Integrations team to update the end date with carriers. 4. If COBRA coverage exists, suggest forwarding the ticket to the Compliance team to update COBRA timelines after carrier updates.",
    "data_models": "A list of data models names used to debug and fix the issue.ex: [InsuranceCompanyCarrierLineInfo, CompanyInsuranceInfo]"
  },
  "BENINTEG-724": {
    "key": "BENINTEG-724",
    "issue": "The Noyo connection for Vego Garden, Inc. was not established until nearly a month after the group completed their open enrollment.",
    "issue_summary": "The Noyo API connection for Vego Garden, Inc. was delayed by almost a month after the group's open enrollment was completed due to an engineering issue.",
    "rca": "The delay was caused because the auto ingestion process only occurs when the Carrier connection source type is set to 'Enroll'. In this case, the source type was 'Renewal', which did not trigger the automatic connection, leading to a manual request being necessary.",
    "steps_taken": "Investigated potential delay causes with the API vendor (Noyo) and consulted with the Noyo carrier connections expert. It was determined that the issue was not on Noyo's end but was due to the carrier connection source type not being set to 'Enroll'.",
    "data_models": "[InsuranceCompanyCarrierLineInfo]"
  },
  "BENINTEG-723": {
    "key": "BENINTEG-723",
    "issue": "Titan Coatings, Inc's employee, Portia Kristina Rooks, completed a QLE effective 4/15/2024, but the admin reported that the email was not sent to the carrier. The EE debugger shows the forms as 'Submitted' but does not include any details of where this was sent to.",
    "issue_summary": "The issue was that the QLE forms for an employee were marked as 'Submitted' in the system, but no email was sent to the carrier due to the OE deadline not having passed, and the task was manually marked as done.",
    "rca": "The root cause was that the forms were not systematically processed because the Open Enrollment (OE) deadline had not passed. There is a system check for this, and the task was manually marked as done by a user, which led to the status showing as 'Submitted' without actual email transmission.",
    "steps_taken": "The issue was resolved by manually retrying the submission after the OE deadline passed. The submission of the QLE form via email was successful via the Insurance task dashboard once the OE deadline was no longer a blocker.",
    "data_models": "[PendingActionGroup, PendingAction]"
  },
  "BENINTEG-719": {
    "key": "BENINTEG-719",
    "issue": "The dataset is passing an incorrect Voluntary Life Volume of 20000 for member Harry Belliston, while the approved amount in Rippling shows 15000.",
    "issue_summary": "The dataset is passing an incorrect Voluntary Life Volume of 20000 instead of the approved 15000 due to the rounding policy of the company plan.",
    "rca": "The system is working as expected following the rounding policy of the company plan, which rounds the volume to the nearest multiple of 10000, resulting in 20000.",
    "steps_taken": "The issue was identified as being due to the setup of the company plan with a rounding policy of 'NEAREST' and rounding accuracy of '10000.00'. The recommendation is to update the company plan to correct the rounding logic.",
    "data_models": "[InsuranceCompanyPlanInfo]"
  },
  "BENINTEG-717": {
    "key": "BENINTEG-717",
    "issue": "The United Health Care dataset to OneKonnect failed on 5/20/2024, resulting in the production file not being passed to the carrier.",
    "issue_summary": "The dataset transmission to OneKonnect failed due to an intermittent issue, causing the production file not to be sent to the carrier.",
    "rca": "The failure was due to an intermittent issue on 5/20/2024. The dataset was successfully sent on subsequent days (5/21/2024 and 5/22/2024), indicating that the issue was temporary and not persistent.",
    "steps_taken": "The issue was identified as an intermittent failure. Since the dataset was successfully sent on the following days, it was determined that the issue was not persistent. The ticket was closed with a note to reopen if the issue occurs frequently.",
    "data_models": "[]"
  },
  "BENINTEG-716": {
    "key": "BENINTEG-716",
    "issue": "Employee's New Hire Enrollment (NHE) data was not sent over the Noyo API and was stuck in the 'ingesting' stage, preventing the sending of an amendment.",
    "issue_summary": "The employee's NHE data was not automatically sent via the Noyo API due to the system being stuck in the 'ingesting' stage, which is not updated for Noyo connections.",
    "rca": "The root cause was that the Noyo transaction fell back to email forms due to pending setup tasks. These tasks were completed later, allowing future transactions to proceed via the API. The system was behaving as expected, as Noyo connections remain in the 'ingesting' state indefinitely and do not update automatically.",
    "steps_taken": "The issue was resolved by completing the pending Noyo setup tasks, which allowed the system to use the API connection instead of falling back to email forms. The tasks were completed on 2024-02-19, and the system was verified to ensure no open Noyo setup tasks remained. Code snippets used for debugging included checking the PendingAction object and verifying the fallback condition with the `should_fallback_noyo_communication_to_email` function.",
    "data_models": "[PendingAction, InsuranceCompanyInfo]"
  }
}